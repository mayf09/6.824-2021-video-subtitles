WEBVTT
Kind: captions
Language: en

00:00:01.199 --> 00:00:03.189 align:start position:0%
 
yes<00:00:02.080><c> okay</c><00:00:02.320><c> good</c>

00:00:03.189 --> 00:00:03.199 align:start position:0%
yes okay good
 

00:00:03.199 --> 00:00:05.829 align:start position:0%
yes okay good
uh<00:00:03.520><c> okay</c><00:00:03.760><c> so</c><00:00:03.840><c> the</c><00:00:04.240><c> topic</c><00:00:04.560><c> for</c><00:00:04.720><c> today</c><00:00:05.120><c> is</c><00:00:05.359><c> uh</c>

00:00:05.829 --> 00:00:05.839 align:start position:0%
uh okay so the topic for today is uh
 

00:00:05.839 --> 00:00:07.110 align:start position:0%
uh okay so the topic for today is uh
threats<00:00:06.160><c> in</c><00:00:06.319><c> rpc</c>

00:00:07.110 --> 00:00:07.120 align:start position:0%
threats in rpc
 

00:00:07.120 --> 00:00:10.709 align:start position:0%
threats in rpc
uh<00:00:07.279><c> this</c><00:00:07.520><c> is</c><00:00:07.600><c> our</c><00:00:07.759><c> second</c><00:00:08.000><c> lecture</c><00:00:08.400><c> in</c><00:00:08.559><c> uh</c><00:00:09.599><c> 6824</c>

00:00:10.709 --> 00:00:10.719 align:start position:0%
uh this is our second lecture in uh 6824
 

00:00:10.719 --> 00:00:12.390 align:start position:0%
uh this is our second lecture in uh 6824
uh<00:00:11.120><c> and</c><00:00:11.519><c> we're</c><00:00:11.679><c> going</c><00:00:11.759><c> to</c><00:00:11.840><c> mostly</c><00:00:12.160><c> look</c><00:00:12.320><c> at</c>

00:00:12.390 --> 00:00:12.400 align:start position:0%
uh and we're going to mostly look at
 

00:00:12.400 --> 00:00:15.749 align:start position:0%
uh and we're going to mostly look at
threats<00:00:12.639><c> and</c><00:00:12.719><c> rpc</c><00:00:13.200><c> in</c><00:00:13.280><c> the</c><00:00:13.360><c> context</c><00:00:13.759><c> of</c><00:00:13.920><c> go</c>

00:00:15.749 --> 00:00:15.759 align:start position:0%
threats and rpc in the context of go
 

00:00:15.759 --> 00:00:17.349 align:start position:0%
threats and rpc in the context of go
programming<00:00:16.240><c> language</c><00:00:16.560><c> that</c><00:00:16.720><c> we're</c><00:00:16.880><c> using</c><00:00:17.199><c> in</c>

00:00:17.349 --> 00:00:17.359 align:start position:0%
programming language that we're using in
 

00:00:17.359 --> 00:00:19.269 align:start position:0%
programming language that we're using in
the<00:00:18.000><c> labs</c><00:00:18.480><c> and</c><00:00:18.800><c> in</c><00:00:18.880><c> fact</c>

00:00:19.269 --> 00:00:19.279 align:start position:0%
the labs and in fact
 

00:00:19.279 --> 00:00:21.510 align:start position:0%
the labs and in fact
most<00:00:19.520><c> of</c><00:00:19.600><c> this</c><00:00:19.760><c> lecture</c><00:00:20.080><c> is</c><00:00:20.240><c> really</c><00:00:20.560><c> tailored</c>

00:00:21.510 --> 00:00:21.520 align:start position:0%
most of this lecture is really tailored
 

00:00:21.520 --> 00:00:22.870 align:start position:0%
most of this lecture is really tailored
uh<00:00:21.840><c> towards</c>

00:00:22.870 --> 00:00:22.880 align:start position:0%
uh towards
 

00:00:22.880 --> 00:00:26.310 align:start position:0%
uh towards
helping<00:00:23.279><c> you</c><00:00:24.720><c> do</c><00:00:24.960><c> go</c><00:00:25.199><c> programming</c><00:00:25.760><c> for</c>

00:00:26.310 --> 00:00:26.320 align:start position:0%
helping you do go programming for
 

00:00:26.320 --> 00:00:30.150 align:start position:0%
helping you do go programming for
the<00:00:26.480><c> labs</c><00:00:28.960><c> that's</c><00:00:29.199><c> all</c><00:00:29.519><c> you've</c><00:00:29.679><c> done</c>

00:00:30.150 --> 00:00:30.160 align:start position:0%
the labs that's all you've done
 

00:00:30.160 --> 00:00:32.790 align:start position:0%
the labs that's all you've done
uh<00:00:30.320><c> hopefully</c><00:00:30.640><c> the</c><00:00:30.800><c> tutorial</c><00:00:31.760><c> and</c><00:00:32.160><c> uh</c><00:00:32.480><c> did</c><00:00:32.640><c> the</c>

00:00:32.790 --> 00:00:32.800 align:start position:0%
uh hopefully the tutorial and uh did the
 

00:00:32.800 --> 00:00:34.790 align:start position:0%
uh hopefully the tutorial and uh did the
crawler<00:00:33.280><c> exercise</c><00:00:33.760><c> which</c><00:00:33.920><c> we'll</c><00:00:34.160><c> uh</c><00:00:34.399><c> discuss</c>

00:00:34.790 --> 00:00:34.800 align:start position:0%
crawler exercise which we'll uh discuss
 

00:00:34.800 --> 00:00:36.630 align:start position:0%
crawler exercise which we'll uh discuss
in<00:00:34.880><c> quite</c><00:00:35.040><c> a</c><00:00:35.120><c> bit</c><00:00:35.280><c> of</c><00:00:35.360><c> detail</c><00:00:35.840><c> uh</c><00:00:36.079><c> later</c><00:00:36.480><c> in</c><00:00:36.559><c> the</c>

00:00:36.630 --> 00:00:36.640 align:start position:0%
in quite a bit of detail uh later in the
 

00:00:36.640 --> 00:00:37.590 align:start position:0%
in quite a bit of detail uh later in the
lecture

00:00:37.590 --> 00:00:37.600 align:start position:0%
lecture
 

00:00:37.600 --> 00:00:39.510 align:start position:0%
lecture
but<00:00:37.760><c> before</c><00:00:38.239><c> jumping</c><00:00:38.640><c> into</c><00:00:38.879><c> the</c><00:00:38.960><c> details</c><00:00:39.360><c> let</c>

00:00:39.510 --> 00:00:39.520 align:start position:0%
but before jumping into the details let
 

00:00:39.520 --> 00:00:41.270 align:start position:0%
but before jumping into the details let
me<00:00:39.680><c> you</c><00:00:39.840><c> know</c><00:00:39.920><c> do</c><00:00:40.079><c> a</c><00:00:40.160><c> little</c><00:00:40.320><c> bit</c><00:00:40.559><c> more</c><00:00:40.800><c> of</c><00:00:40.960><c> cold</c>

00:00:41.270 --> 00:00:41.280 align:start position:0%
me you know do a little bit more of cold
 

00:00:41.280 --> 00:00:41.830 align:start position:0%
me you know do a little bit more of cold
calling

00:00:41.830 --> 00:00:41.840 align:start position:0%
calling
 

00:00:41.840 --> 00:00:43.990 align:start position:0%
calling
to<00:00:42.399><c> break</c><00:00:42.640><c> the</c><00:00:42.800><c> ice</c><00:00:43.040><c> and</c><00:00:43.280><c> get</c><00:00:43.440><c> people</c><00:00:43.600><c> to</c><00:00:43.760><c> ask</c>

00:00:43.990 --> 00:00:44.000 align:start position:0%
to break the ice and get people to ask
 

00:00:44.000 --> 00:00:45.110 align:start position:0%
to break the ice and get people to ask
questions

00:00:45.110 --> 00:00:45.120 align:start position:0%
questions
 

00:00:45.120 --> 00:00:47.430 align:start position:0%
questions
uh<00:00:45.440><c> so</c><00:00:45.600><c> maybe</c><00:00:45.840><c> you</c><00:00:45.920><c> can</c><00:00:46.399><c> answer</c><00:00:46.719><c> the</c><00:00:46.800><c> question</c>

00:00:47.430 --> 00:00:47.440 align:start position:0%
uh so maybe you can answer the question
 

00:00:47.440 --> 00:00:48.389 align:start position:0%
uh so maybe you can answer the question
you<00:00:47.520><c> know</c><00:00:47.680><c> where</c><00:00:47.920><c> are</c><00:00:48.079><c> you</c>

00:00:48.389 --> 00:00:48.399 align:start position:0%
you know where are you
 

00:00:48.399 --> 00:00:50.790 align:start position:0%
you know where are you
and<00:00:48.960><c> how</c><00:00:49.120><c> did</c><00:00:49.200><c> you</c><00:00:49.360><c> enjoy</c><00:00:49.680><c> the</c><00:00:49.840><c> tutorial</c><00:00:50.640><c> what</c>

00:00:50.790 --> 00:00:50.800 align:start position:0%
and how did you enjoy the tutorial what
 

00:00:50.800 --> 00:00:52.389 align:start position:0%
and how did you enjoy the tutorial what
is<00:00:50.879><c> your</c><00:00:51.039><c> first</c><00:00:51.280><c> impressions</c><00:00:51.760><c> of</c>

00:00:52.389 --> 00:00:52.399 align:start position:0%
is your first impressions of
 

00:00:52.399 --> 00:00:55.830 align:start position:0%
is your first impressions of
go<00:00:53.520><c> maybe</c><00:00:53.840><c> i'll</c><00:00:54.079><c> uh</c><00:00:55.199><c> how</c><00:00:55.360><c> about</c>

00:00:55.830 --> 00:00:55.840 align:start position:0%
go maybe i'll uh how about
 

00:00:55.840 --> 00:01:01.670 align:start position:0%
go maybe i'll uh how about
even<00:00:56.840><c> development</c>

00:01:01.670 --> 00:01:01.680 align:start position:0%
 
 

00:01:01.680 --> 00:01:04.710 align:start position:0%
 
i'm<00:01:01.920><c> batman</c><00:01:02.480><c> i'm</c><00:01:02.879><c> in</c><00:01:03.440><c> newton</c><00:01:03.840><c> which</c><00:01:04.159><c> is</c><00:01:04.320><c> uh</c><00:01:04.559><c> on</c>

00:01:04.710 --> 00:01:04.720 align:start position:0%
i'm batman i'm in newton which is uh on
 

00:01:04.720 --> 00:01:06.550 align:start position:0%
i'm batman i'm in newton which is uh on
the<00:01:04.799><c> outskirts</c><00:01:05.280><c> of</c><00:01:05.439><c> greater</c><00:01:05.680><c> boston</c>

00:01:06.550 --> 00:01:06.560 align:start position:0%
the outskirts of greater boston
 

00:01:06.560 --> 00:01:08.469 align:start position:0%
the outskirts of greater boston
um<00:01:06.960><c> tutorial</c><00:01:07.360><c> was</c><00:01:07.520><c> interesting</c><00:01:08.080><c> it</c><00:01:08.159><c> was</c><00:01:08.320><c> my</c>

00:01:08.469 --> 00:01:08.479 align:start position:0%
um tutorial was interesting it was my
 

00:01:08.479 --> 00:01:10.230 align:start position:0%
um tutorial was interesting it was my
first<00:01:08.799><c> exposure</c><00:01:09.360><c> to</c>

00:01:10.230 --> 00:01:10.240 align:start position:0%
first exposure to
 

00:01:10.240 --> 00:01:10.630 align:start position:0%
first exposure to
you<00:01:10.400><c> know</c><00:01:10.479><c> a</c><00:01:10.640><c> non-object</c>

00:01:10.630 --> 00:01:10.640 align:start position:0%
you know a non-object
 

00:01:10.640 --> 00:01:13.590 align:start position:0%
you know a non-object
non-object-oriented<00:01:11.600><c> language</c><00:01:12.479><c> um</c><00:01:13.040><c> so</c><00:01:13.280><c> it's</c>

00:01:13.590 --> 00:01:13.600 align:start position:0%
non-object-oriented language um so it's
 

00:01:13.600 --> 00:01:14.870 align:start position:0%
non-object-oriented language um so it's
uh<00:01:13.840><c> it's</c><00:01:14.000><c> kind</c><00:01:14.159><c> of</c><00:01:14.240><c> a</c><00:01:14.320><c> change</c><00:01:14.640><c> a</c>

00:01:14.870 --> 00:01:14.880 align:start position:0%
uh it's kind of a change a
 

00:01:14.880 --> 00:01:16.870 align:start position:0%
uh it's kind of a change a
change<00:01:15.119><c> in</c><00:01:15.280><c> framework</c><00:01:15.759><c> that</c><00:01:16.000><c> that</c><00:01:16.400><c> was</c>

00:01:16.870 --> 00:01:16.880 align:start position:0%
change in framework that that was
 

00:01:16.880 --> 00:01:19.350 align:start position:0%
change in framework that that was
interesting<00:01:17.200><c> to</c><00:01:17.360><c> adapt</c><00:01:17.680><c> to</c>

00:01:19.350 --> 00:01:19.360 align:start position:0%
interesting to adapt to
 

00:01:19.360 --> 00:01:28.310 align:start position:0%
interesting to adapt to
how<00:01:19.520><c> about</c><00:01:19.840><c> uh</c><00:01:21.040><c> brandon</c><00:01:24.840><c> wall</c>

00:01:28.310 --> 00:01:28.320 align:start position:0%
 
 

00:01:28.320 --> 00:01:30.870 align:start position:0%
 
brandon<00:01:28.799><c> are</c><00:01:28.880><c> you</c><00:01:29.040><c> there</c><00:01:30.320><c> yeah</c><00:01:30.479><c> i'm</c><00:01:30.640><c> sorry</c><00:01:30.799><c> i</c>

00:01:30.870 --> 00:01:30.880 align:start position:0%
brandon are you there yeah i'm sorry i
 

00:01:30.880 --> 00:01:31.590 align:start position:0%
brandon are you there yeah i'm sorry i
was<00:01:30.960><c> just</c><00:01:31.119><c> finding</c>

00:01:31.590 --> 00:01:31.600 align:start position:0%
was just finding
 

00:01:31.600 --> 00:01:32.870 align:start position:0%
was just finding
the<00:01:31.920><c> mute</c><00:01:32.079><c> button</c><00:01:32.320><c> sorry</c><00:01:32.479><c> what</c><00:01:32.640><c> was</c><00:01:32.720><c> the</c>

00:01:32.870 --> 00:01:32.880 align:start position:0%
the mute button sorry what was the
 

00:01:32.880 --> 00:01:34.710 align:start position:0%
the mute button sorry what was the
question<00:01:33.119><c> i</c><00:01:33.280><c> just</c><00:01:33.439><c> joined</c><00:01:34.079><c> oh</c><00:01:34.320><c> yeah</c>

00:01:34.710 --> 00:01:34.720 align:start position:0%
question i just joined oh yeah
 

00:01:34.720 --> 00:01:35.910 align:start position:0%
question i just joined oh yeah
where<00:01:34.880><c> are</c><00:01:35.040><c> you</c><00:01:35.200><c> and</c><00:01:35.360><c> what</c><00:01:35.520><c> is</c><00:01:35.600><c> your</c><00:01:35.759><c> first</c>

00:01:35.910 --> 00:01:35.920 align:start position:0%
where are you and what is your first
 

00:01:35.920 --> 00:01:38.149 align:start position:0%
where are you and what is your first
impressions<00:01:36.320><c> of</c><00:01:36.479><c> go</c><00:01:37.520><c> um</c>

00:01:38.149 --> 00:01:38.159 align:start position:0%
impressions of go um
 

00:01:38.159 --> 00:01:40.310 align:start position:0%
impressions of go um
yeah<00:01:38.400><c> it's</c><00:01:38.960><c> i</c><00:01:39.040><c> had</c><00:01:39.200><c> used</c><00:01:39.520><c> go</c><00:01:39.680><c> before</c><00:01:40.000><c> for</c><00:01:40.159><c> an</c>

00:01:40.310 --> 00:01:40.320 align:start position:0%
yeah it's i had used go before for an
 

00:01:40.320 --> 00:01:41.590 align:start position:0%
yeah it's i had used go before for an
internship<00:01:40.720><c> but</c><00:01:40.880><c> it's</c><00:01:41.040><c> my</c><00:01:41.119><c> first</c><00:01:41.360><c> time</c>

00:01:41.590 --> 00:01:41.600 align:start position:0%
internship but it's my first time
 

00:01:41.600 --> 00:01:41.990 align:start position:0%
internship but it's my first time
actually

00:01:41.990 --> 00:01:42.000 align:start position:0%
actually
 

00:01:42.000 --> 00:01:43.749 align:start position:0%
actually
dealing<00:01:42.320><c> with</c><00:01:42.399><c> the</c><00:01:42.479><c> concurrency</c><00:01:43.119><c> stuff</c><00:01:43.600><c> i</c>

00:01:43.749 --> 00:01:43.759 align:start position:0%
dealing with the concurrency stuff i
 

00:01:43.759 --> 00:01:45.510 align:start position:0%
dealing with the concurrency stuff i
like<00:01:44.240><c> like</c><00:01:44.479><c> really</c><00:01:44.640><c> working</c><00:01:44.880><c> with</c><00:01:44.960><c> go</c><00:01:45.119><c> routine</c>

00:01:45.510 --> 00:01:45.520 align:start position:0%
like like really working with go routine
 

00:01:45.520 --> 00:01:46.230 align:start position:0%
like like really working with go routine
so

00:01:46.230 --> 00:01:46.240 align:start position:0%
so
 

00:01:46.240 --> 00:01:49.030 align:start position:0%
so
um<00:01:46.880><c> kind</c><00:01:47.040><c> of</c><00:01:47.840><c> initially</c><00:01:48.240><c> was</c><00:01:48.399><c> like</c><00:01:48.560><c> tricky</c><00:01:48.880><c> to</c>

00:01:49.030 --> 00:01:49.040 align:start position:0%
um kind of initially was like tricky to
 

00:01:49.040 --> 00:01:50.310 align:start position:0%
um kind of initially was like tricky to
think<00:01:49.280><c> through</c><00:01:49.520><c> like</c>

00:01:50.310 --> 00:01:50.320 align:start position:0%
think through like
 

00:01:50.320 --> 00:01:53.109 align:start position:0%
think through like
um<00:01:51.200><c> like</c><00:01:51.520><c> as</c><00:01:51.680><c> soon</c><00:01:51.840><c> as</c><00:01:52.000><c> the</c><00:01:52.159><c> main</c><00:01:52.479><c> thread</c><00:01:52.799><c> ends</c>

00:01:53.109 --> 00:01:53.119 align:start position:0%
um like as soon as the main thread ends
 

00:01:53.119 --> 00:01:55.270 align:start position:0%
um like as soon as the main thread ends
all<00:01:53.280><c> to</c><00:01:53.360><c> go</c><00:01:53.520><c> routines</c><00:01:53.840><c> are</c><00:01:54.000><c> ended</c><00:01:54.240><c> so</c><00:01:54.479><c> kind</c><00:01:54.640><c> of</c>

00:01:55.270 --> 00:01:55.280 align:start position:0%
all to go routines are ended so kind of
 

00:01:55.280 --> 00:01:56.630 align:start position:0%
all to go routines are ended so kind of
working<00:01:55.520><c> through</c><00:01:55.759><c> those</c><00:01:56.000><c> early</c><00:01:56.399><c> kind</c><00:01:56.560><c> of</c>

00:01:56.630 --> 00:01:56.640 align:start position:0%
working through those early kind of
 

00:01:56.640 --> 00:01:58.149 align:start position:0%
working through those early kind of
conceptual<00:01:57.200><c> issues</c><00:01:57.520><c> but</c><00:01:57.680><c> it's</c><00:01:57.920><c> it's</c>

00:01:58.149 --> 00:01:58.159 align:start position:0%
conceptual issues but it's it's
 

00:01:58.159 --> 00:01:58.789 align:start position:0%
conceptual issues but it's it's
interesting

00:01:58.789 --> 00:01:58.799 align:start position:0%
interesting
 

00:01:58.799 --> 00:02:00.789 align:start position:0%
interesting
to<00:01:58.960><c> kind</c><00:01:59.119><c> of</c><00:01:59.200><c> think</c><00:01:59.360><c> through</c><00:01:59.920><c> okay</c><00:02:00.479><c> how</c><00:02:00.640><c> about</c>

00:02:00.789 --> 00:02:00.799 align:start position:0%
to kind of think through okay how about
 

00:02:00.799 --> 00:02:13.110 align:start position:0%
to kind of think through okay how about
the<00:02:01.119><c> conor</c><00:02:06.840><c> prisby</c>

00:02:13.110 --> 00:02:13.120 align:start position:0%
 
 

00:02:13.120 --> 00:02:19.030 align:start position:0%
 
connor<00:02:13.520><c> are</c><00:02:13.599><c> you</c><00:02:13.760><c> there</c>

00:02:19.030 --> 00:02:19.040 align:start position:0%
 
 

00:02:19.040 --> 00:02:22.390 align:start position:0%
 
oh<00:02:19.280><c> yeah</c><00:02:19.599><c> maybe</c><00:02:20.000><c> try</c><00:02:20.239><c> somebody</c><00:02:20.640><c> else</c><00:02:21.120><c> uh</c><00:02:22.000><c> dory</c>

00:02:22.390 --> 00:02:22.400 align:start position:0%
oh yeah maybe try somebody else uh dory
 

00:02:22.400 --> 00:02:27.030 align:start position:0%
oh yeah maybe try somebody else uh dory
shin

00:02:27.030 --> 00:02:27.040 align:start position:0%
 
 

00:02:27.040 --> 00:02:30.070 align:start position:0%
 
hi<00:02:27.840><c> uh</c><00:02:28.080><c> i'm</c><00:02:28.319><c> in</c><00:02:28.560><c> cambridge</c><00:02:29.120><c> right</c><00:02:29.280><c> now</c><00:02:29.599><c> and</c>

00:02:30.070 --> 00:02:30.080 align:start position:0%
hi uh i'm in cambridge right now and
 

00:02:30.080 --> 00:02:31.910 align:start position:0%
hi uh i'm in cambridge right now and
i<00:02:30.239><c> found</c><00:02:30.480><c> go</c><00:02:30.640><c> to</c><00:02:30.800><c> be</c><00:02:31.280><c> real</c><00:02:31.519><c> uh</c><00:02:31.680><c> pretty</c>

00:02:31.910 --> 00:02:31.920 align:start position:0%
i found go to be real uh pretty
 

00:02:31.920 --> 00:02:33.190 align:start position:0%
i found go to be real uh pretty
interesting<00:02:32.400><c> i</c><00:02:32.480><c> thought</c><00:02:32.720><c> like</c>

00:02:33.190 --> 00:02:33.200 align:start position:0%
interesting i thought like
 

00:02:33.200 --> 00:02:34.630 align:start position:0%
interesting i thought like
go<00:02:33.360><c> through</c><00:02:33.840><c> like</c><00:02:34.000><c> the</c><00:02:34.080><c> first</c><00:02:34.319><c> part</c><00:02:34.480><c> of</c><00:02:34.560><c> the</c>

00:02:34.630 --> 00:02:34.640 align:start position:0%
go through like the first part of the
 

00:02:34.640 --> 00:02:36.229 align:start position:0%
go through like the first part of the
tutorial<00:02:35.280><c> i</c><00:02:35.519><c> like</c>

00:02:36.229 --> 00:02:36.239 align:start position:0%
tutorial i like
 

00:02:36.239 --> 00:02:37.589 align:start position:0%
tutorial i like
like<00:02:36.480><c> learning</c><00:02:36.720><c> about</c><00:02:36.959><c> the</c><00:02:37.040><c> for</c><00:02:37.280><c> loops</c><00:02:37.519><c> and</c>

00:02:37.589 --> 00:02:37.599 align:start position:0%
like learning about the for loops and
 

00:02:37.599 --> 00:02:39.589 align:start position:0%
like learning about the for loops and
the<00:02:37.760><c> way</c><00:02:38.000><c> they</c><00:02:38.160><c> do</c><00:02:38.319><c> for</c><00:02:38.560><c> loops</c><00:02:39.120><c> i</c><00:02:39.280><c> thought</c><00:02:39.440><c> that</c>

00:02:39.589 --> 00:02:39.599 align:start position:0%
the way they do for loops i thought that
 

00:02:39.599 --> 00:02:40.949 align:start position:0%
the way they do for loops i thought that
was<00:02:39.680><c> pretty</c><00:02:39.920><c> interesting</c><00:02:40.400><c> and</c><00:02:40.560><c> like</c>

00:02:40.949 --> 00:02:40.959 align:start position:0%
was pretty interesting and like
 

00:02:40.959 --> 00:02:42.949 align:start position:0%
was pretty interesting and like
the<00:02:41.120><c> way</c><00:02:41.280><c> it's</c><00:02:41.440><c> kind</c><00:02:41.519><c> of</c><00:02:41.680><c> structured</c><00:02:42.560><c> i</c><00:02:42.720><c> think</c>

00:02:42.949 --> 00:02:42.959 align:start position:0%
the way it's kind of structured i think
 

00:02:42.959 --> 00:02:44.949 align:start position:0%
the way it's kind of structured i think
that<00:02:43.360><c> i</c><00:02:43.519><c> like</c>

00:02:44.949 --> 00:02:44.959 align:start position:0%
that i like
 

00:02:44.959 --> 00:02:48.070 align:start position:0%
that i like
the<00:02:45.280><c> threads</c><00:02:45.920><c> and</c><00:02:46.080><c> um</c><00:02:46.720><c> i</c><00:02:46.879><c> found</c><00:02:47.200><c> to</c><00:02:47.360><c> be</c>

00:02:48.070 --> 00:02:48.080 align:start position:0%
the threads and um i found to be
 

00:02:48.080 --> 00:02:49.509 align:start position:0%
the threads and um i found to be
a<00:02:48.160><c> little</c><00:02:48.319><c> bit</c><00:02:48.480><c> like</c><00:02:48.720><c> more</c><00:02:48.959><c> difficult</c><00:02:49.280><c> about</c>

00:02:49.509 --> 00:02:49.519 align:start position:0%
a little bit like more difficult about
 

00:02:49.519 --> 00:02:51.110 align:start position:0%
a little bit like more difficult about
like<00:02:49.680><c> when</c><00:02:49.920><c> it</c><00:02:50.080><c> ended</c><00:02:50.480><c> and</c><00:02:50.640><c> like</c>

00:02:51.110 --> 00:02:51.120 align:start position:0%
like when it ended and like
 

00:02:51.120 --> 00:02:53.430 align:start position:0%
like when it ended and like
when<00:02:51.440><c> um</c><00:02:52.319><c> like</c><00:02:52.480><c> sometimes</c><00:02:52.800><c> like</c><00:02:52.959><c> the</c><00:02:53.200><c> function</c>

00:02:53.430 --> 00:02:53.440 align:start position:0%
when um like sometimes like the function
 

00:02:53.440 --> 00:02:55.030 align:start position:0%
when um like sometimes like the function
would<00:02:53.680><c> end</c><00:02:53.840><c> before</c><00:02:54.080><c> all</c><00:02:54.160><c> the</c><00:02:54.319><c> routines</c><00:02:54.800><c> like</c>

00:02:55.030 --> 00:02:55.040 align:start position:0%
would end before all the routines like
 

00:02:55.040 --> 00:02:55.910 align:start position:0%
would end before all the routines like
ended<00:02:55.440><c> so</c>

00:02:55.910 --> 00:02:55.920 align:start position:0%
ended so
 

00:02:55.920 --> 00:02:58.070 align:start position:0%
ended so
that<00:02:56.080><c> was</c><00:02:56.319><c> like</c><00:02:57.120><c> interesting</c><00:02:57.519><c> to</c><00:02:57.680><c> think</c><00:02:57.840><c> about</c>

00:02:58.070 --> 00:02:58.080 align:start position:0%
that was like interesting to think about
 

00:02:58.080 --> 00:02:59.430 align:start position:0%
that was like interesting to think about
and<00:02:58.239><c> like</c><00:02:58.400><c> i</c><00:02:58.480><c> learned</c><00:02:58.640><c> more</c><00:02:58.879><c> about</c><00:02:59.040><c> that</c><00:02:59.280><c> so</c>

00:02:59.430 --> 00:02:59.440 align:start position:0%
and like i learned more about that so
 

00:02:59.440 --> 00:03:01.670 align:start position:0%
and like i learned more about that so
it's<00:02:59.599><c> pretty</c><00:02:59.760><c> cool</c><00:03:00.000><c> i</c><00:03:00.159><c> liked</c><00:03:00.400><c> it</c>

00:03:01.670 --> 00:03:01.680 align:start position:0%
it's pretty cool i liked it
 

00:03:01.680 --> 00:03:03.270 align:start position:0%
it's pretty cool i liked it
well<00:03:02.159><c> i</c><00:03:02.319><c> hope</c><00:03:02.560><c> all</c><00:03:02.640><c> of</c><00:03:02.720><c> you</c><00:03:02.959><c> going</c><00:03:03.040><c> to</c><00:03:03.120><c> have</c><00:03:03.200><c> a</c>

00:03:03.270 --> 00:03:03.280 align:start position:0%
well i hope all of you going to have a
 

00:03:03.280 --> 00:03:04.710 align:start position:0%
well i hope all of you going to have a
very<00:03:03.519><c> positive</c><00:03:03.920><c> experience</c>

00:03:04.710 --> 00:03:04.720 align:start position:0%
very positive experience
 

00:03:04.720 --> 00:03:08.390 align:start position:0%
very positive experience
with<00:03:04.959><c> go</c><00:03:05.440><c> uh</c><00:03:06.800><c> in</c><00:03:07.280><c> the</c><00:03:07.440><c> semester</c>

00:03:08.390 --> 00:03:08.400 align:start position:0%
with go uh in the semester
 

00:03:08.400 --> 00:03:10.790 align:start position:0%
with go uh in the semester
um<00:03:09.040><c> and</c><00:03:09.440><c> uh</c><00:03:09.599><c> so</c><00:03:09.760><c> let</c><00:03:09.920><c> me</c><00:03:10.159><c> say</c><00:03:10.319><c> a</c><00:03:10.400><c> little</c><00:03:10.560><c> bit</c>

00:03:10.790 --> 00:03:10.800 align:start position:0%
um and uh so let me say a little bit
 

00:03:10.800 --> 00:03:11.670 align:start position:0%
um and uh so let me say a little bit
like<00:03:11.040><c> you</c><00:03:11.120><c> know</c>

00:03:11.670 --> 00:03:11.680 align:start position:0%
like you know
 

00:03:11.680 --> 00:03:15.350 align:start position:0%
like you know
why<00:03:12.159><c> go</c><00:03:12.800><c> um</c><00:03:14.080><c> in</c><00:03:14.560><c> principle</c><00:03:15.040><c> you</c><00:03:15.120><c> know</c><00:03:15.280><c> there</c>

00:03:15.350 --> 00:03:15.360 align:start position:0%
why go um in principle you know there
 

00:03:15.360 --> 00:03:16.149 align:start position:0%
why go um in principle you know there
are<00:03:15.440><c> a</c><00:03:15.440><c> lot</c><00:03:15.680><c> of</c>

00:03:16.149 --> 00:03:16.159 align:start position:0%
are a lot of
 

00:03:16.159 --> 00:03:17.430 align:start position:0%
are a lot of
programming<00:03:16.640><c> languages</c><00:03:17.040><c> that</c><00:03:17.120><c> you</c><00:03:17.280><c> could</c>

00:03:17.430 --> 00:03:17.440 align:start position:0%
programming languages that you could
 

00:03:17.440 --> 00:03:18.949 align:start position:0%
programming languages that you could
have<00:03:17.599><c> used</c><00:03:18.000><c> for</c><00:03:18.239><c> doing</c><00:03:18.480><c> distributed</c>

00:03:18.949 --> 00:03:18.959 align:start position:0%
have used for doing distributed
 

00:03:18.959 --> 00:03:20.550 align:start position:0%
have used for doing distributed
programming<00:03:19.440><c> and</c><00:03:19.599><c> goals</c><00:03:19.840><c> are</c><00:03:20.000><c> absolutely</c><00:03:20.400><c> not</c>

00:03:20.550 --> 00:03:20.560 align:start position:0%
programming and goals are absolutely not
 

00:03:20.560 --> 00:03:21.750 align:start position:0%
programming and goals are absolutely not
the<00:03:20.720><c> only</c><00:03:20.959><c> one</c>

00:03:21.750 --> 00:03:21.760 align:start position:0%
the only one
 

00:03:21.760 --> 00:03:24.550 align:start position:0%
the only one
but<00:03:22.000><c> some</c><00:03:22.239><c> reasons</c><00:03:22.560><c> why</c><00:03:22.800><c> we</c><00:03:23.120><c> uh</c><00:03:23.760><c> why</c><00:03:23.920><c> we</c><00:03:24.159><c> chose</c>

00:03:24.550 --> 00:03:24.560 align:start position:0%
but some reasons why we uh why we chose
 

00:03:24.560 --> 00:03:26.309 align:start position:0%
but some reasons why we uh why we chose
go<00:03:24.959><c> in</c><00:03:25.200><c> a24</c>

00:03:26.309 --> 00:03:26.319 align:start position:0%
go in a24
 

00:03:26.319 --> 00:03:27.990 align:start position:0%
go in a24
uh<00:03:26.720><c> you</c><00:03:26.879><c> know</c><00:03:27.120><c> first</c><00:03:27.360><c> of</c><00:03:27.440><c> all</c><00:03:27.519><c> it</c><00:03:27.680><c> has</c><00:03:27.840><c> good</c>

00:03:27.990 --> 00:03:28.000 align:start position:0%
uh you know first of all it has good
 

00:03:28.000 --> 00:03:30.229 align:start position:0%
uh you know first of all it has good
support

00:03:30.229 --> 00:03:30.239 align:start position:0%
support
 

00:03:30.239 --> 00:03:33.509 align:start position:0%
support
for<00:03:30.560><c> frets</c><00:03:31.040><c> and</c><00:03:31.200><c> rpc</c>

00:03:33.509 --> 00:03:33.519 align:start position:0%
for frets and rpc
 

00:03:33.519 --> 00:03:36.789 align:start position:0%
for frets and rpc
and<00:03:35.120><c> those</c><00:03:35.840><c> two</c><00:03:36.080><c> are</c><00:03:36.159><c> very</c><00:03:36.400><c> important</c><00:03:36.720><c> for</c>

00:03:36.789 --> 00:03:36.799 align:start position:0%
and those two are very important for
 

00:03:36.799 --> 00:03:38.309 align:start position:0%
and those two are very important for
distributed<00:03:37.360><c> programming</c>

00:03:38.309 --> 00:03:38.319 align:start position:0%
distributed programming
 

00:03:38.319 --> 00:03:41.670 align:start position:0%
distributed programming
so<00:03:38.879><c> it</c><00:03:39.040><c> makes</c><00:03:39.280><c> sense</c><00:03:39.680><c> to</c><00:03:40.400><c> you</c><00:03:40.480><c> know</c><00:03:41.120><c> ghost</c><00:03:41.440><c> is</c><00:03:41.599><c> a</c>

00:03:41.670 --> 00:03:41.680 align:start position:0%
so it makes sense to you know ghost is a
 

00:03:41.680 --> 00:03:42.949 align:start position:0%
so it makes sense to you know ghost is a
good<00:03:41.840><c> match</c><00:03:42.080><c> for</c><00:03:42.159><c> that</c>

00:03:42.949 --> 00:03:42.959 align:start position:0%
good match for that
 

00:03:42.959 --> 00:03:44.550 align:start position:0%
good match for that
second<00:03:43.200><c> reason</c><00:03:43.519><c> that</c><00:03:43.599><c> we</c><00:03:43.760><c> like</c><00:03:43.920><c> it</c><00:03:44.000><c> a</c><00:03:44.080><c> lot</c><00:03:44.319><c> is</c>

00:03:44.550 --> 00:03:44.560 align:start position:0%
second reason that we like it a lot is
 

00:03:44.560 --> 00:03:46.229 align:start position:0%
second reason that we like it a lot is
you<00:03:44.640><c> know</c><00:03:44.799><c> they</c><00:03:44.879><c> have</c><00:03:45.120><c> a</c><00:03:45.200><c> garbage</c><00:03:45.599><c> collector</c>

00:03:46.229 --> 00:03:46.239 align:start position:0%
you know they have a garbage collector
 

00:03:46.239 --> 00:03:48.309 align:start position:0%
you know they have a garbage collector
and<00:03:46.640><c> if</c><00:03:46.799><c> you</c><00:03:46.879><c> do</c><00:03:47.200><c> a</c><00:03:47.360><c> shared</c><00:03:47.599><c> memory</c><00:03:48.000><c> style</c>

00:03:48.309 --> 00:03:48.319 align:start position:0%
and if you do a shared memory style
 

00:03:48.319 --> 00:03:51.110 align:start position:0%
and if you do a shared memory style
parallelism<00:03:49.040><c> where</c><00:03:49.360><c> multiple</c><00:03:49.760><c> threads</c><00:03:50.159><c> share</c>

00:03:51.110 --> 00:03:51.120 align:start position:0%
parallelism where multiple threads share
 

00:03:51.120 --> 00:03:54.309 align:start position:0%
parallelism where multiple threads share
a<00:03:51.280><c> structure</c><00:03:52.159><c> or</c><00:03:52.400><c> a</c><00:03:52.480><c> variable</c><00:03:53.680><c> then</c><00:03:53.920><c> having</c><00:03:54.239><c> a</c>

00:03:54.309 --> 00:03:54.319 align:start position:0%
a structure or a variable then having a
 

00:03:54.319 --> 00:03:55.429 align:start position:0%
a structure or a variable then having a
garbage<00:03:54.640><c> collector</c>

00:03:55.429 --> 00:03:55.439 align:start position:0%
garbage collector
 

00:03:55.439 --> 00:03:57.030 align:start position:0%
garbage collector
is<00:03:55.680><c> nice</c><00:03:56.080><c> because</c><00:03:56.319><c> then</c><00:03:56.480><c> the</c><00:03:56.560><c> frets</c><00:03:56.879><c> don't</c>

00:03:57.030 --> 00:03:57.040 align:start position:0%
is nice because then the frets don't
 

00:03:57.040 --> 00:03:58.949 align:start position:0%
is nice because then the frets don't
have<00:03:57.200><c> to</c><00:03:57.280><c> decide</c><00:03:57.680><c> who's</c><00:03:57.920><c> the</c><00:03:58.080><c> last</c>

00:03:58.949 --> 00:03:58.959 align:start position:0%
have to decide who's the last
 

00:03:58.959 --> 00:04:00.710 align:start position:0%
have to decide who's the last
fret<00:03:59.280><c> that</c><00:03:59.439><c> actually</c><00:03:59.840><c> has</c><00:04:00.000><c> a</c><00:04:00.159><c> reference</c><00:04:00.560><c> to</c>

00:04:00.710 --> 00:04:00.720 align:start position:0%
fret that actually has a reference to
 

00:04:00.720 --> 00:04:02.630 align:start position:0%
fret that actually has a reference to
this<00:04:00.879><c> memory</c><00:04:01.360><c> and</c><00:04:01.680><c> should</c><00:04:01.920><c> therefore</c><00:04:02.400><c> be</c>

00:04:02.630 --> 00:04:02.640 align:start position:0%
this memory and should therefore be
 

00:04:02.640 --> 00:04:03.589 align:start position:0%
this memory and should therefore be
allocated

00:04:03.589 --> 00:04:03.599 align:start position:0%
allocated
 

00:04:03.599 --> 00:04:05.350 align:start position:0%
allocated
the<00:04:03.760><c> guards</c><00:04:04.080><c> collector</c><00:04:04.480><c> just</c><00:04:04.720><c> takes</c><00:04:04.959><c> care</c><00:04:05.120><c> of</c>

00:04:05.350 --> 00:04:05.360 align:start position:0%
the guards collector just takes care of
 

00:04:05.360 --> 00:04:06.789 align:start position:0%
the guards collector just takes care of
all<00:04:05.439><c> those</c><00:04:05.760><c> problems</c>

00:04:06.789 --> 00:04:06.799 align:start position:0%
all those problems
 

00:04:06.799 --> 00:04:12.869 align:start position:0%
all those problems
so<00:04:06.959><c> that's</c><00:04:07.120><c> convenient</c><00:04:08.959><c> let's</c><00:04:09.200><c> type</c><00:04:09.519><c> safe</c>

00:04:12.869 --> 00:04:12.879 align:start position:0%
 
 

00:04:12.879 --> 00:04:16.710 align:start position:0%
 
uh<00:04:14.319><c> it</c><00:04:14.560><c> is</c><00:04:15.040><c> simple</c><00:04:15.599><c> it's</c><00:04:15.840><c> a</c>

00:04:16.710 --> 00:04:16.720 align:start position:0%
uh it is simple it's a
 

00:04:16.720 --> 00:04:18.390 align:start position:0%
uh it is simple it's a
reasonable<00:04:17.040><c> simple</c><00:04:17.359><c> programming</c><00:04:17.840><c> language</c>

00:04:18.390 --> 00:04:18.400 align:start position:0%
reasonable simple programming language
 

00:04:18.400 --> 00:04:19.830 align:start position:0%
reasonable simple programming language
quite<00:04:18.639><c> easy</c><00:04:19.199><c> to</c><00:04:19.359><c> learn</c>

00:04:19.830 --> 00:04:19.840 align:start position:0%
quite easy to learn
 

00:04:19.840 --> 00:04:21.749 align:start position:0%
quite easy to learn
and<00:04:20.079><c> in</c><00:04:20.160><c> fact</c><00:04:20.400><c> you</c><00:04:20.479><c> know</c><00:04:20.720><c> ideas</c><00:04:21.280><c> hopefully</c><00:04:21.600><c> you</c>

00:04:21.749 --> 00:04:21.759 align:start position:0%
and in fact you know ideas hopefully you
 

00:04:21.759 --> 00:04:22.950 align:start position:0%
and in fact you know ideas hopefully you
got<00:04:21.919><c> that</c><00:04:22.079><c> experience</c><00:04:22.400><c> with</c><00:04:22.560><c> doing</c><00:04:22.720><c> the</c><00:04:22.800><c> go</c>

00:04:22.950 --> 00:04:22.960 align:start position:0%
got that experience with doing the go
 

00:04:22.960 --> 00:04:24.310 align:start position:0%
got that experience with doing the go
tutorial<00:04:23.520><c> that</c><00:04:23.680><c> you</c><00:04:23.759><c> know</c><00:04:23.919><c> once</c><00:04:24.080><c> you</c><00:04:24.160><c> do</c><00:04:24.240><c> the</c>

00:04:24.310 --> 00:04:24.320 align:start position:0%
tutorial that you know once you do the
 

00:04:24.320 --> 00:04:25.909 align:start position:0%
tutorial that you know once you do the
go<00:04:24.560><c> tutorial</c><00:04:25.040><c> you</c><00:04:25.120><c> mostly</c><00:04:25.520><c> you</c><00:04:25.600><c> know</c><00:04:25.680><c> you</c><00:04:25.759><c> got</c>

00:04:25.909 --> 00:04:25.919 align:start position:0%
go tutorial you mostly you know you got
 

00:04:25.919 --> 00:04:27.350 align:start position:0%
go tutorial you mostly you know you got
most<00:04:26.160><c> of</c><00:04:26.240><c> go</c>

00:04:27.350 --> 00:04:27.360 align:start position:0%
most of go
 

00:04:27.360 --> 00:04:29.909 align:start position:0%
most of go
um<00:04:28.160><c> and</c><00:04:28.320><c> then</c><00:04:28.479><c> finally</c><00:04:29.040><c> it</c><00:04:29.280><c> actually</c><00:04:29.600><c> has</c><00:04:29.759><c> a</c>

00:04:29.909 --> 00:04:29.919 align:start position:0%
um and then finally it actually has a
 

00:04:29.919 --> 00:04:32.310 align:start position:0%
um and then finally it actually has a
compiler<00:04:30.479><c> so</c><00:04:30.639><c> it's</c><00:04:30.800><c> compiled</c>

00:04:32.310 --> 00:04:32.320 align:start position:0%
compiler so it's compiled
 

00:04:32.320 --> 00:04:35.430 align:start position:0%
compiler so it's compiled
unlike<00:04:33.759><c> python</c><00:04:34.400><c> or</c><00:04:34.880><c> uh</c>

00:04:35.430 --> 00:04:35.440 align:start position:0%
unlike python or uh
 

00:04:35.440 --> 00:04:37.590 align:start position:0%
unlike python or uh
you<00:04:35.600><c> know</c><00:04:35.919><c> actually</c><00:04:36.560><c> the</c><00:04:36.720><c> compiler</c><00:04:37.120><c> produces</c>

00:04:37.590 --> 00:04:37.600 align:start position:0%
you know actually the compiler produces
 

00:04:37.600 --> 00:04:39.430 align:start position:0%
you know actually the compiler produces
actually<00:04:37.840><c> youtube</c><00:04:38.160><c> code</c><00:04:38.479><c> and</c><00:04:38.560><c> so</c><00:04:38.800><c> the</c><00:04:39.040><c> runtime</c>

00:04:39.430 --> 00:04:39.440 align:start position:0%
actually youtube code and so the runtime
 

00:04:39.440 --> 00:04:40.830 align:start position:0%
actually youtube code and so the runtime
overhead<00:04:39.840><c> is</c><00:04:39.919><c> not</c><00:04:40.160><c> as</c>

00:04:40.830 --> 00:04:40.840 align:start position:0%
overhead is not as
 

00:04:40.840 --> 00:04:44.230 align:start position:0%
overhead is not as
large<00:04:41.919><c> um</c><00:04:42.960><c> i</c><00:04:43.120><c> guess</c><00:04:43.520><c> sort</c><00:04:43.680><c> of</c><00:04:43.759><c> the</c><00:04:43.919><c> final</c>

00:04:44.230 --> 00:04:44.240 align:start position:0%
large um i guess sort of the final
 

00:04:44.240 --> 00:04:44.950 align:start position:0%
large um i guess sort of the final
reason<00:04:44.639><c> why</c>

00:04:44.950 --> 00:04:44.960 align:start position:0%
reason why
 

00:04:44.960 --> 00:04:47.510 align:start position:0%
reason why
you're<00:04:45.199><c> from</c><00:04:45.440><c> e24</c><00:04:46.000><c> is</c><00:04:46.160><c> in</c><00:04:46.400><c> uh</c><00:04:46.720><c> it</c><00:04:46.880><c> goes</c><00:04:47.199><c> because</c>

00:04:47.510 --> 00:04:47.520 align:start position:0%
you're from e24 is in uh it goes because
 

00:04:47.520 --> 00:04:48.390 align:start position:0%
you're from e24 is in uh it goes because
i<00:04:47.919><c> enjoy</c>

00:04:48.390 --> 00:04:48.400 align:start position:0%
i enjoy
 

00:04:48.400 --> 00:04:51.350 align:start position:0%
i enjoy
writing<00:04:49.199><c> go</c><00:04:49.440><c> programs</c><00:04:50.000><c> and</c><00:04:50.240><c> so</c><00:04:50.479><c> that</c><00:04:50.720><c> may</c><00:04:50.880><c> be</c>

00:04:51.350 --> 00:04:51.360 align:start position:0%
writing go programs and so that may be
 

00:04:51.360 --> 00:04:54.070 align:start position:0%
writing go programs and so that may be
also<00:04:51.600><c> an</c><00:04:51.759><c> important</c><00:04:52.080><c> reason</c>

00:04:54.070 --> 00:04:54.080 align:start position:0%
also an important reason
 

00:04:54.080 --> 00:04:56.150 align:start position:0%
also an important reason
um<00:04:54.800><c> so</c><00:04:54.960><c> what</c><00:04:55.120><c> i'm</c><00:04:55.199><c> going</c><00:04:55.280><c> to</c><00:04:55.360><c> do</c><00:04:55.759><c> is</c><00:04:56.000><c> i'm</c><00:04:56.080><c> going</c>

00:04:56.150 --> 00:04:56.160 align:start position:0%
um so what i'm going to do is i'm going
 

00:04:56.160 --> 00:04:57.189 align:start position:0%
um so what i'm going to do is i'm going
to<00:04:56.240><c> talk</c><00:04:56.400><c> a</c><00:04:56.479><c> little</c><00:04:56.639><c> bit</c><00:04:56.800><c> about</c>

00:04:57.189 --> 00:04:57.199 align:start position:0%
to talk a little bit about
 

00:04:57.199 --> 00:05:00.469 align:start position:0%
to talk a little bit about
threads<00:04:57.520><c> in</c><00:04:57.600><c> general</c><00:04:58.080><c> rpc</c><00:04:58.560><c> in</c><00:04:58.639><c> general</c><00:05:00.080><c> and</c>

00:05:00.469 --> 00:05:00.479 align:start position:0%
threads in general rpc in general and
 

00:05:00.479 --> 00:05:01.909 align:start position:0%
threads in general rpc in general and
you<00:05:00.639><c> know</c><00:05:00.720><c> talk</c><00:05:00.960><c> a</c><00:05:01.039><c> little</c><00:05:01.199><c> bit</c><00:05:01.440><c> about</c>

00:05:01.909 --> 00:05:01.919 align:start position:0%
you know talk a little bit about
 

00:05:01.919 --> 00:05:04.710 align:start position:0%
you know talk a little bit about
uh<00:05:03.120><c> different</c><00:05:03.440><c> aspects</c><00:05:03.919><c> of</c><00:05:04.000><c> programming</c><00:05:04.479><c> with</c>

00:05:04.710 --> 00:05:04.720 align:start position:0%
uh different aspects of programming with
 

00:05:04.720 --> 00:05:05.510 align:start position:0%
uh different aspects of programming with
threads

00:05:05.510 --> 00:05:05.520 align:start position:0%
threads
 

00:05:05.520 --> 00:05:08.150 align:start position:0%
threads
some<00:05:05.759><c> of</c><00:05:05.840><c> this</c><00:05:06.080><c> is</c><00:05:06.320><c> pretty</c><00:05:06.560><c> tutorial</c><00:05:07.360><c> uh</c><00:05:07.759><c> if</c>

00:05:08.150 --> 00:05:08.160 align:start position:0%
some of this is pretty tutorial uh if
 

00:05:08.160 --> 00:05:10.390 align:start position:0%
some of this is pretty tutorial uh if
you<00:05:08.400><c> have</c><00:05:08.560><c> seen</c><00:05:08.720><c> this</c><00:05:08.880><c> before</c><00:05:09.759><c> uh</c>

00:05:10.390 --> 00:05:10.400 align:start position:0%
you have seen this before uh
 

00:05:10.400 --> 00:05:12.469 align:start position:0%
you have seen this before uh
you<00:05:10.560><c> know</c><00:05:10.639><c> my</c><00:05:10.880><c> apologies</c><00:05:11.759><c> i'm</c><00:05:12.000><c> going</c><00:05:12.080><c> to</c><00:05:12.160><c> go</c>

00:05:12.469 --> 00:05:12.479 align:start position:0%
you know my apologies i'm going to go
 

00:05:12.479 --> 00:05:13.830 align:start position:0%
you know my apologies i'm going to go
reasonably<00:05:12.880><c> quickly</c><00:05:13.199><c> through</c><00:05:13.440><c> it</c>

00:05:13.830 --> 00:05:13.840 align:start position:0%
reasonably quickly through it
 

00:05:13.840 --> 00:05:15.670 align:start position:0%
reasonably quickly through it
it's<00:05:14.080><c> definitely</c><00:05:14.479><c> not</c><00:05:14.720><c> a</c><00:05:15.039><c> comprehensive</c>

00:05:15.670 --> 00:05:15.680 align:start position:0%
it's definitely not a comprehensive
 

00:05:15.680 --> 00:05:17.670 align:start position:0%
it's definitely not a comprehensive
introduction<00:05:16.080><c> to</c><00:05:16.240><c> concurrent</c><00:05:16.639><c> programming</c>

00:05:17.670 --> 00:05:17.680 align:start position:0%
introduction to concurrent programming
 

00:05:17.680 --> 00:05:19.590 align:start position:0%
introduction to concurrent programming
but<00:05:17.840><c> just</c><00:05:18.000><c> hopefully</c><00:05:18.320><c> enough</c><00:05:18.479><c> to</c><00:05:18.639><c> remind</c><00:05:19.039><c> you</c>

00:05:19.590 --> 00:05:19.600 align:start position:0%
but just hopefully enough to remind you
 

00:05:19.600 --> 00:05:20.710 align:start position:0%
but just hopefully enough to remind you
what<00:05:19.759><c> the</c><00:05:19.919><c> issues</c><00:05:20.320><c> are</c>

00:05:20.710 --> 00:05:20.720 align:start position:0%
what the issues are
 

00:05:20.720 --> 00:05:22.790 align:start position:0%
what the issues are
and<00:05:21.039><c> what</c><00:05:21.199><c> you</c><00:05:21.360><c> should</c><00:05:21.520><c> look</c><00:05:21.680><c> out</c><00:05:21.840><c> for</c><00:05:22.560><c> and</c>

00:05:22.790 --> 00:05:22.800 align:start position:0%
and what you should look out for and
 

00:05:22.800 --> 00:05:24.070 align:start position:0%
and what you should look out for and
we'll<00:05:22.960><c> hopefully</c><00:05:23.280><c> spend</c><00:05:23.440><c> some</c><00:05:23.600><c> time</c>

00:05:24.070 --> 00:05:24.080 align:start position:0%
we'll hopefully spend some time
 

00:05:24.080 --> 00:05:26.390 align:start position:0%
we'll hopefully spend some time
uh<00:05:24.400><c> quite</c><00:05:24.560><c> a</c><00:05:24.639><c> bit</c><00:05:24.720><c> of</c><00:05:24.800><c> time</c><00:05:25.039><c> on</c><00:05:25.120><c> the</c><00:05:25.280><c> crawler</c>

00:05:26.390 --> 00:05:26.400 align:start position:0%
uh quite a bit of time on the crawler
 

00:05:26.400 --> 00:05:27.749 align:start position:0%
uh quite a bit of time on the crawler
and<00:05:26.639><c> so</c>

00:05:27.749 --> 00:05:27.759 align:start position:0%
and so
 

00:05:27.759 --> 00:05:29.830 align:start position:0%
and so
i'll<00:05:28.000><c> share</c><00:05:28.240><c> you</c><00:05:28.560><c> uh</c><00:05:28.800><c> the</c><00:05:28.960><c> solution</c><00:05:29.360><c> that</c><00:05:29.680><c> i</c>

00:05:29.830 --> 00:05:29.840 align:start position:0%
i'll share you uh the solution that i
 

00:05:29.840 --> 00:05:31.350 align:start position:0%
i'll share you uh the solution that i
have<00:05:29.919><c> two</c><00:05:30.080><c> solutions</c><00:05:30.479><c> one</c><00:05:30.720><c> using</c><00:05:31.039><c> channels</c>

00:05:31.350 --> 00:05:31.360 align:start position:0%
have two solutions one using channels
 

00:05:31.360 --> 00:05:32.469 align:start position:0%
have two solutions one using channels
and<00:05:31.440><c> one's</c><00:05:31.759><c> using</c>

00:05:32.469 --> 00:05:32.479 align:start position:0%
and one's using
 

00:05:32.479 --> 00:05:34.230 align:start position:0%
and one's using
new<00:05:32.639><c> texas</c><00:05:33.199><c> and</c><00:05:33.440><c> we'll</c><00:05:33.600><c> go</c><00:05:33.759><c> through</c><00:05:33.919><c> both</c><00:05:34.160><c> of</c>

00:05:34.230 --> 00:05:34.240 align:start position:0%
new texas and we'll go through both of
 

00:05:34.240 --> 00:05:35.990 align:start position:0%
new texas and we'll go through both of
them

00:05:35.990 --> 00:05:36.000 align:start position:0%
them
 

00:05:36.000 --> 00:05:44.870 align:start position:0%
them
any<00:05:36.240><c> questions</c><00:05:36.560><c> so</c><00:05:36.720><c> far</c><00:05:36.960><c> before</c><00:05:37.280><c> i</c><00:05:37.919><c> dive</c><00:05:38.240><c> in</c>

00:05:44.870 --> 00:05:44.880 align:start position:0%
 
 

00:05:44.880 --> 00:05:49.990 align:start position:0%
 
okay<00:05:45.759><c> let</c><00:05:45.919><c> me</c><00:05:46.240><c> get</c><00:05:46.400><c> started</c><00:05:46.720><c> with</c><00:05:46.880><c> frets</c>

00:05:49.990 --> 00:05:50.000 align:start position:0%
 
 

00:05:50.000 --> 00:05:51.830 align:start position:0%
 
so<00:05:50.240><c> fred</c><00:05:50.560><c> is</c><00:05:50.639><c> basically</c><00:05:51.039><c> short</c><00:05:51.280><c> hands</c><00:05:51.520><c> off</c><00:05:51.759><c> the</c>

00:05:51.830 --> 00:05:51.840 align:start position:0%
so fred is basically short hands off the
 

00:05:51.840 --> 00:05:57.350 align:start position:0%
so fred is basically short hands off the
threat<00:05:52.080><c> of</c><00:05:52.240><c> execution</c>

00:05:57.350 --> 00:05:57.360 align:start position:0%
 
 

00:05:57.360 --> 00:06:00.710 align:start position:0%
 
uh<00:05:58.000><c> in</c><00:05:58.479><c> uh</c><00:05:59.280><c> go</c><00:05:59.759><c> a</c><00:05:59.919><c> friend</c><00:06:00.160><c> is</c><00:06:00.240><c> called</c><00:06:00.479><c> the</c><00:06:00.560><c> go</c>

00:06:00.710 --> 00:06:00.720 align:start position:0%
uh in uh go a friend is called the go
 

00:06:00.720 --> 00:06:01.510 align:start position:0%
uh in uh go a friend is called the go
routine

00:06:01.510 --> 00:06:01.520 align:start position:0%
routine
 

00:06:01.520 --> 00:06:03.510 align:start position:0%
routine
uh<00:06:02.080><c> but</c><00:06:02.319><c> everybody</c><00:06:02.720><c> else</c><00:06:02.960><c> basically</c><00:06:03.360><c> in</c><00:06:03.440><c> the</c>

00:06:03.510 --> 00:06:03.520 align:start position:0%
uh but everybody else basically in the
 

00:06:03.520 --> 00:06:06.070 align:start position:0%
uh but everybody else basically in the
world<00:06:03.840><c> goes</c><00:06:04.240><c> uh</c><00:06:04.400><c> calls</c><00:06:04.720><c> a</c><00:06:04.800><c> threat</c><00:06:05.039><c> of</c><00:06:05.120><c> threat</c>

00:06:06.070 --> 00:06:06.080 align:start position:0%
world goes uh calls a threat of threat
 

00:06:06.080 --> 00:06:07.510 align:start position:0%
world goes uh calls a threat of threat
and<00:06:06.240><c> so</c><00:06:06.400><c> the</c><00:06:06.479><c> way</c><00:06:06.560><c> you</c><00:06:06.800><c> think</c><00:06:06.880><c> about</c><00:06:07.199><c> it</c><00:06:07.360><c> is</c>

00:06:07.510 --> 00:06:07.520 align:start position:0%
and so the way you think about it is
 

00:06:07.520 --> 00:06:09.510 align:start position:0%
and so the way you think about it is
that<00:06:07.759><c> like</c><00:06:07.919><c> when</c><00:06:08.160><c> you</c><00:06:08.720><c> uh</c>

00:06:09.510 --> 00:06:09.520 align:start position:0%
that like when you uh
 

00:06:09.520 --> 00:06:12.390 align:start position:0%
that like when you uh
do<00:06:09.759><c> go</c><00:06:10.000><c> run</c><00:06:10.400><c> now</c><00:06:10.720><c> the</c><00:06:11.360><c> go</c><00:06:11.840><c> will</c><00:06:12.000><c> create</c><00:06:12.240><c> a</c>

00:06:12.390 --> 00:06:12.400 align:start position:0%
do go run now the go will create a
 

00:06:12.400 --> 00:06:12.950 align:start position:0%
do go run now the go will create a
process

00:06:12.950 --> 00:06:12.960 align:start position:0%
process
 

00:06:12.960 --> 00:06:15.670 align:start position:0%
process
you<00:06:13.120><c> know</c><00:06:13.360><c> on</c><00:06:13.600><c> your</c><00:06:13.840><c> operating</c><00:06:14.240><c> system</c><00:06:15.440><c> and</c>

00:06:15.670 --> 00:06:15.680 align:start position:0%
you know on your operating system and
 

00:06:15.680 --> 00:06:17.270 align:start position:0%
you know on your operating system and
inside<00:06:16.160><c> of</c><00:06:16.240><c> that</c><00:06:16.400><c> process</c><00:06:16.800><c> is</c><00:06:16.960><c> you</c><00:06:17.039><c> know</c><00:06:17.199><c> the</c>

00:06:17.270 --> 00:06:17.280 align:start position:0%
inside of that process is you know the
 

00:06:17.280 --> 00:06:19.990 align:start position:0%
inside of that process is you know the
goal<00:06:17.600><c> runtime</c><00:06:18.840><c> system</c>

00:06:19.990 --> 00:06:20.000 align:start position:0%
goal runtime system
 

00:06:20.000 --> 00:06:21.749 align:start position:0%
goal runtime system
when<00:06:20.319><c> go</c><00:06:20.479><c> starts</c><00:06:20.880><c> it</c><00:06:21.039><c> actually</c><00:06:21.360><c> has</c><00:06:21.520><c> one</c>

00:06:21.749 --> 00:06:21.759 align:start position:0%
when go starts it actually has one
 

00:06:21.759 --> 00:06:23.749 align:start position:0%
when go starts it actually has one
thread<00:06:22.000><c> of</c><00:06:22.080><c> execution</c><00:06:22.639><c> in</c><00:06:22.720><c> the</c><00:06:22.800><c> main</c><00:06:23.039><c> fret</c>

00:06:23.749 --> 00:06:23.759 align:start position:0%
thread of execution in the main fret
 

00:06:23.759 --> 00:06:25.830 align:start position:0%
thread of execution in the main fret
and<00:06:24.160><c> but</c><00:06:24.319><c> then</c><00:06:24.479><c> it</c><00:06:24.560><c> has</c><00:06:24.720><c> primitives</c><00:06:25.520><c> to</c><00:06:25.600><c> create</c>

00:06:25.830 --> 00:06:25.840 align:start position:0%
and but then it has primitives to create
 

00:06:25.840 --> 00:06:27.350 align:start position:0%
and but then it has primitives to create
new<00:06:26.080><c> threads</c><00:06:26.479><c> and</c><00:06:26.560><c> so</c><00:06:26.720><c> you</c><00:06:26.800><c> can</c><00:06:26.960><c> think</c><00:06:27.120><c> about</c>

00:06:27.350 --> 00:06:27.360 align:start position:0%
new threads and so you can think about
 

00:06:27.360 --> 00:06:28.710 align:start position:0%
new threads and so you can think about
this<00:06:27.520><c> those</c><00:06:27.759><c> are</c><00:06:27.840><c> many</c><00:06:28.080><c> many</c><00:06:28.319><c> threads</c><00:06:28.560><c> of</c>

00:06:28.710 --> 00:06:28.720 align:start position:0%
this those are many many threads of
 

00:06:28.720 --> 00:06:29.990 align:start position:0%
this those are many many threads of
execution

00:06:29.990 --> 00:06:30.000 align:start position:0%
execution
 

00:06:30.000 --> 00:06:32.629 align:start position:0%
execution
you<00:06:30.160><c> know</c><00:06:30.400><c> running</c><00:06:31.280><c> in</c><00:06:31.440><c> parallel</c><00:06:32.319><c> and</c><00:06:32.479><c> you</c><00:06:32.560><c> can</c>

00:06:32.629 --> 00:06:32.639 align:start position:0%
you know running in parallel and you can
 

00:06:32.639 --> 00:06:34.150 align:start position:0%
you know running in parallel and you can
think<00:06:32.800><c> about</c><00:06:33.039><c> a</c><00:06:33.120><c> single</c><00:06:33.440><c> thread</c><00:06:33.759><c> as</c><00:06:33.840><c> basically</c>

00:06:34.150 --> 00:06:34.160 align:start position:0%
think about a single thread as basically
 

00:06:34.160 --> 00:06:34.870 align:start position:0%
think about a single thread as basically
sort<00:06:34.319><c> of</c><00:06:34.479><c> a</c>

00:06:34.870 --> 00:06:34.880 align:start position:0%
sort of a
 

00:06:34.880 --> 00:06:37.430 align:start position:0%
sort of a
sequential<00:06:35.440><c> program</c><00:06:35.919><c> running</c><00:06:37.120><c> so</c><00:06:37.280><c> the</c>

00:06:37.430 --> 00:06:37.440 align:start position:0%
sequential program running so the
 

00:06:37.440 --> 00:06:38.550 align:start position:0%
sequential program running so the
program<00:06:37.840><c> has</c><00:06:38.000><c> a</c>

00:06:38.550 --> 00:06:38.560 align:start position:0%
program has a
 

00:06:38.560 --> 00:06:42.390 align:start position:0%
program has a
program<00:06:38.960><c> counter</c><00:06:40.160><c> has</c><00:06:40.400><c> its</c><00:06:40.560><c> own</c><00:06:40.800><c> stack</c>

00:06:42.390 --> 00:06:42.400 align:start position:0%
program counter has its own stack
 

00:06:42.400 --> 00:06:47.749 align:start position:0%
program counter has its own stack
it<00:06:42.560><c> has</c><00:06:42.720><c> its</c><00:06:42.880><c> own</c><00:06:43.039><c> set</c><00:06:43.199><c> of</c><00:06:43.360><c> registers</c>

00:06:47.749 --> 00:06:47.759 align:start position:0%
 
 

00:06:47.759 --> 00:06:49.270 align:start position:0%
 
and<00:06:47.919><c> so</c><00:06:48.080><c> this</c><00:06:48.319><c> behaves</c><00:06:48.639><c> like</c><00:06:48.800><c> a</c><00:06:48.880><c> sequential</c>

00:06:49.270 --> 00:06:49.280 align:start position:0%
and so this behaves like a sequential
 

00:06:49.280 --> 00:06:51.270 align:start position:0%
and so this behaves like a sequential
program<00:06:49.680><c> like</c><00:06:50.240><c> you</c><00:06:50.319><c> can</c>

00:06:51.270 --> 00:06:51.280 align:start position:0%
program like you can
 

00:06:51.280 --> 00:06:53.029 align:start position:0%
program like you can
execute<00:06:51.680><c> structure</c><00:06:52.080><c> one</c><00:06:52.319><c> then</c><00:06:52.479><c> extrusion</c><00:06:52.880><c> two</c>

00:06:53.029 --> 00:06:53.039 align:start position:0%
execute structure one then extrusion two
 

00:06:53.039 --> 00:06:54.550 align:start position:0%
execute structure one then extrusion two
then<00:06:53.360><c> structure</c><00:06:53.680><c> three</c><00:06:53.919><c> and</c><00:06:54.160><c> four</c><00:06:54.479><c> you're</c>

00:06:54.550 --> 00:06:54.560 align:start position:0%
then structure three and four you're
 

00:06:54.560 --> 00:06:54.870 align:start position:0%
then structure three and four you're
gonna

00:06:54.870 --> 00:06:54.880 align:start position:0%
gonna
 

00:06:54.880 --> 00:06:56.790 align:start position:0%
gonna
make<00:06:55.120><c> a</c><00:06:55.199><c> procedure</c><00:06:55.680><c> call</c><00:06:55.919><c> allocate</c><00:06:56.319><c> memory</c><00:06:56.720><c> on</c>

00:06:56.790 --> 00:06:56.800 align:start position:0%
make a procedure call allocate memory on
 

00:06:56.800 --> 00:06:57.990 align:start position:0%
make a procedure call allocate memory on
the<00:06:56.880><c> stack</c><00:06:57.360><c> i</c><00:06:57.440><c> don't</c><00:06:57.520><c> know</c>

00:06:57.990 --> 00:06:58.000 align:start position:0%
the stack i don't know
 

00:06:58.000 --> 00:06:59.990 align:start position:0%
the stack i don't know
return<00:06:58.479><c> from</c><00:06:58.800><c> a</c><00:06:58.880><c> procedure</c><00:06:59.360><c> call</c><00:06:59.759><c> do</c><00:06:59.919><c> a</c>

00:06:59.990 --> 00:07:00.000 align:start position:0%
return from a procedure call do a
 

00:07:00.000 --> 00:07:01.029 align:start position:0%
return from a procedure call do a
recursive<00:07:00.560><c> call</c>

00:07:01.029 --> 00:07:01.039 align:start position:0%
recursive call
 

00:07:01.039 --> 00:07:02.469 align:start position:0%
recursive call
all<00:07:01.199><c> sorts</c><00:07:01.520><c> of</c><00:07:01.680><c> standards</c><00:07:02.080><c> if</c><00:07:02.160><c> you</c><00:07:02.240><c> want</c><00:07:02.319><c> to</c>

00:07:02.469 --> 00:07:02.479 align:start position:0%
all sorts of standards if you want to
 

00:07:02.479 --> 00:07:03.830 align:start position:0%
all sorts of standards if you want to
tell<00:07:02.639><c> your</c><00:07:02.880><c> programming</c><00:07:03.280><c> it's</c><00:07:03.440><c> just</c><00:07:03.599><c> like</c>

00:07:03.830 --> 00:07:03.840 align:start position:0%
tell your programming it's just like
 

00:07:03.840 --> 00:07:05.749 align:start position:0%
tell your programming it's just like
happens<00:07:04.160><c> about</c><00:07:04.400><c> a</c><00:07:04.560><c> as</c><00:07:04.800><c> a</c><00:07:04.880><c> sequential</c><00:07:05.440><c> thread</c>

00:07:05.749 --> 00:07:05.759 align:start position:0%
happens about a as a sequential thread
 

00:07:05.759 --> 00:07:07.909 align:start position:0%
happens about a as a sequential thread
basically

00:07:07.909 --> 00:07:07.919 align:start position:0%
basically
 

00:07:07.919 --> 00:07:10.070 align:start position:0%
basically
um<00:07:08.800><c> the</c><00:07:09.120><c> interesting</c><00:07:09.440><c> thing</c><00:07:09.680><c> is</c><00:07:09.840><c> that</c><00:07:10.000><c> you</c>

00:07:10.070 --> 00:07:10.080 align:start position:0%
um the interesting thing is that you
 

00:07:10.080 --> 00:07:11.749 align:start position:0%
um the interesting thing is that you
know<00:07:10.240><c> the</c><00:07:10.479><c> threads</c><00:07:10.800><c> may</c><00:07:11.039><c> actually</c><00:07:11.440><c> share</c>

00:07:11.749 --> 00:07:11.759 align:start position:0%
know the threads may actually share
 

00:07:11.759 --> 00:07:12.710 align:start position:0%
know the threads may actually share
memory

00:07:12.710 --> 00:07:12.720 align:start position:0%
memory
 

00:07:12.720 --> 00:07:16.070 align:start position:0%
memory
uh<00:07:12.880><c> with</c><00:07:13.120><c> other</c><00:07:14.840><c> threads</c>

00:07:16.070 --> 00:07:16.080 align:start position:0%
uh with other threads
 

00:07:16.080 --> 00:07:18.950 align:start position:0%
uh with other threads
since<00:07:17.039><c> uh</c><00:07:18.000><c> all</c><00:07:18.160><c> the</c><00:07:18.319><c> threads</c><00:07:18.560><c> are</c><00:07:18.639><c> running</c><00:07:18.880><c> in</c>

00:07:18.950 --> 00:07:18.960 align:start position:0%
since uh all the threads are running in
 

00:07:18.960 --> 00:07:20.230 align:start position:0%
since uh all the threads are running in
the<00:07:19.039><c> same</c><00:07:19.280><c> address</c><00:07:19.680><c> space</c>

00:07:20.230 --> 00:07:20.240 align:start position:0%
the same address space
 

00:07:20.240 --> 00:07:22.070 align:start position:0%
the same address space
uh<00:07:20.720><c> the</c><00:07:20.800><c> same</c><00:07:21.120><c> operating</c><00:07:21.440><c> system</c><00:07:21.759><c> address</c>

00:07:22.070 --> 00:07:22.080 align:start position:0%
uh the same operating system address
 

00:07:22.080 --> 00:07:24.710 align:start position:0%
uh the same operating system address
space<00:07:22.639><c> or</c><00:07:22.960><c> the</c><00:07:23.120><c> same</c><00:07:23.280><c> process</c><00:07:23.680><c> address</c><00:07:24.080><c> space</c>

00:07:24.710 --> 00:07:24.720 align:start position:0%
space or the same process address space
 

00:07:24.720 --> 00:07:27.589 align:start position:0%
space or the same process address space
uh<00:07:25.039><c> they</c><00:07:25.280><c> can</c><00:07:25.440><c> actually</c><00:07:25.680><c> share</c><00:07:26.160><c> uh</c><00:07:27.039><c> memory</c><00:07:27.360><c> so</c>

00:07:27.589 --> 00:07:27.599 align:start position:0%
uh they can actually share uh memory so
 

00:07:27.599 --> 00:07:29.350 align:start position:0%
uh they can actually share uh memory so
one<00:07:27.759><c> thread</c><00:07:28.080><c> can</c><00:07:28.240><c> write</c>

00:07:29.350 --> 00:07:29.360 align:start position:0%
one thread can write
 

00:07:29.360 --> 00:07:31.670 align:start position:0%
one thread can write
to<00:07:29.599><c> location</c><00:07:30.080><c> say</c><00:07:30.400><c> you</c><00:07:30.560><c> know</c><00:07:30.720><c> 10</c><00:07:31.360><c> and</c><00:07:31.520><c> then</c>

00:07:31.670 --> 00:07:31.680 align:start position:0%
to location say you know 10 and then
 

00:07:31.680 --> 00:07:32.950 align:start position:0%
to location say you know 10 and then
another<00:07:32.000><c> thread</c><00:07:32.240><c> can</c><00:07:32.400><c> actually</c><00:07:32.560><c> read</c><00:07:32.800><c> that</c>

00:07:32.950 --> 00:07:32.960 align:start position:0%
another thread can actually read that
 

00:07:32.960 --> 00:07:33.749 align:start position:0%
another thread can actually read that
location<00:07:33.440><c> 10.</c>

00:07:33.749 --> 00:07:33.759 align:start position:0%
location 10.
 

00:07:33.759 --> 00:07:35.110 align:start position:0%
location 10.
and<00:07:33.840><c> so</c><00:07:34.080><c> that</c><00:07:34.240><c> way</c><00:07:34.400><c> they</c><00:07:34.560><c> can</c><00:07:34.800><c> actually</c>

00:07:35.110 --> 00:07:35.120 align:start position:0%
and so that way they can actually
 

00:07:35.120 --> 00:07:38.870 align:start position:0%
and so that way they can actually
communicate<00:07:35.840><c> information</c>

00:07:38.870 --> 00:07:38.880 align:start position:0%
 
 

00:07:38.880 --> 00:07:41.830 align:start position:0%
 
one<00:07:39.120><c> way</c><00:07:39.440><c> to</c><00:07:39.520><c> think</c><00:07:39.759><c> about</c><00:07:40.160><c> a</c><00:07:40.400><c> fret</c><00:07:40.960><c> 2</c><00:07:41.280><c> is</c><00:07:41.360><c> to</c>

00:07:41.830 --> 00:07:41.840 align:start position:0%
one way to think about a fret 2 is to
 

00:07:41.840 --> 00:07:43.029 align:start position:0%
one way to think about a fret 2 is to
think<00:07:42.000><c> about</c><00:07:42.240><c> it</c><00:07:42.400><c> as</c><00:07:42.560><c> a</c><00:07:42.639><c> sort</c><00:07:42.800><c> of</c><00:07:42.880><c> an</c>

00:07:43.029 --> 00:07:43.039 align:start position:0%
think about it as a sort of an
 

00:07:43.039 --> 00:07:45.189 align:start position:0%
think about it as a sort of an
abstraction<00:07:43.599><c> that</c><00:07:43.840><c> you</c><00:07:43.919><c> know</c><00:07:44.160><c> supported</c><00:07:44.720><c> by</c>

00:07:45.189 --> 00:07:45.199 align:start position:0%
abstraction that you know supported by
 

00:07:45.199 --> 00:07:47.189 align:start position:0%
abstraction that you know supported by
the<00:07:45.840><c> run</c><00:07:46.080><c> time</c><00:07:46.400><c> and</c><00:07:46.479><c> the</c><00:07:46.560><c> runtime</c><00:07:46.960><c> has</c><00:07:47.120><c> a</c>

00:07:47.189 --> 00:07:47.199 align:start position:0%
the run time and the runtime has a
 

00:07:47.199 --> 00:07:49.430 align:start position:0%
the run time and the runtime has a
number<00:07:47.440><c> of</c><00:07:47.599><c> operations</c><00:07:48.240><c> on</c><00:07:48.479><c> a</c><00:07:48.560><c> threat</c><00:07:48.879><c> so</c><00:07:49.120><c> one</c>

00:07:49.430 --> 00:07:49.440 align:start position:0%
number of operations on a threat so one
 

00:07:49.440 --> 00:07:50.390 align:start position:0%
number of operations on a threat so one
operation

00:07:50.390 --> 00:07:50.400 align:start position:0%
operation
 

00:07:50.400 --> 00:07:52.550 align:start position:0%
operation
uh<00:07:50.960><c> you</c><00:07:51.120><c> know</c><00:07:51.280><c> what</c><00:07:51.440><c> i've</c><00:07:51.599><c> seen</c><00:07:51.840><c> many</c><00:07:52.000><c> times</c><00:07:52.479><c> if</c>

00:07:52.550 --> 00:07:52.560 align:start position:0%
uh you know what i've seen many times if
 

00:07:52.560 --> 00:07:53.749 align:start position:0%
uh you know what i've seen many times if
you've<00:07:52.720><c> seen</c><00:07:52.879><c> that</c><00:07:53.039><c> many</c><00:07:53.280><c> times</c><00:07:53.520><c> is</c><00:07:53.599><c> to</c>

00:07:53.749 --> 00:07:53.759 align:start position:0%
you've seen that many times is to
 

00:07:53.759 --> 00:07:55.029 align:start position:0%
you've seen that many times is to
actually<00:07:54.000><c> start</c><00:07:54.160><c> a</c><00:07:54.240><c> fraction</c><00:07:54.560><c> of</c><00:07:54.639><c> a</c><00:07:54.720><c> creative</c>

00:07:55.029 --> 00:07:55.039 align:start position:0%
actually start a fraction of a creative
 

00:07:55.039 --> 00:07:56.950 align:start position:0%
actually start a fraction of a creative
threat<00:07:55.360><c> you</c><00:07:55.440><c> know</c><00:07:55.680><c> this</c><00:07:55.840><c> is</c><00:07:55.919><c> the</c><00:07:56.080><c> goal</c>

00:07:56.950 --> 00:07:56.960 align:start position:0%
threat you know this is the goal
 

00:07:56.960 --> 00:08:00.469 align:start position:0%
threat you know this is the goal
uh<00:07:57.199><c> synthetic</c><00:07:57.680><c> you</c><00:07:57.759><c> know</c><00:07:57.919><c> the</c><00:07:58.000><c> go</c><00:07:58.400><c> uh</c><00:07:59.280><c> keyword</c>

00:08:00.469 --> 00:08:00.479 align:start position:0%
uh synthetic you know the go uh keyword
 

00:08:00.479 --> 00:08:04.150 align:start position:0%
uh synthetic you know the go uh keyword
uh<00:08:00.800><c> a</c><00:08:00.879><c> thread</c><00:08:01.120><c> can</c><00:08:01.360><c> exit</c><00:08:03.039><c> and</c><00:08:03.360><c> generally</c><00:08:03.680><c> this</c>

00:08:04.150 --> 00:08:04.160 align:start position:0%
uh a thread can exit and generally this
 

00:08:04.160 --> 00:08:05.510 align:start position:0%
uh a thread can exit and generally this
means<00:08:04.639><c> the</c><00:08:04.720><c> axis</c><00:08:04.960><c> is</c><00:08:05.039><c> actually</c><00:08:05.280><c> sort</c><00:08:05.440><c> of</c>

00:08:05.510 --> 00:08:05.520 align:start position:0%
means the axis is actually sort of
 

00:08:05.520 --> 00:08:07.510 align:start position:0%
means the axis is actually sort of
implicit<00:08:06.000><c> like</c><00:08:06.160><c> when</c><00:08:06.319><c> the</c><00:08:06.400><c> threat</c><00:08:06.720><c> returns</c>

00:08:07.510 --> 00:08:07.520 align:start position:0%
implicit like when the threat returns
 

00:08:07.520 --> 00:08:11.110 align:start position:0%
implicit like when the threat returns
uh<00:08:08.319><c> uh</c><00:08:08.560><c> from</c><00:08:08.879><c> its</c>

00:08:11.110 --> 00:08:11.120 align:start position:0%
 
 

00:08:11.120 --> 00:08:13.670 align:start position:0%
 
if<00:08:11.440><c> uh</c><00:08:11.919><c> you</c><00:08:12.080><c> create</c><00:08:12.319><c> a</c><00:08:12.479><c> function</c><00:08:12.800><c> using</c><00:08:13.120><c> go</c><00:08:13.440><c> uh</c>

00:08:13.670 --> 00:08:13.680 align:start position:0%
if uh you create a function using go uh
 

00:08:13.680 --> 00:08:14.230 align:start position:0%
if uh you create a function using go uh
the<00:08:13.840><c> go</c>

00:08:14.230 --> 00:08:14.240 align:start position:0%
the go
 

00:08:14.240 --> 00:08:16.070 align:start position:0%
the go
uh<00:08:14.479><c> keyword</c><00:08:14.960><c> and</c><00:08:15.280><c> you</c><00:08:15.360><c> know</c><00:08:15.520><c> you</c><00:08:15.680><c> return</c><00:08:16.000><c> out</c>

00:08:16.070 --> 00:08:16.080 align:start position:0%
uh keyword and you know you return out
 

00:08:16.080 --> 00:08:17.909 align:start position:0%
uh keyword and you know you return out
of<00:08:16.160><c> the</c><00:08:16.319><c> function</c><00:08:16.720><c> then</c><00:08:17.120><c> implicitly</c><00:08:17.680><c> the</c>

00:08:17.909 --> 00:08:17.919 align:start position:0%
of the function then implicitly the
 

00:08:17.919 --> 00:08:19.589 align:start position:0%
of the function then implicitly the
thread<00:08:18.240><c> actually</c><00:08:18.560><c> exits</c>

00:08:19.589 --> 00:08:19.599 align:start position:0%
thread actually exits
 

00:08:19.599 --> 00:08:21.670 align:start position:0%
thread actually exits
um<00:08:20.160><c> the</c><00:08:20.319><c> go</c><00:08:20.479><c> runtime</c><00:08:20.879><c> also</c><00:08:21.120><c> has</c><00:08:21.280><c> a</c><00:08:21.360><c> couple</c>

00:08:21.670 --> 00:08:21.680 align:start position:0%
um the go runtime also has a couple
 

00:08:21.680 --> 00:08:23.430 align:start position:0%
um the go runtime also has a couple
other<00:08:22.160><c> uh</c><00:08:22.479><c> sort</c><00:08:22.639><c> of</c><00:08:22.800><c> under</c><00:08:22.960><c> the</c><00:08:23.120><c> hoods</c>

00:08:23.430 --> 00:08:23.440 align:start position:0%
other uh sort of under the hoods
 

00:08:23.440 --> 00:08:25.029 align:start position:0%
other uh sort of under the hoods
operations<00:08:24.080><c> if</c><00:08:24.240><c> you</c><00:08:24.319><c> will</c>

00:08:25.029 --> 00:08:25.039 align:start position:0%
operations if you will
 

00:08:25.039 --> 00:08:27.589 align:start position:0%
operations if you will
one<00:08:25.360><c> it</c><00:08:25.440><c> can</c><00:08:25.599><c> actually</c><00:08:25.840><c> stop</c><00:08:26.160><c> a</c><00:08:26.319><c> threat</c><00:08:27.520><c> for</c>

00:08:27.589 --> 00:08:27.599 align:start position:0%
one it can actually stop a threat for
 

00:08:27.599 --> 00:08:29.350 align:start position:0%
one it can actually stop a threat for
example<00:08:28.000><c> if</c><00:08:28.240><c> a</c><00:08:28.319><c> threat</c><00:08:28.560><c> writes</c><00:08:28.879><c> to</c>

00:08:29.350 --> 00:08:29.360 align:start position:0%
example if a threat writes to
 

00:08:29.360 --> 00:08:31.990 align:start position:0%
example if a threat writes to
a<00:08:29.919><c> channel</c><00:08:30.560><c> and</c><00:08:31.039><c> there's</c><00:08:31.280><c> no</c><00:08:31.440><c> reader</c><00:08:31.840><c> on</c><00:08:31.919><c> the</c>

00:08:31.990 --> 00:08:32.000 align:start position:0%
a channel and there's no reader on the
 

00:08:32.000 --> 00:08:33.110 align:start position:0%
a channel and there's no reader on the
channel<00:08:32.320><c> yet</c><00:08:32.640><c> then</c>

00:08:33.110 --> 00:08:33.120 align:start position:0%
channel yet then
 

00:08:33.120 --> 00:08:35.430 align:start position:0%
channel yet then
the<00:08:33.279><c> threat</c><00:08:33.519><c> might</c><00:08:33.919><c> get</c><00:08:34.159><c> blocked</c><00:08:34.959><c> and</c><00:08:35.200><c> so</c><00:08:35.360><c> the</c>

00:08:35.430 --> 00:08:35.440 align:start position:0%
the threat might get blocked and so the
 

00:08:35.440 --> 00:08:37.269 align:start position:0%
the threat might get blocked and so the
go<00:08:35.680><c> runtime</c><00:08:36.080><c> sort</c><00:08:36.240><c> of</c><00:08:36.320><c> stops</c><00:08:36.640><c> the</c><00:08:36.800><c> threat</c><00:08:37.200><c> you</c>

00:08:37.269 --> 00:08:37.279 align:start position:0%
go runtime sort of stops the threat you
 

00:08:37.279 --> 00:08:38.949 align:start position:0%
go runtime sort of stops the threat you
know<00:08:37.440><c> puts</c><00:08:37.680><c> it</c><00:08:37.839><c> aside</c>

00:08:38.949 --> 00:08:38.959 align:start position:0%
know puts it aside
 

00:08:38.959 --> 00:08:40.149 align:start position:0%
know puts it aside
so<00:08:39.120><c> that</c><00:08:39.200><c> it</c><00:08:39.279><c> can</c><00:08:39.440><c> actually</c><00:08:39.680><c> run</c><00:08:39.839><c> another</c>

00:08:40.149 --> 00:08:40.159 align:start position:0%
so that it can actually run another
 

00:08:40.159 --> 00:08:42.310 align:start position:0%
so that it can actually run another
thread<00:08:40.399><c> on</c><00:08:40.479><c> that</c><00:08:40.959><c> on</c><00:08:41.120><c> the</c><00:08:41.279><c> processor</c>

00:08:42.310 --> 00:08:42.320 align:start position:0%
thread on that on the processor
 

00:08:42.320 --> 00:08:44.790 align:start position:0%
thread on that on the processor
uh<00:08:42.719><c> and</c><00:08:42.959><c> then</c><00:08:43.120><c> maybe</c><00:08:43.440><c> later</c><00:08:43.760><c> on</c><00:08:44.159><c> resumes</c><00:08:44.640><c> that</c>

00:08:44.790 --> 00:08:44.800 align:start position:0%
uh and then maybe later on resumes that
 

00:08:44.800 --> 00:08:45.590 align:start position:0%
uh and then maybe later on resumes that
thread<00:08:45.120><c> so</c>

00:08:45.590 --> 00:08:45.600 align:start position:0%
thread so
 

00:08:45.600 --> 00:08:47.829 align:start position:0%
thread so
there's<00:08:45.839><c> a</c><00:08:46.399><c> third</c><00:08:46.800><c> you</c><00:08:46.880><c> know</c><00:08:47.120><c> final</c><00:08:47.360><c> primitive</c>

00:08:47.829 --> 00:08:47.839 align:start position:0%
there's a third you know final primitive
 

00:08:47.839 --> 00:08:49.910 align:start position:0%
there's a third you know final primitive
that<00:08:48.080><c> actually</c><00:08:48.320><c> is</c><00:08:48.399><c> resumed</c><00:08:48.880><c> for</c><00:08:49.040><c> this</c>

00:08:49.910 --> 00:08:49.920 align:start position:0%
that actually is resumed for this
 

00:08:49.920 --> 00:08:51.509 align:start position:0%
that actually is resumed for this
and<00:08:50.160><c> really</c><00:08:50.320><c> what</c><00:08:50.480><c> it</c><00:08:50.560><c> means</c><00:08:50.800><c> to</c><00:08:50.880><c> stop</c><00:08:51.040><c> resume</c>

00:08:51.509 --> 00:08:51.519 align:start position:0%
and really what it means to stop resume
 

00:08:51.519 --> 00:08:52.949 align:start position:0%
and really what it means to stop resume
thread<00:08:51.760><c> is</c><00:08:51.839><c> basically</c><00:08:52.240><c> taking</c><00:08:52.480><c> the</c><00:08:52.640><c> state</c><00:08:52.880><c> of</c>

00:08:52.949 --> 00:08:52.959 align:start position:0%
thread is basically taking the state of
 

00:08:52.959 --> 00:08:54.870 align:start position:0%
thread is basically taking the state of
the<00:08:53.040><c> thread</c><00:08:53.360><c> like</c><00:08:53.519><c> the</c><00:08:53.680><c> program</c><00:08:54.080><c> counter</c>

00:08:54.870 --> 00:08:54.880 align:start position:0%
the thread like the program counter
 

00:08:54.880 --> 00:08:56.790 align:start position:0%
the thread like the program counter
the<00:08:55.040><c> stack</c><00:08:55.360><c> pointer</c><00:08:56.080><c> in</c><00:08:56.160><c> the</c><00:08:56.240><c> registration</c>

00:08:56.790 --> 00:08:56.800 align:start position:0%
the stack pointer in the registration
 

00:08:56.800 --> 00:08:58.470 align:start position:0%
the stack pointer in the registration
put<00:08:56.959><c> it</c><00:08:57.120><c> inside</c>

00:08:58.470 --> 00:08:58.480 align:start position:0%
put it inside
 

00:08:58.480 --> 00:08:59.990 align:start position:0%
put it inside
run<00:08:58.720><c> another</c><00:08:59.200><c> you</c><00:08:59.360><c> know</c><00:08:59.519><c> thread</c><00:08:59.839><c> on</c><00:08:59.920><c> the</c>

00:08:59.990 --> 00:09:00.000 align:start position:0%
run another you know thread on the
 

00:09:00.000 --> 00:09:01.910 align:start position:0%
run another you know thread on the
processor<00:09:00.880><c> and</c><00:09:00.959><c> then</c><00:09:01.200><c> at</c><00:09:01.279><c> some</c><00:09:01.519><c> point</c><00:09:01.839><c> you</c>

00:09:01.910 --> 00:09:01.920 align:start position:0%
processor and then at some point you
 

00:09:01.920 --> 00:09:03.430 align:start position:0%
processor and then at some point you
know<00:09:02.080><c> decided</c><00:09:02.480><c> to</c><00:09:02.560><c> resume</c><00:09:02.880><c> the</c><00:09:03.040><c> processor</c>

00:09:03.430 --> 00:09:03.440 align:start position:0%
know decided to resume the processor
 

00:09:03.440 --> 00:09:04.710 align:start position:0%
know decided to resume the processor
which<00:09:03.600><c> means</c><00:09:03.839><c> basically</c><00:09:04.320><c> loading</c><00:09:04.640><c> the</c>

00:09:04.710 --> 00:09:04.720 align:start position:0%
which means basically loading the
 

00:09:04.720 --> 00:09:06.310 align:start position:0%
which means basically loading the
program<00:09:05.040><c> count</c><00:09:05.279><c> at</c><00:09:05.440><c> the</c><00:09:05.519><c> stack</c><00:09:05.839><c> pointer</c><00:09:06.240><c> and</c>

00:09:06.310 --> 00:09:06.320 align:start position:0%
program count at the stack pointer and
 

00:09:06.320 --> 00:09:07.990 align:start position:0%
program count at the stack pointer and
the<00:09:06.399><c> registers</c><00:09:06.880><c> back</c><00:09:07.120><c> into</c><00:09:07.279><c> the</c><00:09:07.440><c> process</c><00:09:07.839><c> so</c>

00:09:07.990 --> 00:09:08.000 align:start position:0%
the registers back into the process so
 

00:09:08.000 --> 00:09:08.389 align:start position:0%
the registers back into the process so
that

00:09:08.389 --> 00:09:08.399 align:start position:0%
that
 

00:09:08.399 --> 00:09:11.030 align:start position:0%
that
we<00:09:08.560><c> started</c><00:09:08.800><c> running</c><00:09:10.240><c> so</c><00:09:10.399><c> that's</c><00:09:10.560><c> sort</c><00:09:10.720><c> of</c><00:09:10.880><c> a</c>

00:09:11.030 --> 00:09:11.040 align:start position:0%
we started running so that's sort of a
 

00:09:11.040 --> 00:09:12.790 align:start position:0%
we started running so that's sort of a
very<00:09:11.279><c> mechanical</c><00:09:11.839><c> view</c>

00:09:12.790 --> 00:09:12.800 align:start position:0%
very mechanical view
 

00:09:12.800 --> 00:09:19.030 align:start position:0%
very mechanical view
of<00:09:13.680><c> what</c><00:09:13.839><c> a</c><00:09:13.920><c> thread</c><00:09:14.240><c> is</c>

00:09:19.030 --> 00:09:19.040 align:start position:0%
 
 

00:09:19.040 --> 00:09:21.110 align:start position:0%
 
so<00:09:19.279><c> why</c><00:09:19.600><c> you</c><00:09:19.839><c> have</c><00:09:20.080><c> threads</c><00:09:20.640><c> in</c><00:09:20.800><c> the</c><00:09:20.880><c> first</c>

00:09:21.110 --> 00:09:21.120 align:start position:0%
so why you have threads in the first
 

00:09:21.120 --> 00:09:22.870 align:start position:0%
so why you have threads in the first
place<00:09:21.600><c> that</c><00:09:21.680><c> seems</c><00:09:22.000><c> like</c><00:09:22.160><c> an</c><00:09:22.320><c> important</c><00:09:22.640><c> point</c>

00:09:22.870 --> 00:09:22.880 align:start position:0%
place that seems like an important point
 

00:09:22.880 --> 00:09:23.509 align:start position:0%
place that seems like an important point
to

00:09:23.509 --> 00:09:23.519 align:start position:0%
to
 

00:09:23.519 --> 00:09:27.990 align:start position:0%
to
discuss

00:09:27.990 --> 00:09:28.000 align:start position:0%
 
 

00:09:28.000 --> 00:09:29.430 align:start position:0%
 
because<00:09:28.240><c> in</c><00:09:28.399><c> some</c><00:09:28.560><c> ways</c><00:09:28.880><c> the</c><00:09:29.040><c> only</c><00:09:29.200><c> thing</c><00:09:29.360><c> the</c>

00:09:29.430 --> 00:09:29.440 align:start position:0%
because in some ways the only thing the
 

00:09:29.440 --> 00:09:31.350 align:start position:0%
because in some ways the only thing the
threads<00:09:29.680><c> do</c><00:09:30.560><c> is</c><00:09:30.640><c> make</c><00:09:30.880><c> your</c><00:09:30.959><c> life</c><00:09:31.200><c> more</c>

00:09:31.350 --> 00:09:31.360 align:start position:0%
threads do is make your life more
 

00:09:31.360 --> 00:09:33.829 align:start position:0%
threads do is make your life more
complicated<00:09:31.920><c> as</c><00:09:32.000><c> a</c><00:09:32.080><c> programmer</c>

00:09:33.829 --> 00:09:33.839 align:start position:0%
complicated as a programmer
 

00:09:33.839 --> 00:09:35.350 align:start position:0%
complicated as a programmer
like<00:09:34.080><c> writing</c><00:09:34.320><c> sequential</c><00:09:34.720><c> code</c><00:09:35.040><c> is</c><00:09:35.120><c> actually</c>

00:09:35.350 --> 00:09:35.360 align:start position:0%
like writing sequential code is actually
 

00:09:35.360 --> 00:09:37.509 align:start position:0%
like writing sequential code is actually
just<00:09:35.600><c> easier</c><00:09:35.920><c> than</c><00:09:36.080><c> writing</c><00:09:36.320><c> parallel</c><00:09:36.720><c> code</c>

00:09:37.509 --> 00:09:37.519 align:start position:0%
just easier than writing parallel code
 

00:09:37.519 --> 00:09:39.509 align:start position:0%
just easier than writing parallel code
and<00:09:37.680><c> the</c><00:09:37.760><c> main</c><00:09:38.000><c> reason</c><00:09:38.240><c> to</c><00:09:38.399><c> have</c><00:09:38.640><c> it</c><00:09:39.279><c> and</c><00:09:39.440><c> the</c>

00:09:39.509 --> 00:09:39.519 align:start position:0%
and the main reason to have it and the
 

00:09:39.519 --> 00:09:42.470 align:start position:0%
and the main reason to have it and the
main<00:09:39.760><c> reason</c><00:09:40.000><c> we</c><00:09:40.080><c> care</c><00:09:40.320><c> a</c><00:09:40.320><c> lot</c><00:09:40.480><c> about</c><00:09:40.800><c> it</c><00:09:40.959><c> in</c>

00:09:42.470 --> 00:09:42.480 align:start position:0%
main reason we care a lot about it in
 

00:09:42.480 --> 00:09:49.750 align:start position:0%
main reason we care a lot about it in
684<00:09:43.200><c> is</c><00:09:43.360><c> to</c><00:09:43.600><c> express</c><00:09:44.880><c> a</c><00:09:44.959><c> concurrency</c>

00:09:49.750 --> 00:09:49.760 align:start position:0%
 
 

00:09:49.760 --> 00:09:51.509 align:start position:0%
 
and<00:09:49.920><c> sort</c><00:09:50.080><c> of</c><00:09:50.240><c> three</c><00:09:50.720><c> different</c><00:09:51.279><c> you</c><00:09:51.360><c> know</c>

00:09:51.509 --> 00:09:51.519 align:start position:0%
and sort of three different you know
 

00:09:51.519 --> 00:09:52.870 align:start position:0%
and sort of three different you know
sort<00:09:51.600><c> of</c><00:09:51.760><c> two</c><00:09:52.080><c> or</c><00:09:52.240><c> two</c><00:09:52.399><c> or</c><00:09:52.480><c> three</c><00:09:52.720><c> different</c>

00:09:52.870 --> 00:09:52.880 align:start position:0%
sort of two or two or three different
 

00:09:52.880 --> 00:09:53.350 align:start position:0%
sort of two or two or three different
types<00:09:53.120><c> of</c>

00:09:53.350 --> 00:09:53.360 align:start position:0%
types of
 

00:09:53.360 --> 00:09:54.870 align:start position:0%
types of
currency<00:09:53.680><c> that</c><00:09:53.839><c> we</c><00:09:53.920><c> actually</c><00:09:54.160><c> care</c><00:09:54.320><c> about</c><00:09:54.560><c> so</c>

00:09:54.870 --> 00:09:54.880 align:start position:0%
currency that we actually care about so
 

00:09:54.880 --> 00:09:56.550 align:start position:0%
currency that we actually care about so
you<00:09:54.959><c> know</c><00:09:55.120><c> think</c><00:09:55.279><c> about</c><00:09:55.600><c> our</c><00:09:56.160><c> you</c><00:09:56.320><c> know</c>

00:09:56.550 --> 00:09:56.560 align:start position:0%
you know think about our you know
 

00:09:56.560 --> 00:09:58.550 align:start position:0%
you know think about our you know
process<00:09:57.040><c> we've</c><00:09:57.200><c> got</c><00:09:57.360><c> our</c><00:09:57.519><c> run</c><00:09:57.760><c> time</c>

00:09:58.550 --> 00:09:58.560 align:start position:0%
process we've got our run time
 

00:09:58.560 --> 00:10:01.670 align:start position:0%
process we've got our run time
with<00:09:58.880><c> our</c><00:09:59.040><c> threads</c><00:09:59.360><c> running</c><00:10:00.480><c> uh</c><00:10:00.959><c> you</c><00:10:01.040><c> know</c><00:10:01.279><c> one</c>

00:10:01.670 --> 00:10:01.680 align:start position:0%
with our threads running uh you know one
 

00:10:01.680 --> 00:10:03.030 align:start position:0%
with our threads running uh you know one
type<00:10:01.839><c> of</c><00:10:02.000><c> concurrency</c><00:10:02.399><c> that</c><00:10:02.560><c> we</c><00:10:02.640><c> care</c><00:10:02.800><c> a</c><00:10:02.880><c> lot</c>

00:10:03.030 --> 00:10:03.040 align:start position:0%
type of concurrency that we care a lot
 

00:10:03.040 --> 00:10:08.630 align:start position:0%
type of concurrency that we care a lot
about<00:10:03.360><c> is</c><00:10:03.519><c> io</c><00:10:03.760><c> concurrency</c>

00:10:08.630 --> 00:10:08.640 align:start position:0%
 
 

00:10:08.640 --> 00:10:10.389 align:start position:0%
 
so<00:10:08.959><c> one</c><00:10:09.120><c> of</c><00:10:09.200><c> these</c><00:10:09.360><c> threads</c><00:10:09.839><c> you</c><00:10:10.000><c> know</c><00:10:10.079><c> that</c><00:10:10.240><c> is</c>

00:10:10.389 --> 00:10:10.399 align:start position:0%
so one of these threads you know that is
 

00:10:10.399 --> 00:10:12.230 align:start position:0%
so one of these threads you know that is
running<00:10:10.720><c> here</c><00:10:11.200><c> it</c><00:10:11.440><c> might</c><00:10:11.680><c> actually</c><00:10:12.000><c> make</c><00:10:12.160><c> a</c>

00:10:12.230 --> 00:10:12.240 align:start position:0%
running here it might actually make a
 

00:10:12.240 --> 00:10:12.949 align:start position:0%
running here it might actually make a
network<00:10:12.560><c> call</c>

00:10:12.949 --> 00:10:12.959 align:start position:0%
network call
 

00:10:12.959 --> 00:10:15.110 align:start position:0%
network call
you<00:10:13.120><c> know</c><00:10:13.279><c> connect</c><00:10:13.600><c> to</c><00:10:14.240><c> another</c><00:10:14.560><c> machine</c><00:10:15.040><c> on</c>

00:10:15.110 --> 00:10:15.120 align:start position:0%
you know connect to another machine on
 

00:10:15.120 --> 00:10:16.069 align:start position:0%
you know connect to another machine on
the<00:10:15.200><c> network</c>

00:10:16.069 --> 00:10:16.079 align:start position:0%
the network
 

00:10:16.079 --> 00:10:17.590 align:start position:0%
the network
uh<00:10:16.399><c> you</c><00:10:16.560><c> know</c><00:10:16.640><c> to</c><00:10:16.800><c> implement</c><00:10:17.120><c> a</c><00:10:17.200><c> distributed</c>

00:10:17.590 --> 00:10:17.600 align:start position:0%
uh you know to implement a distributed
 

00:10:17.600 --> 00:10:20.069 align:start position:0%
uh you know to implement a distributed
application<00:10:18.560><c> not</c><00:10:18.800><c> like</c><00:10:18.959><c> mapreduce</c>

00:10:20.069 --> 00:10:20.079 align:start position:0%
application not like mapreduce
 

00:10:20.079 --> 00:10:23.269 align:start position:0%
application not like mapreduce
uh<00:10:20.640><c> and</c><00:10:21.279><c> you</c><00:10:21.440><c> know</c><00:10:21.680><c> as</c><00:10:21.920><c> it</c><00:10:22.079><c> makes</c><00:10:22.240><c> the</c><00:10:22.640><c> uh</c>

00:10:23.269 --> 00:10:23.279 align:start position:0%
uh and you know as it makes the uh
 

00:10:23.279 --> 00:10:24.710 align:start position:0%
uh and you know as it makes the uh
call<00:10:23.600><c> you</c><00:10:23.680><c> know</c><00:10:23.839><c> it's</c><00:10:23.920><c> gonna</c><00:10:24.079><c> be</c><00:10:24.240><c> blocked</c><00:10:24.640><c> you</c>

00:10:24.710 --> 00:10:24.720 align:start position:0%
call you know it's gonna be blocked you
 

00:10:24.720 --> 00:10:26.310 align:start position:0%
call you know it's gonna be blocked you
know<00:10:24.880><c> waiting</c><00:10:25.120><c> for</c><00:10:25.200><c> a</c><00:10:25.279><c> response</c><00:10:25.920><c> and</c><00:10:26.079><c> while</c>

00:10:26.310 --> 00:10:26.320 align:start position:0%
know waiting for a response and while
 

00:10:26.320 --> 00:10:27.590 align:start position:0%
know waiting for a response and while
it's<00:10:26.480><c> blocked</c><00:10:26.800><c> and</c><00:10:26.880><c> they're</c><00:10:27.120><c> waiting</c><00:10:27.360><c> for</c><00:10:27.519><c> a</c>

00:10:27.590 --> 00:10:27.600 align:start position:0%
it's blocked and they're waiting for a
 

00:10:27.600 --> 00:10:28.310 align:start position:0%
it's blocked and they're waiting for a
response

00:10:28.310 --> 00:10:28.320 align:start position:0%
response
 

00:10:28.320 --> 00:10:29.910 align:start position:0%
response
everything<00:10:28.800><c> will</c><00:10:28.880><c> be</c><00:10:29.040><c> nice</c><00:10:29.279><c> to</c><00:10:29.440><c> actually</c><00:10:29.680><c> run</c>

00:10:29.910 --> 00:10:29.920 align:start position:0%
everything will be nice to actually run
 

00:10:29.920 --> 00:10:32.230 align:start position:0%
everything will be nice to actually run
some<00:10:30.079><c> other</c><00:10:30.240><c> threads</c><00:10:31.279><c> uh</c><00:10:31.600><c> so</c><00:10:31.760><c> that</c><00:10:31.920><c> way</c><00:10:32.160><c> you</c>

00:10:32.230 --> 00:10:32.240 align:start position:0%
some other threads uh so that way you
 

00:10:32.240 --> 00:10:33.110 align:start position:0%
some other threads uh so that way you
know<00:10:32.399><c> they're</c>

00:10:33.110 --> 00:10:33.120 align:start position:0%
know they're
 

00:10:33.120 --> 00:10:35.190 align:start position:0%
know they're
sort<00:10:33.279><c> of</c><00:10:33.760><c> more</c><00:10:34.079><c> we're</c><00:10:34.240><c> done</c><00:10:34.640><c> for</c><00:10:34.720><c> example</c><00:10:35.120><c> we</c>

00:10:35.190 --> 00:10:35.200 align:start position:0%
sort of more we're done for example we
 

00:10:35.200 --> 00:10:36.710 align:start position:0%
sort of more we're done for example we
want<00:10:35.360><c> to</c><00:10:35.519><c> issue</c><00:10:35.839><c> multiple</c><00:10:36.240><c> requests</c><00:10:36.640><c> to</c>

00:10:36.710 --> 00:10:36.720 align:start position:0%
want to issue multiple requests to
 

00:10:36.720 --> 00:10:38.150 align:start position:0%
want to issue multiple requests to
multiple<00:10:37.200><c> machines</c>

00:10:38.150 --> 00:10:38.160 align:start position:0%
multiple machines
 

00:10:38.160 --> 00:10:39.990 align:start position:0%
multiple machines
uh<00:10:38.480><c> sort</c><00:10:38.640><c> of</c><00:10:38.720><c> roughly</c><00:10:39.120><c> in</c><00:10:39.200><c> parallel</c><00:10:39.760><c> you</c><00:10:39.839><c> know</c>

00:10:39.990 --> 00:10:40.000 align:start position:0%
uh sort of roughly in parallel you know
 

00:10:40.000 --> 00:10:41.829 align:start position:0%
uh sort of roughly in parallel you know
we<00:10:40.160><c> can</c><00:10:40.240><c> just</c><00:10:40.399><c> do</c><00:10:40.560><c> that</c><00:10:40.720><c> we</c><00:10:40.880><c> fire</c><00:10:41.120><c> her</c><00:10:41.279><c> off</c><00:10:41.440><c> one</c>

00:10:41.829 --> 00:10:41.839 align:start position:0%
we can just do that we fire her off one
 

00:10:41.839 --> 00:10:43.750 align:start position:0%
we can just do that we fire her off one
bill<00:10:42.000><c> routine</c><00:10:42.480><c> and</c><00:10:42.800><c> fire</c><00:10:43.040><c> another</c><00:10:43.279><c> coaching</c>

00:10:43.750 --> 00:10:43.760 align:start position:0%
bill routine and fire another coaching
 

00:10:43.760 --> 00:10:45.030 align:start position:0%
bill routine and fire another coaching
another<00:10:44.000><c> go</c><00:10:44.160><c> routine</c><00:10:44.480><c> that</c><00:10:44.720><c> all</c>

00:10:45.030 --> 00:10:45.040 align:start position:0%
another go routine that all
 

00:10:45.040 --> 00:10:46.630 align:start position:0%
another go routine that all
kind<00:10:45.200><c> of</c><00:10:45.360><c> send</c><00:10:45.760><c> and</c><00:10:45.920><c> make</c><00:10:46.079><c> connections</c><00:10:46.480><c> to</c>

00:10:46.630 --> 00:10:46.640 align:start position:0%
kind of send and make connections to
 

00:10:46.640 --> 00:10:48.710 align:start position:0%
kind of send and make connections to
other<00:10:46.800><c> remote</c><00:10:47.120><c> machines</c>

00:10:48.710 --> 00:10:48.720 align:start position:0%
other remote machines
 

00:10:48.720 --> 00:10:49.990 align:start position:0%
other remote machines
that's<00:10:48.959><c> one</c><00:10:49.200><c> reason</c><00:10:49.440><c> that</c><00:10:49.519><c> we</c><00:10:49.600><c> care</c><00:10:49.760><c> a</c><00:10:49.839><c> lot</c>

00:10:49.990 --> 00:10:50.000 align:start position:0%
that's one reason that we care a lot
 

00:10:50.000 --> 00:10:52.470 align:start position:0%
that's one reason that we care a lot
about<00:10:50.320><c> it</c><00:10:51.360><c> io</c><00:10:51.680><c> concurrency</c><00:10:52.160><c> the</c><00:10:52.240><c> second</c>

00:10:52.470 --> 00:10:52.480 align:start position:0%
about it io concurrency the second
 

00:10:52.480 --> 00:10:54.069 align:start position:0%
about it io concurrency the second
reason<00:10:52.720><c> that</c><00:10:52.800><c> we</c><00:10:52.880><c> care</c><00:10:53.120><c> about</c><00:10:53.360><c> it</c><00:10:53.519><c> is</c><00:10:53.839><c> you</c><00:10:53.920><c> know</c>

00:10:54.069 --> 00:10:54.079 align:start position:0%
reason that we care about it is you know
 

00:10:54.079 --> 00:11:03.190 align:start position:0%
reason that we care about it is you know
it<00:10:54.160><c> allows</c><00:10:54.480><c> for</c><00:10:54.720><c> multi-core</c><00:10:58.839><c> parallelism</c>

00:11:03.190 --> 00:11:03.200 align:start position:0%
 
 

00:11:03.200 --> 00:11:05.670 align:start position:0%
 
so<00:11:03.440><c> we</c><00:11:03.760><c> have</c><00:11:04.160><c> you</c><00:11:04.240><c> know</c><00:11:04.399><c> multiple</c><00:11:04.880><c> cores</c><00:11:05.440><c> in</c>

00:11:05.670 --> 00:11:05.680 align:start position:0%
so we have you know multiple cores in
 

00:11:05.680 --> 00:11:07.590 align:start position:0%
so we have you know multiple cores in
our<00:11:06.160><c> you</c><00:11:06.320><c> know</c>

00:11:07.590 --> 00:11:07.600 align:start position:0%
our you know
 

00:11:07.600 --> 00:11:09.910 align:start position:0%
our you know
computer<00:11:08.079><c> or</c><00:11:08.240><c> a</c><00:11:08.320><c> processor</c><00:11:09.120><c> then</c><00:11:09.440><c> you</c><00:11:09.600><c> know</c><00:11:09.760><c> we</c>

00:11:09.910 --> 00:11:09.920 align:start position:0%
computer or a processor then you know we
 

00:11:09.920 --> 00:11:10.710 align:start position:0%
computer or a processor then you know we
can<00:11:10.079><c> have</c>

00:11:10.710 --> 00:11:10.720 align:start position:0%
can have
 

00:11:10.720 --> 00:11:12.710 align:start position:0%
can have
one<00:11:10.959><c> fret</c><00:11:11.360><c> running</c><00:11:11.680><c> on</c><00:11:11.839><c> the</c><00:11:11.920><c> one</c><00:11:12.160><c> go</c><00:11:12.320><c> routine</c>

00:11:12.710 --> 00:11:12.720 align:start position:0%
one fret running on the one go routine
 

00:11:12.720 --> 00:11:14.710 align:start position:0%
one fret running on the one go routine
running<00:11:12.959><c> on</c><00:11:13.120><c> one</c><00:11:13.360><c> core</c><00:11:13.839><c> and</c><00:11:14.000><c> another</c><00:11:14.320><c> thread</c>

00:11:14.710 --> 00:11:14.720 align:start position:0%
running on one core and another thread
 

00:11:14.720 --> 00:11:16.310 align:start position:0%
running on one core and another thread
or<00:11:14.880><c> another</c><00:11:15.120><c> go</c><00:11:15.279><c> routine</c><00:11:15.680><c> running</c><00:11:15.920><c> on</c><00:11:16.000><c> another</c>

00:11:16.310 --> 00:11:16.320 align:start position:0%
or another go routine running on another
 

00:11:16.320 --> 00:11:16.870 align:start position:0%
or another go routine running on another
course<00:11:16.560><c> just</c>

00:11:16.870 --> 00:11:16.880 align:start position:0%
course just
 

00:11:16.880 --> 00:11:19.030 align:start position:0%
course just
straight<00:11:17.200><c> in</c><00:11:17.360><c> parallel</c><00:11:18.240><c> and</c><00:11:18.399><c> as</c><00:11:18.560><c> for</c><00:11:18.640><c> example</c>

00:11:19.030 --> 00:11:19.040 align:start position:0%
straight in parallel and as for example
 

00:11:19.040 --> 00:11:20.949 align:start position:0%
straight in parallel and as for example
we<00:11:19.279><c> implemented</c><00:11:19.760><c> like</c><00:11:19.920><c> a</c><00:11:20.000><c> key</c><00:11:20.240><c> value</c><00:11:20.560><c> servers</c>

00:11:20.949 --> 00:11:20.959 align:start position:0%
we implemented like a key value servers
 

00:11:20.959 --> 00:11:23.030 align:start position:0%
we implemented like a key value servers
then<00:11:21.279><c> we</c><00:11:21.440><c> could</c><00:11:21.600><c> process</c>

00:11:23.030 --> 00:11:23.040 align:start position:0%
then we could process
 

00:11:23.040 --> 00:11:24.470 align:start position:0%
then we could process
requests<00:11:23.360><c> for</c><00:11:23.519><c> different</c><00:11:23.760><c> keys</c><00:11:24.079><c> and</c><00:11:24.160><c> the</c><00:11:24.320><c> key</c>

00:11:24.470 --> 00:11:24.480 align:start position:0%
requests for different keys and the key
 

00:11:24.480 --> 00:11:26.150 align:start position:0%
requests for different keys and the key
value<00:11:24.800><c> servers</c><00:11:25.120><c> used</c><00:11:25.440><c> on</c><00:11:25.600><c> different</c><00:11:25.920><c> course</c>

00:11:26.150 --> 00:11:26.160 align:start position:0%
value servers used on different course
 

00:11:26.160 --> 00:11:27.990 align:start position:0%
value servers used on different course
completely<00:11:26.640><c> parallel</c><00:11:27.120><c> you</c><00:11:27.200><c> know</c><00:11:27.360><c> increasing</c>

00:11:27.990 --> 00:11:28.000 align:start position:0%
completely parallel you know increasing
 

00:11:28.000 --> 00:11:31.350 align:start position:0%
completely parallel you know increasing
our<00:11:28.640><c> uh</c><00:11:28.880><c> throughput</c><00:11:30.320><c> so</c><00:11:30.480><c> those</c><00:11:30.720><c> are</c><00:11:30.800><c> the</c><00:11:31.120><c> two</c>

00:11:31.350 --> 00:11:31.360 align:start position:0%
our uh throughput so those are the two
 

00:11:31.360 --> 00:11:33.269 align:start position:0%
our uh throughput so those are the two
main<00:11:31.600><c> reasons</c><00:11:31.920><c> that</c><00:11:32.079><c> we</c><00:11:32.160><c> care</c><00:11:32.399><c> a</c><00:11:32.480><c> lot</c><00:11:32.800><c> about</c>

00:11:33.269 --> 00:11:33.279 align:start position:0%
main reasons that we care a lot about
 

00:11:33.279 --> 00:11:36.470 align:start position:0%
main reasons that we care a lot about
uh<00:11:34.000><c> precursory</c><00:11:35.120><c> uh</c><00:11:35.360><c> by</c><00:11:35.600><c> threats</c><00:11:36.079><c> there's</c><00:11:36.320><c> a</c>

00:11:36.470 --> 00:11:36.480 align:start position:0%
uh precursory uh by threats there's a
 

00:11:36.480 --> 00:11:37.509 align:start position:0%
uh precursory uh by threats there's a
sort<00:11:36.560><c> of</c><00:11:36.720><c> a</c><00:11:36.800><c> third</c><00:11:37.040><c> reason</c>

00:11:37.509 --> 00:11:37.519 align:start position:0%
sort of a third reason
 

00:11:37.519 --> 00:11:40.829 align:start position:0%
sort of a third reason
you<00:11:37.600><c> know</c><00:11:37.760><c> there's</c><00:11:37.920><c> a</c><00:11:38.079><c> little</c><00:11:38.320><c> bit</c><00:11:38.480><c> of</c>

00:11:40.829 --> 00:11:40.839 align:start position:0%
 
 

00:11:40.839 --> 00:11:43.670 align:start position:0%
 
convenience

00:11:43.670 --> 00:11:43.680 align:start position:0%
convenience
 

00:11:43.680 --> 00:11:45.110 align:start position:0%
convenience
there's<00:11:43.920><c> going</c><00:11:44.000><c> to</c><00:11:44.079><c> be</c><00:11:44.240><c> numerous</c><00:11:44.640><c> cases</c><00:11:44.959><c> in</c>

00:11:45.110 --> 00:11:45.120 align:start position:0%
there's going to be numerous cases in
 

00:11:45.120 --> 00:11:46.949 align:start position:0%
there's going to be numerous cases in
the<00:11:45.200><c> lab</c><00:11:45.360><c> for</c><00:11:45.519><c> example</c><00:11:45.839><c> where</c><00:11:46.079><c> we</c><00:11:46.160><c> want</c><00:11:46.320><c> to</c>

00:11:46.949 --> 00:11:46.959 align:start position:0%
the lab for example where we want to
 

00:11:46.959 --> 00:11:49.750 align:start position:0%
the lab for example where we want to
uh<00:11:47.839><c> have</c><00:11:48.160><c> something</c><00:11:48.480><c> happen</c><00:11:48.800><c> periodically</c>

00:11:49.750 --> 00:11:49.760 align:start position:0%
uh have something happen periodically
 

00:11:49.760 --> 00:11:51.509 align:start position:0%
uh have something happen periodically
maybe<00:11:50.079><c> every</c><00:11:50.320><c> second</c><00:11:50.720><c> or</c><00:11:50.880><c> every</c><00:11:51.120><c> 200</c>

00:11:51.509 --> 00:11:51.519 align:start position:0%
maybe every second or every 200
 

00:11:51.519 --> 00:11:52.310 align:start position:0%
maybe every second or every 200
milliseconds

00:11:52.310 --> 00:11:52.320 align:start position:0%
milliseconds
 

00:11:52.320 --> 00:11:54.550 align:start position:0%
milliseconds
and<00:11:53.120><c> we</c><00:11:53.200><c> can</c><00:11:53.360><c> just</c><00:11:53.600><c> launch</c><00:11:53.920><c> a</c><00:11:54.000><c> thread</c><00:11:54.240><c> for</c><00:11:54.399><c> that</c>

00:11:54.550 --> 00:11:54.560 align:start position:0%
and we can just launch a thread for that
 

00:11:54.560 --> 00:11:56.150 align:start position:0%
and we can just launch a thread for that
or<00:11:54.639><c> a</c><00:11:54.720><c> go</c><00:11:54.880><c> routine</c><00:11:55.200><c> for</c><00:11:55.279><c> that</c><00:11:55.519><c> you</c><00:11:55.680><c> just</c><00:11:55.920><c> sleep</c>

00:11:56.150 --> 00:11:56.160 align:start position:0%
or a go routine for that you just sleep
 

00:11:56.160 --> 00:11:57.750 align:start position:0%
or a go routine for that you just sleep
for<00:11:56.320><c> 200</c><00:11:56.560><c> milliseconds</c><00:11:57.200><c> you</c><00:11:57.279><c> know</c><00:11:57.440><c> does</c><00:11:57.600><c> what</c>

00:11:57.750 --> 00:11:57.760 align:start position:0%
for 200 milliseconds you know does what
 

00:11:57.760 --> 00:11:58.710 align:start position:0%
for 200 milliseconds you know does what
it<00:11:57.839><c> needs</c><00:11:58.000><c> to</c><00:11:58.079><c> do</c><00:11:58.320><c> and</c><00:11:58.480><c> then</c>

00:11:58.710 --> 00:11:58.720 align:start position:0%
it needs to do and then
 

00:11:58.720 --> 00:11:59.910 align:start position:0%
it needs to do and then
it<00:11:58.880><c> goes</c><00:11:59.040><c> back</c><00:11:59.200><c> to</c><00:11:59.279><c> sleep</c><00:11:59.519><c> for</c><00:11:59.680><c> 200</c>

00:11:59.910 --> 00:11:59.920 align:start position:0%
it goes back to sleep for 200
 

00:11:59.920 --> 00:12:01.910 align:start position:0%
it goes back to sleep for 200
milliseconds<00:12:00.880><c> and</c><00:12:01.040><c> so</c><00:12:01.200><c> it's</c><00:12:01.279><c> convenient</c><00:12:01.760><c> to</c>

00:12:01.910 --> 00:12:01.920 align:start position:0%
milliseconds and so it's convenient to
 

00:12:01.920 --> 00:12:03.110 align:start position:0%
milliseconds and so it's convenient to
sort<00:12:02.079><c> of</c><00:12:02.160><c> have</c><00:12:02.480><c> these</c>

00:12:03.110 --> 00:12:03.120 align:start position:0%
sort of have these
 

00:12:03.120 --> 00:12:04.870 align:start position:0%
sort of have these
uh<00:12:03.440><c> sort</c><00:12:03.600><c> of</c><00:12:03.680><c> background</c><00:12:04.240><c> activities</c><00:12:04.720><c> that</c>

00:12:04.870 --> 00:12:04.880 align:start position:0%
uh sort of background activities that
 

00:12:04.880 --> 00:12:06.550 align:start position:0%
uh sort of background activities that
need<00:12:05.040><c> to</c><00:12:05.120><c> be</c><00:12:05.200><c> done</c><00:12:05.440><c> periodically</c><00:12:06.160><c> and</c><00:12:06.320><c> you</c><00:12:06.399><c> can</c>

00:12:06.550 --> 00:12:06.560 align:start position:0%
need to be done periodically and you can
 

00:12:06.560 --> 00:12:08.310 align:start position:0%
need to be done periodically and you can
express<00:12:06.880><c> that</c><00:12:07.120><c> using</c><00:12:07.519><c> uh</c><00:12:07.680><c> threats</c><00:12:08.079><c> of</c><00:12:08.160><c> course</c>

00:12:08.310 --> 00:12:08.320 align:start position:0%
express that using uh threats of course
 

00:12:08.320 --> 00:12:09.509 align:start position:0%
express that using uh threats of course
you<00:12:08.399><c> can</c><00:12:08.560><c> express</c><00:12:08.800><c> them</c><00:12:08.959><c> in</c><00:12:09.040><c> other</c><00:12:09.200><c> ways</c><00:12:09.360><c> the</c>

00:12:09.509 --> 00:12:09.519 align:start position:0%
you can express them in other ways the
 

00:12:09.519 --> 00:12:10.710 align:start position:0%
you can express them in other ways the
threads<00:12:09.760><c> are</c><00:12:09.920><c> actually</c><00:12:10.320><c> uh</c>

00:12:10.710 --> 00:12:10.720 align:start position:0%
threads are actually uh
 

00:12:10.720 --> 00:12:14.230 align:start position:0%
threads are actually uh
convenient<00:12:13.040><c> another</c><00:12:13.600><c> question</c><00:12:13.839><c> that</c><00:12:13.920><c> comes</c>

00:12:14.230 --> 00:12:14.240 align:start position:0%
convenient another question that comes
 

00:12:14.240 --> 00:12:14.550 align:start position:0%
convenient another question that comes
up

00:12:14.550 --> 00:12:14.560 align:start position:0%
up
 

00:12:14.560 --> 00:12:16.629 align:start position:0%
up
uh<00:12:14.720><c> often</c><00:12:15.440><c> and</c><00:12:15.600><c> i</c><00:12:15.680><c> think</c><00:12:15.920><c> came</c><00:12:16.160><c> up</c><00:12:16.240><c> in</c><00:12:16.320><c> some</c><00:12:16.480><c> of</c>

00:12:16.629 --> 00:12:16.639 align:start position:0%
uh often and i think came up in some of
 

00:12:16.639 --> 00:12:18.230 align:start position:0%
uh often and i think came up in some of
the<00:12:16.720><c> lecture</c><00:12:17.040><c> questions</c><00:12:17.440><c> so</c><00:12:17.680><c> today</c><00:12:18.000><c> like</c><00:12:18.160><c> how</c>

00:12:18.230 --> 00:12:18.240 align:start position:0%
the lecture questions so today like how
 

00:12:18.240 --> 00:12:19.910 align:start position:0%
the lecture questions so today like how
many<00:12:18.399><c> threads</c><00:12:18.720><c> did</c><00:12:18.800><c> you</c><00:12:18.959><c> create</c>

00:12:19.910 --> 00:12:19.920 align:start position:0%
many threads did you create
 

00:12:19.920 --> 00:12:22.150 align:start position:0%
many threads did you create
and<00:12:20.160><c> i</c><00:12:20.240><c> think</c><00:12:20.720><c> the</c><00:12:20.880><c> go</c><00:12:21.120><c> designers</c><00:12:21.839><c> the</c><00:12:22.000><c> way</c>

00:12:22.150 --> 00:12:22.160 align:start position:0%
and i think the go designers the way
 

00:12:22.160 --> 00:12:23.590 align:start position:0%
and i think the go designers the way
they<00:12:22.320><c> want</c><00:12:22.480><c> you</c><00:12:22.639><c> to</c><00:12:22.720><c> think</c><00:12:22.880><c> about</c><00:12:23.120><c> it</c><00:12:23.279><c> is</c><00:12:23.440><c> that</c>

00:12:23.590 --> 00:12:23.600 align:start position:0%
they want you to think about it is that
 

00:12:23.600 --> 00:12:24.949 align:start position:0%
they want you to think about it is that
you<00:12:23.760><c> should</c><00:12:23.920><c> create</c><00:12:24.160><c> as</c><00:12:24.240><c> many</c><00:12:24.480><c> threads</c><00:12:24.720><c> as</c><00:12:24.800><c> you</c>

00:12:24.949 --> 00:12:24.959 align:start position:0%
you should create as many threads as you
 

00:12:24.959 --> 00:12:26.230 align:start position:0%
you should create as many threads as you
need

00:12:26.230 --> 00:12:26.240 align:start position:0%
need
 

00:12:26.240 --> 00:12:28.150 align:start position:0%
need
they're<00:12:26.480><c> definitely</c><00:12:26.800><c> not</c><00:12:27.040><c> free</c><00:12:27.680><c> they</c><00:12:27.839><c> tie</c><00:12:28.079><c> up</c>

00:12:28.150 --> 00:12:28.160 align:start position:0%
they're definitely not free they tie up
 

00:12:28.160 --> 00:12:29.670 align:start position:0%
they're definitely not free they tie up
some<00:12:28.320><c> memory</c><00:12:28.880><c> because</c><00:12:29.120><c> you</c><00:12:29.200><c> know</c><00:12:29.360><c> you</c><00:12:29.440><c> have</c><00:12:29.600><c> to</c>

00:12:29.670 --> 00:12:29.680 align:start position:0%
some memory because you know you have to
 

00:12:29.680 --> 00:12:30.710 align:start position:0%
some memory because you know you have to
have<00:12:29.839><c> a</c><00:12:29.920><c> stack</c>

00:12:30.710 --> 00:12:30.720 align:start position:0%
have a stack
 

00:12:30.720 --> 00:12:32.629 align:start position:0%
have a stack
uh<00:12:30.959><c> there's</c><00:12:31.200><c> a</c><00:12:31.279><c> performance</c><00:12:31.760><c> overhead</c><00:12:32.240><c> we're</c>

00:12:32.629 --> 00:12:32.639 align:start position:0%
uh there's a performance overhead we're
 

00:12:32.639 --> 00:12:33.829 align:start position:0%
uh there's a performance overhead we're
starting<00:12:33.040><c> them</c>

00:12:33.829 --> 00:12:33.839 align:start position:0%
starting them
 

00:12:33.839 --> 00:12:35.750 align:start position:0%
starting them
but<00:12:34.320><c> you</c><00:12:34.639><c> should</c><00:12:34.800><c> think</c><00:12:34.959><c> about</c><00:12:35.120><c> them</c><00:12:35.360><c> as</c><00:12:35.440><c> very</c>

00:12:35.750 --> 00:12:35.760 align:start position:0%
but you should think about them as very
 

00:12:35.760 --> 00:12:37.110 align:start position:0%
but you should think about them as very
lightweight

00:12:37.110 --> 00:12:37.120 align:start position:0%
lightweight
 

00:12:37.120 --> 00:12:38.870 align:start position:0%
lightweight
and<00:12:37.279><c> so</c><00:12:37.600><c> you</c><00:12:37.839><c> should</c><00:12:38.000><c> be</c><00:12:38.160><c> encouraging</c><00:12:38.720><c> or</c>

00:12:38.870 --> 00:12:38.880 align:start position:0%
and so you should be encouraging or
 

00:12:38.880 --> 00:12:40.550 align:start position:0%
and so you should be encouraging or
you're<00:12:39.120><c> encouraged</c><00:12:39.519><c> to</c><00:12:39.680><c> create</c>

00:12:40.550 --> 00:12:40.560 align:start position:0%
you're encouraged to create
 

00:12:40.560 --> 00:12:44.550 align:start position:0%
you're encouraged to create
threads<00:12:40.880><c> as</c><00:12:41.040><c> you</c><00:12:41.120><c> go</c><00:12:43.519><c> any</c>

00:12:44.550 --> 00:12:44.560 align:start position:0%
threads as you go any
 

00:12:44.560 --> 00:12:46.470 align:start position:0%
threads as you go any
questions<00:12:44.959><c> about</c><00:12:45.200><c> sort</c><00:12:45.360><c> of</c><00:12:45.519><c> this</c><00:12:46.160><c> basic</c>

00:12:46.470 --> 00:12:46.480 align:start position:0%
questions about sort of this basic
 

00:12:46.480 --> 00:12:54.949 align:start position:0%
questions about sort of this basic
reason<00:12:46.720><c> for</c><00:12:46.959><c> why</c><00:12:47.200><c> to</c><00:12:47.279><c> have</c><00:12:50.839><c> friends</c>

00:12:54.949 --> 00:12:54.959 align:start position:0%
 
 

00:12:54.959 --> 00:12:57.670 align:start position:0%
 
okay<00:12:55.200><c> let</c><00:12:55.360><c> me</c><00:12:55.600><c> uh</c><00:12:55.920><c> then</c><00:12:56.480><c> you</c><00:12:56.639><c> know</c><00:12:57.040><c> as</c><00:12:57.279><c> i</c><00:12:57.360><c> said</c><00:12:57.600><c> i</c>

00:12:57.670 --> 00:12:57.680 align:start position:0%
okay let me uh then you know as i said i
 

00:12:57.680 --> 00:12:58.629 align:start position:0%
okay let me uh then you know as i said i
mentioned<00:12:58.000><c> earlier</c>

00:12:58.629 --> 00:12:58.639 align:start position:0%
mentioned earlier
 

00:12:58.639 --> 00:13:03.190 align:start position:0%
mentioned earlier
uh<00:12:59.040><c> frets</c><00:12:59.360><c> actually</c><00:12:59.839><c> have</c><00:13:00.079><c> challenges</c>

00:13:03.190 --> 00:13:03.200 align:start position:0%
 
 

00:13:03.200 --> 00:13:05.110 align:start position:0%
 
for<00:13:03.440><c> programming</c><00:13:03.839><c> refresh</c><00:13:04.320><c> has</c><00:13:04.480><c> challenges</c>

00:13:05.110 --> 00:13:05.120 align:start position:0%
for programming refresh has challenges
 

00:13:05.120 --> 00:13:06.389 align:start position:0%
for programming refresh has challenges
so<00:13:05.279><c> let</c><00:13:05.360><c> me</c><00:13:05.440><c> talk</c><00:13:05.680><c> a</c><00:13:05.760><c> little</c><00:13:06.000><c> bit</c><00:13:06.160><c> about</c><00:13:06.320><c> the</c>

00:13:06.389 --> 00:13:06.399 align:start position:0%
so let me talk a little bit about the
 

00:13:06.399 --> 00:13:07.590 align:start position:0%
so let me talk a little bit about the
challenges

00:13:07.590 --> 00:13:07.600 align:start position:0%
challenges
 

00:13:07.600 --> 00:13:09.350 align:start position:0%
challenges
i'm<00:13:07.839><c> not</c><00:13:08.000><c> going</c><00:13:08.079><c> to</c><00:13:08.160><c> go</c><00:13:08.320><c> in</c><00:13:08.399><c> great</c><00:13:08.639><c> amount</c><00:13:08.880><c> of</c>

00:13:09.350 --> 00:13:09.360 align:start position:0%
i'm not going to go in great amount of
 

00:13:09.360 --> 00:13:10.629 align:start position:0%
i'm not going to go in great amount of
depth<00:13:09.680><c> here</c><00:13:10.079><c> uh</c>

00:13:10.629 --> 00:13:10.639 align:start position:0%
depth here uh
 

00:13:10.639 --> 00:13:12.470 align:start position:0%
depth here uh
i<00:13:10.800><c> assume</c><00:13:11.200><c> that</c><00:13:11.440><c> you</c><00:13:11.519><c> know</c><00:13:11.680><c> there's</c><00:13:12.000><c> a</c><00:13:12.240><c> they</c>

00:13:12.470 --> 00:13:12.480 align:start position:0%
i assume that you know there's a they
 

00:13:12.480 --> 00:13:13.910 align:start position:0%
i assume that you know there's a they
all<00:13:12.560><c> make</c><00:13:12.800><c> sense</c><00:13:13.120><c> and</c><00:13:13.200><c> they'll</c><00:13:13.440><c> become</c><00:13:13.760><c> more</c>

00:13:13.910 --> 00:13:13.920 align:start position:0%
all make sense and they'll become more
 

00:13:13.920 --> 00:13:14.550 align:start position:0%
all make sense and they'll become more
clear<00:13:14.160><c> if</c><00:13:14.320><c> we</c>

00:13:14.550 --> 00:13:14.560 align:start position:0%
clear if we
 

00:13:14.560 --> 00:13:16.629 align:start position:0%
clear if we
look<00:13:14.720><c> at</c><00:13:14.880><c> some</c><00:13:15.040><c> of</c><00:13:15.120><c> the</c><00:13:15.279><c> examples</c><00:13:16.480><c> and</c>

00:13:16.629 --> 00:13:16.639 align:start position:0%
look at some of the examples and
 

00:13:16.639 --> 00:13:18.550 align:start position:0%
look at some of the examples and
probably<00:13:16.959><c> the</c><00:13:17.120><c> the</c><00:13:17.440><c> main</c><00:13:17.920><c> reason</c>

00:13:18.550 --> 00:13:18.560 align:start position:0%
probably the the main reason
 

00:13:18.560 --> 00:13:20.629 align:start position:0%
probably the the main reason
uh<00:13:19.040><c> that</c><00:13:19.360><c> you</c><00:13:19.440><c> know</c><00:13:19.600><c> fred's</c><00:13:19.920><c> actually</c><00:13:20.320><c> are</c>

00:13:20.629 --> 00:13:20.639 align:start position:0%
uh that you know fred's actually are
 

00:13:20.639 --> 00:13:21.910 align:start position:0%
uh that you know fred's actually are
challenging<00:13:21.120><c> is</c><00:13:21.279><c> that</c><00:13:21.360><c> you</c><00:13:21.440><c> can</c><00:13:21.600><c> have</c><00:13:21.680><c> race</c>

00:13:21.910 --> 00:13:21.920 align:start position:0%
challenging is that you can have race
 

00:13:21.920 --> 00:13:30.710 align:start position:0%
challenging is that you can have race
conditions

00:13:30.710 --> 00:13:30.720 align:start position:0%
 
 

00:13:30.720 --> 00:13:33.269 align:start position:0%
 
and<00:13:30.880><c> just</c><00:13:31.120><c> like</c><00:13:31.279><c> a</c><00:13:31.440><c> basic</c><00:13:31.839><c> example</c><00:13:32.800><c> of</c><00:13:32.959><c> a</c><00:13:33.040><c> race</c>

00:13:33.269 --> 00:13:33.279 align:start position:0%
and just like a basic example of a race
 

00:13:33.279 --> 00:13:35.110 align:start position:0%
and just like a basic example of a race
condition<00:13:33.760><c> let's</c><00:13:33.839><c> say</c><00:13:34.079><c> you</c><00:13:34.160><c> have</c><00:13:34.480><c> two</c><00:13:34.720><c> frets</c>

00:13:35.110 --> 00:13:35.120 align:start position:0%
condition let's say you have two frets
 

00:13:35.120 --> 00:13:37.350 align:start position:0%
condition let's say you have two frets
you<00:13:35.279><c> know</c><00:13:35.440><c> here's</c><00:13:35.760><c> t1</c>

00:13:37.350 --> 00:13:37.360 align:start position:0%
you know here's t1
 

00:13:37.360 --> 00:13:40.870 align:start position:0%
you know here's t1
is<00:13:37.600><c> t2</c><00:13:39.199><c> and</c><00:13:40.320><c> they</c><00:13:40.560><c> share</c>

00:13:40.870 --> 00:13:40.880 align:start position:0%
is t2 and they share
 

00:13:40.880 --> 00:13:43.030 align:start position:0%
is t2 and they share
variable<00:13:41.360><c> n</c><00:13:41.839><c> let's</c><00:13:42.000><c> say</c><00:13:42.160><c> the</c><00:13:42.320><c> initial</c><00:13:42.720><c> value</c>

00:13:43.030 --> 00:13:43.040 align:start position:0%
variable n let's say the initial value
 

00:13:43.040 --> 00:13:45.350 align:start position:0%
variable n let's say the initial value
is<00:13:43.199><c> zero</c>

00:13:45.350 --> 00:13:45.360 align:start position:0%
is zero
 

00:13:45.360 --> 00:13:47.430 align:start position:0%
is zero
and<00:13:45.760><c> they</c><00:13:46.079><c> both</c><00:13:46.399><c> execute</c><00:13:47.040><c> you</c><00:13:47.120><c> know</c><00:13:47.279><c> both</c>

00:13:47.430 --> 00:13:47.440 align:start position:0%
and they both execute you know both
 

00:13:47.440 --> 00:13:48.790 align:start position:0%
and they both execute you know both
frets<00:13:47.760><c> execute</c><00:13:48.079><c> the</c><00:13:48.240><c> statement</c>

00:13:48.790 --> 00:13:48.800 align:start position:0%
frets execute the statement
 

00:13:48.800 --> 00:13:50.790 align:start position:0%
frets execute the statement
the<00:13:48.880><c> form</c><00:13:49.279><c> you</c><00:13:49.360><c> know</c><00:13:49.519><c> adds</c><00:13:50.399><c> you</c><00:13:50.560><c> know</c><00:13:50.639><c> the</c>

00:13:50.790 --> 00:13:50.800 align:start position:0%
the form you know adds you know the
 

00:13:50.800 --> 00:13:52.790 align:start position:0%
the form you know adds you know the
increment<00:13:51.279><c> and</c><00:13:51.440><c> by</c><00:13:51.680><c> one</c>

00:13:52.790 --> 00:13:52.800 align:start position:0%
increment and by one
 

00:13:52.800 --> 00:13:53.829 align:start position:0%
increment and by one
now<00:13:53.040><c> of</c><00:13:53.120><c> course</c><00:13:53.279><c> you</c><00:13:53.360><c> know</c><00:13:53.440><c> you</c><00:13:53.600><c> might</c><00:13:53.680><c> think</c>

00:13:53.829 --> 00:13:53.839 align:start position:0%
now of course you know you might think
 

00:13:53.839 --> 00:13:55.910 align:start position:0%
now of course you know you might think
that<00:13:54.079><c> statement</c><00:13:54.480><c> is</c><00:13:54.560><c> an</c><00:13:54.720><c> atomic</c><00:13:55.120><c> operation</c><00:13:55.600><c> or</c>

00:13:55.910 --> 00:13:55.920 align:start position:0%
that statement is an atomic operation or
 

00:13:55.920 --> 00:13:57.269 align:start position:0%
that statement is an atomic operation or
like<00:13:56.079><c> something</c><00:13:56.399><c> that</c><00:13:56.560><c> is</c><00:13:56.639><c> indivisible</c><00:13:57.199><c> but</c>

00:13:57.269 --> 00:13:57.279 align:start position:0%
like something that is indivisible but
 

00:13:57.279 --> 00:13:59.269 align:start position:0%
like something that is indivisible but
it<00:13:57.440><c> isn't</c><00:13:57.760><c> right</c><00:13:58.000><c> i</c><00:13:58.000><c> mean</c><00:13:58.480><c> there's</c><00:13:58.800><c> a</c><00:13:59.040><c> go</c>

00:13:59.269 --> 00:13:59.279 align:start position:0%
it isn't right i mean there's a go
 

00:13:59.279 --> 00:14:00.949 align:start position:0%
it isn't right i mean there's a go
statement<00:13:59.600><c> that</c><00:13:59.680><c> gets</c><00:13:59.920><c> compiled</c><00:14:00.480><c> you</c><00:14:00.560><c> know</c><00:14:00.720><c> to</c>

00:14:00.949 --> 00:14:00.959 align:start position:0%
statement that gets compiled you know to
 

00:14:00.959 --> 00:14:02.870 align:start position:0%
statement that gets compiled you know to
whatever<00:14:01.680><c> instructions</c><00:14:02.240><c> the</c><00:14:02.399><c> processor</c><00:14:02.720><c> is</c>

00:14:02.870 --> 00:14:02.880 align:start position:0%
whatever instructions the processor is
 

00:14:02.880 --> 00:14:03.829 align:start position:0%
whatever instructions the processor is
executing

00:14:03.829 --> 00:14:03.839 align:start position:0%
executing
 

00:14:03.839 --> 00:14:05.350 align:start position:0%
executing
and<00:14:03.920><c> so</c><00:14:04.079><c> we</c><00:14:04.160><c> cannot</c><00:14:04.480><c> assume</c><00:14:04.800><c> that</c><00:14:04.959><c> that's</c><00:14:05.199><c> an</c>

00:14:05.350 --> 00:14:05.360 align:start position:0%
and so we cannot assume that that's an
 

00:14:05.360 --> 00:14:07.110 align:start position:0%
and so we cannot assume that that's an
atomic<00:14:05.760><c> instruction</c><00:14:06.160><c> and</c><00:14:06.320><c> in</c><00:14:06.399><c> fact</c>

00:14:07.110 --> 00:14:07.120 align:start position:0%
atomic instruction and in fact
 

00:14:07.120 --> 00:14:09.430 align:start position:0%
atomic instruction and in fact
you<00:14:07.279><c> know</c><00:14:07.600><c> uh</c><00:14:07.920><c> it's</c><00:14:08.399><c> uh</c><00:14:08.639><c> it</c><00:14:08.800><c> could</c><00:14:09.040><c> consist</c><00:14:09.360><c> of</c>

00:14:09.430 --> 00:14:09.440 align:start position:0%
you know uh it's uh it could consist of
 

00:14:09.440 --> 00:14:10.550 align:start position:0%
you know uh it's uh it could consist of
basically<00:14:09.760><c> like</c><00:14:10.000><c> a</c><00:14:10.079><c> load</c>

00:14:10.550 --> 00:14:10.560 align:start position:0%
basically like a load
 

00:14:10.560 --> 00:14:13.269 align:start position:0%
basically like a load
you<00:14:10.720><c> know</c><00:14:10.800><c> to</c><00:14:11.199><c> which</c><00:14:12.320><c> stores</c><00:14:12.720><c> the</c><00:14:12.959><c> end</c><00:14:13.120><c> the</c>

00:14:13.269 --> 00:14:13.279 align:start position:0%
you know to which stores the end the
 

00:14:13.279 --> 00:14:14.389 align:start position:0%
you know to which stores the end the
content<00:14:13.680><c> of</c><00:14:13.839><c> end</c><00:14:14.000><c> into</c>

00:14:14.389 --> 00:14:14.399 align:start position:0%
content of end into
 

00:14:14.399 --> 00:14:16.150 align:start position:0%
content of end into
a<00:14:14.480><c> register</c><00:14:14.959><c> then</c><00:14:15.199><c> increment</c><00:14:15.600><c> register</c><00:14:16.079><c> and</c>

00:14:16.150 --> 00:14:16.160 align:start position:0%
a register then increment register and
 

00:14:16.160 --> 00:14:17.750 align:start position:0%
a register then increment register and
then<00:14:16.320><c> you</c><00:14:16.480><c> know</c><00:14:16.560><c> sort</c><00:14:16.800><c> of</c><00:14:16.880><c> register</c><00:14:17.279><c> back</c><00:14:17.519><c> into</c>

00:14:17.750 --> 00:14:17.760 align:start position:0%
then you know sort of register back into
 

00:14:17.760 --> 00:14:19.030 align:start position:0%
then you know sort of register back into
memory

00:14:19.030 --> 00:14:19.040 align:start position:0%
memory
 

00:14:19.040 --> 00:14:21.030 align:start position:0%
memory
and<00:14:19.120><c> so</c><00:14:19.279><c> if</c><00:14:19.440><c> you're</c><00:14:19.760><c> very</c><00:14:20.079><c> unlucky</c><00:14:20.800><c> you</c><00:14:20.880><c> know</c>

00:14:21.030 --> 00:14:21.040 align:start position:0%
and so if you're very unlucky you know
 

00:14:21.040 --> 00:14:23.269 align:start position:0%
and so if you're very unlucky you know
if<00:14:21.199><c> the</c><00:14:21.360><c> two</c><00:14:21.519><c> threads</c><00:14:21.920><c> basically</c><00:14:22.320><c> try</c><00:14:22.560><c> to</c>

00:14:23.269 --> 00:14:23.279 align:start position:0%
if the two threads basically try to
 

00:14:23.279 --> 00:14:25.350 align:start position:0%
if the two threads basically try to
both<00:14:23.680><c> execute</c><00:14:24.079><c> this</c><00:14:24.240><c> particular</c><00:14:24.639><c> instruction</c>

00:14:25.350 --> 00:14:25.360 align:start position:0%
both execute this particular instruction
 

00:14:25.360 --> 00:14:26.629 align:start position:0%
both execute this particular instruction
then<00:14:25.519><c> we</c><00:14:25.680><c> can</c><00:14:25.839><c> have</c><00:14:26.000><c> a</c><00:14:26.079><c> very</c>

00:14:26.629 --> 00:14:26.639 align:start position:0%
then we can have a very
 

00:14:26.639 --> 00:14:28.629 align:start position:0%
then we can have a very
you<00:14:26.800><c> know</c><00:14:27.120><c> unfortunate</c><00:14:27.680><c> sequence</c><00:14:28.000><c> of</c><00:14:28.160><c> events</c>

00:14:28.629 --> 00:14:28.639 align:start position:0%
you know unfortunate sequence of events
 

00:14:28.639 --> 00:14:30.790 align:start position:0%
you know unfortunate sequence of events
where<00:14:29.199><c> like</c><00:14:29.519><c> both</c><00:14:29.839><c> frets</c>

00:14:30.790 --> 00:14:30.800 align:start position:0%
where like both frets
 

00:14:30.800 --> 00:14:34.230 align:start position:0%
where like both frets
you<00:14:30.959><c> perform</c><00:14:31.279><c> the</c><00:14:31.440><c> load</c><00:14:31.680><c> instruction</c>

00:14:34.230 --> 00:14:34.240 align:start position:0%
you perform the load instruction
 

00:14:34.240 --> 00:14:36.710 align:start position:0%
you perform the load instruction
you<00:14:34.480><c> load</c><00:14:34.720><c> the</c><00:14:35.040><c> variable</c><00:14:35.519><c> in</c><00:14:36.160><c> you</c><00:14:36.240><c> know</c>

00:14:36.710 --> 00:14:36.720 align:start position:0%
you load the variable in you know
 

00:14:36.720 --> 00:14:38.470 align:start position:0%
you load the variable in you know
registered<00:14:37.199><c> let's</c><00:14:37.360><c> say</c><00:14:37.600><c> r0</c>

00:14:38.470 --> 00:14:38.480 align:start position:0%
registered let's say r0
 

00:14:38.480 --> 00:14:42.470 align:start position:0%
registered let's say r0
you<00:14:38.639><c> know</c><00:14:38.959><c> here</c><00:14:39.279><c> also</c><00:14:39.600><c> in</c><00:14:39.680><c> r0</c>

00:14:42.470 --> 00:14:42.480 align:start position:0%
 
 

00:14:42.480 --> 00:14:47.910 align:start position:0%
 
now<00:14:42.720><c> they</c><00:14:42.959><c> increment</c><00:14:43.440><c> it</c><00:14:43.600><c> so</c><00:14:43.839><c> r0</c><00:14:44.320><c> becomes</c><00:14:44.720><c> one</c>

00:14:47.910 --> 00:14:47.920 align:start position:0%
 
 

00:14:47.920 --> 00:14:50.389 align:start position:0%
 
and<00:14:48.079><c> then</c><00:14:48.560><c> they</c><00:14:48.720><c> write</c><00:14:48.959><c> it</c><00:14:49.040><c> back</c><00:14:49.519><c> you</c><00:14:49.600><c> know</c><00:14:49.760><c> to</c>

00:14:50.389 --> 00:14:50.399 align:start position:0%
and then they write it back you know to
 

00:14:50.399 --> 00:14:50.949 align:start position:0%
and then they write it back you know to
you<00:14:50.560><c> know</c>

00:14:50.949 --> 00:14:50.959 align:start position:0%
you know
 

00:14:50.959 --> 00:14:52.310 align:start position:0%
you know
they<00:14:51.120><c> do</c><00:14:51.279><c> restore</c><00:14:51.600><c> instruction</c><00:14:52.079><c> that</c>

00:14:52.310 --> 00:14:52.320 align:start position:0%
they do restore instruction that
 

00:14:52.320 --> 00:14:53.990 align:start position:0%
they do restore instruction that
actually<00:14:52.639><c> results</c><00:14:52.959><c> you</c><00:14:53.120><c> know</c><00:14:53.279><c> stores</c><00:14:53.519><c> results</c>

00:14:53.990 --> 00:14:54.000 align:start position:0%
actually results you know stores results
 

00:14:54.000 --> 00:14:55.269 align:start position:0%
actually results you know stores results
back<00:14:54.240><c> into</c><00:14:54.480><c> the</c><00:14:54.560><c> variable</c><00:14:55.040><c> n</c>

00:14:55.269 --> 00:14:55.279 align:start position:0%
back into the variable n
 

00:14:55.279 --> 00:14:59.030 align:start position:0%
back into the variable n
in<00:14:55.600><c> memory</c><00:14:56.880><c> and</c><00:14:57.760><c> uh</c><00:14:58.079><c> so</c><00:14:58.240><c> if</c><00:14:58.399><c> this</c><00:14:58.560><c> happens</c><00:14:58.880><c> at</c>

00:14:59.030 --> 00:14:59.040 align:start position:0%
in memory and uh so if this happens at
 

00:14:59.040 --> 00:14:59.910 align:start position:0%
in memory and uh so if this happens at
this<00:14:59.199><c> particular</c>

00:14:59.910 --> 00:14:59.920 align:start position:0%
this particular
 

00:14:59.920 --> 00:15:02.310 align:start position:0%
this particular
uh<00:15:00.800><c> in</c><00:15:00.959><c> this</c><00:15:01.120><c> scenario</c><00:15:01.680><c> where</c><00:15:01.920><c> you</c><00:15:02.000><c> know</c><00:15:02.160><c> this</c>

00:15:02.310 --> 00:15:02.320 align:start position:0%
uh in this scenario where you know this
 

00:15:02.320 --> 00:15:04.069 align:start position:0%
uh in this scenario where you know this
happens<00:15:02.639><c> to</c><00:15:02.720><c> be</c><00:15:02.800><c> like</c><00:15:02.959><c> truly</c><00:15:03.279><c> concurrently</c>

00:15:04.069 --> 00:15:04.079 align:start position:0%
happens to be like truly concurrently
 

00:15:04.079 --> 00:15:05.990 align:start position:0%
happens to be like truly concurrently
you<00:15:04.160><c> know</c><00:15:04.240><c> what</c><00:15:04.480><c> is</c><00:15:04.560><c> the</c><00:15:04.639><c> value</c><00:15:05.040><c> of</c><00:15:05.199><c> n</c><00:15:05.680><c> after</c>

00:15:05.990 --> 00:15:06.000 align:start position:0%
you know what is the value of n after
 

00:15:06.000 --> 00:15:11.430 align:start position:0%
you know what is the value of n after
these<00:15:06.160><c> two</c><00:15:06.399><c> threads</c><00:15:06.720><c> that</c><00:15:06.880><c> both</c><00:15:07.120><c> in</c><00:15:07.279><c> increment</c>

00:15:11.430 --> 00:15:11.440 align:start position:0%
 
 

00:15:11.440 --> 00:15:14.629 align:start position:0%
 
just<00:15:11.680><c> one</c><00:15:12.560><c> yeah</c><00:15:12.800><c> it's</c><00:15:12.959><c> one</c><00:15:13.519><c> and</c><00:15:13.760><c> what</c><00:15:14.320><c> what</c><00:15:14.560><c> is</c>

00:15:14.629 --> 00:15:14.639 align:start position:0%
just one yeah it's one and what what is
 

00:15:14.639 --> 00:15:15.030 align:start position:0%
just one yeah it's one and what what is
this

00:15:15.030 --> 00:15:15.040 align:start position:0%
this
 

00:15:15.040 --> 00:15:16.629 align:start position:0%
this
value<00:15:15.360><c> supposed</c><00:15:15.680><c> to</c><00:15:15.760><c> be</c><00:15:16.000><c> or</c><00:15:16.160><c> what</c><00:15:16.399><c> would</c><00:15:16.560><c> you</c>

00:15:16.629 --> 00:15:16.639 align:start position:0%
value supposed to be or what would you
 

00:15:16.639 --> 00:15:22.150 align:start position:0%
value supposed to be or what would you
expect<00:15:16.959><c> it</c><00:15:17.040><c> to</c><00:15:17.120><c> be</c>

00:15:22.150 --> 00:15:22.160 align:start position:0%
 
 

00:15:22.160 --> 00:15:24.230 align:start position:0%
 
two<00:15:22.800><c> yeah</c><00:15:23.120><c> expect</c><00:15:23.360><c> it</c><00:15:23.440><c> to</c><00:15:23.519><c> be</c><00:15:23.680><c> two</c><00:15:23.920><c> right</c><00:15:24.079><c> and</c>

00:15:24.230 --> 00:15:24.240 align:start position:0%
two yeah expect it to be two right and
 

00:15:24.240 --> 00:15:25.910 align:start position:0%
two yeah expect it to be two right and
so<00:15:24.399><c> one</c><00:15:24.639><c> is</c><00:15:24.720><c> definitely</c><00:15:24.959><c> not</c><00:15:25.199><c> equal</c><00:15:25.440><c> to</c><00:15:25.600><c> two</c>

00:15:25.910 --> 00:15:25.920 align:start position:0%
so one is definitely not equal to two
 

00:15:25.920 --> 00:15:26.389 align:start position:0%
so one is definitely not equal to two
and

00:15:26.389 --> 00:15:26.399 align:start position:0%
and
 

00:15:26.399 --> 00:15:29.910 align:start position:0%
and
uh<00:15:26.720><c> there's</c><00:15:26.959><c> a</c><00:15:27.040><c> bug</c><00:15:28.399><c> uh</c><00:15:28.880><c> and</c><00:15:29.120><c> so</c>

00:15:29.910 --> 00:15:29.920 align:start position:0%
uh there's a bug uh and so
 

00:15:29.920 --> 00:15:31.350 align:start position:0%
uh there's a bug uh and so
and<00:15:30.000><c> this</c><00:15:30.240><c> is</c><00:15:30.320><c> like</c><00:15:30.560><c> you</c><00:15:30.639><c> know</c><00:15:30.959><c> the</c><00:15:31.120><c> sort</c><00:15:31.279><c> of</c>

00:15:31.350 --> 00:15:31.360 align:start position:0%
and this is like you know the sort of
 

00:15:31.360 --> 00:15:33.269 align:start position:0%
and this is like you know the sort of
the<00:15:31.440><c> heart</c><00:15:31.680><c> of</c><00:15:31.759><c> race</c><00:15:31.920><c> conditions</c><00:15:32.720><c> uh</c>

00:15:33.269 --> 00:15:33.279 align:start position:0%
the heart of race conditions uh
 

00:15:33.279 --> 00:15:35.350 align:start position:0%
the heart of race conditions uh
which<00:15:33.600><c> uh</c><00:15:34.000><c> is</c><00:15:34.240><c> not</c><00:15:34.480><c> you</c><00:15:34.639><c> know</c><00:15:34.800><c> if</c><00:15:35.040><c> in</c><00:15:35.120><c> an</c>

00:15:35.350 --> 00:15:35.360 align:start position:0%
which uh is not you know if in an
 

00:15:35.360 --> 00:15:36.550 align:start position:0%
which uh is not you know if in an
unforced<00:15:35.920><c> uh</c>

00:15:36.550 --> 00:15:36.560 align:start position:0%
unforced uh
 

00:15:36.560 --> 00:15:38.389 align:start position:0%
unforced uh
an<00:15:36.720><c> unfortunate</c><00:15:37.120><c> sequence</c><00:15:37.440><c> of</c><00:15:37.600><c> events</c><00:15:38.000><c> where</c>

00:15:38.389 --> 00:15:38.399 align:start position:0%
an unfortunate sequence of events where
 

00:15:38.399 --> 00:15:40.389 align:start position:0%
an unfortunate sequence of events where
threats<00:15:38.720><c> share</c><00:15:39.199><c> you</c><00:15:39.360><c> know</c><00:15:39.600><c> state</c>

00:15:40.389 --> 00:15:40.399 align:start position:0%
threats share you know state
 

00:15:40.399 --> 00:15:42.389 align:start position:0%
threats share you know state
uh<00:15:40.639><c> the</c><00:15:40.880><c> updates</c><00:15:41.279><c> actually</c><00:15:41.519><c> might</c><00:15:41.680><c> not</c><00:15:42.160><c> be</c>

00:15:42.389 --> 00:15:42.399 align:start position:0%
uh the updates actually might not be
 

00:15:42.399 --> 00:15:43.910 align:start position:0%
uh the updates actually might not be
reflected<00:15:42.800><c> correctly</c>

00:15:43.910 --> 00:15:43.920 align:start position:0%
reflected correctly
 

00:15:43.920 --> 00:15:45.189 align:start position:0%
reflected correctly
and<00:15:44.160><c> of</c><00:15:44.240><c> course</c><00:15:44.399><c> most</c><00:15:44.639><c> of</c><00:15:44.720><c> the</c><00:15:44.800><c> time</c><00:15:44.959><c> this</c><00:15:45.120><c> will</c>

00:15:45.189 --> 00:15:45.199 align:start position:0%
and of course most of the time this will
 

00:15:45.199 --> 00:15:46.790 align:start position:0%
and of course most of the time this will
work<00:15:45.440><c> out</c><00:15:45.600><c> fine</c><00:15:45.920><c> because</c><00:15:46.160><c> you</c><00:15:46.320><c> just</c><00:15:46.560><c> have</c><00:15:46.720><c> to</c>

00:15:46.790 --> 00:15:46.800 align:start position:0%
work out fine because you just have to
 

00:15:46.800 --> 00:15:48.310 align:start position:0%
work out fine because you just have to
be<00:15:46.959><c> in</c><00:15:47.040><c> the</c><00:15:47.199><c> sort</c><00:15:47.360><c> of</c><00:15:47.519><c> very</c>

00:15:48.310 --> 00:15:48.320 align:start position:0%
be in the sort of very
 

00:15:48.320 --> 00:15:51.350 align:start position:0%
be in the sort of very
uh<00:15:49.360><c> sort</c><00:15:49.519><c> of</c><00:15:49.839><c> this</c><00:15:50.079><c> very</c><00:15:50.399><c> specific</c><00:15:50.959><c> case</c>

00:15:51.350 --> 00:15:51.360 align:start position:0%
uh sort of this very specific case
 

00:15:51.360 --> 00:15:52.949 align:start position:0%
uh sort of this very specific case
before<00:15:51.680><c> it</c><00:15:51.759><c> shows</c><00:15:52.079><c> up</c>

00:15:52.949 --> 00:15:52.959 align:start position:0%
before it shows up
 

00:15:52.959 --> 00:15:54.949 align:start position:0%
before it shows up
so<00:15:53.120><c> for</c><00:15:53.199><c> example</c><00:15:53.600><c> i</c><00:15:53.680><c> think</c><00:15:53.839><c> one</c><00:15:54.160><c> uh</c><00:15:54.480><c> one</c><00:15:54.639><c> of</c><00:15:54.720><c> you</c>

00:15:54.949 --> 00:15:54.959 align:start position:0%
so for example i think one uh one of you
 

00:15:54.959 --> 00:15:56.550 align:start position:0%
so for example i think one uh one of you
reported<00:15:55.440><c> like</c><00:15:55.839><c> oh</c><00:15:56.000><c> i</c>

00:15:56.550 --> 00:15:56.560 align:start position:0%
reported like oh i
 

00:15:56.560 --> 00:15:58.470 align:start position:0%
reported like oh i
didn't<00:15:56.720><c> have</c><00:15:56.880><c> my</c><00:15:57.279><c> walks</c><00:15:57.519><c> or</c><00:15:57.680><c> my</c><00:15:57.839><c> race</c><00:15:58.160><c> you</c><00:15:58.320><c> know</c>

00:15:58.470 --> 00:15:58.480 align:start position:0%
didn't have my walks or my race you know
 

00:15:58.480 --> 00:16:00.550 align:start position:0%
didn't have my walks or my race you know
my<00:15:59.440><c> walks</c><00:15:59.680><c> in</c><00:15:59.839><c> order</c>

00:16:00.550 --> 00:16:00.560 align:start position:0%
my walks in order
 

00:16:00.560 --> 00:16:02.790 align:start position:0%
my walks in order
and<00:16:00.880><c> oh</c><00:16:01.120><c> my</c><00:16:01.279><c> program</c><00:16:01.680><c> just</c><00:16:01.759><c> worked</c><00:16:02.000><c> fine</c><00:16:02.480><c> and</c>

00:16:02.790 --> 00:16:02.800 align:start position:0%
and oh my program just worked fine and
 

00:16:02.800 --> 00:16:04.550 align:start position:0%
and oh my program just worked fine and
that's<00:16:03.199><c> actually</c><00:16:03.519><c> the</c><00:16:03.759><c> the</c><00:16:04.160><c> real</c>

00:16:04.550 --> 00:16:04.560 align:start position:0%
that's actually the the real
 

00:16:04.560 --> 00:16:05.749 align:start position:0%
that's actually the the real
issue<00:16:04.800><c> with</c><00:16:04.959><c> race</c><00:16:05.120><c> conditions</c><00:16:05.600><c> they</c>

00:16:05.749 --> 00:16:05.759 align:start position:0%
issue with race conditions they
 

00:16:05.759 --> 00:16:07.670 align:start position:0%
issue with race conditions they
typically<00:16:06.079><c> just</c><00:16:06.240><c> work</c><00:16:06.480><c> fine</c><00:16:07.120><c> but</c><00:16:07.360><c> sometimes</c>

00:16:07.670 --> 00:16:07.680 align:start position:0%
typically just work fine but sometimes
 

00:16:07.680 --> 00:16:09.509 align:start position:0%
typically just work fine but sometimes
it<00:16:07.759><c> goes</c><00:16:08.000><c> wrong</c>

00:16:09.509 --> 00:16:09.519 align:start position:0%
it goes wrong
 

00:16:09.519 --> 00:16:12.310 align:start position:0%
it goes wrong
so<00:16:09.680><c> the</c><00:16:09.839><c> two</c><00:16:10.000><c> ways</c><00:16:10.240><c> to</c><00:16:11.680><c> address</c><00:16:12.079><c> race</c>

00:16:12.310 --> 00:16:12.320 align:start position:0%
so the two ways to address race
 

00:16:12.320 --> 00:16:13.509 align:start position:0%
so the two ways to address race
conditions

00:16:13.509 --> 00:16:13.519 align:start position:0%
conditions
 

00:16:13.519 --> 00:16:17.749 align:start position:0%
conditions
the<00:16:13.680><c> first</c><00:16:13.920><c> way</c><00:16:14.160><c> is</c><00:16:14.320><c> to</c><00:16:14.560><c> avoid</c><00:16:14.880><c> sharing</c>

00:16:17.749 --> 00:16:17.759 align:start position:0%
 
 

00:16:17.759 --> 00:16:20.870 align:start position:0%
 
don't<00:16:17.920><c> share</c><00:16:18.160><c> variables</c><00:16:20.639><c> and</c>

00:16:20.870 --> 00:16:20.880 align:start position:0%
don't share variables and
 

00:16:20.880 --> 00:16:22.470 align:start position:0%
don't share variables and
this<00:16:21.040><c> is</c><00:16:21.199><c> one</c><00:16:21.360><c> style</c><00:16:21.680><c> of</c><00:16:21.759><c> programming</c><00:16:22.240><c> that</c>

00:16:22.470 --> 00:16:22.480 align:start position:0%
this is one style of programming that
 

00:16:22.480 --> 00:16:23.910 align:start position:0%
this is one style of programming that
you<00:16:22.639><c> know</c><00:16:22.880><c> go</c><00:16:23.199><c> encourages</c>

00:16:23.910 --> 00:16:23.920 align:start position:0%
you know go encourages
 

00:16:23.920 --> 00:16:25.509 align:start position:0%
you know go encourages
by<00:16:24.079><c> using</c><00:16:24.399><c> channels</c><00:16:24.800><c> you</c><00:16:24.880><c> know</c><00:16:25.040><c> channels</c><00:16:25.360><c> you</c>

00:16:25.509 --> 00:16:25.519 align:start position:0%
by using channels you know channels you
 

00:16:25.519 --> 00:16:27.189 align:start position:0%
by using channels you know channels you
just<00:16:25.680><c> communicate</c><00:16:26.320><c> values</c><00:16:26.720><c> but</c><00:16:26.880><c> you</c><00:16:27.040><c> don't</c>

00:16:27.189 --> 00:16:27.199 align:start position:0%
just communicate values but you don't
 

00:16:27.199 --> 00:16:28.790 align:start position:0%
just communicate values but you don't
really<00:16:27.440><c> directly</c><00:16:27.839><c> share</c><00:16:28.079><c> memory</c>

00:16:28.790 --> 00:16:28.800 align:start position:0%
really directly share memory
 

00:16:28.800 --> 00:16:32.069 align:start position:0%
really directly share memory
so<00:16:28.959><c> that's</c><00:16:29.120><c> one</c><00:16:29.279><c> way</c><00:16:29.440><c> of</c><00:16:29.519><c> doing</c><00:16:29.759><c> it</c><00:16:30.000><c> another</c><00:16:31.600><c> so</c>

00:16:32.069 --> 00:16:32.079 align:start position:0%
so that's one way of doing it another so
 

00:16:32.079 --> 00:16:33.590 align:start position:0%
so that's one way of doing it another so
avoid<00:16:32.399><c> sharing</c><00:16:32.639><c> is</c><00:16:32.720><c> one</c><00:16:32.880><c> big</c><00:16:33.120><c> approach</c><00:16:33.440><c> the</c>

00:16:33.590 --> 00:16:33.600 align:start position:0%
avoid sharing is one big approach the
 

00:16:33.600 --> 00:16:38.550 align:start position:0%
avoid sharing is one big approach the
other<00:16:33.759><c> approach</c><00:16:34.079><c> is</c><00:16:34.240><c> actually</c><00:16:34.560><c> to</c><00:16:34.720><c> use</c><00:16:34.959><c> locks</c>

00:16:38.550 --> 00:16:38.560 align:start position:0%
 
 

00:16:38.560 --> 00:16:40.310 align:start position:0%
 
you<00:16:38.639><c> know</c><00:16:38.800><c> to</c><00:16:39.199><c> maybe</c><00:16:39.600><c> make</c><00:16:39.759><c> a</c><00:16:39.839><c> sequence</c><00:16:40.160><c> of</c>

00:16:40.310 --> 00:16:40.320 align:start position:0%
you know to maybe make a sequence of
 

00:16:40.320 --> 00:16:42.470 align:start position:0%
you know to maybe make a sequence of
instructions<00:16:40.959><c> an</c><00:16:41.120><c> atomic</c><00:16:41.519><c> operation</c>

00:16:42.470 --> 00:16:42.480 align:start position:0%
instructions an atomic operation
 

00:16:42.480 --> 00:16:43.829 align:start position:0%
instructions an atomic operation
now<00:16:42.639><c> we'll</c><00:16:42.800><c> talk</c><00:16:42.959><c> a</c><00:16:43.040><c> lot</c><00:16:43.199><c> more</c><00:16:43.360><c> about</c><00:16:43.519><c> that</c><00:16:43.759><c> in</c>

00:16:43.829 --> 00:16:43.839 align:start position:0%
now we'll talk a lot more about that in
 

00:16:43.839 --> 00:16:45.990 align:start position:0%
now we'll talk a lot more about that in
a<00:16:43.920><c> second</c><00:16:45.040><c> uh</c><00:16:45.279><c> one</c><00:16:45.440><c> of</c><00:16:45.600><c> the</c><00:16:45.680><c> things</c><00:16:45.839><c> that</c><00:16:45.920><c> i</c>

00:16:45.990 --> 00:16:46.000 align:start position:0%
a second uh one of the things that i
 

00:16:46.000 --> 00:16:47.590 align:start position:0%
a second uh one of the things that i
want<00:16:46.160><c> to</c><00:16:46.240><c> point</c><00:16:46.480><c> out</c><00:16:46.639><c> that</c><00:16:46.800><c> is</c><00:16:46.880><c> really</c><00:16:47.199><c> cool</c>

00:16:47.590 --> 00:16:47.600 align:start position:0%
want to point out that is really cool
 

00:16:47.600 --> 00:16:48.150 align:start position:0%
want to point out that is really cool
about

00:16:48.150 --> 00:16:48.160 align:start position:0%
about
 

00:16:48.160 --> 00:16:50.629 align:start position:0%
about
what<00:16:48.399><c> is</c><00:16:48.560><c> usual</c><00:16:48.880><c> tool</c><00:16:49.519><c> is</c><00:16:49.920><c> go</c><00:16:50.160><c> actually</c><00:16:50.399><c> have</c><00:16:50.560><c> a</c>

00:16:50.629 --> 00:16:50.639 align:start position:0%
what is usual tool is go actually have a
 

00:16:50.639 --> 00:16:52.550 align:start position:0%
what is usual tool is go actually have a
race<00:16:50.880><c> detector</c>

00:16:52.550 --> 00:16:52.560 align:start position:0%
race detector
 

00:16:52.560 --> 00:16:54.790 align:start position:0%
race detector
and<00:16:53.040><c> you</c><00:16:53.199><c> know</c><00:16:53.279><c> most</c><00:16:53.519><c> of</c><00:16:53.600><c> the</c><00:16:53.759><c> labs</c><00:16:54.079><c> that</c><00:16:54.240><c> you</c>

00:16:54.790 --> 00:16:54.800 align:start position:0%
and you know most of the labs that you
 

00:16:54.800 --> 00:16:56.150 align:start position:0%
and you know most of the labs that you
you<00:16:54.959><c> were</c><00:16:55.120><c> doing</c><00:16:55.360><c> would</c><00:16:55.519><c> encourage</c><00:16:55.920><c> you</c><00:16:56.000><c> to</c>

00:16:56.150 --> 00:16:56.160 align:start position:0%
you were doing would encourage you to
 

00:16:56.160 --> 00:16:57.350 align:start position:0%
you were doing would encourage you to
basically<00:16:56.639><c> run</c><00:16:56.880><c> go</c>

00:16:57.350 --> 00:16:57.360 align:start position:0%
basically run go
 

00:16:57.360 --> 00:17:00.550 align:start position:0%
basically run go
using<00:16:57.759><c> the</c><00:16:58.000><c> dash</c><00:16:58.480><c> race</c><00:16:58.800><c> flag</c><00:16:59.519><c> and</c>

00:17:00.550 --> 00:17:00.560 align:start position:0%
using the dash race flag and
 

00:17:00.560 --> 00:17:02.949 align:start position:0%
using the dash race flag and
that<00:17:00.800><c> will</c><00:17:01.040><c> actually</c><00:17:01.600><c> not</c><00:17:01.839><c> catch</c><00:17:02.160><c> every</c>

00:17:02.949 --> 00:17:02.959 align:start position:0%
that will actually not catch every
 

00:17:02.959 --> 00:17:04.549 align:start position:0%
that will actually not catch every
possible<00:17:03.360><c> race</c><00:17:03.519><c> but</c><00:17:03.680><c> it</c><00:17:03.759><c> does</c><00:17:03.920><c> an</c><00:17:04.079><c> extremely</c>

00:17:04.549 --> 00:17:04.559 align:start position:0%
possible race but it does an extremely
 

00:17:04.559 --> 00:17:07.350 align:start position:0%
possible race but it does an extremely
good<00:17:04.720><c> job</c><00:17:05.039><c> of</c><00:17:05.199><c> actually</c><00:17:05.439><c> identifying</c><00:17:06.000><c> races</c>

00:17:07.350 --> 00:17:07.360 align:start position:0%
good job of actually identifying races
 

00:17:07.360 --> 00:17:10.230 align:start position:0%
good job of actually identifying races
and<00:17:07.679><c> so</c><00:17:07.839><c> you</c><00:17:08.000><c> should</c><00:17:08.559><c> by</c><00:17:08.720><c> default</c><00:17:09.199><c> run</c><00:17:09.839><c> go</c><00:17:10.079><c> with</c>

00:17:10.230 --> 00:17:10.240 align:start position:0%
and so you should by default run go with
 

00:17:10.240 --> 00:17:13.029 align:start position:0%
and so you should by default run go with
the<00:17:10.319><c> race</c><00:17:10.480><c> detector</c><00:17:10.959><c> enabled</c>

00:17:13.029 --> 00:17:13.039 align:start position:0%
the race detector enabled
 

00:17:13.039 --> 00:17:15.270 align:start position:0%
the race detector enabled
okay<00:17:13.280><c> so</c><00:17:13.439><c> that's</c><00:17:14.079><c> one</c><00:17:14.400><c> challenge</c><00:17:14.720><c> with</c><00:17:14.959><c> reds</c>

00:17:15.270 --> 00:17:15.280 align:start position:0%
okay so that's one challenge with reds
 

00:17:15.280 --> 00:17:16.549 align:start position:0%
okay so that's one challenge with reds
the<00:17:15.360><c> second</c><00:17:15.679><c> challenge</c><00:17:16.000><c> with</c><00:17:16.079><c> threats</c><00:17:16.400><c> is</c>

00:17:16.549 --> 00:17:16.559 align:start position:0%
the second challenge with threats is
 

00:17:16.559 --> 00:17:19.429 align:start position:0%
the second challenge with threats is
actually<00:17:16.839><c> coordination</c>

00:17:19.429 --> 00:17:19.439 align:start position:0%
actually coordination
 

00:17:19.439 --> 00:17:22.390 align:start position:0%
actually coordination
so<00:17:19.600><c> it's</c><00:17:19.760><c> often</c><00:17:20.079><c> the</c><00:17:20.160><c> case</c><00:17:20.720><c> that</c><00:17:21.360><c> one</c><00:17:21.600><c> has</c><00:17:21.839><c> to</c>

00:17:22.390 --> 00:17:22.400 align:start position:0%
so it's often the case that one has to
 

00:17:22.400 --> 00:17:23.990 align:start position:0%
so it's often the case that one has to
you<00:17:22.559><c> know</c><00:17:22.640><c> one</c><00:17:22.799><c> friend</c><00:17:23.120><c> must</c><00:17:23.360><c> wait</c><00:17:23.600><c> on</c><00:17:23.760><c> another</c>

00:17:23.990 --> 00:17:24.000 align:start position:0%
you know one friend must wait on another
 

00:17:24.000 --> 00:17:26.390 align:start position:0%
you know one friend must wait on another
fret<00:17:24.319><c> before</c><00:17:24.799><c> something</c><00:17:25.120><c> is</c><00:17:25.280><c> accomplished</c>

00:17:26.390 --> 00:17:26.400 align:start position:0%
fret before something is accomplished
 

00:17:26.400 --> 00:17:28.309 align:start position:0%
fret before something is accomplished
uh<00:17:26.720><c> you</c><00:17:26.880><c> know</c><00:17:27.039><c> the</c><00:17:27.199><c> number</c><00:17:27.520><c> of</c><00:17:27.600><c> the</c><00:17:28.079><c> go</c>

00:17:28.309 --> 00:17:28.319 align:start position:0%
uh you know the number of the go
 

00:17:28.319 --> 00:17:30.150 align:start position:0%
uh you know the number of the go
exercises<00:17:29.039><c> in</c><00:17:29.120><c> the</c><00:17:29.200><c> tutorial</c><00:17:29.760><c> you</c><00:17:29.919><c> know</c><00:17:30.080><c> have</c>

00:17:30.150 --> 00:17:30.160 align:start position:0%
exercises in the tutorial you know have
 

00:17:30.160 --> 00:17:31.190 align:start position:0%
exercises in the tutorial you know have
that<00:17:30.320><c> kind</c><00:17:30.480><c> of</c>

00:17:31.190 --> 00:17:31.200 align:start position:0%
that kind of
 

00:17:31.200 --> 00:17:33.350 align:start position:0%
that kind of
form<00:17:31.840><c> and</c><00:17:32.000><c> there's</c><00:17:32.240><c> two</c><00:17:32.480><c> ways</c><00:17:32.880><c> you</c><00:17:33.039><c> know</c><00:17:33.120><c> go</c>

00:17:33.350 --> 00:17:33.360 align:start position:0%
form and there's two ways you know go
 

00:17:33.360 --> 00:17:34.789 align:start position:0%
form and there's two ways you know go
actually<00:17:33.679><c> through</c><00:17:33.919><c> primitives</c><00:17:34.400><c> for</c>

00:17:34.789 --> 00:17:34.799 align:start position:0%
actually through primitives for
 

00:17:34.799 --> 00:17:37.350 align:start position:0%
actually through primitives for
dealing<00:17:35.120><c> with</c><00:17:35.280><c> that</c><00:17:35.520><c> one</c><00:17:35.679><c> again</c><00:17:36.000><c> channels</c><00:17:37.280><c> you</c>

00:17:37.350 --> 00:17:37.360 align:start position:0%
dealing with that one again channels you
 

00:17:37.360 --> 00:17:38.549 align:start position:0%
dealing with that one again channels you
know<00:17:37.520><c> channels</c><00:17:37.919><c> basically</c>

00:17:38.549 --> 00:17:38.559 align:start position:0%
know channels basically
 

00:17:38.559 --> 00:17:39.990 align:start position:0%
know channels basically
allow<00:17:38.799><c> you</c><00:17:38.960><c> to</c><00:17:39.039><c> communicate</c><00:17:39.679><c> and</c><00:17:39.919><c> to</c>

00:17:39.990 --> 00:17:40.000 align:start position:0%
allow you to communicate and to
 

00:17:40.000 --> 00:17:42.070 align:start position:0%
allow you to communicate and to
coordinate<00:17:40.559><c> at</c><00:17:40.640><c> the</c><00:17:40.720><c> same</c><00:17:40.960><c> time</c>

00:17:42.070 --> 00:17:42.080 align:start position:0%
coordinate at the same time
 

00:17:42.080 --> 00:17:44.310 align:start position:0%
coordinate at the same time
or<00:17:42.960><c> uh</c><00:17:43.360><c> you</c><00:17:43.520><c> know</c><00:17:43.600><c> which</c><00:17:43.760><c> i'll</c><00:17:43.919><c> talk</c><00:17:44.080><c> a</c><00:17:44.160><c> little</c>

00:17:44.310 --> 00:17:44.320 align:start position:0%
or uh you know which i'll talk a little
 

00:17:44.320 --> 00:17:46.070 align:start position:0%
or uh you know which i'll talk a little
bit<00:17:44.480><c> later</c><00:17:44.799><c> about</c><00:17:45.120><c> you</c><00:17:45.280><c> know</c>

00:17:46.070 --> 00:17:46.080 align:start position:0%
bit later about you know
 

00:17:46.080 --> 00:17:53.590 align:start position:0%
bit later about you know
condition<00:17:46.480><c> variables</c>

00:17:53.590 --> 00:17:53.600 align:start position:0%
 
 

00:17:53.600 --> 00:17:55.190 align:start position:0%
 
and<00:17:53.919><c> both</c><00:17:54.080><c> can</c><00:17:54.240><c> be</c><00:17:54.400><c> useful</c><00:17:54.799><c> i'll</c><00:17:54.960><c> talk</c><00:17:55.120><c> a</c>

00:17:55.190 --> 00:17:55.200 align:start position:0%
and both can be useful i'll talk a
 

00:17:55.200 --> 00:17:57.110 align:start position:0%
and both can be useful i'll talk a
little<00:17:55.360><c> bit</c><00:17:55.520><c> more</c><00:17:55.679><c> about</c><00:17:55.919><c> that</c><00:17:56.559><c> uh</c><00:17:56.799><c> and</c><00:17:56.880><c> then</c>

00:17:57.110 --> 00:17:57.120 align:start position:0%
little bit more about that uh and then
 

00:17:57.120 --> 00:17:58.310 align:start position:0%
little bit more about that uh and then
finally<00:17:57.520><c> you</c><00:17:57.600><c> know</c><00:17:57.760><c> so</c><00:17:57.919><c> the</c>

00:17:58.310 --> 00:17:58.320 align:start position:0%
finally you know so the
 

00:17:58.320 --> 00:18:00.470 align:start position:0%
finally you know so the
final<00:17:58.840><c> challenge</c><00:17:59.600><c> uh</c><00:18:00.000><c> big</c><00:18:00.240><c> sort</c><00:18:00.400><c> of</c>

00:18:00.470 --> 00:18:00.480 align:start position:0%
final challenge uh big sort of
 

00:18:00.480 --> 00:18:03.029 align:start position:0%
final challenge uh big sort of
conceptual<00:18:00.960><c> challenge</c><00:18:01.360><c> is</c><00:18:01.600><c> uh</c><00:18:02.000><c> you</c><00:18:02.080><c> can</c>

00:18:03.029 --> 00:18:03.039 align:start position:0%
conceptual challenge is uh you can
 

00:18:03.039 --> 00:18:06.630 align:start position:0%
conceptual challenge is uh you can
get<00:18:03.200><c> that</c><00:18:03.440><c> lock</c><00:18:05.440><c> so</c><00:18:05.679><c> if</c><00:18:05.760><c> one</c><00:18:06.000><c> thread</c><00:18:06.240><c> waits</c><00:18:06.480><c> in</c>

00:18:06.630 --> 00:18:06.640 align:start position:0%
get that lock so if one thread waits in
 

00:18:06.640 --> 00:18:06.870 align:start position:0%
get that lock so if one thread waits in
the

00:18:06.870 --> 00:18:06.880 align:start position:0%
the
 

00:18:06.880 --> 00:18:09.830 align:start position:0%
the
uh<00:18:07.360><c> like</c><00:18:07.520><c> t1</c><00:18:08.000><c> waits</c><00:18:08.320><c> on</c><00:18:08.480><c> t2</c><00:18:08.960><c> and</c><00:18:09.039><c> t2</c><00:18:09.520><c> waits</c><00:18:09.760><c> from</c>

00:18:09.830 --> 00:18:09.840 align:start position:0%
uh like t1 waits on t2 and t2 waits from
 

00:18:09.840 --> 00:18:10.789 align:start position:0%
uh like t1 waits on t2 and t2 waits from
t1<00:18:10.400><c> you</c><00:18:10.559><c> know</c>

00:18:10.789 --> 00:18:10.799 align:start position:0%
t1 you know
 

00:18:10.799 --> 00:18:12.150 align:start position:0%
t1 you know
for<00:18:10.960><c> example</c><00:18:11.280><c> to</c><00:18:11.360><c> release</c><00:18:11.679><c> your</c><00:18:11.760><c> lock</c><00:18:12.000><c> or</c>

00:18:12.150 --> 00:18:12.160 align:start position:0%
for example to release your lock or
 

00:18:12.160 --> 00:18:14.230 align:start position:0%
for example to release your lock or
before<00:18:12.960><c> some</c><00:18:13.200><c> other</c><00:18:13.520><c> sequencing</c><00:18:14.080><c> you</c><00:18:14.160><c> can</c>

00:18:14.230 --> 00:18:14.240 align:start position:0%
before some other sequencing you can
 

00:18:14.240 --> 00:18:15.590 align:start position:0%
before some other sequencing you can
basically<00:18:14.559><c> sort</c><00:18:14.720><c> what</c><00:18:14.880><c> i</c><00:18:15.039><c> call</c><00:18:15.200><c> deadly</c>

00:18:15.590 --> 00:18:15.600 align:start position:0%
basically sort what i call deadly
 

00:18:15.600 --> 00:18:16.390 align:start position:0%
basically sort what i call deadly
embrace

00:18:16.390 --> 00:18:16.400 align:start position:0%
embrace
 

00:18:16.400 --> 00:18:18.230 align:start position:0%
embrace
you<00:18:16.480><c> know</c><00:18:16.640><c> where</c><00:18:17.280><c> both</c><00:18:17.600><c> were</c><00:18:17.679><c> waiting</c><00:18:17.919><c> on</c><00:18:18.080><c> the</c>

00:18:18.230 --> 00:18:18.240 align:start position:0%
you know where both were waiting on the
 

00:18:18.240 --> 00:18:20.310 align:start position:0%
you know where both were waiting on the
other<00:18:18.640><c> and</c><00:18:19.039><c> as</c><00:18:19.200><c> a</c><00:18:19.280><c> result</c><00:18:19.600><c> nothing</c><00:18:19.840><c> makes</c><00:18:20.080><c> for</c>

00:18:20.310 --> 00:18:20.320 align:start position:0%
other and as a result nothing makes for
 

00:18:20.320 --> 00:18:24.630 align:start position:0%
other and as a result nothing makes for
progress<00:18:22.000><c> uh</c><00:18:23.280><c> the</c><00:18:23.440><c> trivial</c><00:18:23.919><c> way</c><00:18:24.160><c> of</c><00:18:24.320><c> getting</c>

00:18:24.630 --> 00:18:24.640 align:start position:0%
progress uh the trivial way of getting
 

00:18:24.640 --> 00:18:25.750 align:start position:0%
progress uh the trivial way of getting
you<00:18:24.799><c> know</c><00:18:24.880><c> say</c><00:18:25.120><c> deadlock</c>

00:18:25.750 --> 00:18:25.760 align:start position:0%
you know say deadlock
 

00:18:25.760 --> 00:18:27.590 align:start position:0%
you know say deadlock
in<00:18:26.160><c> a</c><00:18:26.320><c> go</c><00:18:26.559><c> would</c><00:18:26.720><c> be</c><00:18:26.960><c> you</c><00:18:27.039><c> know</c><00:18:27.200><c> you</c><00:18:27.360><c> have</c><00:18:27.520><c> a</c>

00:18:27.590 --> 00:18:27.600 align:start position:0%
in a go would be you know you have a
 

00:18:27.600 --> 00:18:29.350 align:start position:0%
in a go would be you know you have a
single<00:18:27.919><c> thread</c><00:18:28.480><c> there's</c><00:18:28.720><c> no</c><00:18:28.880><c> other</c><00:18:29.120><c> threads</c>

00:18:29.350 --> 00:18:29.360 align:start position:0%
single thread there's no other threads
 

00:18:29.360 --> 00:18:30.310 align:start position:0%
single thread there's no other threads
at<00:18:29.520><c> all</c>

00:18:30.310 --> 00:18:30.320 align:start position:0%
at all
 

00:18:30.320 --> 00:18:35.029 align:start position:0%
at all
and<00:18:30.960><c> you're</c><00:18:31.200><c> right</c><00:18:31.520><c> now</c><00:18:31.760><c> to</c><00:18:31.919><c> your</c><00:18:32.080><c> channel</c>

00:18:35.029 --> 00:18:35.039 align:start position:0%
 
 

00:18:35.039 --> 00:18:37.029 align:start position:0%
 
and<00:18:35.200><c> that</c><00:18:35.360><c> will</c><00:18:35.600><c> block</c><00:18:36.080><c> now</c><00:18:36.320><c> that</c><00:18:36.480><c> one</c><00:18:36.720><c> thread</c>

00:18:37.029 --> 00:18:37.039 align:start position:0%
and that will block now that one thread
 

00:18:37.039 --> 00:18:38.150 align:start position:0%
and that will block now that one thread
until<00:18:37.280><c> somebody</c><00:18:37.679><c> else</c>

00:18:38.150 --> 00:18:38.160 align:start position:0%
until somebody else
 

00:18:38.160 --> 00:18:39.510 align:start position:0%
until somebody else
you<00:18:38.240><c> know</c><00:18:38.480><c> reads</c><00:18:38.720><c> some</c><00:18:38.960><c> other</c><00:18:39.120><c> friend</c><00:18:39.280><c> reads</c>

00:18:39.510 --> 00:18:39.520 align:start position:0%
you know reads some other friend reads
 

00:18:39.520 --> 00:18:40.870 align:start position:0%
you know reads some other friend reads
from<00:18:39.679><c> the</c><00:18:39.760><c> channel</c><00:18:40.000><c> but</c><00:18:40.160><c> if</c><00:18:40.320><c> there's</c><00:18:40.480><c> no</c><00:18:40.720><c> other</c>

00:18:40.870 --> 00:18:40.880 align:start position:0%
from the channel but if there's no other
 

00:18:40.880 --> 00:18:42.549 align:start position:0%
from the channel but if there's no other
thread<00:18:41.200><c> at</c><00:18:41.360><c> all</c><00:18:41.600><c> you</c><00:18:41.760><c> know</c><00:18:41.919><c> that</c><00:18:42.080><c> will</c><00:18:42.240><c> result</c>

00:18:42.549 --> 00:18:42.559 align:start position:0%
thread at all you know that will result
 

00:18:42.559 --> 00:18:43.750 align:start position:0%
thread at all you know that will result
in<00:18:42.720><c> a</c><00:18:42.799><c> deadlock</c>

00:18:43.750 --> 00:18:43.760 align:start position:0%
in a deadlock
 

00:18:43.760 --> 00:18:45.350 align:start position:0%
in a deadlock
this<00:18:43.919><c> is</c><00:18:44.000><c> like</c><00:18:44.160><c> the</c><00:18:44.320><c> simplest</c><00:18:44.799><c> possible</c>

00:18:45.350 --> 00:18:45.360 align:start position:0%
this is like the simplest possible
 

00:18:45.360 --> 00:18:46.870 align:start position:0%
this is like the simplest possible
deadlock<00:18:45.760><c> possible</c>

00:18:46.870 --> 00:18:46.880 align:start position:0%
deadlock possible
 

00:18:46.880 --> 00:18:49.990 align:start position:0%
deadlock possible
um<00:18:47.600><c> and</c><00:18:47.919><c> you</c><00:18:48.000><c> know</c><00:18:48.240><c> go</c><00:18:48.480><c> actually</c><00:18:49.280><c> will</c><00:18:49.679><c> catch</c>

00:18:49.990 --> 00:18:50.000 align:start position:0%
um and you know go actually will catch
 

00:18:50.000 --> 00:18:51.669 align:start position:0%
um and you know go actually will catch
this<00:18:50.240><c> case</c><00:18:50.640><c> and</c><00:18:51.039><c> we'll</c><00:18:51.280><c> run</c>

00:18:51.669 --> 00:18:51.679 align:start position:0%
this case and we'll run
 

00:18:51.679 --> 00:18:53.590 align:start position:0%
this case and we'll run
a<00:18:51.760><c> razor</c><00:18:52.080><c> runtime</c><00:18:52.559><c> error</c><00:18:52.799><c> saying</c><00:18:53.039><c> like</c><00:18:53.440><c> no</c>

00:18:53.590 --> 00:18:53.600 align:start position:0%
a razor runtime error saying like no
 

00:18:53.600 --> 00:18:54.830 align:start position:0%
a razor runtime error saying like no
frets<00:18:53.840><c> can</c><00:18:54.080><c> run</c><00:18:54.320><c> you</c><00:18:54.400><c> know</c><00:18:54.559><c> you</c><00:18:54.640><c> have</c><00:18:54.720><c> a</c>

00:18:54.830 --> 00:18:54.840 align:start position:0%
frets can run you know you have a
 

00:18:54.840 --> 00:18:56.230 align:start position:0%
frets can run you know you have a
deadlock

00:18:56.230 --> 00:18:56.240 align:start position:0%
deadlock
 

00:18:56.240 --> 00:18:57.590 align:start position:0%
deadlock
uh<00:18:56.400><c> but</c><00:18:56.559><c> there</c><00:18:56.720><c> can</c><00:18:56.880><c> be</c><00:18:56.960><c> more</c><00:18:57.120><c> complicated</c>

00:18:57.590 --> 00:18:57.600 align:start position:0%
uh but there can be more complicated
 

00:18:57.600 --> 00:18:58.950 align:start position:0%
uh but there can be more complicated
deadlocks<00:18:58.000><c> you</c><00:18:58.080><c> know</c><00:18:58.160><c> we're</c><00:18:58.400><c> both</c><00:18:58.640><c> involved</c>

00:18:58.950 --> 00:18:58.960 align:start position:0%
deadlocks you know we're both involved
 

00:18:58.960 --> 00:19:00.310 align:start position:0%
deadlocks you know we're both involved
in<00:18:59.039><c> multiple</c><00:18:59.440><c> threads</c><00:18:59.840><c> and</c>

00:19:00.310 --> 00:19:00.320 align:start position:0%
in multiple threads and
 

00:19:00.320 --> 00:19:02.230 align:start position:0%
in multiple threads and
as<00:19:00.480><c> you're</c><00:19:00.640><c> going</c><00:19:00.880><c> through</c><00:19:01.039><c> the</c><00:19:01.200><c> labs</c><00:19:01.520><c> and</c><00:19:02.000><c> in</c>

00:19:02.230 --> 00:19:02.240 align:start position:0%
as you're going through the labs and in
 

00:19:02.240 --> 00:19:03.990 align:start position:0%
as you're going through the labs and in
the<00:19:02.400><c> semester</c><00:19:02.960><c> you</c><00:19:03.120><c> i'm</c><00:19:03.280><c> sure</c><00:19:03.520><c> you'll</c><00:19:03.760><c> run</c>

00:19:03.990 --> 00:19:04.000 align:start position:0%
the semester you i'm sure you'll run
 

00:19:04.000 --> 00:19:07.350 align:start position:0%
the semester you i'm sure you'll run
into<00:19:04.240><c> some</c>

00:19:07.350 --> 00:19:07.360 align:start position:0%
 
 

00:19:07.360 --> 00:19:09.830 align:start position:0%
 
so<00:19:07.600><c> take</c><00:19:07.840><c> a</c><00:19:07.919><c> little</c><00:19:08.080><c> bit</c><00:19:08.240><c> of</c><00:19:08.400><c> a</c><00:19:09.039><c> step</c><00:19:09.280><c> back</c><00:19:09.600><c> here</c>

00:19:09.830 --> 00:19:09.840 align:start position:0%
so take a little bit of a step back here
 

00:19:09.840 --> 00:19:10.870 align:start position:0%
so take a little bit of a step back here
and<00:19:10.160><c> think</c><00:19:10.400><c> about</c>

00:19:10.870 --> 00:19:10.880 align:start position:0%
and think about
 

00:19:10.880 --> 00:19:13.350 align:start position:0%
and think about
you<00:19:10.960><c> know</c><00:19:11.200><c> go</c><00:19:11.600><c> for</c><00:19:12.880><c> you</c><00:19:12.960><c> know</c><00:19:13.120><c> these</c>

00:19:13.350 --> 00:19:13.360 align:start position:0%
you know go for you know these
 

00:19:13.360 --> 00:19:15.029 align:start position:0%
you know go for you know these
challenges

00:19:15.029 --> 00:19:15.039 align:start position:0%
challenges
 

00:19:15.039 --> 00:19:20.150 align:start position:0%
challenges
uh<00:19:17.840><c> that</c><00:19:18.000><c> i</c><00:19:18.080><c> just</c><00:19:18.320><c> talked</c><00:19:18.559><c> about</c>

00:19:20.150 --> 00:19:20.160 align:start position:0%
uh that i just talked about
 

00:19:20.160 --> 00:19:22.830 align:start position:0%
uh that i just talked about
roughly<00:19:20.559><c> speaking</c><00:19:21.520><c> uh</c><00:19:21.840><c> goes</c><00:19:22.160><c> sort</c><00:19:22.320><c> of</c><00:19:22.480><c> two</c>

00:19:22.830 --> 00:19:22.840 align:start position:0%
roughly speaking uh goes sort of two
 

00:19:22.840 --> 00:19:24.470 align:start position:0%
roughly speaking uh goes sort of two
plans

00:19:24.470 --> 00:19:24.480 align:start position:0%
plans
 

00:19:24.480 --> 00:19:28.870 align:start position:0%
plans
to<00:19:25.919><c> handle</c><00:19:26.720><c> these</c><00:19:26.960><c> concurrency</c><00:19:27.520><c> challenges</c>

00:19:28.870 --> 00:19:28.880 align:start position:0%
to handle these concurrency challenges
 

00:19:28.880 --> 00:19:31.909 align:start position:0%
to handle these concurrency challenges
and<00:19:29.360><c> one</c><00:19:29.679><c> plan</c><00:19:30.240><c> is</c><00:19:30.960><c> you</c><00:19:31.039><c> know</c><00:19:31.520><c> basically</c>

00:19:31.909 --> 00:19:31.919 align:start position:0%
and one plan is you know basically
 

00:19:31.919 --> 00:19:34.950 align:start position:0%
and one plan is you know basically
around<00:19:32.240><c> channels</c>

00:19:34.950 --> 00:19:34.960 align:start position:0%
 
 

00:19:34.960 --> 00:19:36.310 align:start position:0%
 
and<00:19:35.120><c> there's</c><00:19:35.360><c> another</c><00:19:35.600><c> plan</c><00:19:35.919><c> basically</c>

00:19:36.310 --> 00:19:36.320 align:start position:0%
and there's another plan basically
 

00:19:36.320 --> 00:19:39.830 align:start position:0%
and there's another plan basically
around<00:19:36.840><c> locks</c>

00:19:39.830 --> 00:19:39.840 align:start position:0%
around locks
 

00:19:39.840 --> 00:19:51.430 align:start position:0%
around locks
and<00:19:39.919><c> condition</c><00:19:40.320><c> variables</c>

00:19:51.430 --> 00:19:51.440 align:start position:0%
 
 

00:19:51.440 --> 00:19:54.789 align:start position:0%
 
and<00:19:52.880><c> the</c><00:19:53.039><c> way</c><00:19:53.280><c> i</c><00:19:53.360><c> think</c><00:19:53.520><c> about</c><00:19:53.840><c> it</c><00:19:54.160><c> uh</c><00:19:54.559><c> you</c><00:19:54.640><c> know</c>

00:19:54.789 --> 00:19:54.799 align:start position:0%
and the way i think about it uh you know
 

00:19:54.799 --> 00:19:56.310 align:start position:0%
and the way i think about it uh you know
some<00:19:54.960><c> people</c><00:19:55.200><c> are</c><00:19:55.440><c> quite</c><00:19:55.600><c> dogmatic</c><00:19:56.160><c> about</c>

00:19:56.310 --> 00:19:56.320 align:start position:0%
some people are quite dogmatic about
 

00:19:56.320 --> 00:19:57.830 align:start position:0%
some people are quite dogmatic about
this<00:19:56.559><c> i</c><00:19:56.640><c> think</c><00:19:56.799><c> one</c><00:19:56.960><c> plan</c><00:19:57.200><c> is</c><00:19:57.280><c> better</c><00:19:57.520><c> than</c><00:19:57.679><c> the</c>

00:19:57.830 --> 00:19:57.840 align:start position:0%
this i think one plan is better than the
 

00:19:57.840 --> 00:19:58.710 align:start position:0%
this i think one plan is better than the
other<00:19:58.000><c> plan</c>

00:19:58.710 --> 00:19:58.720 align:start position:0%
other plan
 

00:19:58.720 --> 00:20:01.190 align:start position:0%
other plan
uh<00:19:59.600><c> my</c><00:19:59.919><c> general</c><00:20:00.240><c> approach</c><00:20:00.559><c> here</c><00:20:00.799><c> is</c><00:20:00.960><c> like</c><00:20:01.120><c> i</c>

00:20:01.190 --> 00:20:01.200 align:start position:0%
uh my general approach here is like i
 

00:20:01.200 --> 00:20:02.789 align:start position:0%
uh my general approach here is like i
use<00:20:01.440><c> what</c><00:20:01.600><c> the</c><00:20:01.760><c> plan</c><00:20:01.919><c> that</c><00:20:02.080><c> is</c><00:20:02.159><c> most</c><00:20:02.400><c> suitable</c>

00:20:02.789 --> 00:20:02.799 align:start position:0%
use what the plan that is most suitable
 

00:20:02.799 --> 00:20:04.630 align:start position:0%
use what the plan that is most suitable
for<00:20:02.960><c> the</c><00:20:03.039><c> case</c><00:20:03.280><c> that</c><00:20:03.440><c> i'm</c><00:20:03.520><c> looking</c><00:20:03.840><c> at</c>

00:20:04.630 --> 00:20:04.640 align:start position:0%
for the case that i'm looking at
 

00:20:04.640 --> 00:20:07.190 align:start position:0%
for the case that i'm looking at
uh<00:20:04.960><c> or</c><00:20:05.200><c> that</c><00:20:05.360><c> i'm</c><00:20:05.520><c> running</c><00:20:05.760><c> into</c><00:20:06.320><c> and</c>

00:20:07.190 --> 00:20:07.200 align:start position:0%
uh or that i'm running into and
 

00:20:07.200 --> 00:20:08.230 align:start position:0%
uh or that i'm running into and
generally<00:20:07.760><c> you</c><00:20:07.840><c> know</c>

00:20:08.230 --> 00:20:08.240 align:start position:0%
generally you know
 

00:20:08.240 --> 00:20:11.669 align:start position:0%
generally you know
i<00:20:08.320><c> have</c><00:20:08.480><c> no</c><00:20:08.799><c> sharing</c><00:20:09.840><c> uh</c><00:20:10.559><c> and</c><00:20:10.880><c> basically</c><00:20:11.360><c> i</c>

00:20:11.669 --> 00:20:11.679 align:start position:0%
i have no sharing uh and basically i
 

00:20:11.679 --> 00:20:13.909 align:start position:0%
i have no sharing uh and basically i
need<00:20:11.919><c> two</c><00:20:12.080><c> frets</c><00:20:12.400><c> basically</c><00:20:12.799><c> to</c><00:20:12.960><c> communicate</c>

00:20:13.909 --> 00:20:13.919 align:start position:0%
need two frets basically to communicate
 

00:20:13.919 --> 00:20:15.909 align:start position:0%
need two frets basically to communicate
but<00:20:14.080><c> i</c><00:20:14.159><c> don't</c><00:20:14.320><c> really</c><00:20:14.480><c> share</c><00:20:14.799><c> any</c><00:20:14.960><c> memory</c><00:20:15.840><c> i</c>

00:20:15.909 --> 00:20:15.919 align:start position:0%
but i don't really share any memory i
 

00:20:15.919 --> 00:20:17.990 align:start position:0%
but i don't really share any memory i
tend<00:20:16.080><c> to</c><00:20:16.240><c> use</c><00:20:16.640><c> the</c><00:20:16.880><c> channels</c>

00:20:17.990 --> 00:20:18.000 align:start position:0%
tend to use the channels
 

00:20:18.000 --> 00:20:20.070 align:start position:0%
tend to use the channels
uh<00:20:18.400><c> if</c><00:20:18.799><c> there</c><00:20:18.960><c> are</c><00:20:19.120><c> two</c><00:20:19.280><c> threads</c><00:20:19.600><c> actually</c><00:20:19.840><c> do</c>

00:20:20.070 --> 00:20:20.080 align:start position:0%
uh if there are two threads actually do
 

00:20:20.080 --> 00:20:21.830 align:start position:0%
uh if there are two threads actually do
share<00:20:20.320><c> memory</c><00:20:20.799><c> uh</c><00:20:21.039><c> because</c><00:20:21.280><c> it's</c><00:20:21.440><c> convenient</c>

00:20:21.830 --> 00:20:21.840 align:start position:0%
share memory uh because it's convenient
 

00:20:21.840 --> 00:20:23.430 align:start position:0%
share memory uh because it's convenient
to<00:20:22.000><c> share</c><00:20:22.240><c> memory</c><00:20:22.559><c> for</c><00:20:22.720><c> example</c><00:20:23.039><c> i</c><00:20:23.200><c> write</c><00:20:23.360><c> a</c>

00:20:23.430 --> 00:20:23.440 align:start position:0%
to share memory for example i write a
 

00:20:23.440 --> 00:20:25.190 align:start position:0%
to share memory for example i write a
key<00:20:23.600><c> value</c><00:20:23.919><c> servers</c><00:20:24.400><c> and</c><00:20:24.640><c> i</c><00:20:24.720><c> want</c><00:20:24.880><c> to</c><00:20:24.960><c> share</c>

00:20:25.190 --> 00:20:25.200 align:start position:0%
key value servers and i want to share
 

00:20:25.200 --> 00:20:27.510 align:start position:0%
key value servers and i want to share
the<00:20:25.360><c> key</c><00:20:25.520><c> value</c><00:20:25.919><c> table</c>

00:20:27.510 --> 00:20:27.520 align:start position:0%
the key value table
 

00:20:27.520 --> 00:20:32.070 align:start position:0%
the key value table
then<00:20:30.080><c> i</c><00:20:30.320><c> use</c><00:20:30.559><c> locks</c>

00:20:32.070 --> 00:20:32.080 align:start position:0%
then i use locks
 

00:20:32.080 --> 00:20:37.590 align:start position:0%
then i use locks
and<00:20:32.240><c> condition</c><00:20:32.840><c> variables</c>

00:20:37.590 --> 00:20:37.600 align:start position:0%
 
 

00:20:37.600 --> 00:20:39.830 align:start position:0%
 
uh<00:20:38.000><c> and</c><00:20:38.159><c> so</c><00:20:38.799><c> uh</c><00:20:39.200><c> you</c><00:20:39.360><c> know</c><00:20:39.440><c> my</c><00:20:39.600><c> general</c>

00:20:39.830 --> 00:20:39.840 align:start position:0%
uh and so uh you know my general
 

00:20:39.840 --> 00:20:41.669 align:start position:0%
uh and so uh you know my general
approach<00:20:40.159><c> is</c><00:20:40.320><c> not</c><00:20:40.480><c> so</c><00:20:40.720><c> to</c><00:20:40.880><c> be</c><00:20:41.039><c> dramatic</c><00:20:41.600><c> and</c>

00:20:41.669 --> 00:20:41.679 align:start position:0%
approach is not so to be dramatic and
 

00:20:41.679 --> 00:20:43.110 align:start position:0%
approach is not so to be dramatic and
you<00:20:41.760><c> know</c><00:20:42.000><c> take</c><00:20:42.240><c> whatever</c><00:20:42.559><c> approach</c><00:20:42.880><c> you</c><00:20:43.039><c> know</c>

00:20:43.110 --> 00:20:43.120 align:start position:0%
you know take whatever approach you know
 

00:20:43.120 --> 00:20:44.789 align:start position:0%
you know take whatever approach you know
that<00:20:43.280><c> actually</c><00:20:43.600><c> is</c><00:20:43.679><c> most</c><00:20:43.919><c> convenient</c><00:20:44.400><c> for</c>

00:20:44.789 --> 00:20:44.799 align:start position:0%
that actually is most convenient for
 

00:20:44.799 --> 00:20:48.149 align:start position:0%
that actually is most convenient for
for<00:20:44.960><c> the</c><00:20:45.039><c> problem</c><00:20:45.440><c> at</c><00:20:45.520><c> hand</c><00:20:47.120><c> um</c>

00:20:48.149 --> 00:20:48.159 align:start position:0%
for the problem at hand um
 

00:20:48.159 --> 00:20:50.710 align:start position:0%
for the problem at hand um
the<00:20:49.200><c> tutorial</c><00:20:49.679><c> does</c><00:20:49.840><c> a</c><00:20:49.919><c> pretty</c><00:20:50.080><c> good</c><00:20:50.240><c> job</c><00:20:50.559><c> of</c>

00:20:50.710 --> 00:20:50.720 align:start position:0%
the tutorial does a pretty good job of
 

00:20:50.720 --> 00:20:52.470 align:start position:0%
the tutorial does a pretty good job of
actually<00:20:51.120><c> uh</c>

00:20:52.470 --> 00:20:52.480 align:start position:0%
actually uh
 

00:20:52.480 --> 00:20:54.390 align:start position:0%
actually uh
teaching<00:20:52.799><c> you</c><00:20:52.960><c> about</c><00:20:53.200><c> uh</c><00:20:53.360><c> channels</c><00:20:54.000><c> mentioned</c>

00:20:54.390 --> 00:20:54.400 align:start position:0%
teaching you about uh channels mentioned
 

00:20:54.400 --> 00:20:56.149 align:start position:0%
teaching you about uh channels mentioned
logs<00:20:54.880><c> doesn't</c><00:20:55.120><c> say</c><00:20:55.360><c> much</c><00:20:55.520><c> about</c><00:20:55.760><c> condition</c>

00:20:56.149 --> 00:20:56.159 align:start position:0%
logs doesn't say much about condition
 

00:20:56.159 --> 00:20:56.950 align:start position:0%
logs doesn't say much about condition
variables

00:20:56.950 --> 00:20:56.960 align:start position:0%
variables
 

00:20:56.960 --> 00:20:59.909 align:start position:0%
variables
uh<00:20:57.200><c> so</c><00:20:57.360><c> i</c><00:20:57.600><c> i</c><00:20:58.000><c> think</c><00:20:58.159><c> it's</c><00:20:58.320><c> worthwhile</c><00:20:59.120><c> uh</c><00:20:59.520><c> to</c>

00:20:59.909 --> 00:20:59.919 align:start position:0%
uh so i i think it's worthwhile uh to
 

00:20:59.919 --> 00:21:01.029 align:start position:0%
uh so i i think it's worthwhile uh to
talk<00:21:00.080><c> a</c><00:21:00.159><c> little</c><00:21:00.320><c> bit</c><00:21:00.400><c> about</c><00:21:00.640><c> condition</c>

00:21:01.029 --> 00:21:01.039 align:start position:0%
talk a little bit about condition
 

00:21:01.039 --> 00:21:01.990 align:start position:0%
talk a little bit about condition
variables<00:21:01.520><c> to</c>

00:21:01.990 --> 00:21:02.000 align:start position:0%
variables to
 

00:21:02.000 --> 00:21:04.549 align:start position:0%
variables to
make<00:21:02.240><c> sure</c><00:21:03.280><c> that</c><00:21:03.440><c> you're</c><00:21:03.760><c> aware</c><00:21:04.159><c> that</c><00:21:04.320><c> they</c>

00:21:04.549 --> 00:21:04.559 align:start position:0%
make sure that you're aware that they
 

00:21:04.559 --> 00:21:05.909 align:start position:0%
make sure that you're aware that they
exist

00:21:05.909 --> 00:21:05.919 align:start position:0%
exist
 

00:21:05.919 --> 00:21:07.750 align:start position:0%
exist
and<00:21:06.080><c> i'm</c><00:21:06.159><c> going</c><00:21:06.240><c> to</c><00:21:06.320><c> do</c><00:21:06.480><c> that</c><00:21:06.799><c> using</c><00:21:07.120><c> a</c><00:21:07.440><c> tiny</c>

00:21:07.750 --> 00:21:07.760 align:start position:0%
and i'm going to do that using a tiny
 

00:21:07.760 --> 00:21:09.190 align:start position:0%
and i'm going to do that using a tiny
little<00:21:08.000><c> example</c>

00:21:09.190 --> 00:21:09.200 align:start position:0%
little example
 

00:21:09.200 --> 00:21:11.110 align:start position:0%
little example
to<00:21:09.360><c> sort</c><00:21:09.520><c> of</c><00:21:09.600><c> illustrate</c><00:21:10.080><c> the</c><00:21:10.240><c> issues</c><00:21:10.960><c> and</c>

00:21:11.110 --> 00:21:11.120 align:start position:0%
to sort of illustrate the issues and
 

00:21:11.120 --> 00:21:14.149 align:start position:0%
to sort of illustrate the issues and
attending<00:21:11.520><c> a</c><00:21:11.840><c> little</c><00:21:12.080><c> example</c><00:21:12.640><c> is</c>

00:21:14.149 --> 00:21:14.159 align:start position:0%
attending a little example is
 

00:21:14.159 --> 00:21:15.510 align:start position:0%
attending a little example is
we<00:21:14.320><c> have</c><00:21:14.480><c> a</c><00:21:14.640><c> you</c><00:21:14.799><c> know</c><00:21:14.960><c> sort</c><00:21:15.039><c> of</c><00:21:15.120><c> a</c><00:21:15.200><c> little</c><00:21:15.360><c> bit</c>

00:21:15.510 --> 00:21:15.520 align:start position:0%
we have a you know sort of a little bit
 

00:21:15.520 --> 00:21:17.270 align:start position:0%
we have a you know sort of a little bit
inspired<00:21:16.320><c> uh</c><00:21:16.640><c> as</c><00:21:16.799><c> well</c>

00:21:17.270 --> 00:21:17.280 align:start position:0%
inspired uh as well
 

00:21:17.280 --> 00:21:19.270 align:start position:0%
inspired uh as well
you<00:21:17.360><c> know</c><00:21:17.840><c> inspired</c><00:21:18.159><c> by</c><00:21:18.320><c> the</c><00:21:18.400><c> labs</c><00:21:18.960><c> you</c><00:21:19.039><c> know</c>

00:21:19.270 --> 00:21:19.280 align:start position:0%
you know inspired by the labs you know
 

00:21:19.280 --> 00:21:21.029 align:start position:0%
you know inspired by the labs you know
have<00:21:19.440><c> a</c><00:21:19.520><c> friend</c><00:21:19.760><c> t1</c>

00:21:21.029 --> 00:21:21.039 align:start position:0%
have a friend t1
 

00:21:21.039 --> 00:21:23.909 align:start position:0%
have a friend t1
uh<00:21:21.440><c> and</c><00:21:22.240><c> uh</c><00:21:22.799><c> t1</c><00:21:23.280><c> needs</c><00:21:23.440><c> to</c><00:21:23.520><c> collect</c><00:21:23.760><c> some</c>

00:21:23.909 --> 00:21:23.919 align:start position:0%
uh and uh t1 needs to collect some
 

00:21:23.919 --> 00:21:25.830 align:start position:0%
uh and uh t1 needs to collect some
number<00:21:24.240><c> of</c><00:21:24.320><c> votes</c><00:21:24.720><c> you</c><00:21:24.880><c> know</c><00:21:25.039><c> from</c><00:21:25.440><c> remote</c>

00:21:25.830 --> 00:21:25.840 align:start position:0%
number of votes you know from remote
 

00:21:25.840 --> 00:21:26.549 align:start position:0%
number of votes you know from remote
machines

00:21:26.549 --> 00:21:26.559 align:start position:0%
machines
 

00:21:26.559 --> 00:21:29.350 align:start position:0%
machines
and<00:21:27.600><c> uh</c><00:21:28.080><c> for</c><00:21:28.240><c> example</c><00:21:28.640><c> needs</c><00:21:28.880><c> to</c><00:21:28.960><c> decide</c><00:21:29.280><c> that</c>

00:21:29.350 --> 00:21:29.360 align:start position:0%
and uh for example needs to decide that
 

00:21:29.360 --> 00:21:30.470 align:start position:0%
and uh for example needs to decide that
it<00:21:29.440><c> has</c><00:21:29.600><c> a</c><00:21:29.679><c> majority</c>

00:21:30.470 --> 00:21:30.480 align:start position:0%
it has a majority
 

00:21:30.480 --> 00:21:32.149 align:start position:0%
it has a majority
uh<00:21:30.799><c> so</c><00:21:30.960><c> that</c><00:21:31.120><c> it</c><00:21:31.200><c> actually</c><00:21:31.600><c> proceeds</c><00:21:32.080><c> to</c>

00:21:32.149 --> 00:21:32.159 align:start position:0%
uh so that it actually proceeds to
 

00:21:32.159 --> 00:21:33.750 align:start position:0%
uh so that it actually proceeds to
commit<00:21:32.640><c> you</c><00:21:32.720><c> know</c><00:21:32.799><c> some</c><00:21:32.960><c> value</c>

00:21:33.750 --> 00:21:33.760 align:start position:0%
commit you know some value
 

00:21:33.760 --> 00:21:35.270 align:start position:0%
commit you know some value
and<00:21:34.000><c> you'll</c><00:21:34.159><c> see</c><00:21:34.320><c> that</c><00:21:34.480><c> later</c><00:21:34.799><c> in</c><00:21:34.960><c> like</c><00:21:35.120><c> this</c>

00:21:35.270 --> 00:21:35.280 align:start position:0%
and you'll see that later in like this
 

00:21:35.280 --> 00:21:37.110 align:start position:0%
and you'll see that later in like this
shows<00:21:35.600><c> up</c><00:21:35.760><c> in</c><00:21:35.840><c> the</c><00:21:35.919><c> raft</c><00:21:36.240><c> lab</c><00:21:36.720><c> uh</c>

00:21:37.110 --> 00:21:37.120 align:start position:0%
shows up in the raft lab uh
 

00:21:37.120 --> 00:21:39.750 align:start position:0%
shows up in the raft lab uh
as<00:21:37.280><c> one</c><00:21:37.440><c> of</c><00:21:37.520><c> the</c><00:21:38.080><c> primitives</c><00:21:38.559><c> that</c><00:21:38.640><c> you</c><00:21:38.799><c> need</c>

00:21:39.750 --> 00:21:39.760 align:start position:0%
as one of the primitives that you need
 

00:21:39.760 --> 00:21:40.789 align:start position:0%
as one of the primitives that you need
uh<00:21:40.080><c> and</c><00:21:40.240><c> so</c>

00:21:40.789 --> 00:21:40.799 align:start position:0%
uh and so
 

00:21:40.799 --> 00:21:43.270 align:start position:0%
uh and so
to<00:21:40.960><c> do</c><00:21:41.120><c> that</c><00:21:41.360><c> you</c><00:21:41.520><c> know</c><00:21:41.679><c> the</c><00:21:41.840><c> t1</c><00:21:42.240><c> will</c><00:21:42.480><c> fork</c><00:21:43.120><c> you</c>

00:21:43.270 --> 00:21:43.280 align:start position:0%
to do that you know the t1 will fork you
 

00:21:43.280 --> 00:21:44.310 align:start position:0%
to do that you know the t1 will fork you
know<00:21:43.440><c> other</c><00:21:43.679><c> threats</c>

00:21:44.310 --> 00:21:44.320 align:start position:0%
know other threats
 

00:21:44.320 --> 00:21:48.070 align:start position:0%
know other threats
you<00:21:44.400><c> know</c><00:21:44.559><c> let's</c><00:21:44.720><c> say</c><00:21:44.960><c> t2</c><00:21:46.799><c> and</c><00:21:46.960><c> t2</c><00:21:47.440><c> amazingly</c>

00:21:48.070 --> 00:21:48.080 align:start position:0%
you know let's say t2 and t2 amazingly
 

00:21:48.080 --> 00:21:50.149 align:start position:0%
you know let's say t2 and t2 amazingly
does<00:21:48.240><c> something</c><00:21:48.480><c> expensive</c><00:21:48.960><c> like</c><00:21:49.120><c> you</c><00:21:49.280><c> know</c>

00:21:50.149 --> 00:21:50.159 align:start position:0%
does something expensive like you know
 

00:21:50.159 --> 00:21:51.909 align:start position:0%
does something expensive like you know
talk<00:21:50.400><c> to</c><00:21:50.640><c> some</c><00:21:50.799><c> remote</c><00:21:51.200><c> machine</c><00:21:51.520><c> to</c><00:21:51.679><c> actually</c>

00:21:51.909 --> 00:21:51.919 align:start position:0%
talk to some remote machine to actually
 

00:21:51.919 --> 00:21:53.350 align:start position:0%
talk to some remote machine to actually
get<00:21:52.080><c> its</c><00:21:52.320><c> vote</c>

00:21:53.350 --> 00:21:53.360 align:start position:0%
get its vote
 

00:21:53.360 --> 00:21:55.190 align:start position:0%
get its vote
and<00:21:53.520><c> then</c><00:21:53.919><c> you</c><00:21:54.080><c> know</c><00:21:54.240><c> report</c><00:21:54.720><c> back</c><00:21:54.960><c> you</c><00:21:55.120><c> know</c>

00:21:55.190 --> 00:21:55.200 align:start position:0%
and then you know report back you know
 

00:21:55.200 --> 00:21:57.990 align:start position:0%
and then you know report back you know
that<00:21:55.440><c> vote</c><00:21:55.679><c> to</c><00:21:55.840><c> t1</c><00:21:56.320><c> and</c><00:21:56.480><c> t1</c><00:21:56.960><c> basically</c><00:21:57.600><c> i</c><00:21:57.840><c> need</c>

00:21:57.990 --> 00:21:58.000 align:start position:0%
that vote to t1 and t1 basically i need
 

00:21:58.000 --> 00:21:59.590 align:start position:0%
that vote to t1 and t1 basically i need
to<00:21:58.159><c> collect</c><00:21:58.480><c> all</c><00:21:58.559><c> the</c><00:21:58.640><c> votes</c><00:21:58.960><c> head</c><00:21:59.120><c> them</c><00:21:59.280><c> up</c>

00:21:59.590 --> 00:21:59.600 align:start position:0%
to collect all the votes head them up
 

00:21:59.600 --> 00:22:02.230 align:start position:0%
to collect all the votes head them up
and<00:21:59.760><c> then</c><00:22:00.080><c> assume</c><00:22:00.320><c> that</c><00:22:00.400><c> their</c><00:22:00.559><c> majority</c><00:22:01.919><c> then</c>

00:22:02.230 --> 00:22:02.240 align:start position:0%
and then assume that their majority then
 

00:22:02.240 --> 00:22:04.230 align:start position:0%
and then assume that their majority then
you<00:22:02.320><c> know</c><00:22:02.480><c> declare</c><00:22:02.880><c> sort</c><00:22:03.120><c> of</c><00:22:03.200><c> victory</c>

00:22:04.230 --> 00:22:04.240 align:start position:0%
you know declare sort of victory
 

00:22:04.240 --> 00:22:05.990 align:start position:0%
you know declare sort of victory
so<00:22:04.400><c> this</c><00:22:04.559><c> is</c><00:22:04.640><c> a</c><00:22:04.799><c> pretty</c><00:22:05.039><c> straightforward</c>

00:22:05.990 --> 00:22:06.000 align:start position:0%
so this is a pretty straightforward
 

00:22:06.000 --> 00:22:07.830 align:start position:0%
so this is a pretty straightforward
simple<00:22:06.320><c> program</c><00:22:07.200><c> but</c><00:22:07.280><c> it</c><00:22:07.360><c> gives</c><00:22:07.520><c> you</c><00:22:07.600><c> a</c><00:22:07.679><c> little</c>

00:22:07.830 --> 00:22:07.840 align:start position:0%
simple program but it gives you a little
 

00:22:07.840 --> 00:22:08.470 align:start position:0%
simple program but it gives you a little
bit<00:22:08.000><c> of</c>

00:22:08.470 --> 00:22:08.480 align:start position:0%
bit of
 

00:22:08.480 --> 00:22:10.310 align:start position:0%
bit of
allows<00:22:08.880><c> me</c><00:22:09.039><c> to</c><00:22:09.120><c> illustrate</c><00:22:09.520><c> you</c><00:22:09.679><c> a</c><00:22:09.760><c> couple</c><00:22:09.919><c> of</c>

00:22:10.310 --> 00:22:10.320 align:start position:0%
allows me to illustrate you a couple of
 

00:22:10.320 --> 00:22:12.390 align:start position:0%
allows me to illustrate you a couple of
issues<00:22:11.120><c> so</c><00:22:11.280><c> i'm</c><00:22:11.360><c> going</c><00:22:11.440><c> to</c><00:22:11.520><c> switch</c>

00:22:12.390 --> 00:22:12.400 align:start position:0%
issues so i'm going to switch
 

00:22:12.400 --> 00:22:16.710 align:start position:0%
issues so i'm going to switch
to<00:22:13.520><c> another</c><00:22:13.919><c> screen</c>

00:22:16.710 --> 00:22:16.720 align:start position:0%
 
 

00:22:16.720 --> 00:22:22.710 align:start position:0%
 
can<00:22:16.880><c> everybody</c><00:22:17.280><c> see</c><00:22:17.440><c> this</c>

00:22:22.710 --> 00:22:22.720 align:start position:0%
 
 

00:22:22.720 --> 00:22:26.549 align:start position:0%
 
so<00:22:24.240><c> here</c><00:22:24.640><c> i</c><00:22:24.799><c> have</c><00:22:25.120><c> a</c><00:22:25.600><c> very</c><00:22:25.919><c> simple</c>

00:22:26.549 --> 00:22:26.559 align:start position:0%
so here i have a very simple
 

00:22:26.559 --> 00:22:28.870 align:start position:0%
so here i have a very simple
uh<00:22:26.960><c> implementation</c><00:22:27.520><c> of</c><00:22:27.600><c> this</c><00:22:27.760><c> program</c><00:22:28.400><c> uh</c><00:22:28.720><c> the</c>

00:22:28.870 --> 00:22:28.880 align:start position:0%
uh implementation of this program uh the
 

00:22:28.880 --> 00:22:30.549 align:start position:0%
uh implementation of this program uh the
vogue<00:22:29.120><c> thing</c><00:22:29.520><c> uh</c><00:22:29.760><c> and</c><00:22:29.919><c> again</c><00:22:30.240><c> it's</c><00:22:30.400><c> a</c><00:22:30.400><c> little</c>

00:22:30.549 --> 00:22:30.559 align:start position:0%
vogue thing uh and again it's a little
 

00:22:30.559 --> 00:22:32.070 align:start position:0%
vogue thing uh and again it's a little
bit<00:22:30.640><c> of</c><00:22:30.720><c> a</c><00:22:30.799><c> toy</c><00:22:31.039><c> example</c><00:22:31.360><c> but</c><00:22:31.520><c> just</c><00:22:31.760><c> hopefully</c>

00:22:32.070 --> 00:22:32.080 align:start position:0%
bit of a toy example but just hopefully
 

00:22:32.080 --> 00:22:32.630 align:start position:0%
bit of a toy example but just hopefully
gets<00:22:32.320><c> the</c>

00:22:32.630 --> 00:22:32.640 align:start position:0%
gets the
 

00:22:32.640 --> 00:22:35.350 align:start position:0%
gets the
points<00:22:32.960><c> across</c><00:22:34.159><c> uh</c><00:22:34.400><c> the</c><00:22:34.559><c> two</c><00:22:34.799><c> variables</c>

00:22:35.350 --> 00:22:35.360 align:start position:0%
points across uh the two variables
 

00:22:35.360 --> 00:22:36.310 align:start position:0%
points across uh the two variables
shared<00:22:35.760><c> here</c>

00:22:36.310 --> 00:22:36.320 align:start position:0%
shared here
 

00:22:36.320 --> 00:22:38.470 align:start position:0%
shared here
uh<00:22:36.640><c> count</c><00:22:36.960><c> and</c><00:22:37.039><c> danish</c><00:22:37.520><c> count</c><00:22:38.080><c> accounts</c>

00:22:38.470 --> 00:22:38.480 align:start position:0%
uh count and danish count accounts
 

00:22:38.480 --> 00:22:39.510 align:start position:0%
uh count and danish count accounts
number<00:22:38.799><c> three</c>

00:22:39.510 --> 00:22:39.520 align:start position:0%
number three
 

00:22:39.520 --> 00:22:41.669 align:start position:0%
number three
finish<00:22:39.840><c> you</c><00:22:40.000><c> know</c><00:22:40.159><c> accounts</c><00:22:40.480><c> when</c><00:22:40.640><c> we're</c><00:22:40.799><c> done</c>

00:22:41.669 --> 00:22:41.679 align:start position:0%
finish you know accounts when we're done
 

00:22:41.679 --> 00:22:42.870 align:start position:0%
finish you know accounts when we're done
um

00:22:42.870 --> 00:22:42.880 align:start position:0%
um
 

00:22:42.880 --> 00:22:45.029 align:start position:0%
um
uh<00:22:43.280><c> so</c><00:22:44.000><c> you</c><00:22:44.080><c> know</c><00:22:44.240><c> there's</c><00:22:44.480><c> a</c><00:22:44.559><c> loop</c><00:22:44.799><c> you</c><00:22:44.960><c> know</c>

00:22:45.029 --> 00:22:45.039 align:start position:0%
uh so you know there's a loop you know
 

00:22:45.039 --> 00:22:46.149 align:start position:0%
uh so you know there's a loop you know
going<00:22:45.200><c> for</c><00:22:45.440><c> 10</c>

00:22:46.149 --> 00:22:46.159 align:start position:0%
going for 10
 

00:22:46.159 --> 00:22:49.350 align:start position:0%
going for 10
uh<00:22:46.960><c> creating</c><00:22:47.280><c> a</c><00:22:47.440><c> go</c><00:22:48.720><c> creating</c><00:22:49.120><c> a</c>

00:22:49.350 --> 00:22:49.360 align:start position:0%
uh creating a go creating a
 

00:22:49.360 --> 00:22:52.789 align:start position:0%
uh creating a go creating a
you<00:22:49.520><c> know</c><00:22:49.919><c> launching</c><00:22:50.559><c> on</c>

00:22:52.789 --> 00:22:52.799 align:start position:0%
you know launching on
 

00:22:52.799 --> 00:22:54.950 align:start position:0%
you know launching on
an<00:22:52.960><c> anonymous</c><00:22:53.520><c> function</c><00:22:54.080><c> and</c><00:22:54.320><c> an</c><00:22:54.480><c> anonymous</c>

00:22:54.950 --> 00:22:54.960 align:start position:0%
an anonymous function and an anonymous
 

00:22:54.960 --> 00:22:56.630 align:start position:0%
an anonymous function and an anonymous
function<00:22:55.520><c> you</c><00:22:55.600><c> know</c><00:22:55.760><c> concurrently</c>

00:22:56.630 --> 00:22:56.640 align:start position:0%
function you know concurrently
 

00:22:56.640 --> 00:22:58.390 align:start position:0%
function you know concurrently
you<00:22:56.720><c> know</c><00:22:57.039><c> calls</c><00:22:57.360><c> this</c><00:22:57.520><c> function</c><00:22:58.000><c> request</c>

00:22:58.390 --> 00:22:58.400 align:start position:0%
you know calls this function request
 

00:22:58.400 --> 00:23:00.230 align:start position:0%
you know calls this function request
vote<00:22:58.720><c> the</c><00:22:58.880><c> request</c><00:22:59.520><c> basically</c><00:23:00.000><c> you</c><00:23:00.080><c> know</c>

00:23:00.230 --> 00:23:00.240 align:start position:0%
vote the request basically you know
 

00:23:00.240 --> 00:23:02.549 align:start position:0%
vote the request basically you know
simulates<00:23:00.880><c> you</c><00:23:00.960><c> know</c><00:23:01.120><c> doing</c><00:23:01.520><c> a</c><00:23:01.679><c> long</c>

00:23:02.549 --> 00:23:02.559 align:start position:0%
simulates you know doing a long
 

00:23:02.559 --> 00:23:04.230 align:start position:0%
simulates you know doing a long
expensive<00:23:03.120><c> operation</c><00:23:03.600><c> on</c><00:23:03.679><c> some</c><00:23:03.919><c> remote</c>

00:23:04.230 --> 00:23:04.240 align:start position:0%
expensive operation on some remote
 

00:23:04.240 --> 00:23:05.669 align:start position:0%
expensive operation on some remote
machine<00:23:04.559><c> and</c><00:23:04.640><c> the</c><00:23:04.720><c> way</c><00:23:04.880><c> it</c><00:23:04.960><c> simulates</c><00:23:05.360><c> it</c><00:23:05.520><c> is</c>

00:23:05.669 --> 00:23:05.679 align:start position:0%
machine and the way it simulates it is
 

00:23:05.679 --> 00:23:07.110 align:start position:0%
machine and the way it simulates it is
by<00:23:05.840><c> just</c><00:23:06.000><c> going</c><00:23:06.240><c> to</c><00:23:06.400><c> sleep</c>

00:23:07.110 --> 00:23:07.120 align:start position:0%
by just going to sleep
 

00:23:07.120 --> 00:23:09.029 align:start position:0%
by just going to sleep
it<00:23:07.280><c> walks</c><00:23:07.520><c> for</c><00:23:07.679><c> a</c><00:23:07.679><c> little</c><00:23:07.919><c> while</c><00:23:08.799><c> then</c><00:23:08.960><c> it</c>

00:23:09.029 --> 00:23:09.039 align:start position:0%
it walks for a little while then it
 

00:23:09.039 --> 00:23:10.630 align:start position:0%
it walks for a little while then it
returns<00:23:09.919><c> and</c><00:23:10.159><c> then</c>

00:23:10.630 --> 00:23:10.640 align:start position:0%
returns and then
 

00:23:10.640 --> 00:23:13.669 align:start position:0%
returns and then
you<00:23:10.799><c> know</c><00:23:11.039><c> the</c><00:23:11.679><c> returns</c><00:23:12.400><c> voted</c><00:23:12.960><c> yes</c><00:23:13.280><c> then</c><00:23:13.520><c> you</c>

00:23:13.669 --> 00:23:13.679 align:start position:0%
you know the returns voted yes then you
 

00:23:13.679 --> 00:23:14.710 align:start position:0%
you know the returns voted yes then you
know<00:23:13.760><c> the</c><00:23:13.919><c> count</c><00:23:14.159><c> goes</c><00:23:14.400><c> up</c>

00:23:14.710 --> 00:23:14.720 align:start position:0%
know the count goes up
 

00:23:14.720 --> 00:23:16.470 align:start position:0%
know the count goes up
and<00:23:15.120><c> we</c><00:23:15.280><c> count</c><00:23:15.520><c> the</c><00:23:15.600><c> fact</c><00:23:15.760><c> that</c><00:23:15.919><c> actually</c><00:23:16.320><c> we</c>

00:23:16.470 --> 00:23:16.480 align:start position:0%
and we count the fact that actually we
 

00:23:16.480 --> 00:23:18.950 align:start position:0%
and we count the fact that actually we
had<00:23:16.559><c> one</c><00:23:16.799><c> more</c><00:23:17.679><c> uh</c><00:23:17.919><c> fred</c><00:23:18.240><c> voting</c>

00:23:18.950 --> 00:23:18.960 align:start position:0%
had one more uh fred voting
 

00:23:18.960 --> 00:23:21.350 align:start position:0%
had one more uh fred voting
and<00:23:19.039><c> then</c><00:23:19.440><c> we're</c><00:23:19.600><c> done</c><00:23:20.400><c> and</c><00:23:20.480><c> so</c><00:23:20.720><c> that's</c><00:23:20.960><c> uh</c><00:23:21.200><c> so</c>

00:23:21.350 --> 00:23:21.360 align:start position:0%
and then we're done and so that's uh so
 

00:23:21.360 --> 00:23:22.950 align:start position:0%
and then we're done and so that's uh so
we<00:23:21.520><c> fork</c><00:23:21.760><c> off</c><00:23:21.919><c> ten</c><00:23:22.080><c> threads</c><00:23:22.559><c> you</c><00:23:22.640><c> know</c><00:23:22.799><c> the</c>

00:23:22.950 --> 00:23:22.960 align:start position:0%
we fork off ten threads you know the
 

00:23:22.960 --> 00:23:24.630 align:start position:0%
we fork off ten threads you know the
interview<00:23:23.360><c> and</c><00:23:23.520><c> request</c><00:23:23.919><c> vote</c>

00:23:24.630 --> 00:23:24.640 align:start position:0%
interview and request vote
 

00:23:24.640 --> 00:23:26.390 align:start position:0%
interview and request vote
and<00:23:24.799><c> report</c><00:23:25.120><c> the</c><00:23:25.280><c> results</c><00:23:25.760><c> and</c><00:23:25.840><c> then</c><00:23:26.159><c> at</c><00:23:26.240><c> the</c>

00:23:26.390 --> 00:23:26.400 align:start position:0%
and report the results and then at the
 

00:23:26.400 --> 00:23:28.149 align:start position:0%
and report the results and then at the
end<00:23:26.640><c> we'll</c><00:23:26.880><c> check</c><00:23:27.120><c> if</c><00:23:27.280><c> the</c>

00:23:28.149 --> 00:23:28.159 align:start position:0%
end we'll check if the
 

00:23:28.159 --> 00:23:29.990 align:start position:0%
end we'll check if the
count<00:23:28.400><c> is</c><00:23:28.559><c> small</c><00:23:28.799><c> revive</c><00:23:29.360><c> you</c><00:23:29.520><c> know</c><00:23:29.679><c> we</c><00:23:29.760><c> know</c>

00:23:29.990 --> 00:23:30.000 align:start position:0%
count is small revive you know we know
 

00:23:30.000 --> 00:23:31.270 align:start position:0%
count is small revive you know we know
that<00:23:30.080><c> we</c><00:23:30.320><c> failed</c>

00:23:31.270 --> 00:23:31.280 align:start position:0%
that we failed
 

00:23:31.280 --> 00:23:34.630 align:start position:0%
that we failed
uh<00:23:31.840><c> we</c><00:23:32.000><c> lost</c><00:23:32.320><c> the</c><00:23:32.559><c> election</c><00:23:33.200><c> uh</c><00:23:33.520><c> and</c><00:23:33.679><c> if</c><00:23:33.919><c> we</c><00:23:34.240><c> uh</c>

00:23:34.630 --> 00:23:34.640 align:start position:0%
uh we lost the election uh and if we uh
 

00:23:34.640 --> 00:23:36.870 align:start position:0%
uh we lost the election uh and if we uh
have<00:23:34.960><c> votes</c><00:23:35.520><c> equally</c><00:23:35.919><c> larger</c><00:23:36.240><c> than</c><00:23:36.400><c> five</c><00:23:36.720><c> you</c>

00:23:36.870 --> 00:23:36.880 align:start position:0%
have votes equally larger than five you
 

00:23:36.880 --> 00:23:37.830 align:start position:0%
have votes equally larger than five you
know<00:23:36.960><c> we</c><00:23:37.120><c> basically</c>

00:23:37.830 --> 00:23:37.840 align:start position:0%
know we basically
 

00:23:37.840 --> 00:23:39.270 align:start position:0%
know we basically
won<00:23:38.080><c> the</c><00:23:38.159><c> election</c><00:23:38.640><c> right</c><00:23:38.799><c> so</c><00:23:38.960><c> this</c><00:23:39.039><c> is</c><00:23:39.120><c> sort</c>

00:23:39.270 --> 00:23:39.280 align:start position:0%
won the election right so this is sort
 

00:23:39.280 --> 00:23:41.430 align:start position:0%
won the election right so this is sort
of<00:23:39.440><c> the</c><00:23:39.520><c> simple</c><00:23:40.159><c> uh</c><00:23:40.720><c> it's</c><00:23:40.880><c> a</c><00:23:40.960><c> very</c><00:23:41.200><c> simple</c>

00:23:41.430 --> 00:23:41.440 align:start position:0%
of the simple uh it's a very simple
 

00:23:41.440 --> 00:23:42.630 align:start position:0%
of the simple uh it's a very simple
program

00:23:42.630 --> 00:23:42.640 align:start position:0%
program
 

00:23:42.640 --> 00:23:46.310 align:start position:0%
program
uh<00:23:43.279><c> does</c><00:23:43.440><c> it</c><00:23:43.600><c> all</c><00:23:43.679><c> make</c><00:23:43.919><c> sense</c><00:23:45.520><c> let</c><00:23:45.679><c> me</c><00:23:45.919><c> run</c><00:23:46.159><c> it</c>

00:23:46.310 --> 00:23:46.320 align:start position:0%
uh does it all make sense let me run it
 

00:23:46.320 --> 00:23:48.830 align:start position:0%
uh does it all make sense let me run it
just<00:23:46.559><c> for</c><00:23:46.799><c> the</c>

00:23:48.830 --> 00:23:48.840 align:start position:0%
just for the
 

00:23:48.840 --> 00:23:52.149 align:start position:0%
just for the
kicks

00:23:52.149 --> 00:23:52.159 align:start position:0%
 
 

00:23:52.159 --> 00:23:55.590 align:start position:0%
 
and<00:23:53.919><c> you</c><00:23:54.000><c> know</c><00:23:54.159><c> we</c><00:23:54.320><c> run</c><00:23:54.480><c> it</c><00:23:54.559><c> a</c><00:23:54.640><c> couple</c><00:23:54.880><c> times</c>

00:23:55.590 --> 00:23:55.600 align:start position:0%
and you know we run it a couple times
 

00:23:55.600 --> 00:23:57.669 align:start position:0%
and you know we run it a couple times
sometimes<00:23:55.919><c> we</c><00:23:56.080><c> lose</c><00:23:56.400><c> sometimes</c><00:23:56.799><c> win</c><00:23:57.360><c> you</c><00:23:57.520><c> know</c>

00:23:57.669 --> 00:23:57.679 align:start position:0%
sometimes we lose sometimes win you know
 

00:23:57.679 --> 00:23:59.110 align:start position:0%
sometimes we lose sometimes win you know
makes<00:23:57.919><c> sense</c>

00:23:59.110 --> 00:23:59.120 align:start position:0%
makes sense
 

00:23:59.120 --> 00:24:02.070 align:start position:0%
makes sense
um<00:24:00.240><c> and</c><00:24:00.559><c> so</c><00:24:00.720><c> this</c><00:24:00.880><c> program</c><00:24:01.200><c> looks</c><00:24:01.600><c> you</c><00:24:01.760><c> know</c>

00:24:02.070 --> 00:24:02.080 align:start position:0%
um and so this program looks you know
 

00:24:02.080 --> 00:24:03.909 align:start position:0%
um and so this program looks you know
working

00:24:03.909 --> 00:24:03.919 align:start position:0%
working
 

00:24:03.919 --> 00:24:09.909 align:start position:0%
working
and<00:24:04.000><c> correct</c><00:24:04.400><c> is</c><00:24:04.559><c> it</c><00:24:04.640><c> actually</c><00:24:04.880><c> correct</c>

00:24:09.909 --> 00:24:09.919 align:start position:0%
 
 

00:24:09.919 --> 00:24:11.750 align:start position:0%
 
sorry<00:24:10.159><c> was</c><00:24:10.320><c> the</c><00:24:10.400><c> question</c><00:24:11.039><c> uh</c><00:24:11.279><c> whether</c><00:24:11.600><c> this</c>

00:24:11.750 --> 00:24:11.760 align:start position:0%
sorry was the question uh whether this
 

00:24:11.760 --> 00:24:13.110 align:start position:0%
sorry was the question uh whether this
program<00:24:12.159><c> is</c><00:24:12.240><c> actually</c><00:24:12.559><c> correct</c>

00:24:13.110 --> 00:24:13.120 align:start position:0%
program is actually correct
 

00:24:13.120 --> 00:24:16.870 align:start position:0%
program is actually correct
yeah<00:24:13.520><c> it</c><00:24:13.679><c> seems</c><00:24:13.919><c> to</c><00:24:14.000><c> produce</c><00:24:14.320><c> results</c><00:24:15.840><c> um</c>

00:24:16.870 --> 00:24:16.880 align:start position:0%
yeah it seems to produce results um
 

00:24:16.880 --> 00:24:20.390 align:start position:0%
yeah it seems to produce results um
i<00:24:18.880><c> i</c><00:24:19.039><c> think</c><00:24:19.200><c> there's</c><00:24:19.440><c> a</c><00:24:19.520><c> race</c><00:24:19.760><c> condition</c><00:24:20.240><c> isn't</c>

00:24:20.390 --> 00:24:20.400 align:start position:0%
i i think there's a race condition isn't
 

00:24:20.400 --> 00:24:21.269 align:start position:0%
i i think there's a race condition isn't
there<00:24:20.559><c> like</c><00:24:20.720><c> you</c><00:24:20.880><c> have</c>

00:24:21.269 --> 00:24:21.279 align:start position:0%
there like you have
 

00:24:21.279 --> 00:24:22.710 align:start position:0%
there like you have
all<00:24:21.360><c> of</c><00:24:21.520><c> these</c><00:24:21.760><c> different</c><00:24:22.000><c> threads</c><00:24:22.400><c> um</c>

00:24:22.710 --> 00:24:22.720 align:start position:0%
all of these different threads um
 

00:24:22.720 --> 00:24:24.149 align:start position:0%
all of these different threads um
incrementing<00:24:23.279><c> the</c><00:24:23.440><c> count</c><00:24:23.679><c> and</c><00:24:23.840><c> finished</c>

00:24:24.149 --> 00:24:24.159 align:start position:0%
incrementing the count and finished
 

00:24:24.159 --> 00:24:25.029 align:start position:0%
incrementing the count and finished
variables

00:24:25.029 --> 00:24:25.039 align:start position:0%
variables
 

00:24:25.039 --> 00:24:31.750 align:start position:0%
variables
yeah<00:24:25.440><c> um</c><00:24:25.840><c> and</c><00:24:26.080><c> it's</c><00:24:26.240><c> also</c><00:24:27.919><c> um</c>

00:24:31.750 --> 00:24:31.760 align:start position:0%
 
 

00:24:31.760 --> 00:24:33.110 align:start position:0%
 
it's<00:24:31.919><c> not</c><00:24:32.080><c> clear</c><00:24:32.320><c> to</c><00:24:32.480><c> me</c><00:24:32.559><c> that</c><00:24:32.720><c> finished</c>

00:24:33.110 --> 00:24:33.120 align:start position:0%
it's not clear to me that finished
 

00:24:33.120 --> 00:24:35.269 align:start position:0%
it's not clear to me that finished
necessarily<00:24:33.679><c> always</c><00:24:34.000><c> reaches</c><00:24:34.400><c> 10.</c>

00:24:35.269 --> 00:24:35.279 align:start position:0%
necessarily always reaches 10.
 

00:24:35.279 --> 00:24:38.549 align:start position:0%
necessarily always reaches 10.
um<00:24:36.320><c> is</c><00:24:36.480><c> it</c><00:24:36.559><c> possible</c><00:24:36.880><c> that</c><00:24:37.120><c> it</c><00:24:37.200><c> doesn't</c>

00:24:38.549 --> 00:24:38.559 align:start position:0%
um is it possible that it doesn't
 

00:24:38.559 --> 00:24:40.710 align:start position:0%
um is it possible that it doesn't
uh<00:24:39.039><c> let</c><00:24:39.200><c> me</c><00:24:39.279><c> let</c><00:24:39.440><c> me</c><00:24:39.840><c> take</c><00:24:40.000><c> this</c><00:24:40.240><c> one</c><00:24:40.400><c> one</c><00:24:40.559><c> by</c>

00:24:40.710 --> 00:24:40.720 align:start position:0%
uh let me let me take this one one by
 

00:24:40.720 --> 00:24:42.070 align:start position:0%
uh let me let me take this one one by
one<00:24:40.880><c> and</c><00:24:40.960><c> just</c><00:24:41.120><c> go</c><00:24:41.200><c> over</c><00:24:41.440><c> to</c><00:24:41.600><c> your</c><00:24:41.760><c> first</c><00:24:41.919><c> point</c>

00:24:42.070 --> 00:24:42.080 align:start position:0%
one and just go over to your first point
 

00:24:42.080 --> 00:24:44.070 align:start position:0%
one and just go over to your first point
this<00:24:42.320><c> is</c><00:24:42.400><c> the</c><00:24:42.720><c> one</c><00:24:42.880><c> one</c><00:24:43.039><c> hours</c><00:24:43.360><c> after</c>

00:24:44.070 --> 00:24:44.080 align:start position:0%
this is the one one hours after
 

00:24:44.080 --> 00:24:47.430 align:start position:0%
this is the one one hours after
uh<00:24:44.400><c> you</c><00:24:44.480><c> know</c><00:24:44.640><c> clear</c><00:24:45.120><c> house</c><00:24:45.360><c> uh</c><00:24:45.919><c> this</c><00:24:46.159><c> is</c><00:24:46.320><c> again</c>

00:24:47.430 --> 00:24:47.440 align:start position:0%
uh you know clear house uh this is again
 

00:24:47.440 --> 00:24:49.029 align:start position:0%
uh you know clear house uh this is again
the<00:24:47.600><c> fact</c><00:24:48.000><c> you</c><00:24:48.080><c> know</c><00:24:48.240><c> we</c><00:24:48.320><c> have</c><00:24:48.400><c> two</c><00:24:48.640><c> variables</c>

00:24:49.029 --> 00:24:49.039 align:start position:0%
the fact you know we have two variables
 

00:24:49.039 --> 00:24:50.789 align:start position:0%
the fact you know we have two variables
here<00:24:49.279><c> correct</c><00:24:50.080><c> uh</c>

00:24:50.789 --> 00:24:50.799 align:start position:0%
here correct uh
 

00:24:50.799 --> 00:24:53.350 align:start position:0%
here correct uh
you<00:24:50.880><c> know</c><00:24:51.279><c> uh</c><00:24:52.159><c> count</c><00:24:52.400><c> divinist</c><00:24:53.120><c> they're</c>

00:24:53.350 --> 00:24:53.360 align:start position:0%
you know uh count divinist they're
 

00:24:53.360 --> 00:24:54.950 align:start position:0%
you know uh count divinist they're
actually<00:24:53.679><c> by</c><00:24:53.840><c> different</c><00:24:54.080><c> go</c><00:24:54.240><c> routines</c><00:24:54.720><c> so</c>

00:24:54.950 --> 00:24:54.960 align:start position:0%
actually by different go routines so
 

00:24:54.960 --> 00:24:56.870 align:start position:0%
actually by different go routines so
this<00:24:55.120><c> is</c><00:24:55.279><c> immediately</c><00:24:55.840><c> a</c><00:24:55.919><c> red</c><00:24:56.159><c> flag</c>

00:24:56.870 --> 00:24:56.880 align:start position:0%
this is immediately a red flag
 

00:24:56.880 --> 00:24:58.470 align:start position:0%
this is immediately a red flag
it<00:24:56.960><c> could</c><00:24:57.120><c> be</c><00:24:57.279><c> a</c><00:24:57.360><c> serious</c><00:24:57.679><c> problem</c><00:24:58.000><c> here</c><00:24:58.240><c> like</c>

00:24:58.470 --> 00:24:58.480 align:start position:0%
it could be a serious problem here like
 

00:24:58.480 --> 00:25:00.070 align:start position:0%
it could be a serious problem here like
as<00:24:58.559><c> soon</c><00:24:58.799><c> as</c><00:24:58.880><c> you</c><00:24:59.039><c> have</c><00:24:59.279><c> you</c><00:24:59.440><c> know</c><00:24:59.600><c> a</c><00:24:59.679><c> variable</c>

00:25:00.070 --> 00:25:00.080 align:start position:0%
as soon as you have you know a variable
 

00:25:00.080 --> 00:25:01.750 align:start position:0%
as soon as you have you know a variable
that<00:25:00.320><c> has</c><00:25:00.480><c> access</c><00:25:00.799><c> to</c><00:25:00.960><c> or</c><00:25:01.120><c> modified</c>

00:25:01.750 --> 00:25:01.760 align:start position:0%
that has access to or modified
 

00:25:01.760 --> 00:25:03.510 align:start position:0%
that has access to or modified
and<00:25:02.400><c> by</c><00:25:02.559><c> two</c><00:25:02.720><c> different</c><00:25:02.960><c> goal</c><00:25:03.120><c> routines</c><00:25:03.440><c> you</c>

00:25:03.510 --> 00:25:03.520 align:start position:0%
and by two different goal routines you
 

00:25:03.520 --> 00:25:05.190 align:start position:0%
and by two different goal routines you
know<00:25:03.679><c> there's</c><00:25:03.919><c> got</c><00:25:04.080><c> to</c><00:25:04.159><c> be</c><00:25:04.240><c> a</c><00:25:04.400><c> problem</c>

00:25:05.190 --> 00:25:05.200 align:start position:0%
know there's got to be a problem
 

00:25:05.200 --> 00:25:06.470 align:start position:0%
know there's got to be a problem
and<00:25:05.360><c> so</c><00:25:05.600><c> you</c><00:25:05.679><c> know</c><00:25:05.760><c> it's</c><00:25:05.919><c> interesting</c><00:25:06.159><c> to</c><00:25:06.320><c> run</c>

00:25:06.470 --> 00:25:06.480 align:start position:0%
and so you know it's interesting to run
 

00:25:06.480 --> 00:25:08.390 align:start position:0%
and so you know it's interesting to run
the<00:25:07.120><c> race</c><00:25:07.360><c> detector</c><00:25:07.679><c> and</c><00:25:07.840><c> see</c><00:25:08.000><c> if</c><00:25:08.080><c> it</c><00:25:08.240><c> actually</c>

00:25:08.390 --> 00:25:08.400 align:start position:0%
the race detector and see if it actually
 

00:25:08.400 --> 00:25:10.310 align:start position:0%
the race detector and see if it actually
catches<00:25:08.799><c> it</c><00:25:09.039><c> right</c>

00:25:10.310 --> 00:25:10.320 align:start position:0%
catches it right
 

00:25:10.320 --> 00:25:13.110 align:start position:0%
catches it right
and<00:25:10.559><c> as</c><00:25:10.799><c> you</c><00:25:11.360><c> expected</c><00:25:11.760><c> you</c><00:25:11.919><c> know</c><00:25:12.080><c> to</c><00:25:12.240><c> go</c><00:25:12.960><c> the</c>

00:25:13.110 --> 00:25:13.120 align:start position:0%
and as you expected you know to go the
 

00:25:13.120 --> 00:25:14.870 align:start position:0%
and as you expected you know to go the
race<00:25:13.360><c> detector</c><00:25:13.840><c> tells</c><00:25:14.080><c> you</c><00:25:14.240><c> exactly</c><00:25:14.640><c> you</c><00:25:14.720><c> know</c>

00:25:14.870 --> 00:25:14.880 align:start position:0%
race detector tells you exactly you know
 

00:25:14.880 --> 00:25:16.310 align:start position:0%
race detector tells you exactly you know
there<00:25:15.039><c> is</c><00:25:15.200><c> indeed</c><00:25:15.600><c> you</c><00:25:15.679><c> know</c><00:25:15.840><c> some</c><00:25:16.000><c> problems</c>

00:25:16.310 --> 00:25:16.320 align:start position:0%
there is indeed you know some problems
 

00:25:16.320 --> 00:25:17.990 align:start position:0%
there is indeed you know some problems
here<00:25:16.480><c> with</c><00:25:16.640><c> this</c><00:25:16.880><c> uh</c><00:25:17.039><c> program</c>

00:25:17.990 --> 00:25:18.000 align:start position:0%
here with this uh program
 

00:25:18.000 --> 00:25:20.070 align:start position:0%
here with this uh program
and<00:25:18.400><c> you</c><00:25:18.480><c> know</c><00:25:18.880><c> list</c><00:25:19.120><c> the</c><00:25:19.200><c> line</c><00:25:19.440><c> numbers</c><00:25:19.919><c> you</c>

00:25:20.070 --> 00:25:20.080 align:start position:0%
and you know list the line numbers you
 

00:25:20.080 --> 00:25:22.630 align:start position:0%
and you know list the line numbers you
know<00:25:20.159><c> where</c><00:25:20.400><c> things</c><00:25:20.640><c> actually</c><00:25:20.880><c> can</c><00:25:21.039><c> go</c><00:25:21.279><c> wrong</c>

00:25:22.630 --> 00:25:22.640 align:start position:0%
know where things actually can go wrong
 

00:25:22.640 --> 00:25:24.070 align:start position:0%
know where things actually can go wrong
uh<00:25:23.120><c> so</c><00:25:23.279><c> that</c><00:25:23.360><c> gives</c><00:25:23.600><c> you</c><00:25:23.679><c> actually</c><00:25:23.840><c> a</c><00:25:23.919><c> pretty</c>

00:25:24.070 --> 00:25:24.080 align:start position:0%
uh so that gives you actually a pretty
 

00:25:24.080 --> 00:25:26.070 align:start position:0%
uh so that gives you actually a pretty
good<00:25:24.240><c> clue</c><00:25:24.480><c> that</c><00:25:24.960><c> something</c><00:25:25.279><c> is</c><00:25:25.600><c> not</c>

00:25:26.070 --> 00:25:26.080 align:start position:0%
good clue that something is not
 

00:25:26.080 --> 00:25:28.549 align:start position:0%
good clue that something is not
up<00:25:26.159><c> to</c><00:25:26.320><c> snuff</c><00:25:26.880><c> this</c><00:25:27.120><c> program</c><00:25:28.159><c> and</c><00:25:28.320><c> so</c><00:25:28.480><c> we're</c>

00:25:28.549 --> 00:25:28.559 align:start position:0%
up to snuff this program and so we're
 

00:25:28.559 --> 00:25:30.390 align:start position:0%
up to snuff this program and so we're
gonna<00:25:28.799><c> like</c><00:25:29.039><c> repair</c><00:25:29.360><c> it</c><00:25:29.520><c> in</c><00:25:29.600><c> small</c><00:25:29.840><c> steps</c>

00:25:30.390 --> 00:25:30.400 align:start position:0%
gonna like repair it in small steps
 

00:25:30.400 --> 00:25:33.750 align:start position:0%
gonna like repair it in small steps
and<00:25:30.960><c> uh</c><00:25:31.600><c> you</c><00:25:31.760><c> know</c><00:25:31.919><c> that</c><00:25:32.080><c> will</c><00:25:32.400><c> uh</c><00:25:33.360><c> hopefully</c>

00:25:33.750 --> 00:25:33.760 align:start position:0%
and uh you know that will uh hopefully
 

00:25:33.760 --> 00:25:35.190 align:start position:0%
and uh you know that will uh hopefully
shed<00:25:33.919><c> some</c><00:25:34.159><c> more</c><00:25:34.400><c> light</c><00:25:34.720><c> on</c>

00:25:35.190 --> 00:25:35.200 align:start position:0%
shed some more light on
 

00:25:35.200 --> 00:25:37.669 align:start position:0%
shed some more light on
concurrent<00:25:35.600><c> programming</c><00:25:36.880><c> so</c><00:25:37.120><c> let</c><00:25:37.279><c> me</c><00:25:37.600><c> you</c>

00:25:37.669 --> 00:25:37.679 align:start position:0%
concurrent programming so let me you
 

00:25:37.679 --> 00:25:39.430 align:start position:0%
concurrent programming so let me you
know<00:25:37.840><c> here's</c><00:25:38.159><c> my</c><00:25:38.400><c> second</c><00:25:38.720><c> solution</c><00:25:39.120><c> to</c><00:25:39.279><c> this</c>

00:25:39.430 --> 00:25:39.440 align:start position:0%
know here's my second solution to this
 

00:25:39.440 --> 00:25:40.950 align:start position:0%
know here's my second solution to this
program

00:25:40.950 --> 00:25:40.960 align:start position:0%
program
 

00:25:40.960 --> 00:25:43.669 align:start position:0%
program
uh<00:25:41.520><c> and</c><00:25:41.760><c> in</c><00:25:41.840><c> this</c><00:25:42.080><c> case</c><00:25:42.400><c> um</c><00:25:43.200><c> i'll</c><00:25:43.360><c> talk</c><00:25:43.520><c> about</c>

00:25:43.669 --> 00:25:43.679 align:start position:0%
uh and in this case um i'll talk about
 

00:25:43.679 --> 00:25:44.950 align:start position:0%
uh and in this case um i'll talk about
channels<00:25:43.919><c> in</c><00:25:44.000><c> a</c><00:25:44.080><c> little</c><00:25:44.240><c> bit</c><00:25:44.320><c> later</c><00:25:44.640><c> because</c><00:25:44.880><c> i</c>

00:25:44.950 --> 00:25:44.960 align:start position:0%
channels in a little bit later because i
 

00:25:44.960 --> 00:25:46.710 align:start position:0%
channels in a little bit later because i
wanted<00:25:45.200><c> to</c><00:25:45.360><c> illustrate</c><00:25:45.840><c> the</c>

00:25:46.710 --> 00:25:46.720 align:start position:0%
wanted to illustrate the
 

00:25:46.720 --> 00:25:49.590 align:start position:0%
wanted to illustrate the
uh<00:25:47.679><c> locks</c><00:25:48.000><c> and</c><00:25:48.159><c> condition</c><00:25:48.559><c> variables</c><00:25:49.039><c> first</c>

00:25:49.590 --> 00:25:49.600 align:start position:0%
uh locks and condition variables first
 

00:25:49.600 --> 00:25:51.350 align:start position:0%
uh locks and condition variables first
because<00:25:49.840><c> i've</c><00:25:50.080><c> got</c><00:25:50.320><c> less</c><00:25:50.559><c> emphasis</c><00:25:51.039><c> in</c><00:25:51.200><c> the</c>

00:25:51.350 --> 00:25:51.360 align:start position:0%
because i've got less emphasis in the
 

00:25:51.360 --> 00:25:52.630 align:start position:0%
because i've got less emphasis in the
tutorial

00:25:52.630 --> 00:25:52.640 align:start position:0%
tutorial
 

00:25:52.640 --> 00:25:55.669 align:start position:0%
tutorial
um<00:25:53.520><c> so</c><00:25:53.840><c> you</c><00:25:53.919><c> know</c><00:25:54.080><c> simple</c><00:25:54.480><c> solution</c><00:25:55.200><c> you</c><00:25:55.360><c> know</c>

00:25:55.669 --> 00:25:55.679 align:start position:0%
um so you know simple solution you know
 

00:25:55.679 --> 00:25:56.149 align:start position:0%
um so you know simple solution you know
you<00:25:55.919><c> go</c>

00:25:56.149 --> 00:25:56.159 align:start position:0%
you go
 

00:25:56.159 --> 00:25:58.870 align:start position:0%
you go
correct<00:25:56.480><c> you</c><00:25:56.720><c> introduce</c><00:25:57.120><c> a</c><00:25:57.200><c> lock</c><00:25:58.159><c> uh</c><00:25:58.480><c> the</c><00:25:58.640><c> lock</c>

00:25:58.870 --> 00:25:58.880 align:start position:0%
correct you introduce a lock uh the lock
 

00:25:58.880 --> 00:26:00.070 align:start position:0%
correct you introduce a lock uh the lock
is<00:25:58.960><c> completely</c><00:25:59.360><c> independent</c><00:25:59.840><c> of</c><00:25:59.919><c> the</c>

00:26:00.070 --> 00:26:00.080 align:start position:0%
is completely independent of the
 

00:26:00.080 --> 00:26:00.789 align:start position:0%
is completely independent of the
variables

00:26:00.789 --> 00:26:00.799 align:start position:0%
variables
 

00:26:00.799 --> 00:26:03.909 align:start position:0%
variables
uh<00:26:01.600><c> and</c><00:26:02.159><c> uh</c><00:26:02.720><c> and</c><00:26:02.880><c> you</c><00:26:03.039><c> follow</c><00:26:03.279><c> some</c><00:26:03.440><c> convention</c>

00:26:03.909 --> 00:26:03.919 align:start position:0%
uh and uh and you follow some convention
 

00:26:03.919 --> 00:26:06.230 align:start position:0%
uh and uh and you follow some convention
which<00:26:04.159><c> says</c><00:26:04.320><c> like</c><00:26:04.559><c> well</c><00:26:04.799><c> this</c><00:26:05.039><c> lock</c><00:26:05.360><c> mu</c>

00:26:06.230 --> 00:26:06.240 align:start position:0%
which says like well this lock mu
 

00:26:06.240 --> 00:26:09.110 align:start position:0%
which says like well this lock mu
protects<00:26:06.720><c> counted</c><00:26:07.120><c> finish</c><00:26:08.159><c> and</c><00:26:08.320><c> so</c><00:26:08.480><c> whenever</c>

00:26:09.110 --> 00:26:09.120 align:start position:0%
protects counted finish and so whenever
 

00:26:09.120 --> 00:26:11.029 align:start position:0%
protects counted finish and so whenever
you<00:26:09.200><c> know</c><00:26:09.440><c> you</c><00:26:09.760><c> access</c><00:26:10.240><c> and</c><00:26:10.400><c> count</c><00:26:10.640><c> the</c><00:26:10.720><c> finish</c>

00:26:11.029 --> 00:26:11.039 align:start position:0%
you know you access and count the finish
 

00:26:11.039 --> 00:26:12.710 align:start position:0%
you know you access and count the finish
and<00:26:11.200><c> basically</c><00:26:11.520><c> you</c><00:26:11.600><c> have</c><00:26:11.760><c> to</c><00:26:11.919><c> wrap</c><00:26:12.080><c> that</c><00:26:12.400><c> into</c>

00:26:12.710 --> 00:26:12.720 align:start position:0%
and basically you have to wrap that into
 

00:26:12.720 --> 00:26:14.390 align:start position:0%
and basically you have to wrap that into
a<00:26:12.799><c> lock</c><00:26:13.039><c> and</c><00:26:13.120><c> an</c><00:26:13.279><c> unlock</c><00:26:13.679><c> statement</c><00:26:14.080><c> and</c><00:26:14.159><c> so</c>

00:26:14.390 --> 00:26:14.400 align:start position:0%
a lock and an unlock statement and so
 

00:26:14.400 --> 00:26:15.350 align:start position:0%
a lock and an unlock statement and so
here<00:26:14.640><c> we</c><00:26:14.799><c> see</c><00:26:15.039><c> two</c>

00:26:15.350 --> 00:26:15.360 align:start position:0%
here we see two
 

00:26:15.360 --> 00:26:16.870 align:start position:0%
here we see two
like<00:26:15.520><c> this</c><00:26:15.679><c> is</c><00:26:15.760><c> the</c><00:26:16.000><c> go</c><00:26:16.240><c> function</c><00:26:16.559><c> because</c><00:26:16.799><c> it</c>

00:26:16.870 --> 00:26:16.880 align:start position:0%
like this is the go function because it
 

00:26:16.880 --> 00:26:18.870 align:start position:0%
like this is the go function because it
runs<00:26:17.120><c> concurrently</c><00:26:18.320><c> uh</c>

00:26:18.870 --> 00:26:18.880 align:start position:0%
runs concurrently uh
 

00:26:18.880 --> 00:26:21.909 align:start position:0%
runs concurrently uh
and<00:26:19.440><c> after</c><00:26:19.919><c> you</c><00:26:20.080><c> know</c><00:26:20.400><c> the</c><00:26:20.640><c> request</c><00:26:21.039><c> code</c><00:26:21.760><c> it's</c>

00:26:21.909 --> 00:26:21.919 align:start position:0%
and after you know the request code it's
 

00:26:21.919 --> 00:26:23.590 align:start position:0%
and after you know the request code it's
about<00:26:22.159><c> to</c><00:26:22.320><c> update</c><00:26:22.720><c> the</c><00:26:22.799><c> vote</c><00:26:23.120><c> and</c><00:26:23.200><c> finish</c><00:26:23.440><c> so</c>

00:26:23.590 --> 00:26:23.600 align:start position:0%
about to update the vote and finish so
 

00:26:23.600 --> 00:26:25.110 align:start position:0%
about to update the vote and finish so
we<00:26:23.760><c> take</c><00:26:23.919><c> a</c><00:26:24.000><c> lock</c><00:26:24.320><c> out</c>

00:26:25.110 --> 00:26:25.120 align:start position:0%
we take a lock out
 

00:26:25.120 --> 00:26:26.710 align:start position:0%
we take a lock out
and<00:26:25.200><c> then</c><00:26:25.360><c> go</c><00:26:25.600><c> has</c><00:26:25.760><c> this</c><00:26:25.919><c> nice</c><00:26:26.159><c> feature</c><00:26:26.640><c> you</c>

00:26:26.710 --> 00:26:26.720 align:start position:0%
and then go has this nice feature you
 

00:26:26.720 --> 00:26:29.029 align:start position:0%
and then go has this nice feature you
know<00:26:27.200><c> uh</c><00:26:27.440><c> called</c><00:26:27.679><c> the</c><00:26:27.760><c> defer</c><00:26:28.080><c> statement</c>

00:26:29.029 --> 00:26:29.039 align:start position:0%
know uh called the defer statement
 

00:26:29.039 --> 00:26:32.310 align:start position:0%
know uh called the defer statement
but<00:26:29.840><c> if</c><00:26:30.000><c> you</c><00:26:30.960><c> exit</c><00:26:31.279><c> the</c><00:26:31.360><c> basic</c><00:26:31.679><c> block</c><00:26:32.000><c> you</c><00:26:32.159><c> know</c>

00:26:32.310 --> 00:26:32.320 align:start position:0%
but if you exit the basic block you know
 

00:26:32.320 --> 00:26:34.630 align:start position:0%
but if you exit the basic block you know
we'll

00:26:34.630 --> 00:26:34.640 align:start position:0%
 
 

00:26:34.640 --> 00:26:36.549 align:start position:0%
 
run<00:26:34.799><c> the</c><00:26:34.960><c> function</c><00:26:35.360><c> that</c><00:26:35.600><c> is</c><00:26:35.840><c> uh</c><00:26:36.000><c> declared</c><00:26:36.400><c> by</c>

00:26:36.549 --> 00:26:36.559 align:start position:0%
run the function that is uh declared by
 

00:26:36.559 --> 00:26:38.870 align:start position:0%
run the function that is uh declared by
the<00:26:36.720><c> defer</c><00:26:37.120><c> or</c><00:26:37.279><c> that</c>

00:26:38.870 --> 00:26:38.880 align:start position:0%
the defer or that
 

00:26:38.880 --> 00:26:40.950 align:start position:0%
the defer or that
after<00:26:39.120><c> the</c><00:26:39.279><c> key</c><00:26:39.440><c> word</c><00:26:39.600><c> deferred</c><00:26:40.480><c> and</c><00:26:40.640><c> so</c><00:26:40.799><c> this</c>

00:26:40.950 --> 00:26:40.960 align:start position:0%
after the key word deferred and so this
 

00:26:40.960 --> 00:26:42.390 align:start position:0%
after the key word deferred and so this
means<00:26:41.200><c> like</c><00:26:41.360><c> when</c><00:26:41.600><c> we</c><00:26:41.840><c> execute</c>

00:26:42.390 --> 00:26:42.400 align:start position:0%
means like when we execute
 

00:26:42.400 --> 00:26:44.710 align:start position:0%
means like when we execute
we<00:26:42.640><c> leave</c><00:26:42.880><c> the</c><00:26:43.120><c> go</c><00:26:43.360><c> function</c><00:26:43.760><c> here</c><00:26:44.400><c> will</c>

00:26:44.710 --> 00:26:44.720 align:start position:0%
we leave the go function here will
 

00:26:44.720 --> 00:26:46.390 align:start position:0%
we leave the go function here will
automatically<00:26:45.360><c> unlock</c>

00:26:46.390 --> 00:26:46.400 align:start position:0%
automatically unlock
 

00:26:46.400 --> 00:26:47.750 align:start position:0%
automatically unlock
this<00:26:46.559><c> is</c><00:26:46.640><c> convenient</c><00:26:47.120><c> because</c><00:26:47.360><c> then</c><00:26:47.600><c> you</c>

00:26:47.750 --> 00:26:47.760 align:start position:0%
this is convenient because then you
 

00:26:47.760 --> 00:26:50.149 align:start position:0%
this is convenient because then you
won't<00:26:47.919><c> forget</c><00:26:48.240><c> to</c><00:26:48.400><c> unlock</c><00:26:49.360><c> and</c><00:26:49.600><c> so</c><00:26:49.760><c> it's</c><00:26:49.919><c> nice</c>

00:26:50.149 --> 00:26:50.159 align:start position:0%
won't forget to unlock and so it's nice
 

00:26:50.159 --> 00:26:51.430 align:start position:0%
won't forget to unlock and so it's nice
to<00:26:50.240><c> do</c><00:26:50.320><c> that</c><00:26:50.559><c> write</c><00:26:50.720><c> a</c><00:26:50.799><c> point</c><00:26:51.039><c> where</c><00:26:51.200><c> you</c><00:26:51.279><c> do</c>

00:26:51.430 --> 00:26:51.440 align:start position:0%
to do that write a point where you do
 

00:26:51.440 --> 00:26:52.070 align:start position:0%
to do that write a point where you do
the<00:26:51.600><c> lock</c>

00:26:52.070 --> 00:26:52.080 align:start position:0%
the lock
 

00:26:52.080 --> 00:26:53.669 align:start position:0%
the lock
and<00:26:52.240><c> so</c><00:26:52.480><c> you</c><00:26:52.559><c> can</c><00:26:52.720><c> write</c><00:26:52.880><c> immediately</c><00:26:53.279><c> before</c>

00:26:53.669 --> 00:26:53.679 align:start position:0%
and so you can write immediately before
 

00:26:53.679 --> 00:26:55.350 align:start position:0%
and so you can write immediately before
it<00:26:53.760><c> lock</c><00:26:54.159><c> and</c><00:26:54.240><c> then</c><00:26:54.480><c> you</c><00:26:54.720><c> don't</c><00:26:54.799><c> have</c><00:26:54.960><c> to</c><00:26:55.039><c> worry</c>

00:26:55.350 --> 00:26:55.360 align:start position:0%
it lock and then you don't have to worry
 

00:26:55.360 --> 00:26:55.669 align:start position:0%
it lock and then you don't have to worry
about

00:26:55.669 --> 00:26:55.679 align:start position:0%
about
 

00:26:55.679 --> 00:26:57.269 align:start position:0%
about
if<00:26:55.840><c> there</c><00:26:55.919><c> are</c><00:26:56.000><c> multiple</c><00:26:56.400><c> exit</c><00:26:56.720><c> pass</c><00:26:57.039><c> out</c><00:26:57.200><c> of</c>

00:26:57.269 --> 00:26:57.279 align:start position:0%
if there are multiple exit pass out of
 

00:26:57.279 --> 00:26:59.510 align:start position:0%
if there are multiple exit pass out of
the<00:26:57.360><c> go</c><00:26:57.600><c> routine</c><00:26:58.000><c> or</c><00:26:58.240><c> at</c><00:26:58.400><c> a</c><00:26:58.640><c> function</c>

00:26:59.510 --> 00:26:59.520 align:start position:0%
the go routine or at a function
 

00:26:59.520 --> 00:27:03.190 align:start position:0%
the go routine or at a function
uh<00:26:59.840><c> that</c><00:27:00.000><c> you</c><00:27:00.159><c> forget</c><00:27:00.480><c> to</c><00:27:00.640><c> unlock</c><00:27:02.400><c> so</c><00:27:02.559><c> now</c>

00:27:03.190 --> 00:27:03.200 align:start position:0%
uh that you forget to unlock so now
 

00:27:03.200 --> 00:27:04.630 align:start position:0%
uh that you forget to unlock so now
you<00:27:03.279><c> know</c><00:27:03.600><c> we're</c><00:27:03.840><c> basically</c><00:27:04.159><c> in</c><00:27:04.240><c> a</c><00:27:04.320><c> critical</c>

00:27:04.630 --> 00:27:04.640 align:start position:0%
you know we're basically in a critical
 

00:27:04.640 --> 00:27:06.470 align:start position:0%
you know we're basically in a critical
section<00:27:05.039><c> where</c><00:27:05.360><c> we</c><00:27:05.600><c> hold</c><00:27:05.840><c> the</c><00:27:05.919><c> lock</c>

00:27:06.470 --> 00:27:06.480 align:start position:0%
section where we hold the lock
 

00:27:06.480 --> 00:27:08.950 align:start position:0%
section where we hold the lock
we<00:27:07.039><c> update</c><00:27:07.360><c> vote</c><00:27:07.679><c> and</c><00:27:07.760><c> count</c><00:27:08.320><c> and</c><00:27:08.559><c> then</c><00:27:08.880><c> of</c>

00:27:08.950 --> 00:27:08.960 align:start position:0%
we update vote and count and then of
 

00:27:08.960 --> 00:27:10.710 align:start position:0%
we update vote and count and then of
course<00:27:09.200><c> the</c><00:27:09.279><c> function</c><00:27:09.520><c> returns</c><00:27:10.000><c> and</c><00:27:10.159><c> unlocks</c>

00:27:10.710 --> 00:27:10.720 align:start position:0%
course the function returns and unlocks
 

00:27:10.720 --> 00:27:13.909 align:start position:0%
course the function returns and unlocks
automatically<00:27:12.080><c> and</c><00:27:12.240><c> similarly</c><00:27:12.799><c> at</c><00:27:12.880><c> the</c>

00:27:13.909 --> 00:27:13.919 align:start position:0%
automatically and similarly at the
 

00:27:13.919 --> 00:27:16.789 align:start position:0%
automatically and similarly at the
uh<00:27:14.720><c> at</c><00:27:14.880><c> the</c><00:27:15.760><c> you</c><00:27:15.840><c> know</c><00:27:16.000><c> at</c><00:27:16.080><c> the</c><00:27:16.240><c> end</c><00:27:16.559><c> you</c><00:27:16.720><c> know</c>

00:27:16.789 --> 00:27:16.799 align:start position:0%
uh at the you know at the end you know
 

00:27:16.799 --> 00:27:17.669 align:start position:0%
uh at the you know at the end you know
we<00:27:16.960><c> gotta</c>

00:27:17.669 --> 00:27:17.679 align:start position:0%
we gotta
 

00:27:17.679 --> 00:27:20.230 align:start position:0%
we gotta
uh<00:27:18.880><c> every</c><00:27:19.039><c> time</c><00:27:19.200><c> we</c><00:27:19.360><c> access</c><00:27:19.760><c> you</c><00:27:19.840><c> know</c><00:27:20.000><c> count</c>

00:27:20.230 --> 00:27:20.240 align:start position:0%
uh every time we access you know count
 

00:27:20.240 --> 00:27:21.190 align:start position:0%
uh every time we access you know count
to<00:27:20.320><c> finish</c>

00:27:21.190 --> 00:27:21.200 align:start position:0%
to finish
 

00:27:21.200 --> 00:27:22.870 align:start position:0%
to finish
uh<00:27:21.440><c> since</c><00:27:21.679><c> they</c><00:27:21.919><c> share</c><00:27:22.080><c> it</c><00:27:22.240><c> you</c><00:27:22.399><c> know</c><00:27:22.559><c> we</c><00:27:22.720><c> need</c>

00:27:22.870 --> 00:27:22.880 align:start position:0%
uh since they share it you know we need
 

00:27:22.880 --> 00:27:24.870 align:start position:0%
uh since they share it you know we need
to<00:27:23.360><c> surround</c><00:27:23.679><c> it</c><00:27:23.840><c> with</c><00:27:24.000><c> locks</c><00:27:24.399><c> and</c><00:27:24.559><c> then</c><00:27:24.799><c> you</c>

00:27:24.870 --> 00:27:24.880 align:start position:0%
to surround it with locks and then you
 

00:27:24.880 --> 00:27:26.470 align:start position:0%
to surround it with locks and then you
know<00:27:25.039><c> a</c><00:27:25.360><c> simple</c><00:27:25.600><c> way</c><00:27:25.760><c> of</c><00:27:25.840><c> doing</c><00:27:26.080><c> it</c><00:27:26.240><c> we</c><00:27:26.399><c> could</c>

00:27:26.470 --> 00:27:26.480 align:start position:0%
know a simple way of doing it we could
 

00:27:26.480 --> 00:27:28.310 align:start position:0%
know a simple way of doing it we could
have<00:27:26.640><c> written</c><00:27:26.960><c> d</c><00:27:27.120><c> for</c><00:27:27.440><c> unlocking</c><00:27:27.919><c> or</c><00:27:28.000><c> two</c><00:27:28.240><c> in</c>

00:27:28.310 --> 00:27:28.320 align:start position:0%
have written d for unlocking or two in
 

00:27:28.320 --> 00:27:28.950 align:start position:0%
have written d for unlocking or two in
the<00:27:28.399><c> body</c>

00:27:28.950 --> 00:27:28.960 align:start position:0%
the body
 

00:27:28.960 --> 00:27:31.750 align:start position:0%
the body
but<00:27:29.279><c> we've</c><00:27:29.440><c> been</c><00:27:29.679><c> fine</c><00:27:30.240><c> all</c><00:27:30.399><c> right</c><00:27:31.279><c> so</c><00:27:31.520><c> we</c><00:27:31.600><c> can</c>

00:27:31.750 --> 00:27:31.760 align:start position:0%
but we've been fine all right so we can
 

00:27:31.760 --> 00:27:34.149 align:start position:0%
but we've been fine all right so we can
actually<00:27:32.080><c> run</c><00:27:32.240><c> this</c><00:27:32.840><c> program</c>

00:27:34.149 --> 00:27:34.159 align:start position:0%
actually run this program
 

00:27:34.159 --> 00:27:37.269 align:start position:0%
actually run this program
let's<00:27:34.320><c> see</c><00:27:34.640><c> yeah</c><00:27:36.720><c> and</c><00:27:36.960><c> so</c>

00:27:37.269 --> 00:27:37.279 align:start position:0%
let's see yeah and so
 

00:27:37.279 --> 00:27:38.789 align:start position:0%
let's see yeah and so
we<00:27:37.440><c> run</c><00:27:37.679><c> it</c><00:27:37.840><c> you</c><00:27:38.000><c> know</c><00:27:38.159><c> the</c><00:27:38.240><c> race</c><00:27:38.480><c> detector</c>

00:27:38.789 --> 00:27:38.799 align:start position:0%
we run it you know the race detector
 

00:27:38.799 --> 00:27:40.470 align:start position:0%
we run it you know the race detector
seems<00:27:39.039><c> to</c><00:27:39.120><c> be</c><00:27:39.279><c> happy</c><00:27:39.840><c> uh</c><00:27:40.080><c> so</c>

00:27:40.470 --> 00:27:40.480 align:start position:0%
seems to be happy uh so
 

00:27:40.480 --> 00:27:42.630 align:start position:0%
seems to be happy uh so
hopefully<00:27:40.880><c> we'll</c><00:27:41.279><c> have</c><00:27:41.440><c> a</c><00:27:41.600><c> better</c><00:27:41.840><c> program</c>

00:27:42.630 --> 00:27:42.640 align:start position:0%
hopefully we'll have a better program
 

00:27:42.640 --> 00:27:44.070 align:start position:0%
hopefully we'll have a better program
all<00:27:42.720><c> right</c>

00:27:44.070 --> 00:27:44.080 align:start position:0%
all right
 

00:27:44.080 --> 00:27:46.149 align:start position:0%
all right
um<00:27:44.240><c> so</c><00:27:44.399><c> i</c><00:27:44.480><c> just</c><00:27:44.640><c> have</c><00:27:44.799><c> a</c><00:27:44.880><c> question</c><00:27:45.279><c> here</c><00:27:45.760><c> about</c>

00:27:46.149 --> 00:27:46.159 align:start position:0%
um so i just have a question here about
 

00:27:46.159 --> 00:27:47.110 align:start position:0%
um so i just have a question here about
scoping

00:27:47.110 --> 00:27:47.120 align:start position:0%
scoping
 

00:27:47.120 --> 00:27:48.470 align:start position:0%
scoping
yeah<00:27:47.279><c> so</c><00:27:47.600><c> it</c><00:27:47.679><c> seems</c><00:27:47.840><c> that</c><00:27:48.000><c> when</c><00:27:48.159><c> we</c><00:27:48.240><c> have</c><00:27:48.399><c> the</c>

00:27:48.470 --> 00:27:48.480 align:start position:0%
yeah so it seems that when we have the
 

00:27:48.480 --> 00:27:50.149 align:start position:0%
yeah so it seems that when we have the
anonymous<00:27:48.880><c> function</c><00:27:49.279><c> then</c><00:27:49.440><c> we</c><00:27:49.600><c> have</c><00:27:49.679><c> this</c><00:27:49.919><c> mu</c>

00:27:50.149 --> 00:27:50.159 align:start position:0%
anonymous function then we have this mu
 

00:27:50.159 --> 00:27:51.830 align:start position:0%
anonymous function then we have this mu
and<00:27:50.240><c> we</c><00:27:50.399><c> have</c><00:27:50.720><c> uh</c><00:27:51.039><c> the</c><00:27:51.200><c> count</c><00:27:51.520><c> and</c><00:27:51.600><c> we</c><00:27:51.679><c> have</c><00:27:51.760><c> the</c>

00:27:51.830 --> 00:27:51.840 align:start position:0%
and we have uh the count and we have the
 

00:27:51.840 --> 00:27:53.269 align:start position:0%
and we have uh the count and we have the
finished<00:27:52.240><c> and</c><00:27:52.320><c> it</c><00:27:52.399><c> seems</c><00:27:52.640><c> that</c><00:27:52.720><c> the</c><00:27:52.880><c> anonymous</c>

00:27:53.269 --> 00:27:53.279 align:start position:0%
finished and it seems that the anonymous
 

00:27:53.279 --> 00:27:55.190 align:start position:0%
finished and it seems that the anonymous
function<00:27:53.600><c> has</c><00:27:53.760><c> access</c><00:27:54.159><c> to</c>

00:27:55.190 --> 00:27:55.200 align:start position:0%
function has access to
 

00:27:55.200 --> 00:27:56.310 align:start position:0%
function has access to
that<00:27:55.440><c> we're</c><00:27:55.600><c> defined</c><00:27:55.919><c> outside</c><00:27:56.159><c> of</c><00:27:56.240><c> the</c>

00:27:56.310 --> 00:27:56.320 align:start position:0%
that we're defined outside of the
 

00:27:56.320 --> 00:27:59.190 align:start position:0%
that we're defined outside of the
function<00:27:56.640><c> so</c><00:27:56.720><c> how</c><00:27:56.960><c> do</c><00:27:57.200><c> looping</c><00:27:57.679><c> rules</c><00:27:57.919><c> work</c>

00:27:59.190 --> 00:27:59.200 align:start position:0%
function so how do looping rules work
 

00:27:59.200 --> 00:28:02.070 align:start position:0%
function so how do looping rules work
yeah<00:27:59.440><c> uh</c><00:27:59.760><c> you're</c><00:28:00.000><c> building</c><00:28:00.320><c> any</c><00:28:01.520><c> an</c><00:28:01.600><c> anonymous</c>

00:28:02.070 --> 00:28:02.080 align:start position:0%
yeah uh you're building any an anonymous
 

00:28:02.080 --> 00:28:02.549 align:start position:0%
yeah uh you're building any an anonymous
function

00:28:02.549 --> 00:28:02.559 align:start position:0%
function
 

00:28:02.559 --> 00:28:04.230 align:start position:0%
function
any<00:28:02.799><c> variable</c><00:28:03.120><c> that's</c><00:28:03.360><c> you</c><00:28:03.440><c> know</c><00:28:03.600><c> used</c><00:28:03.919><c> inside</c>

00:28:04.230 --> 00:28:04.240 align:start position:0%
any variable that's you know used inside
 

00:28:04.240 --> 00:28:05.909 align:start position:0%
any variable that's you know used inside
of<00:28:04.320><c> the</c><00:28:04.640><c> function</c><00:28:04.960><c> that's</c><00:28:05.200><c> not</c><00:28:05.360><c> declared</c>

00:28:05.909 --> 00:28:05.919 align:start position:0%
of the function that's not declared
 

00:28:05.919 --> 00:28:07.110 align:start position:0%
of the function that's not declared
inside<00:28:06.159><c> of</c><00:28:06.320><c> the</c><00:28:06.399><c> function</c>

00:28:07.110 --> 00:28:07.120 align:start position:0%
inside of the function
 

00:28:07.120 --> 00:28:09.750 align:start position:0%
inside of the function
basically<00:28:07.520><c> result</c><00:28:08.000><c> uh</c><00:28:08.320><c> points</c><00:28:08.720><c> to</c><00:28:09.279><c> variables</c>

00:28:09.750 --> 00:28:09.760 align:start position:0%
basically result uh points to variables
 

00:28:09.760 --> 00:28:11.830 align:start position:0%
basically result uh points to variables
outside<00:28:10.080><c> of</c><00:28:10.240><c> the</c><00:28:10.399><c> outer</c><00:28:10.640><c> scope</c>

00:28:11.830 --> 00:28:11.840 align:start position:0%
outside of the outer scope
 

00:28:11.840 --> 00:28:15.510 align:start position:0%
outside of the outer scope
so<00:28:12.000><c> statically</c><00:28:12.480><c> scoped</c><00:28:14.799><c> what</c><00:28:14.960><c> about</c><00:28:15.279><c> the</c>

00:28:15.510 --> 00:28:15.520 align:start position:0%
so statically scoped what about the
 

00:28:15.520 --> 00:28:15.990 align:start position:0%
so statically scoped what about the
scope

00:28:15.990 --> 00:28:16.000 align:start position:0%
scope
 

00:28:16.000 --> 00:28:19.830 align:start position:0%
scope
of<00:28:16.240><c> uh</c><00:28:16.880><c> like</c><00:28:17.039><c> the</c><00:28:17.200><c> mutex</c>

00:28:19.830 --> 00:28:19.840 align:start position:0%
 
 

00:28:19.840 --> 00:28:21.590 align:start position:0%
 
how<00:28:20.000><c> many</c><00:28:20.240><c> times</c><00:28:20.480><c> you</c><00:28:20.559><c> have</c><00:28:20.640><c> to</c><00:28:20.799><c> declare</c><00:28:21.200><c> that</c>

00:28:21.590 --> 00:28:21.600 align:start position:0%
how many times you have to declare that
 

00:28:21.600 --> 00:28:23.430 align:start position:0%
how many times you have to declare that
or<00:28:22.159><c> and</c><00:28:22.320><c> what's</c><00:28:22.559><c> the</c><00:28:22.640><c> scope</c><00:28:22.960><c> of</c><00:28:23.120><c> it</c>

00:28:23.430 --> 00:28:23.440 align:start position:0%
or and what's the scope of it
 

00:28:23.440 --> 00:28:25.190 align:start position:0%
or and what's the scope of it
i<00:28:23.520><c> guess</c><00:28:24.159><c> the</c><00:28:24.320><c> scope</c><00:28:24.640><c> of</c><00:28:24.720><c> the</c><00:28:24.880><c> the</c><00:28:25.039><c> first</c>

00:28:25.190 --> 00:28:25.200 align:start position:0%
i guess the scope of the the first
 

00:28:25.200 --> 00:28:26.710 align:start position:0%
i guess the scope of the the first
statement<00:28:25.520><c> is</c><00:28:25.600><c> this</c><00:28:26.080><c> this</c><00:28:26.240><c> block</c>

00:28:26.710 --> 00:28:26.720 align:start position:0%
statement is this this block
 

00:28:26.720 --> 00:28:29.990 align:start position:0%
statement is this this block
one<00:28:26.960><c> basic</c><00:28:27.279><c> block</c><00:28:29.279><c> you</c><00:28:29.360><c> know</c><00:28:29.440><c> i</c><00:28:29.520><c> mean</c><00:28:29.679><c> like</c>

00:28:29.990 --> 00:28:30.000 align:start position:0%
one basic block you know i mean like
 

00:28:30.000 --> 00:28:32.549 align:start position:0%
one basic block you know i mean like
when<00:28:30.159><c> you</c><00:28:30.240><c> actually</c><00:28:30.480><c> declare</c><00:28:31.039><c> like</c><00:28:31.279><c> the</c><00:28:31.520><c> mutex</c>

00:28:32.549 --> 00:28:32.559 align:start position:0%
when you actually declare like the mutex
 

00:28:32.559 --> 00:28:36.149 align:start position:0%
when you actually declare like the mutex
data<00:28:32.960><c> structure</c><00:28:33.600><c> i</c><00:28:33.760><c> guess</c><00:28:35.520><c> it's</c><00:28:35.679><c> like</c><00:28:35.919><c> any</c>

00:28:36.149 --> 00:28:36.159 align:start position:0%
data structure i guess it's like any
 

00:28:36.159 --> 00:28:37.430 align:start position:0%
data structure i guess it's like any
other<00:28:36.320><c> variable</c>

00:28:37.430 --> 00:28:37.440 align:start position:0%
other variable
 

00:28:37.440 --> 00:28:40.470 align:start position:0%
other variable
it<00:28:37.600><c> has</c><00:28:37.760><c> the</c><00:28:37.919><c> same</c><00:28:38.080><c> scope</c><00:28:38.480><c> as</c><00:28:38.640><c> finish</c><00:28:39.120><c> or</c><00:28:39.279><c> count</c>

00:28:40.470 --> 00:28:40.480 align:start position:0%
it has the same scope as finish or count
 

00:28:40.480 --> 00:28:43.350 align:start position:0%
it has the same scope as finish or count
so<00:28:40.640><c> it</c><00:28:40.720><c> applies</c><00:28:41.120><c> to</c><00:28:41.279><c> any</c><00:28:41.600><c> variable</c><00:28:42.559><c> declared</c>

00:28:43.350 --> 00:28:43.360 align:start position:0%
so it applies to any variable declared
 

00:28:43.360 --> 00:28:45.029 align:start position:0%
so it applies to any variable declared
in<00:28:43.440><c> the</c><00:28:43.600><c> rest</c><00:28:43.840><c> of</c><00:28:44.000><c> the</c>

00:28:45.029 --> 00:28:45.039 align:start position:0%
in the rest of the
 

00:28:45.039 --> 00:28:46.789 align:start position:0%
in the rest of the
yeah<00:28:45.360><c> the</c><00:28:45.520><c> way</c><00:28:45.679><c> to</c><00:28:45.760><c> think</c><00:28:45.919><c> about</c><00:28:46.159><c> it</c><00:28:46.320><c> is</c><00:28:46.480><c> that</c>

00:28:46.789 --> 00:28:46.799 align:start position:0%
yeah the way to think about it is that
 

00:28:46.799 --> 00:28:48.070 align:start position:0%
yeah the way to think about it is that
uh<00:28:47.600><c> the</c>

00:28:48.070 --> 00:28:48.080 align:start position:0%
uh the
 

00:28:48.080 --> 00:28:50.149 align:start position:0%
uh the
the<00:28:48.480><c> mutex</c><00:28:48.960><c> is</c><00:28:49.039><c> not</c><00:28:49.279><c> directly</c><00:28:49.679><c> associated</c>

00:28:50.149 --> 00:28:50.159 align:start position:0%
the mutex is not directly associated
 

00:28:50.159 --> 00:28:51.830 align:start position:0%
the mutex is not directly associated
with<00:28:50.320><c> any</c><00:28:50.480><c> variable</c><00:28:50.960><c> it's</c><00:28:51.120><c> just</c><00:28:51.360><c> a</c><00:28:51.440><c> lock</c>

00:28:51.830 --> 00:28:51.840 align:start position:0%
with any variable it's just a lock
 

00:28:51.840 --> 00:28:54.630 align:start position:0%
with any variable it's just a lock
you<00:28:52.000><c> know</c><00:28:52.080><c> it's</c><00:28:52.320><c> like</c><00:28:52.480><c> a</c><00:28:52.640><c> name</c><00:28:53.520><c> and</c><00:28:54.240><c> it's</c><00:28:54.399><c> up</c><00:28:54.559><c> to</c>

00:28:54.630 --> 00:28:54.640 align:start position:0%
you know it's like a name and it's up to
 

00:28:54.640 --> 00:28:56.549 align:start position:0%
you know it's like a name and it's up to
you<00:28:54.799><c> as</c><00:28:54.960><c> a</c><00:28:55.120><c> programmer</c><00:28:55.600><c> to</c><00:28:55.760><c> decide</c><00:28:56.159><c> like</c><00:28:56.320><c> what</c>

00:28:56.549 --> 00:28:56.559 align:start position:0%
you as a programmer to decide like what
 

00:28:56.559 --> 00:29:01.269 align:start position:0%
you as a programmer to decide like what
that<00:28:56.720><c> lock</c><00:28:56.880><c> protects</c>

00:29:01.269 --> 00:29:01.279 align:start position:0%
 
 

00:29:01.279 --> 00:29:04.549 align:start position:0%
 
so<00:29:01.520><c> they're</c><00:29:01.679><c> two</c><00:29:01.919><c> independent</c><00:29:02.480><c> concepts</c>

00:29:04.549 --> 00:29:04.559 align:start position:0%
so they're two independent concepts
 

00:29:04.559 --> 00:29:07.190 align:start position:0%
so they're two independent concepts
what<00:29:04.720><c> happens</c><00:29:05.679><c> what</c><00:29:05.919><c> happens</c><00:29:06.240><c> if</c><00:29:06.320><c> you</c><00:29:06.480><c> use</c><00:29:06.799><c> i</c>

00:29:07.190 --> 00:29:07.200 align:start position:0%
what happens what happens if you use i
 

00:29:07.200 --> 00:29:07.909 align:start position:0%
what happens what happens if you use i
in<00:29:07.360><c> the</c><00:29:07.600><c> um</c>

00:29:07.909 --> 00:29:07.919 align:start position:0%
in the um
 

00:29:07.919 --> 00:29:09.669 align:start position:0%
in the um
go<00:29:08.159><c> routine</c><00:29:08.720><c> that</c><00:29:08.880><c> won't</c><00:29:09.120><c> work</c><00:29:09.360><c> right</c><00:29:09.600><c> you</c>

00:29:09.669 --> 00:29:09.679 align:start position:0%
go routine that won't work right you
 

00:29:09.679 --> 00:29:11.269 align:start position:0%
go routine that won't work right you
need<00:29:09.840><c> to</c><00:29:09.919><c> pass</c><00:29:10.240><c> that</c><00:29:10.559><c> in</c>

00:29:11.269 --> 00:29:11.279 align:start position:0%
need to pass that in
 

00:29:11.279 --> 00:29:12.710 align:start position:0%
need to pass that in
yeah<00:29:11.520><c> so</c><00:29:11.679><c> whatever</c><00:29:12.159><c> yeah</c><00:29:12.320><c> that's</c><00:29:12.480><c> a</c><00:29:12.559><c> good</c>

00:29:12.710 --> 00:29:12.720 align:start position:0%
yeah so whatever yeah that's a good
 

00:29:12.720 --> 00:29:14.230 align:start position:0%
yeah so whatever yeah that's a good
question<00:29:13.039><c> and</c><00:29:13.120><c> then</c><00:29:13.279><c> the</c><00:29:13.440><c> number</c><00:29:13.679><c> of</c><00:29:14.000><c> number</c>

00:29:14.230 --> 00:29:14.240 align:start position:0%
question and then the number of number
 

00:29:14.240 --> 00:29:15.830 align:start position:0%
question and then the number of number
of<00:29:14.320><c> you</c><00:29:14.480><c> asked</c><00:29:14.720><c> that</c><00:29:14.880><c> uh</c><00:29:14.960><c> for</c><00:29:15.120><c> email</c><00:29:15.440><c> too</c><00:29:15.679><c> so</c>

00:29:15.830 --> 00:29:15.840 align:start position:0%
of you asked that uh for email too so
 

00:29:15.840 --> 00:29:17.510 align:start position:0%
of you asked that uh for email too so
what<00:29:16.000><c> are</c><00:29:16.159><c> you</c><00:29:16.320><c> what</c><00:29:16.720><c> happens</c><00:29:16.960><c> to</c><00:29:17.120><c> like</c><00:29:17.200><c> if</c><00:29:17.360><c> we</c>

00:29:17.510 --> 00:29:17.520 align:start position:0%
what are you what happens to like if we
 

00:29:17.520 --> 00:29:18.389 align:start position:0%
what are you what happens to like if we
use<00:29:17.679><c> i</c><00:29:17.919><c> here</c>

00:29:18.389 --> 00:29:18.399 align:start position:0%
use i here
 

00:29:18.399 --> 00:29:20.710 align:start position:0%
use i here
you<00:29:18.480><c> know</c><00:29:18.799><c> what</c><00:29:19.120><c> you</c><00:29:19.279><c> know</c><00:29:20.000><c> do</c><00:29:20.240><c> something</c><00:29:20.480><c> with</c>

00:29:20.710 --> 00:29:20.720 align:start position:0%
you know what you know do something with
 

00:29:20.720 --> 00:29:22.070 align:start position:0%
you know what you know do something with
it<00:29:20.799><c> like</c><00:29:21.120><c> whatever</c>

00:29:22.070 --> 00:29:22.080 align:start position:0%
it like whatever
 

00:29:22.080 --> 00:29:31.430 align:start position:0%
it like whatever
count<00:29:22.640><c> is</c><00:29:23.039><c> i</c><00:29:24.559><c> uh</c><00:29:24.799><c> is</c><00:29:24.960><c> this</c><00:29:25.120><c> a</c><00:29:25.279><c> good</c><00:29:25.440><c> plan</c><00:29:25.679><c> or</c><00:29:25.760><c> not</c>

00:29:31.430 --> 00:29:31.440 align:start position:0%
 
 

00:29:31.440 --> 00:29:33.750 align:start position:0%
 
what<00:29:31.600><c> value</c><00:29:31.919><c> of</c><00:29:32.080><c> i</c><00:29:32.240><c> will</c><00:29:32.559><c> be</c><00:29:32.720><c> using</c><00:29:33.360><c> when</c><00:29:33.520><c> this</c>

00:29:33.750 --> 00:29:33.760 align:start position:0%
what value of i will be using when this
 

00:29:33.760 --> 00:29:35.830 align:start position:0%
what value of i will be using when this
fret<00:29:34.000><c> actually</c><00:29:34.399><c> happens</c><00:29:34.720><c> to</c><00:29:34.880><c> run</c>

00:29:35.830 --> 00:29:35.840 align:start position:0%
fret actually happens to run
 

00:29:35.840 --> 00:29:37.909 align:start position:0%
fret actually happens to run
if<00:29:36.159><c> the</c><00:29:36.240><c> gold</c><00:29:36.559><c> starts</c><00:29:36.960><c> to</c><00:29:37.120><c> function</c><00:29:37.600><c> function</c>

00:29:37.909 --> 00:29:37.919 align:start position:0%
if the gold starts to function function
 

00:29:37.919 --> 00:29:39.190 align:start position:0%
if the gold starts to function function
that<00:29:38.080><c> will</c><00:29:38.320><c> run</c><00:29:38.480><c> at</c><00:29:38.559><c> some</c><00:29:38.799><c> point</c>

00:29:39.190 --> 00:29:39.200 align:start position:0%
that will run at some point
 

00:29:39.200 --> 00:29:42.389 align:start position:0%
that will run at some point
what<00:29:39.360><c> value</c><00:29:39.679><c> of</c><00:29:39.760><c> i</c><00:29:39.919><c> will</c><00:29:40.399><c> using</c><00:29:41.679><c> whatever</c>

00:29:42.389 --> 00:29:42.399 align:start position:0%
what value of i will using whatever
 

00:29:42.399 --> 00:29:44.870 align:start position:0%
what value of i will using whatever
i<00:29:42.640><c> happens</c><00:29:42.960><c> to</c><00:29:43.200><c> be</c><00:29:43.440><c> at</c><00:29:43.600><c> the</c><00:29:43.760><c> time</c><00:29:44.159><c> which</c><00:29:44.399><c> is</c>

00:29:44.870 --> 00:29:44.880 align:start position:0%
i happens to be at the time which is
 

00:29:44.880 --> 00:29:45.430 align:start position:0%
i happens to be at the time which is
being

00:29:45.430 --> 00:29:45.440 align:start position:0%
being
 

00:29:45.440 --> 00:29:48.230 align:start position:0%
being
uh<00:29:45.760><c> changed</c><00:29:46.320><c> by</c><00:29:46.480><c> the</c><00:29:46.559><c> for</c><00:29:46.799><c> loop</c><00:29:47.039><c> outside</c><00:29:47.760><c> yeah</c>

00:29:48.230 --> 00:29:48.240 align:start position:0%
uh changed by the for loop outside yeah
 

00:29:48.240 --> 00:29:48.870 align:start position:0%
uh changed by the for loop outside yeah
correct<00:29:48.480><c> so</c>

00:29:48.870 --> 00:29:48.880 align:start position:0%
correct so
 

00:29:48.880 --> 00:29:51.430 align:start position:0%
correct so
you<00:29:49.039><c> know</c><00:29:49.760><c> so</c><00:29:49.919><c> this</c><00:29:50.080><c> is</c><00:29:50.159><c> not</c><00:29:50.320><c> so</c><00:29:50.559><c> great</c><00:29:51.120><c> that's</c>

00:29:51.430 --> 00:29:51.440 align:start position:0%
you know so this is not so great that's
 

00:29:51.440 --> 00:29:53.029 align:start position:0%
you know so this is not so great that's
probably<00:29:51.679><c> not</c><00:29:51.840><c> what</c><00:29:52.000><c> we</c><00:29:52.159><c> intended</c><00:29:52.640><c> right</c><00:29:52.880><c> we</c>

00:29:53.029 --> 00:29:53.039 align:start position:0%
probably not what we intended right we
 

00:29:53.039 --> 00:29:54.710 align:start position:0%
probably not what we intended right we
probably<00:29:53.360><c> intended</c><00:29:53.760><c> the</c><00:29:53.919><c> eye</c><00:29:54.159><c> that</c><00:29:54.399><c> we</c>

00:29:54.710 --> 00:29:54.720 align:start position:0%
probably intended the eye that we
 

00:29:54.720 --> 00:29:56.070 align:start position:0%
probably intended the eye that we
whatever<00:29:55.039><c> for</c><00:29:55.200><c> that</c><00:29:55.360><c> particular</c><00:29:55.840><c> loop</c>

00:29:56.070 --> 00:29:56.080 align:start position:0%
whatever for that particular loop
 

00:29:56.080 --> 00:29:58.070 align:start position:0%
whatever for that particular loop
iteration<00:29:56.640><c> right</c>

00:29:58.070 --> 00:29:58.080 align:start position:0%
iteration right
 

00:29:58.080 --> 00:29:59.590 align:start position:0%
iteration right
so<00:29:58.320><c> how</c><00:29:58.480><c> do</c><00:29:58.640><c> we</c><00:29:58.720><c> want</c><00:29:58.880><c> to</c><00:29:59.039><c> if</c><00:29:59.200><c> we</c><00:29:59.279><c> don't</c><00:29:59.440><c> have</c><00:29:59.520><c> to</c>

00:29:59.590 --> 00:29:59.600 align:start position:0%
so how do we want to if we don't have to
 

00:29:59.600 --> 00:30:01.590 align:start position:0%
so how do we want to if we don't have to
solve<00:29:59.840><c> that</c><00:29:59.919><c> how</c><00:30:00.080><c> what</c><00:30:00.240><c> would</c><00:30:00.480><c> we</c><00:30:00.640><c> do</c>

00:30:01.590 --> 00:30:01.600 align:start position:0%
solve that how what would we do
 

00:30:01.600 --> 00:30:04.310 align:start position:0%
solve that how what would we do
you<00:30:01.840><c> could</c><00:30:02.080><c> um</c><00:30:02.960><c> add</c><00:30:03.200><c> it</c><00:30:03.360><c> as</c><00:30:03.520><c> a</c><00:30:03.600><c> parameter</c><00:30:04.159><c> to</c>

00:30:04.310 --> 00:30:04.320 align:start position:0%
you could um add it as a parameter to
 

00:30:04.320 --> 00:30:04.789 align:start position:0%
you could um add it as a parameter to
that

00:30:04.789 --> 00:30:04.799 align:start position:0%
that
 

00:30:04.799 --> 00:30:06.950 align:start position:0%
that
function<00:30:05.200><c> and</c><00:30:05.360><c> pass</c><00:30:05.600><c> it</c><00:30:05.760><c> in</c><00:30:05.919><c> so</c><00:30:06.159><c> it</c><00:30:06.240><c> gets</c>

00:30:06.950 --> 00:30:06.960 align:start position:0%
function and pass it in so it gets
 

00:30:06.960 --> 00:30:08.470 align:start position:0%
function and pass it in so it gets
evaluated<00:30:07.600><c> when</c><00:30:07.679><c> you</c><00:30:07.840><c> create</c><00:30:08.080><c> to</c><00:30:08.240><c> go</c>

00:30:08.470 --> 00:30:08.480 align:start position:0%
evaluated when you create to go
 

00:30:08.480 --> 00:30:10.470 align:start position:0%
evaluated when you create to go
go<00:30:08.720><c> routine</c><00:30:09.440><c> yeah</c><00:30:09.600><c> okay</c><00:30:09.840><c> so</c><00:30:10.000><c> we</c><00:30:10.080><c> could</c><00:30:10.240><c> write</c>

00:30:10.470 --> 00:30:10.480 align:start position:0%
go routine yeah okay so we could write
 

00:30:10.480 --> 00:30:12.149 align:start position:0%
go routine yeah okay so we could write
this

00:30:12.149 --> 00:30:12.159 align:start position:0%
this
 

00:30:12.159 --> 00:30:13.830 align:start position:0%
this
and<00:30:12.320><c> then</c><00:30:12.480><c> pass</c><00:30:12.720><c> it</c><00:30:12.880><c> actually</c><00:30:13.279><c> in</c><00:30:13.520><c> right</c><00:30:13.760><c> and</c>

00:30:13.830 --> 00:30:13.840 align:start position:0%
and then pass it actually in right and
 

00:30:13.840 --> 00:30:15.430 align:start position:0%
and then pass it actually in right and
then<00:30:14.000><c> a</c><00:30:14.080><c> point</c><00:30:14.399><c> what</c><00:30:14.640><c> happens</c><00:30:14.880><c> then</c><00:30:15.120><c> at</c><00:30:15.279><c> the</c>

00:30:15.430 --> 00:30:15.440 align:start position:0%
then a point what happens then at the
 

00:30:15.440 --> 00:30:16.950 align:start position:0%
then a point what happens then at the
point<00:30:15.760><c> we</c><00:30:15.919><c> have</c><00:30:16.000><c> to</c><00:30:16.240><c> create</c>

00:30:16.950 --> 00:30:16.960 align:start position:0%
point we have to create
 

00:30:16.960 --> 00:30:19.830 align:start position:0%
point we have to create
the<00:30:17.279><c> go</c><00:30:17.440><c> routine</c><00:30:17.840><c> i</c><00:30:18.080><c> is</c><00:30:18.240><c> being</c><00:30:18.480><c> captured</c><00:30:19.679><c> and</c>

00:30:19.830 --> 00:30:19.840 align:start position:0%
the go routine i is being captured and
 

00:30:19.840 --> 00:30:22.070 align:start position:0%
the go routine i is being captured and
then<00:30:20.000><c> passed</c><00:30:20.840><c> in</c>

00:30:22.070 --> 00:30:22.080 align:start position:0%
then passed in
 

00:30:22.080 --> 00:30:25.909 align:start position:0%
then passed in
okay<00:30:24.240><c> okay</c>

00:30:25.909 --> 00:30:25.919 align:start position:0%
okay okay
 

00:30:25.919 --> 00:30:29.510 align:start position:0%
okay okay
um<00:30:26.720><c> how</c><00:30:26.960><c> are</c><00:30:27.279><c> the</c><00:30:27.440><c> local</c><00:30:27.760><c> variables</c><00:30:28.320><c> allocated</c>

00:30:29.510 --> 00:30:29.520 align:start position:0%
um how are the local variables allocated
 

00:30:29.520 --> 00:30:31.830 align:start position:0%
um how are the local variables allocated
like<00:30:29.840><c> if</c><00:30:30.240><c> if</c><00:30:30.480><c> captain</c><00:30:30.880><c> finished</c><00:30:31.279><c> are</c><00:30:31.440><c> like</c>

00:30:31.830 --> 00:30:31.840 align:start position:0%
like if if captain finished are like
 

00:30:31.840 --> 00:30:33.990 align:start position:0%
like if if captain finished are like
local<00:30:32.159><c> variables</c><00:30:32.720><c> wouldn't</c><00:30:32.960><c> they</c><00:30:33.200><c> like</c>

00:30:33.990 --> 00:30:34.000 align:start position:0%
local variables wouldn't they like
 

00:30:34.000 --> 00:30:35.909 align:start position:0%
local variables wouldn't they like
be<00:30:34.320><c> destroyed</c><00:30:34.880><c> after</c><00:30:35.120><c> the</c><00:30:35.279><c> main</c><00:30:35.520><c> function</c>

00:30:35.909 --> 00:30:35.919 align:start position:0%
be destroyed after the main function
 

00:30:35.919 --> 00:30:37.830 align:start position:0%
be destroyed after the main function
exits<00:30:36.559><c> or</c><00:30:36.720><c> like</c><00:30:36.960><c> if</c><00:30:37.039><c> this</c><00:30:37.200><c> wasn't</c><00:30:37.520><c> made</c><00:30:37.679><c> by</c>

00:30:37.830 --> 00:30:37.840 align:start position:0%
exits or like if this wasn't made by
 

00:30:37.840 --> 00:30:39.430 align:start position:0%
exits or like if this wasn't made by
like<00:30:38.000><c> another</c><00:30:38.240><c> function</c><00:30:38.559><c> what</c><00:30:38.720><c> it's</c><00:30:38.880><c> like</c>

00:30:39.430 --> 00:30:39.440 align:start position:0%
like another function what it's like
 

00:30:39.440 --> 00:30:41.350 align:start position:0%
like another function what it's like
that<00:30:39.760><c> hitting</c><00:30:40.000><c> function</c><00:30:40.240><c> exit</c><00:30:40.640><c> before</c><00:30:40.960><c> the</c>

00:30:41.350 --> 00:30:41.360 align:start position:0%
that hitting function exit before the
 

00:30:41.360 --> 00:30:42.710 align:start position:0%
that hitting function exit before the
corrugation<00:30:41.679><c> yeah</c>

00:30:42.710 --> 00:30:42.720 align:start position:0%
corrugation yeah
 

00:30:42.720 --> 00:30:44.630 align:start position:0%
corrugation yeah
they're<00:30:42.880><c> in</c><00:30:42.960><c> principle</c><00:30:43.279><c> allocated</c><00:30:43.760><c> in</c><00:30:43.919><c> stack</c>

00:30:44.630 --> 00:30:44.640 align:start position:0%
they're in principle allocated in stack
 

00:30:44.640 --> 00:30:45.830 align:start position:0%
they're in principle allocated in stack
uh<00:30:45.279><c> and</c>

00:30:45.830 --> 00:30:45.840 align:start position:0%
uh and
 

00:30:45.840 --> 00:30:47.190 align:start position:0%
uh and
you<00:30:45.919><c> know</c><00:30:46.159><c> the</c><00:30:46.640><c> room</c><00:30:46.880><c> with</c><00:30:46.960><c> the</c><00:30:47.039><c> other</c>

00:30:47.190 --> 00:30:47.200 align:start position:0%
you know the room with the other
 

00:30:47.200 --> 00:30:49.110 align:start position:0%
you know the room with the other
functions<00:30:47.520><c> have</c><00:30:47.679><c> just</c><00:30:48.080><c> memory</c><00:30:48.559><c> addresses</c>

00:30:49.110 --> 00:30:49.120 align:start position:0%
functions have just memory addresses
 

00:30:49.120 --> 00:30:50.389 align:start position:0%
functions have just memory addresses
references<00:30:49.679><c> to</c><00:30:49.840><c> them</c>

00:30:50.389 --> 00:30:50.399 align:start position:0%
references to them
 

00:30:50.399 --> 00:30:51.909 align:start position:0%
references to them
and<00:30:50.559><c> so</c><00:30:50.640><c> it's</c><00:30:50.799><c> indeed</c><00:30:51.120><c> the</c><00:30:51.200><c> case</c><00:30:51.520><c> it's</c><00:30:51.600><c> main</c>

00:30:51.909 --> 00:30:51.919 align:start position:0%
and so it's indeed the case it's main
 

00:30:51.919 --> 00:30:53.590 align:start position:0%
and so it's indeed the case it's main
returns<00:30:52.799><c> then</c><00:30:53.039><c> these</c>

00:30:53.590 --> 00:30:53.600 align:start position:0%
returns then these
 

00:30:53.600 --> 00:30:55.750 align:start position:0%
returns then these
you<00:30:53.679><c> know</c><00:30:54.399><c> these</c><00:30:54.640><c> stack</c><00:30:54.880><c> allocated</c><00:30:55.360><c> variables</c>

00:30:55.750 --> 00:30:55.760 align:start position:0%
you know these stack allocated variables
 

00:30:55.760 --> 00:30:56.630 align:start position:0%
you know these stack allocated variables
are<00:30:55.840><c> gone</c>

00:30:56.630 --> 00:30:56.640 align:start position:0%
are gone
 

00:30:56.640 --> 00:30:58.789 align:start position:0%
are gone
so<00:30:56.880><c> typically</c><00:30:57.279><c> what</c><00:30:57.440><c> you'll</c><00:30:57.679><c> see</c><00:30:58.080><c> is</c><00:30:58.320><c> that</c><00:30:58.559><c> in</c>

00:30:58.789 --> 00:30:58.799 align:start position:0%
so typically what you'll see is that in
 

00:30:58.799 --> 00:31:00.950 align:start position:0%
so typically what you'll see is that in
a<00:30:58.880><c> go</c><00:30:59.120><c> program</c><00:30:59.600><c> you</c><00:30:59.760><c> would</c><00:30:59.919><c> allocate</c><00:31:00.399><c> them</c><00:31:00.559><c> in</c>

00:31:00.950 --> 00:31:00.960 align:start position:0%
a go program you would allocate them in
 

00:31:00.960 --> 00:31:02.789 align:start position:0%
a go program you would allocate them in
you<00:31:01.039><c> know</c><00:31:01.200><c> on</c><00:31:01.360><c> the</c><00:31:01.519><c> heap</c><00:31:01.840><c> you</c><00:31:02.000><c> know</c><00:31:02.159><c> using</c><00:31:02.480><c> new</c>

00:31:02.789 --> 00:31:02.799 align:start position:0%
you know on the heap you know using new
 

00:31:02.799 --> 00:31:04.389 align:start position:0%
you know on the heap you know using new
like<00:31:03.039><c> if</c><00:31:03.120><c> you</c><00:31:03.360><c> make</c><00:31:03.519><c> a</c><00:31:03.600><c> new</c><00:31:03.840><c> truck</c>

00:31:04.389 --> 00:31:04.399 align:start position:0%
like if you make a new truck
 

00:31:04.399 --> 00:31:05.990 align:start position:0%
like if you make a new truck
or<00:31:04.720><c> whatever</c><00:31:05.440><c> so</c><00:31:05.600><c> would</c><00:31:05.760><c> you</c><00:31:05.840><c> get</c><00:31:05.919><c> a</c>

00:31:05.990 --> 00:31:06.000 align:start position:0%
or whatever so would you get a
 

00:31:06.000 --> 00:31:08.070 align:start position:0%
or whatever so would you get a
segmentation<00:31:06.640><c> fault</c><00:31:06.880><c> then</c><00:31:07.200><c> or</c><00:31:07.440><c> would</c><00:31:07.600><c> it</c><00:31:07.760><c> just</c>

00:31:08.070 --> 00:31:08.080 align:start position:0%
segmentation fault then or would it just
 

00:31:08.080 --> 00:31:13.509 align:start position:0%
segmentation fault then or would it just
you<00:31:08.159><c> would</c><00:31:08.320><c> get</c><00:31:08.480><c> air</c><00:31:09.039><c> okay</c>

00:31:13.509 --> 00:31:13.519 align:start position:0%
 
 

00:31:13.519 --> 00:31:15.190 align:start position:0%
 
i<00:31:13.760><c> have</c><00:31:13.919><c> a</c><00:31:14.240><c> question</c><00:31:14.480><c> i</c><00:31:14.640><c> actually</c><00:31:14.880><c> remember</c>

00:31:15.190 --> 00:31:15.200 align:start position:0%
i have a question i actually remember
 

00:31:15.200 --> 00:31:16.630 align:start position:0%
i have a question i actually remember
this<00:31:15.360><c> is</c><00:31:15.519><c> the</c><00:31:15.760><c> correct</c>

00:31:16.630 --> 00:31:16.640 align:start position:0%
this is the correct
 

00:31:16.640 --> 00:31:18.230 align:start position:0%
this is the correct
uh<00:31:16.880><c> like</c><00:31:17.039><c> way</c><00:31:17.200><c> to</c><00:31:17.279><c> do</c><00:31:17.440><c> it</c><00:31:17.519><c> or</c><00:31:17.600><c> not</c><00:31:17.760><c> but</c><00:31:18.000><c> instead</c>

00:31:18.230 --> 00:31:18.240 align:start position:0%
uh like way to do it or not but instead
 

00:31:18.240 --> 00:31:20.630 align:start position:0%
uh like way to do it or not but instead
of<00:31:18.480><c> passing</c><00:31:18.880><c> it</c><00:31:19.039><c> in</c><00:31:19.440><c> would</c><00:31:19.600><c> it</c><00:31:19.679><c> be</c><00:31:19.840><c> possible</c><00:31:20.320><c> to</c>

00:31:20.630 --> 00:31:20.640 align:start position:0%
of passing it in would it be possible to
 

00:31:20.640 --> 00:31:22.870 align:start position:0%
of passing it in would it be possible to
as<00:31:20.799><c> the</c><00:31:20.880><c> first</c><00:31:21.200><c> line</c><00:31:21.519><c> in</c><00:31:21.600><c> the</c><00:31:21.760><c> for</c><00:31:22.000><c> loop</c><00:31:22.320><c> do</c><00:31:22.559><c> i</c>

00:31:22.870 --> 00:31:22.880 align:start position:0%
as the first line in the for loop do i
 

00:31:22.880 --> 00:31:24.870 align:start position:0%
as the first line in the for loop do i
colon<00:31:23.200><c> equals</c><00:31:23.519><c> i</c>

00:31:24.870 --> 00:31:24.880 align:start position:0%
colon equals i
 

00:31:24.880 --> 00:31:26.950 align:start position:0%
colon equals i
um<00:31:25.279><c> and</c><00:31:25.440><c> then</c><00:31:25.600><c> you're</c><00:31:25.760><c> like</c><00:31:26.000><c> you</c><00:31:26.159><c> have</c><00:31:26.320><c> a</c><00:31:26.799><c> i</c>

00:31:26.950 --> 00:31:26.960 align:start position:0%
um and then you're like you have a i
 

00:31:26.960 --> 00:31:28.710 align:start position:0%
um and then you're like you have a i
don't<00:31:27.039><c> know</c><00:31:27.200><c> how</c><00:31:27.360><c> the</c><00:31:27.440><c> scoping</c><00:31:27.840><c> works</c><00:31:28.080><c> within</c>

00:31:28.710 --> 00:31:28.720 align:start position:0%
don't know how the scoping works within
 

00:31:28.720 --> 00:31:31.110 align:start position:0%
don't know how the scoping works within
the<00:31:28.960><c> like</c><00:31:29.600><c> block</c><00:31:30.000><c> of</c><00:31:30.159><c> the</c><00:31:30.320><c> for</c><00:31:30.640><c> loop</c><00:31:30.880><c> because</c><00:31:31.039><c> i</c>

00:31:31.110 --> 00:31:31.120 align:start position:0%
the like block of the for loop because i
 

00:31:31.120 --> 00:31:32.230 align:start position:0%
the like block of the for loop because i
think<00:31:31.279><c> that</c><00:31:31.440><c> should</c><00:31:31.679><c> create</c>

00:31:32.230 --> 00:31:32.240 align:start position:0%
think that should create
 

00:31:32.240 --> 00:31:35.110 align:start position:0%
think that should create
a<00:31:32.399><c> new</c><00:31:33.039><c> variable</c><00:31:33.600><c> i</c><00:31:34.080><c> that</c><00:31:34.240><c> the</c><00:31:34.399><c> go</c><00:31:34.559><c> routine</c><00:31:34.880><c> can</c>

00:31:35.110 --> 00:31:35.120 align:start position:0%
a new variable i that the go routine can
 

00:31:35.120 --> 00:31:36.549 align:start position:0%
a new variable i that the go routine can
access<00:31:35.440><c> that</c><00:31:35.600><c> isn't</c><00:31:35.760><c> being</c><00:31:36.000><c> updated</c><00:31:36.320><c> again</c>

00:31:36.549 --> 00:31:36.559 align:start position:0%
access that isn't being updated again
 

00:31:36.559 --> 00:31:37.990 align:start position:0%
access that isn't being updated again
right<00:31:36.799><c> you</c><00:31:36.880><c> can</c><00:31:37.039><c> do</c><00:31:37.120><c> that</c>

00:31:37.990 --> 00:31:38.000 align:start position:0%
right you can do that
 

00:31:38.000 --> 00:31:39.350 align:start position:0%
right you can do that
that<00:31:38.159><c> can</c><00:31:38.240><c> help</c><00:31:38.480><c> instead</c><00:31:38.720><c> of</c><00:31:38.799><c> passing</c><00:31:39.120><c> it</c><00:31:39.279><c> in</c>

00:31:39.350 --> 00:31:39.360 align:start position:0%
that can help instead of passing it in
 

00:31:39.360 --> 00:31:41.830 align:start position:0%
that can help instead of passing it in
it<00:31:39.440><c> kind</c><00:31:39.600><c> of</c><00:31:39.679><c> makes</c><00:31:39.840><c> it</c><00:31:39.919><c> look</c><00:31:40.080><c> ugly</c><00:31:40.720><c> to</c><00:31:40.799><c> me</c>

00:31:41.830 --> 00:31:41.840 align:start position:0%
it kind of makes it look ugly to me
 

00:31:41.840 --> 00:31:43.750 align:start position:0%
it kind of makes it look ugly to me
okay<00:31:42.080><c> well</c><00:31:42.320><c> i</c><00:31:42.480><c> i</c><00:31:42.799><c> like</c><00:31:42.960><c> the</c><00:31:43.039><c> passing</c><00:31:43.440><c> in</c><00:31:43.600><c> but</c>

00:31:43.750 --> 00:31:43.760 align:start position:0%
okay well i i like the passing in but
 

00:31:43.760 --> 00:31:45.430 align:start position:0%
okay well i i like the passing in but
that's<00:31:43.919><c> another</c><00:31:44.159><c> way</c><00:31:44.320><c> of</c><00:31:44.399><c> doing</c><00:31:44.720><c> it</c><00:31:44.880><c> i'll</c>

00:31:45.430 --> 00:31:45.440 align:start position:0%
that's another way of doing it i'll
 

00:31:45.440 --> 00:31:49.110 align:start position:0%
that's another way of doing it i'll
show<00:31:45.679><c> you</c><00:31:45.840><c> an</c><00:31:46.000><c> example</c><00:31:46.320><c> later</c>

00:31:49.110 --> 00:31:49.120 align:start position:0%
 
 

00:31:49.120 --> 00:31:50.870 align:start position:0%
 
uh<00:31:49.600><c> so</c><00:31:49.760><c> this</c><00:31:49.919><c> summer</c><00:31:50.240><c> somebody</c><00:31:50.640><c> asked</c>

00:31:50.870 --> 00:31:50.880 align:start position:0%
uh so this summer somebody asked
 

00:31:50.880 --> 00:31:52.389 align:start position:0%
uh so this summer somebody asked
actually<00:31:51.120><c> you</c><00:31:51.279><c> know</c><00:31:51.360><c> do</c><00:31:51.519><c> we</c><00:31:51.679><c> get</c><00:31:51.840><c> a</c>

00:31:52.389 --> 00:31:52.399 align:start position:0%
actually you know do we get a
 

00:31:52.399 --> 00:31:54.470 align:start position:0%
actually you know do we get a
a<00:31:53.200><c> segmentation</c><00:31:53.679><c> fault</c><00:31:54.000><c> we're</c><00:31:54.159><c> not</c>

00:31:54.470 --> 00:31:54.480 align:start position:0%
a segmentation fault we're not
 

00:31:54.480 --> 00:31:55.750 align:start position:0%
a segmentation fault we're not
immediately<00:31:54.880><c> going</c><00:31:54.960><c> to</c><00:31:55.039><c> get</c><00:31:55.120><c> a</c><00:31:55.200><c> segmentation</c>

00:31:55.750 --> 00:31:55.760 align:start position:0%
immediately going to get a segmentation
 

00:31:55.760 --> 00:31:57.830 align:start position:0%
immediately going to get a segmentation
fault<00:31:56.000><c> i</c><00:31:56.080><c> should</c><00:31:56.240><c> take</c><00:31:56.399><c> that</c><00:31:56.559><c> back</c>

00:31:57.830 --> 00:31:57.840 align:start position:0%
fault i should take that back
 

00:31:57.840 --> 00:31:59.430 align:start position:0%
fault i should take that back
because<00:31:58.159><c> basically</c><00:31:58.559><c> one</c><00:31:58.799><c> thread</c><00:31:59.039><c> will</c><00:31:59.200><c> hold</c>

00:31:59.430 --> 00:31:59.440 align:start position:0%
because basically one thread will hold
 

00:31:59.440 --> 00:32:01.350 align:start position:0%
because basically one thread will hold
still<00:31:59.600><c> hold</c><00:31:59.840><c> a</c><00:31:59.919><c> reference</c><00:32:00.720><c> and</c><00:32:00.799><c> so</c><00:32:00.960><c> the</c>

00:32:01.350 --> 00:32:01.360 align:start position:0%
still hold a reference and so the
 

00:32:01.360 --> 00:32:03.430 align:start position:0%
still hold a reference and so the
garbage<00:32:01.679><c> collector</c><00:32:02.000><c> will</c><00:32:02.240><c> not</c><00:32:02.960><c> delete</c><00:32:03.279><c> the</c>

00:32:03.430 --> 00:32:03.440 align:start position:0%
garbage collector will not delete the
 

00:32:03.440 --> 00:32:04.789 align:start position:0%
garbage collector will not delete the
object<00:32:03.840><c> yet</c>

00:32:04.789 --> 00:32:04.799 align:start position:0%
object yet
 

00:32:04.799 --> 00:32:06.710 align:start position:0%
object yet
right<00:32:05.120><c> only</c><00:32:05.360><c> when</c><00:32:05.519><c> the</c><00:32:05.679><c> last</c><00:32:05.919><c> thread</c><00:32:06.240><c> actually</c>

00:32:06.710 --> 00:32:06.720 align:start position:0%
right only when the last thread actually
 

00:32:06.720 --> 00:32:09.509 align:start position:0%
right only when the last thread actually
uh<00:32:07.679><c> only</c><00:32:08.000><c> when</c><00:32:08.159><c> no</c><00:32:08.399><c> fret</c><00:32:08.720><c> holds</c><00:32:09.039><c> a</c><00:32:09.120><c> reference</c>

00:32:09.509 --> 00:32:09.519 align:start position:0%
uh only when no fret holds a reference
 

00:32:09.519 --> 00:32:11.110 align:start position:0%
uh only when no fret holds a reference
you<00:32:09.600><c> know</c><00:32:09.840><c> the</c><00:32:10.080><c> will</c><00:32:10.240><c> the</c><00:32:10.399><c> garbage</c><00:32:10.720><c> collector</c>

00:32:11.110 --> 00:32:11.120 align:start position:0%
you know the will the garbage collector
 

00:32:11.120 --> 00:32:12.470 align:start position:0%
you know the will the garbage collector
delete<00:32:11.440><c> the</c><00:32:11.600><c> object</c>

00:32:12.470 --> 00:32:12.480 align:start position:0%
delete the object
 

00:32:12.480 --> 00:32:13.750 align:start position:0%
delete the object
and<00:32:12.559><c> this</c><00:32:12.720><c> is</c><00:32:12.880><c> one</c><00:32:12.960><c> of</c><00:32:13.039><c> the</c><00:32:13.120><c> cool</c><00:32:13.360><c> things</c><00:32:13.600><c> about</c>

00:32:13.750 --> 00:32:13.760 align:start position:0%
and this is one of the cool things about
 

00:32:13.760 --> 00:32:15.269 align:start position:0%
and this is one of the cool things about
having<00:32:14.000><c> garbage</c><00:32:14.320><c> collected</c><00:32:14.640><c> language</c><00:32:15.039><c> and</c>

00:32:15.269 --> 00:32:15.279 align:start position:0%
having garbage collected language and
 

00:32:15.279 --> 00:32:16.950 align:start position:0%
having garbage collected language and
shared<00:32:15.519><c> memory</c><00:32:15.919><c> programming</c>

00:32:16.950 --> 00:32:16.960 align:start position:0%
shared memory programming
 

00:32:16.960 --> 00:32:18.070 align:start position:0%
shared memory programming
you<00:32:17.120><c> don't</c><00:32:17.279><c> have</c><00:32:17.440><c> to</c><00:32:17.519><c> worry</c><00:32:17.760><c> about</c><00:32:17.919><c> that</c>

00:32:18.070 --> 00:32:18.080 align:start position:0%
you don't have to worry about that
 

00:32:18.080 --> 00:32:21.190 align:start position:0%
you don't have to worry about that
scenario

00:32:21.190 --> 00:32:21.200 align:start position:0%
 
 

00:32:21.200 --> 00:32:24.549 align:start position:0%
 
okay<00:32:22.000><c> uh</c><00:32:23.360><c> there's</c><00:32:23.600><c> a</c>

00:32:24.549 --> 00:32:24.559 align:start position:0%
okay uh there's a
 

00:32:24.559 --> 00:32:27.750 align:start position:0%
okay uh there's a
yeah<00:32:25.519><c> uh</c><00:32:26.399><c> would</c><00:32:26.880><c> could</c><00:32:27.039><c> this</c><00:32:27.279><c> code</c><00:32:27.519><c> like</c>

00:32:27.750 --> 00:32:27.760 align:start position:0%
yeah uh would could this code like
 

00:32:27.760 --> 00:32:28.870 align:start position:0%
yeah uh would could this code like
deadlock

00:32:28.870 --> 00:32:28.880 align:start position:0%
deadlock
 

00:32:28.880 --> 00:32:31.110 align:start position:0%
deadlock
because<00:32:29.600><c> like</c><00:32:29.840><c> if</c><00:32:30.000><c> we</c><00:32:30.399><c> if</c><00:32:30.640><c> like</c><00:32:30.799><c> the</c><00:32:30.960><c> go</c>

00:32:31.110 --> 00:32:31.120 align:start position:0%
because like if we if like the go
 

00:32:31.120 --> 00:32:32.149 align:start position:0%
because like if we if like the go
routines

00:32:32.149 --> 00:32:32.159 align:start position:0%
routines
 

00:32:32.159 --> 00:32:34.149 align:start position:0%
routines
like<00:32:32.559><c> the</c><00:32:32.640><c> first</c><00:32:32.960><c> four</c><00:32:33.120><c> loop</c><00:32:33.360><c> will</c><00:32:33.600><c> exit</c><00:32:34.080><c> and</c>

00:32:34.149 --> 00:32:34.159 align:start position:0%
like the first four loop will exit and
 

00:32:34.159 --> 00:32:36.070 align:start position:0%
like the first four loop will exit and
then<00:32:34.480><c> the</c><00:32:34.720><c> second</c><00:32:35.120><c> one</c><00:32:35.360><c> will</c><00:32:35.600><c> like</c>

00:32:36.070 --> 00:32:36.080 align:start position:0%
then the second one will like
 

00:32:36.080 --> 00:32:40.549 align:start position:0%
then the second one will like
oh<00:32:37.840><c> yeah</c><00:32:38.080><c> no</c><00:32:38.240><c> never</c><00:32:38.480><c> mind</c><00:32:39.039><c> okay</c>

00:32:40.549 --> 00:32:40.559 align:start position:0%
oh yeah no never mind okay
 

00:32:40.559 --> 00:32:42.310 align:start position:0%
oh yeah no never mind okay
uh<00:32:41.120><c> there</c><00:32:41.279><c> are</c><00:32:41.440><c> definitely</c><00:32:41.679><c> some</c><00:32:41.919><c> issues</c><00:32:42.159><c> that</c>

00:32:42.310 --> 00:32:42.320 align:start position:0%
uh there are definitely some issues that
 

00:32:42.320 --> 00:32:43.750 align:start position:0%
uh there are definitely some issues that
are<00:32:42.399><c> not</c><00:32:42.559><c> ideal</c><00:32:42.960><c> yet</c><00:32:43.200><c> so</c><00:32:43.360><c> let</c><00:32:43.519><c> me</c>

00:32:43.750 --> 00:32:43.760 align:start position:0%
are not ideal yet so let me
 

00:32:43.760 --> 00:32:45.830 align:start position:0%
are not ideal yet so let me
actually<00:32:44.080><c> talk</c><00:32:44.240><c> about</c><00:32:44.399><c> them</c><00:32:45.039><c> uh</c><00:32:45.360><c> one</c><00:32:45.519><c> of</c><00:32:45.600><c> them</c>

00:32:45.830 --> 00:32:45.840 align:start position:0%
actually talk about them uh one of them
 

00:32:45.840 --> 00:32:47.990 align:start position:0%
actually talk about them uh one of them
is<00:32:46.159><c> that</c><00:32:46.399><c> like</c><00:32:46.640><c> this</c><00:32:46.880><c> particular</c><00:32:47.440><c> loop</c>

00:32:47.990 --> 00:32:48.000 align:start position:0%
is that like this particular loop
 

00:32:48.000 --> 00:32:49.350 align:start position:0%
is that like this particular loop
it's<00:32:48.159><c> a</c><00:32:48.159><c> little</c><00:32:48.320><c> bit</c><00:32:48.559><c> annoying</c><00:32:48.960><c> right</c><00:32:49.200><c> like</c>

00:32:49.350 --> 00:32:49.360 align:start position:0%
it's a little bit annoying right like
 

00:32:49.360 --> 00:32:51.029 align:start position:0%
it's a little bit annoying right like
this<00:32:49.760><c> this</c><00:32:50.159><c> forward</c><00:32:50.399><c> loop</c><00:32:50.720><c> is</c><00:32:50.880><c> there's</c>

00:32:51.029 --> 00:32:51.039 align:start position:0%
this this forward loop is there's
 

00:32:51.039 --> 00:32:52.470 align:start position:0%
this this forward loop is there's
nothing<00:32:51.360><c> else</c><00:32:51.519><c> than</c><00:32:51.679><c> waiting</c><00:32:52.000><c> until</c><00:32:52.240><c> count</c>

00:32:52.470 --> 00:32:52.480 align:start position:0%
nothing else than waiting until count
 

00:32:52.480 --> 00:32:52.950 align:start position:0%
nothing else than waiting until count
reaches

00:32:52.950 --> 00:32:52.960 align:start position:0%
reaches
 

00:32:52.960 --> 00:32:55.269 align:start position:0%
reaches
five<00:32:53.200><c> for</c><00:32:53.360><c> finished</c><00:32:54.159><c> and</c><00:32:54.399><c> the</c><00:32:54.480><c> way</c><00:32:54.640><c> it</c><00:32:54.720><c> does</c><00:32:54.960><c> is</c>

00:32:55.269 --> 00:32:55.279 align:start position:0%
five for finished and the way it does is
 

00:32:55.279 --> 00:32:56.070 align:start position:0%
five for finished and the way it does is
by<00:32:55.440><c> just</c><00:32:55.600><c> spinning</c>

00:32:56.070 --> 00:32:56.080 align:start position:0%
by just spinning
 

00:32:56.080 --> 00:32:58.389 align:start position:0%
by just spinning
right<00:32:56.320><c> so</c><00:32:56.559><c> it</c><00:32:56.640><c> just</c><00:32:56.880><c> locks</c><00:32:57.360><c> it</c><00:32:57.679><c> locks</c><00:32:58.000><c> it</c><00:32:58.159><c> looks</c>

00:32:58.389 --> 00:32:58.399 align:start position:0%
right so it just locks it locks it looks
 

00:32:58.399 --> 00:32:59.909 align:start position:0%
right so it just locks it locks it looks
at<00:32:58.480><c> the</c><00:32:58.559><c> value</c><00:32:58.880><c> quickly</c><00:32:59.279><c> unlocks</c><00:32:59.679><c> it</c><00:32:59.840><c> and</c>

00:32:59.909 --> 00:32:59.919 align:start position:0%
at the value quickly unlocks it and
 

00:32:59.919 --> 00:33:01.509 align:start position:0%
at the value quickly unlocks it and
spins<00:33:00.159><c> around</c><00:33:00.399><c> again</c><00:33:00.640><c> so</c><00:33:00.799><c> it</c><00:33:00.880><c> basically</c><00:33:01.279><c> is</c>

00:33:01.509 --> 00:33:01.519 align:start position:0%
spins around again so it basically is
 

00:33:01.519 --> 00:33:02.950 align:start position:0%
spins around again so it basically is
spinning<00:33:01.840><c> on</c><00:33:02.000><c> the</c><00:33:02.080><c> processor</c><00:33:02.559><c> doing</c><00:33:02.720><c> really</c>

00:33:02.950 --> 00:33:02.960 align:start position:0%
spinning on the processor doing really
 

00:33:02.960 --> 00:33:05.110 align:start position:0%
spinning on the processor doing really
nothing<00:33:03.840><c> it'd</c><00:33:04.000><c> be</c><00:33:04.159><c> nice</c><00:33:04.399><c> to</c><00:33:04.559><c> express</c><00:33:04.799><c> that</c><00:33:04.960><c> in</c>

00:33:05.110 --> 00:33:05.120 align:start position:0%
nothing it'd be nice to express that in
 

00:33:05.120 --> 00:33:06.470 align:start position:0%
nothing it'd be nice to express that in
a<00:33:05.200><c> little</c><00:33:05.360><c> bit</c><00:33:05.519><c> better</c><00:33:05.760><c> way</c><00:33:06.000><c> so</c><00:33:06.159><c> that</c><00:33:06.320><c> like</c>

00:33:06.470 --> 00:33:06.480 align:start position:0%
a little bit better way so that like
 

00:33:06.480 --> 00:33:08.310 align:start position:0%
a little bit better way so that like
basically<00:33:06.960><c> the</c><00:33:07.200><c> go</c><00:33:07.360><c> can</c><00:33:07.519><c> sort</c><00:33:07.679><c> of</c><00:33:07.760><c> give</c><00:33:08.000><c> up</c><00:33:08.080><c> the</c>

00:33:08.310 --> 00:33:08.320 align:start position:0%
basically the go can sort of give up the
 

00:33:08.320 --> 00:33:08.710 align:start position:0%
basically the go can sort of give up the
core

00:33:08.710 --> 00:33:08.720 align:start position:0%
core
 

00:33:08.720 --> 00:33:11.029 align:start position:0%
core
again<00:33:08.960><c> so</c><00:33:09.120><c> that</c><00:33:09.279><c> another</c><00:33:09.519><c> threat</c><00:33:09.760><c> can</c><00:33:10.000><c> run</c><00:33:10.880><c> and</c>

00:33:11.029 --> 00:33:11.039 align:start position:0%
again so that another threat can run and
 

00:33:11.039 --> 00:33:12.549 align:start position:0%
again so that another threat can run and
so<00:33:11.200><c> the</c><00:33:11.279><c> way</c><00:33:11.600><c> you</c><00:33:11.760><c> can</c><00:33:11.919><c> do</c><00:33:12.000><c> that</c><00:33:12.240><c> is</c><00:33:12.320><c> using</c>

00:33:12.549 --> 00:33:12.559 align:start position:0%
so the way you can do that is using
 

00:33:12.559 --> 00:33:13.509 align:start position:0%
so the way you can do that is using
condition<00:33:12.960><c> variables</c>

00:33:13.509 --> 00:33:13.519 align:start position:0%
condition variables
 

00:33:13.519 --> 00:33:15.269 align:start position:0%
condition variables
and<00:33:13.679><c> so</c><00:33:13.919><c> this</c><00:33:14.080><c> is</c><00:33:14.240><c> my</c><00:33:14.880><c> the</c><00:33:14.960><c> next</c>

00:33:15.269 --> 00:33:15.279 align:start position:0%
and so this is my the next
 

00:33:15.279 --> 00:33:17.190 align:start position:0%
and so this is my the next
implementation

00:33:17.190 --> 00:33:17.200 align:start position:0%
implementation
 

00:33:17.200 --> 00:33:19.909 align:start position:0%
implementation
um<00:33:18.240><c> uh</c><00:33:18.559><c> or</c><00:33:18.960><c> actually</c><00:33:19.279><c> i'll</c><00:33:19.440><c> show</c><00:33:19.600><c> you</c><00:33:19.679><c> one</c>

00:33:19.909 --> 00:33:19.919 align:start position:0%
um uh or actually i'll show you one
 

00:33:19.919 --> 00:33:21.509 align:start position:0%
um uh or actually i'll show you one
other<00:33:20.080><c> implementation</c><00:33:20.720><c> well</c><00:33:20.880><c> one</c><00:33:21.039><c> way</c><00:33:21.279><c> to</c><00:33:21.360><c> do</c>

00:33:21.509 --> 00:33:21.519 align:start position:0%
other implementation well one way to do
 

00:33:21.519 --> 00:33:22.549 align:start position:0%
other implementation well one way to do
that<00:33:21.760><c> is</c><00:33:21.840><c> a</c><00:33:21.919><c> little</c><00:33:22.080><c> bit</c><00:33:22.240><c> not</c>

00:33:22.549 --> 00:33:22.559 align:start position:0%
that is a little bit not
 

00:33:22.559 --> 00:33:24.310 align:start position:0%
that is a little bit not
you<00:33:22.720><c> know</c><00:33:22.880><c> not</c><00:33:23.039><c> so</c><00:33:23.200><c> nice</c><00:33:23.440><c> as</c><00:33:23.519><c> for</c><00:33:23.600><c> example</c><00:33:24.159><c> and</c>

00:33:24.310 --> 00:33:24.320 align:start position:0%
you know not so nice as for example and
 

00:33:24.320 --> 00:33:25.830 align:start position:0%
you know not so nice as for example and
what<00:33:24.480><c> somebody</c><00:33:24.799><c> suggested</c><00:33:25.200><c> this</c>

00:33:25.830 --> 00:33:25.840 align:start position:0%
what somebody suggested this
 

00:33:25.840 --> 00:33:27.190 align:start position:0%
what somebody suggested this
um<00:33:26.159><c> is</c><00:33:26.240><c> to</c><00:33:26.399><c> actually</c><00:33:26.640><c> sleep</c><00:33:26.799><c> for</c><00:33:26.960><c> a</c><00:33:26.960><c> little</c>

00:33:27.190 --> 00:33:27.200 align:start position:0%
um is to actually sleep for a little
 

00:33:27.200 --> 00:33:29.110 align:start position:0%
um is to actually sleep for a little
while<00:33:27.600><c> so</c><00:33:27.840><c> instead</c><00:33:28.159><c> of</c><00:33:28.320><c> like</c>

00:33:29.110 --> 00:33:29.120 align:start position:0%
while so instead of like
 

00:33:29.120 --> 00:33:31.750 align:start position:0%
while so instead of like
uh<00:33:29.760><c> giving</c><00:33:30.080><c> up</c><00:33:30.159><c> the</c><00:33:30.799><c> spinning</c><00:33:31.200><c> like</c><00:33:31.360><c> crazy</c>

00:33:31.750 --> 00:33:31.760 align:start position:0%
uh giving up the spinning like crazy
 

00:33:31.760 --> 00:33:33.190 align:start position:0%
uh giving up the spinning like crazy
just<00:33:31.919><c> sleep</c><00:33:32.159><c> one</c><00:33:32.399><c> and</c><00:33:32.559><c> period</c>

00:33:33.190 --> 00:33:33.200 align:start position:0%
just sleep one and period
 

00:33:33.200 --> 00:33:35.509 align:start position:0%
just sleep one and period
sleep<00:33:33.440><c> for</c><00:33:33.600><c> a</c><00:33:33.679><c> period</c><00:33:34.000><c> and</c><00:33:34.080><c> then</c><00:33:34.240><c> come</c><00:33:34.399><c> back</c><00:33:35.440><c> of</c>

00:33:35.509 --> 00:33:35.519 align:start position:0%
sleep for a period and then come back of
 

00:33:35.519 --> 00:33:36.789 align:start position:0%
sleep for a period and then come back of
course<00:33:35.679><c> the</c><00:33:35.760><c> solution</c><00:33:36.080><c> will</c><00:33:36.240><c> work</c><00:33:36.480><c> but</c><00:33:36.640><c> the</c>

00:33:36.789 --> 00:33:36.799 align:start position:0%
course the solution will work but the
 

00:33:36.799 --> 00:33:38.230 align:start position:0%
course the solution will work but the
downside<00:33:37.200><c> of</c><00:33:37.279><c> it</c><00:33:37.440><c> is</c><00:33:37.600><c> that</c><00:33:37.760><c> you</c><00:33:37.840><c> know</c><00:33:37.919><c> how</c>

00:33:38.230 --> 00:33:38.240 align:start position:0%
downside of it is that you know how
 

00:33:38.240 --> 00:33:40.230 align:start position:0%
downside of it is that you know how
how<00:33:38.480><c> long</c><00:33:38.720><c> should</c><00:33:38.960><c> you</c><00:33:39.039><c> sleep</c><00:33:39.600><c> right</c><00:33:40.080><c> you</c>

00:33:40.230 --> 00:33:40.240 align:start position:0%
how long should you sleep right you
 

00:33:40.240 --> 00:33:41.750 align:start position:0%
how long should you sleep right you
really<00:33:40.399><c> would</c><00:33:40.640><c> like</c><00:33:40.799><c> to</c><00:33:40.880><c> be</c><00:33:41.039><c> the</c><00:33:41.200><c> case</c><00:33:41.440><c> that</c>

00:33:41.750 --> 00:33:41.760 align:start position:0%
really would like to be the case that
 

00:33:41.760 --> 00:33:43.110 align:start position:0%
really would like to be the case that
you know<00:33:42.000><c> soon</c><00:33:42.240><c> for</c><00:33:42.399><c> example</c><00:33:42.640><c> as</c><00:33:42.720><c> this</c><00:33:42.880><c> guy</c>

00:33:43.110 --> 00:33:43.120 align:start position:0%
you know soon for example as this guy
 

00:33:43.120 --> 00:33:45.029 align:start position:0%
you know soon for example as this guy
reaches<00:33:43.519><c> five</c><00:33:44.480><c> uh</c>

00:33:45.029 --> 00:33:45.039 align:start position:0%
reaches five uh
 

00:33:45.039 --> 00:33:47.029 align:start position:0%
reaches five uh
then<00:33:45.519><c> you</c><00:33:45.600><c> know</c><00:33:45.760><c> you</c><00:33:46.000><c> wake</c><00:33:46.399><c> you</c><00:33:46.480><c> know</c><00:33:46.880><c> you</c>

00:33:47.029 --> 00:33:47.039 align:start position:0%
then you know you wake you know you
 

00:33:47.039 --> 00:33:48.710 align:start position:0%
then you know you wake you know you
could<00:33:47.200><c> wake</c><00:33:47.440><c> up</c><00:33:47.519><c> the</c><00:33:47.760><c> this</c><00:33:48.000><c> particular</c><00:33:48.559><c> you</c>

00:33:48.710 --> 00:33:48.720 align:start position:0%
could wake up the this particular you
 

00:33:48.720 --> 00:33:49.990 align:start position:0%
could wake up the this particular you
know<00:33:48.880><c> the</c><00:33:48.960><c> main</c><00:33:49.200><c> thread</c>

00:33:49.990 --> 00:33:50.000 align:start position:0%
know the main thread
 

00:33:50.000 --> 00:33:52.549 align:start position:0%
know the main thread
and<00:33:50.240><c> so</c><00:33:51.279><c> i</c><00:33:51.519><c> was</c><00:33:51.679><c> jumping</c><00:33:52.000><c> ahead</c><00:33:52.159><c> a</c><00:33:52.240><c> little</c><00:33:52.399><c> bit</c>

00:33:52.549 --> 00:33:52.559 align:start position:0%
and so i was jumping ahead a little bit
 

00:33:52.559 --> 00:33:53.430 align:start position:0%
and so i was jumping ahead a little bit
but<00:33:52.799><c> uh</c>

00:33:53.430 --> 00:33:53.440 align:start position:0%
but uh
 

00:33:53.440 --> 00:33:55.190 align:start position:0%
but uh
so<00:33:53.600><c> that's</c><00:33:53.919><c> what</c><00:33:54.159><c> condition</c><00:33:54.559><c> variables</c><00:33:55.120><c> are</c>

00:33:55.190 --> 00:33:55.200 align:start position:0%
so that's what condition variables are
 

00:33:55.200 --> 00:33:57.110 align:start position:0%
so that's what condition variables are
for<00:33:56.240><c> um</c>

00:33:57.110 --> 00:33:57.120 align:start position:0%
for um
 

00:33:57.120 --> 00:33:58.710 align:start position:0%
for um
and<00:33:57.600><c> you</c><00:33:57.679><c> know</c><00:33:57.840><c> here's</c><00:33:58.159><c> a</c><00:33:58.240><c> solution</c><00:33:58.559><c> with</c>

00:33:58.710 --> 00:33:58.720 align:start position:0%
and you know here's a solution with
 

00:33:58.720 --> 00:34:00.630 align:start position:0%
and you know here's a solution with
condition<00:33:59.120><c> variables</c>

00:34:00.630 --> 00:34:00.640 align:start position:0%
condition variables
 

00:34:00.640 --> 00:34:04.630 align:start position:0%
condition variables
uh<00:34:01.679><c> so</c><00:34:02.640><c> uh</c><00:34:03.200><c> we</c><00:34:03.600><c> allocated</c><00:34:04.080><c> a</c><00:34:04.159><c> new</c>

00:34:04.630 --> 00:34:04.640 align:start position:0%
uh so uh we allocated a new
 

00:34:04.640 --> 00:34:06.710 align:start position:0%
uh so uh we allocated a new
condition<00:34:05.679><c> here</c><00:34:05.760><c> as</c><00:34:05.919><c> a</c><00:34:06.000><c> condition</c><00:34:06.240><c> variable</c>

00:34:06.710 --> 00:34:06.720 align:start position:0%
condition here as a condition variable
 

00:34:06.720 --> 00:34:08.550 align:start position:0%
condition here as a condition variable
is<00:34:06.880><c> allocated</c><00:34:07.519><c> it's</c><00:34:07.679><c> associated</c><00:34:08.240><c> with</c><00:34:08.399><c> this</c>

00:34:08.550 --> 00:34:08.560 align:start position:0%
is allocated it's associated with this
 

00:34:08.560 --> 00:34:09.430 align:start position:0%
is allocated it's associated with this
particular<00:34:09.040><c> lock</c>

00:34:09.430 --> 00:34:09.440 align:start position:0%
particular lock
 

00:34:09.440 --> 00:34:10.790 align:start position:0%
particular lock
we'll<00:34:09.599><c> see</c><00:34:09.760><c> in</c><00:34:09.839><c> a</c><00:34:09.919><c> second</c><00:34:10.240><c> why</c><00:34:10.399><c> this</c><00:34:10.639><c> is</c>

00:34:10.790 --> 00:34:10.800 align:start position:0%
we'll see in a second why this is
 

00:34:10.800 --> 00:34:12.869 align:start position:0%
we'll see in a second why this is
important<00:34:12.320><c> and</c>

00:34:12.869 --> 00:34:12.879 align:start position:0%
important and
 

00:34:12.879 --> 00:34:14.310 align:start position:0%
important and
you<00:34:13.040><c> know</c><00:34:13.119><c> basically</c><00:34:13.520><c> the</c><00:34:13.679><c> main</c><00:34:13.919><c> thread</c><00:34:14.159><c> what</c>

00:34:14.310 --> 00:34:14.320 align:start position:0%
you know basically the main thread what
 

00:34:14.320 --> 00:34:16.149 align:start position:0%
you know basically the main thread what
it<00:34:14.399><c> does</c><00:34:14.720><c> now</c><00:34:15.520><c> uh</c>

00:34:16.149 --> 00:34:16.159 align:start position:0%
it does now uh
 

00:34:16.159 --> 00:34:17.750 align:start position:0%
it does now uh
it<00:34:16.560><c> you</c><00:34:16.639><c> know</c><00:34:16.800><c> grabs</c><00:34:17.040><c> the</c><00:34:17.200><c> log</c><00:34:17.440><c> because</c><00:34:17.679><c> it</c>

00:34:17.750 --> 00:34:17.760 align:start position:0%
it you know grabs the log because it
 

00:34:17.760 --> 00:34:19.349 align:start position:0%
it you know grabs the log because it
needs<00:34:17.919><c> to</c><00:34:18.000><c> grab</c><00:34:18.240><c> the</c><00:34:18.320><c> lock</c><00:34:18.560><c> to</c><00:34:18.720><c> look</c><00:34:18.879><c> at</c><00:34:19.040><c> count</c>

00:34:19.349 --> 00:34:19.359 align:start position:0%
needs to grab the lock to look at count
 

00:34:19.359 --> 00:34:20.710 align:start position:0%
needs to grab the lock to look at count
and<00:34:19.440><c> finished</c><00:34:19.919><c> otherwise</c><00:34:20.240><c> that</c><00:34:20.399><c> could</c><00:34:20.560><c> be</c>

00:34:20.710 --> 00:34:20.720 align:start position:0%
and finished otherwise that could be
 

00:34:20.720 --> 00:34:22.230 align:start position:0%
and finished otherwise that could be
race<00:34:20.879><c> conditions</c>

00:34:22.230 --> 00:34:22.240 align:start position:0%
race conditions
 

00:34:22.240 --> 00:34:25.430 align:start position:0%
race conditions
and<00:34:22.320><c> then</c><00:34:24.480><c> if</c><00:34:24.720><c> you</c><00:34:24.879><c> know</c><00:34:24.960><c> the</c><00:34:25.040><c> condition</c><00:34:25.359><c> is</c>

00:34:25.430 --> 00:34:25.440 align:start position:0%
and then if you know the condition is
 

00:34:25.440 --> 00:34:26.310 align:start position:0%
and then if you know the condition is
still<00:34:25.679><c> not</c><00:34:25.839><c> true</c>

00:34:26.310 --> 00:34:26.320 align:start position:0%
still not true
 

00:34:26.320 --> 00:34:28.230 align:start position:0%
still not true
it<00:34:26.480><c> just</c><00:34:26.720><c> calls</c><00:34:27.119><c> weight</c><00:34:27.520><c> on</c><00:34:27.679><c> this</c><00:34:27.839><c> condition</c>

00:34:28.230 --> 00:34:28.240 align:start position:0%
it just calls weight on this condition
 

00:34:28.240 --> 00:34:29.510 align:start position:0%
it just calls weight on this condition
variable

00:34:29.510 --> 00:34:29.520 align:start position:0%
variable
 

00:34:29.520 --> 00:34:31.750 align:start position:0%
variable
and<00:34:29.679><c> what</c><00:34:29.839><c> that</c><00:34:30.079><c> does</c><00:34:30.399><c> is</c><00:34:30.639><c> actually</c><00:34:30.960><c> that</c>

00:34:31.750 --> 00:34:31.760 align:start position:0%
and what that does is actually that
 

00:34:31.760 --> 00:34:33.829 align:start position:0%
and what that does is actually that
atomically<00:34:32.480><c> goes</c><00:34:32.720><c> to</c><00:34:32.960><c> sleep</c>

00:34:33.829 --> 00:34:33.839 align:start position:0%
atomically goes to sleep
 

00:34:33.839 --> 00:34:35.829 align:start position:0%
atomically goes to sleep
as<00:34:34.159><c> well</c><00:34:34.399><c> as</c><00:34:34.639><c> releasing</c><00:34:35.119><c> the</c><00:34:35.280><c> lock</c><00:34:35.520><c> that</c><00:34:35.760><c> is</c>

00:34:35.829 --> 00:34:35.839 align:start position:0%
as well as releasing the lock that is
 

00:34:35.839 --> 00:34:37.510 align:start position:0%
as well as releasing the lock that is
associated<00:34:36.320><c> with</c><00:34:36.480><c> the</c><00:34:36.560><c> condition</c><00:34:36.960><c> variable</c>

00:34:37.510 --> 00:34:37.520 align:start position:0%
associated with the condition variable
 

00:34:37.520 --> 00:34:38.950 align:start position:0%
associated with the condition variable
you<00:34:37.599><c> know</c><00:34:37.760><c> since</c><00:34:38.079><c> you</c><00:34:38.079><c> know</c><00:34:38.320><c> mu</c><00:34:38.639><c> is</c><00:34:38.720><c> actually</c>

00:34:38.950 --> 00:34:38.960 align:start position:0%
you know since you know mu is actually
 

00:34:38.960 --> 00:34:40.389 align:start position:0%
you know since you know mu is actually
really<00:34:39.359><c> associated</c><00:34:39.839><c> with</c><00:34:39.919><c> the</c><00:34:40.000><c> condition</c>

00:34:40.389 --> 00:34:40.399 align:start position:0%
really associated with the condition
 

00:34:40.399 --> 00:34:41.109 align:start position:0%
really associated with the condition
variable

00:34:41.109 --> 00:34:41.119 align:start position:0%
variable
 

00:34:41.119 --> 00:34:44.869 align:start position:0%
variable
can't<00:34:41.440><c> wait</c><00:34:41.679><c> basically</c><00:34:42.480><c> unlocks</c><00:34:43.599><c> the</c>

00:34:44.869 --> 00:34:44.879 align:start position:0%
can't wait basically unlocks the
 

00:34:44.879 --> 00:34:48.069 align:start position:0%
can't wait basically unlocks the
lock<00:34:46.320><c> and</c><00:34:46.639><c> goes</c><00:34:46.879><c> to</c><00:34:47.040><c> sleep</c><00:34:47.440><c> in</c><00:34:47.520><c> an</c><00:34:47.679><c> atomic</c>

00:34:48.069 --> 00:34:48.079 align:start position:0%
lock and goes to sleep in an atomic
 

00:34:48.079 --> 00:34:49.430 align:start position:0%
lock and goes to sleep in an atomic
operation

00:34:49.430 --> 00:34:49.440 align:start position:0%
operation
 

00:34:49.440 --> 00:34:51.589 align:start position:0%
operation
and<00:34:49.679><c> when</c><00:34:49.839><c> it</c><00:34:50.000><c> returns</c><00:34:50.879><c> you</c><00:34:51.040><c> know</c><00:34:51.200><c> from</c><00:34:51.359><c> count</c>

00:34:51.589 --> 00:34:51.599 align:start position:0%
and when it returns you know from count
 

00:34:51.599 --> 00:34:52.950 align:start position:0%
and when it returns you know from count
weight<00:34:51.839><c> it</c><00:34:51.919><c> will</c><00:34:52.159><c> actually</c><00:34:52.399><c> hold</c><00:34:52.639><c> the</c><00:34:52.720><c> lock</c>

00:34:52.950 --> 00:34:52.960 align:start position:0%
weight it will actually hold the lock
 

00:34:52.960 --> 00:34:53.829 align:start position:0%
weight it will actually hold the lock
again

00:34:53.829 --> 00:34:53.839 align:start position:0%
again
 

00:34:53.839 --> 00:34:56.149 align:start position:0%
again
so<00:34:54.079><c> the</c><00:34:54.240><c> caller</c><00:34:55.359><c> knows</c><00:34:55.599><c> we're</c><00:34:55.760><c> absolutely</c>

00:34:56.149 --> 00:34:56.159 align:start position:0%
so the caller knows we're absolutely
 

00:34:56.159 --> 00:34:57.910 align:start position:0%
so the caller knows we're absolutely
sure<00:34:56.399><c> that</c><00:34:56.639><c> if</c><00:34:56.800><c> conjugate</c><00:34:57.200><c> returns</c><00:34:57.599><c> it</c><00:34:57.680><c> will</c>

00:34:57.910 --> 00:34:57.920 align:start position:0%
sure that if conjugate returns it will
 

00:34:57.920 --> 00:34:59.349 align:start position:0%
sure that if conjugate returns it will
actually<00:34:58.240><c> held</c><00:34:58.560><c> the</c><00:34:58.640><c> lock</c><00:34:58.880><c> again</c>

00:34:59.349 --> 00:34:59.359 align:start position:0%
actually held the lock again
 

00:34:59.359 --> 00:35:01.030 align:start position:0%
actually held the lock again
and<00:34:59.520><c> so</c><00:34:59.680><c> it's</c><00:34:59.760><c> safe</c><00:35:00.079><c> again</c><00:35:00.240><c> to</c><00:35:00.400><c> look</c><00:35:00.640><c> at</c><00:35:00.720><c> count</c>

00:35:01.030 --> 00:35:01.040 align:start position:0%
and so it's safe again to look at count
 

00:35:01.040 --> 00:35:03.750 align:start position:0%
and so it's safe again to look at count
and<00:35:01.119><c> finish</c><00:35:01.599><c> and</c><00:35:01.680><c> then</c><00:35:01.839><c> call</c><00:35:02.079><c> wait</c><00:35:02.320><c> again</c>

00:35:03.750 --> 00:35:03.760 align:start position:0%
and finish and then call wait again
 

00:35:03.760 --> 00:35:06.310 align:start position:0%
and finish and then call wait again
okay<00:35:05.040><c> so</c><00:35:05.200><c> basically</c><00:35:05.599><c> you</c><00:35:05.680><c> know</c><00:35:05.839><c> this</c><00:35:06.079><c> friend</c>

00:35:06.310 --> 00:35:06.320 align:start position:0%
okay so basically you know this friend
 

00:35:06.320 --> 00:35:07.750 align:start position:0%
okay so basically you know this friend
will<00:35:06.480><c> go</c><00:35:06.640><c> to</c><00:35:06.800><c> sleep</c>

00:35:07.750 --> 00:35:07.760 align:start position:0%
will go to sleep
 

00:35:07.760 --> 00:35:10.870 align:start position:0%
will go to sleep
um<00:35:08.560><c> and</c><00:35:09.200><c> then</c><00:35:09.599><c> the</c><00:35:09.839><c> go</c><00:35:10.000><c> routines</c><00:35:10.480><c> that</c><00:35:10.800><c> you</c>

00:35:10.870 --> 00:35:10.880 align:start position:0%
um and then the go routines that you
 

00:35:10.880 --> 00:35:11.190 align:start position:0%
um and then the go routines that you
know

00:35:11.190 --> 00:35:11.200 align:start position:0%
know
 

00:35:11.200 --> 00:35:12.950 align:start position:0%
know
are<00:35:11.359><c> collecting</c><00:35:11.760><c> the</c><00:35:11.920><c> votes</c><00:35:12.640><c> you</c><00:35:12.720><c> know</c><00:35:12.880><c> the</c>

00:35:12.950 --> 00:35:12.960 align:start position:0%
are collecting the votes you know the
 

00:35:12.960 --> 00:35:14.230 align:start position:0%
are collecting the votes you know the
same<00:35:13.200><c> code</c><00:35:13.440><c> as</c><00:35:13.599><c> before</c>

00:35:14.230 --> 00:35:14.240 align:start position:0%
same code as before
 

00:35:14.240 --> 00:35:17.030 align:start position:0%
same code as before
my<00:35:14.960><c> lock</c><00:35:15.280><c> and</c><00:35:15.440><c> unlock</c><00:35:15.760><c> or</c><00:35:15.839><c> defer</c><00:35:16.240><c> to</c><00:35:16.400><c> unlock</c>

00:35:17.030 --> 00:35:17.040 align:start position:0%
my lock and unlock or defer to unlock
 

00:35:17.040 --> 00:35:18.230 align:start position:0%
my lock and unlock or defer to unlock
and<00:35:17.119><c> then</c><00:35:17.359><c> when</c><00:35:17.599><c> you're</c><00:35:17.760><c> done</c>

00:35:18.230 --> 00:35:18.240 align:start position:0%
and then when you're done
 

00:35:18.240 --> 00:35:20.470 align:start position:0%
and then when you're done
you<00:35:18.400><c> know</c><00:35:18.640><c> updating</c><00:35:19.040><c> count</c><00:35:19.280><c> to</c><00:35:19.440><c> finish</c><00:35:20.240><c> uh</c>

00:35:20.470 --> 00:35:20.480 align:start position:0%
you know updating count to finish uh
 

00:35:20.480 --> 00:35:21.670 align:start position:0%
you know updating count to finish uh
there<00:35:20.640><c> are</c><00:35:20.720><c> two</c><00:35:20.960><c> primitives</c><00:35:21.520><c> on</c><00:35:21.599><c> the</c>

00:35:21.670 --> 00:35:21.680 align:start position:0%
there are two primitives on the
 

00:35:21.680 --> 00:35:23.430 align:start position:0%
there are two primitives on the
condition<00:35:22.000><c> variable</c><00:35:22.480><c> one</c><00:35:22.640><c> is</c><00:35:22.800><c> signal</c><00:35:23.119><c> and</c><00:35:23.280><c> one</c>

00:35:23.430 --> 00:35:23.440 align:start position:0%
condition variable one is signal and one
 

00:35:23.440 --> 00:35:24.870 align:start position:0%
condition variable one is signal and one
is<00:35:23.599><c> broadcast</c>

00:35:24.870 --> 00:35:24.880 align:start position:0%
is broadcast
 

00:35:24.880 --> 00:35:27.510 align:start position:0%
is broadcast
and<00:35:25.119><c> broadcast</c><00:35:25.599><c> basically</c><00:35:26.240><c> uh</c><00:35:26.560><c> sigma</c><00:35:27.280><c> wakes</c>

00:35:27.510 --> 00:35:27.520 align:start position:0%
and broadcast basically uh sigma wakes
 

00:35:27.520 --> 00:35:29.270 align:start position:0%
and broadcast basically uh sigma wakes
up<00:35:27.680><c> one</c><00:35:27.920><c> waiter</c><00:35:28.320><c> and</c><00:35:28.400><c> broadcast</c><00:35:28.880><c> weights</c><00:35:29.119><c> of</c>

00:35:29.270 --> 00:35:29.280 align:start position:0%
up one waiter and broadcast weights of
 

00:35:29.280 --> 00:35:29.990 align:start position:0%
up one waiter and broadcast weights of
all<00:35:29.440><c> waiters</c>

00:35:29.990 --> 00:35:30.000 align:start position:0%
all waiters
 

00:35:30.000 --> 00:35:31.750 align:start position:0%
all waiters
you<00:35:30.079><c> know</c><00:35:30.240><c> there's</c><00:35:30.480><c> only</c><00:35:30.640><c> one</c><00:35:30.800><c> waiter</c><00:35:31.200><c> here</c><00:35:31.599><c> so</c>

00:35:31.750 --> 00:35:31.760 align:start position:0%
you know there's only one waiter here so
 

00:35:31.760 --> 00:35:34.710 align:start position:0%
you know there's only one waiter here so
we<00:35:31.839><c> could</c><00:35:32.000><c> have</c><00:35:32.079><c> used</c><00:35:32.320><c> either</c><00:35:32.560><c> one</c><00:35:32.720><c> of</c><00:35:32.800><c> them</c>

00:35:34.710 --> 00:35:34.720 align:start position:0%
we could have used either one of them
 

00:35:34.720 --> 00:35:36.710 align:start position:0%
we could have used either one of them
and<00:35:34.960><c> so</c><00:35:35.200><c> basically</c><00:35:35.599><c> when</c><00:35:35.760><c> it</c><00:35:35.920><c> reaches</c><00:35:36.560><c> you</c>

00:35:36.710 --> 00:35:36.720 align:start position:0%
and so basically when it reaches you
 

00:35:36.720 --> 00:35:39.190 align:start position:0%
and so basically when it reaches you
know<00:35:36.960><c> five</c><00:35:37.440><c> you</c><00:35:37.599><c> know</c><00:35:37.680><c> at</c><00:35:37.760><c> some</c><00:35:37.920><c> point</c><00:35:38.240><c> or</c><00:35:38.400><c> ten</c>

00:35:39.190 --> 00:35:39.200 align:start position:0%
know five you know at some point or ten
 

00:35:39.200 --> 00:35:41.190 align:start position:0%
know five you know at some point or ten
then<00:35:39.599><c> you</c><00:35:39.760><c> know</c><00:35:39.920><c> the</c><00:35:40.320><c> so</c><00:35:40.480><c> every</c><00:35:40.720><c> time</c><00:35:40.960><c> finish</c>

00:35:41.190 --> 00:35:41.200 align:start position:0%
then you know the so every time finish
 

00:35:41.200 --> 00:35:43.670 align:start position:0%
then you know the so every time finish
is<00:35:41.440><c> incremented</c><00:35:42.160><c> you</c><00:35:42.320><c> know</c><00:35:42.480><c> the</c>

00:35:43.670 --> 00:35:43.680 align:start position:0%
is incremented you know the
 

00:35:43.680 --> 00:35:45.510 align:start position:0%
is incremented you know the
main<00:35:43.920><c> thread</c><00:35:44.160><c> will</c><00:35:44.320><c> be</c><00:35:44.400><c> woken</c><00:35:44.800><c> up</c><00:35:45.200><c> you</c><00:35:45.359><c> can</c>

00:35:45.510 --> 00:35:45.520 align:start position:0%
main thread will be woken up you can
 

00:35:45.520 --> 00:35:46.790 align:start position:0%
main thread will be woken up you can
check<00:35:46.000><c> the</c><00:35:46.160><c> condition</c>

00:35:46.790 --> 00:35:46.800 align:start position:0%
check the condition
 

00:35:46.800 --> 00:35:50.150 align:start position:0%
check the condition
and<00:35:46.880><c> then</c><00:35:47.040><c> keep</c><00:35:47.280><c> going</c><00:35:48.560><c> okay</c>

00:35:50.150 --> 00:35:50.160 align:start position:0%
and then keep going okay
 

00:35:50.160 --> 00:35:51.750 align:start position:0%
and then keep going okay
so<00:35:50.320><c> this</c><00:35:50.480><c> is</c><00:35:50.560><c> convenient</c><00:35:51.200><c> sort</c><00:35:51.359><c> of</c><00:35:51.520><c> you</c><00:35:51.599><c> can</c>

00:35:51.750 --> 00:35:51.760 align:start position:0%
so this is convenient sort of you can
 

00:35:51.760 --> 00:35:53.270 align:start position:0%
so this is convenient sort of you can
think<00:35:51.920><c> about</c><00:35:52.079><c> condition</c><00:35:52.480><c> variables</c><00:35:52.960><c> as</c><00:35:53.119><c> a</c>

00:35:53.270 --> 00:35:53.280 align:start position:0%
think about condition variables as a
 

00:35:53.280 --> 00:35:55.510 align:start position:0%
think about condition variables as a
coordination<00:35:54.079><c> primitive</c><00:35:54.640><c> you</c><00:35:54.720><c> know</c><00:35:54.880><c> between</c>

00:35:55.510 --> 00:35:55.520 align:start position:0%
coordination primitive you know between
 

00:35:55.520 --> 00:35:57.270 align:start position:0%
coordination primitive you know between
uh<00:35:55.760><c> two</c><00:35:55.920><c> different</c><00:35:56.240><c> threads</c><00:35:56.960><c> and</c><00:35:57.119><c> they're</c>

00:35:57.270 --> 00:35:57.280 align:start position:0%
uh two different threads and they're
 

00:35:57.280 --> 00:35:58.470 align:start position:0%
uh two different threads and they're
particularly<00:35:57.599><c> convenient</c><00:35:58.079><c> when</c><00:35:58.240><c> you're</c>

00:35:58.470 --> 00:35:58.480 align:start position:0%
particularly convenient when you're
 

00:35:58.480 --> 00:35:59.589 align:start position:0%
particularly convenient when you're
actually<00:35:58.800><c> using</c><00:35:59.119><c> locks</c>

00:35:59.589 --> 00:35:59.599 align:start position:0%
actually using locks
 

00:35:59.599 --> 00:36:01.589 align:start position:0%
actually using locks
you<00:35:59.680><c> know</c><00:35:59.920><c> for</c><00:36:00.720><c> to</c><00:36:00.880><c> protect</c><00:36:01.200><c> your</c><00:36:01.280><c> shared</c>

00:36:01.589 --> 00:36:01.599 align:start position:0%
you know for to protect your shared
 

00:36:01.599 --> 00:36:10.470 align:start position:0%
you know for to protect your shared
state

00:36:10.470 --> 00:36:10.480 align:start position:0%
 
 

00:36:10.480 --> 00:36:14.150 align:start position:0%
 
so<00:36:10.640><c> here's</c><00:36:10.960><c> the</c><00:36:11.440><c> same</c><00:36:12.480><c> uh</c><00:36:13.040><c> implementation</c>

00:36:14.150 --> 00:36:14.160 align:start position:0%
so here's the same uh implementation
 

00:36:14.160 --> 00:36:17.750 align:start position:0%
so here's the same uh implementation
uh<00:36:14.560><c> of</c><00:36:14.720><c> this</c><00:36:14.880><c> program</c><00:36:15.280><c> using</c><00:36:15.599><c> channels</c><00:36:16.960><c> uh</c>

00:36:17.750 --> 00:36:17.760 align:start position:0%
uh of this program using channels uh
 

00:36:17.760 --> 00:36:19.990 align:start position:0%
uh of this program using channels uh
and<00:36:18.240><c> more</c><00:36:18.480><c> or</c><00:36:18.560><c> less</c><00:36:18.720><c> works</c><00:36:19.040><c> the</c><00:36:19.119><c> same</c><00:36:19.359><c> way</c>

00:36:19.990 --> 00:36:20.000 align:start position:0%
and more or less works the same way
 

00:36:20.000 --> 00:36:21.910 align:start position:0%
and more or less works the same way
except<00:36:20.560><c> of</c><00:36:20.640><c> course</c><00:36:20.880><c> no</c><00:36:21.040><c> locks</c>

00:36:21.910 --> 00:36:21.920 align:start position:0%
except of course no locks
 

00:36:21.920 --> 00:36:25.030 align:start position:0%
except of course no locks
uh<00:36:22.320><c> but</c><00:36:23.440><c> the</c><00:36:23.680><c> main</c><00:36:23.839><c> thread</c><00:36:24.079><c> creates</c><00:36:24.400><c> a</c><00:36:24.480><c> channel</c>

00:36:25.030 --> 00:36:25.040 align:start position:0%
uh but the main thread creates a channel
 

00:36:25.040 --> 00:36:27.750 align:start position:0%
uh but the main thread creates a channel
passes<00:36:25.440><c> the</c><00:36:26.000><c> the</c><00:36:26.560><c> go</c><00:36:26.800><c> routine</c><00:36:27.200><c> the</c><00:36:27.280><c> anonymous</c>

00:36:27.750 --> 00:36:27.760 align:start position:0%
passes the the go routine the anonymous
 

00:36:27.760 --> 00:36:28.630 align:start position:0%
passes the the go routine the anonymous
function

00:36:28.630 --> 00:36:28.640 align:start position:0%
function
 

00:36:28.640 --> 00:36:30.069 align:start position:0%
function
that's<00:36:28.960><c> being</c><00:36:29.200><c> created</c><00:36:29.520><c> as</c><00:36:29.680><c> a</c><00:36:29.760><c> separate</c>

00:36:30.069 --> 00:36:30.079 align:start position:0%
that's being created as a separate
 

00:36:30.079 --> 00:36:32.310 align:start position:0%
that's being created as a separate
thread<00:36:30.800><c> and</c><00:36:31.040><c> writes</c><00:36:31.359><c> basically</c><00:36:31.680><c> the</c><00:36:31.839><c> request</c>

00:36:32.310 --> 00:36:32.320 align:start position:0%
thread and writes basically the request
 

00:36:32.320 --> 00:36:34.230 align:start position:0%
thread and writes basically the request
vote<00:36:32.560><c> to</c><00:36:32.720><c> the</c><00:36:32.880><c> channel</c><00:36:33.680><c> and</c><00:36:33.760><c> then</c><00:36:33.920><c> the</c><00:36:34.079><c> main</c>

00:36:34.230 --> 00:36:34.240 align:start position:0%
vote to the channel and then the main
 

00:36:34.240 --> 00:36:35.910 align:start position:0%
vote to the channel and then the main
thread<00:36:34.560><c> basically</c><00:36:35.119><c> blocks</c><00:36:35.440><c> here</c><00:36:35.680><c> correct</c>

00:36:35.910 --> 00:36:35.920 align:start position:0%
thread basically blocks here correct
 

00:36:35.920 --> 00:36:38.390 align:start position:0%
thread basically blocks here correct
when<00:36:36.079><c> it</c><00:36:36.160><c> starts</c><00:36:36.400><c> reading</c><00:36:36.720><c> from</c><00:36:36.880><c> the</c><00:36:36.960><c> channel</c>

00:36:38.390 --> 00:36:38.400 align:start position:0%
when it starts reading from the channel
 

00:36:38.400 --> 00:36:39.670 align:start position:0%
when it starts reading from the channel
once<00:36:38.640><c> it</c><00:36:38.800><c> actually</c><00:36:39.040><c> get</c><00:36:39.280><c> something</c><00:36:39.520><c> where</c>

00:36:39.670 --> 00:36:39.680 align:start position:0%
once it actually get something where
 

00:36:39.680 --> 00:36:41.109 align:start position:0%
once it actually get something where
something<00:36:39.920><c> is</c><00:36:40.079><c> written</c><00:36:40.320><c> to</c><00:36:40.480><c> the</c><00:36:40.560><c> channel</c><00:36:40.880><c> will</c>

00:36:41.109 --> 00:36:41.119 align:start position:0%
something is written to the channel will
 

00:36:41.119 --> 00:36:42.069 align:start position:0%
something is written to the channel will
unblock

00:36:42.069 --> 00:36:42.079 align:start position:0%
unblock
 

00:36:42.079 --> 00:36:44.230 align:start position:0%
unblock
you<00:36:42.240><c> know</c><00:36:42.400><c> look</c><00:36:42.560><c> at</c><00:36:42.720><c> the</c><00:36:42.800><c> value</c><00:36:43.520><c> and</c><00:36:43.920><c> if</c><00:36:44.079><c> it's</c>

00:36:44.230 --> 00:36:44.240 align:start position:0%
you know look at the value and if it's
 

00:36:44.240 --> 00:36:45.270 align:start position:0%
you know look at the value and if it's
true<00:36:44.480><c> and</c><00:36:44.720><c> add</c><00:36:44.960><c> up</c>

00:36:45.270 --> 00:36:45.280 align:start position:0%
true and add up
 

00:36:45.280 --> 00:36:47.430 align:start position:0%
true and add up
and<00:36:45.760><c> uh</c><00:36:46.000><c> ottawa</c><00:36:46.480><c> and</c><00:36:46.800><c> always</c><00:36:47.040><c> increments</c>

00:36:47.430 --> 00:36:47.440 align:start position:0%
and uh ottawa and always increments
 

00:36:47.440 --> 00:36:48.790 align:start position:0%
and uh ottawa and always increments
finish

00:36:48.790 --> 00:36:48.800 align:start position:0%
finish
 

00:36:48.800 --> 00:36:50.710 align:start position:0%
finish
and<00:36:49.280><c> what's</c><00:36:49.599><c> going</c><00:36:49.760><c> on</c><00:36:49.920><c> here</c><00:36:50.160><c> correct</c><00:36:50.480><c> is</c><00:36:50.640><c> we</c>

00:36:50.710 --> 00:36:50.720 align:start position:0%
and what's going on here correct is we
 

00:36:50.720 --> 00:36:52.150 align:start position:0%
and what's going on here correct is we
don't<00:36:50.880><c> need</c><00:36:51.119><c> locks</c><00:36:51.520><c> because</c><00:36:51.839><c> count</c><00:36:52.079><c> and</c>

00:36:52.150 --> 00:36:52.160 align:start position:0%
don't need locks because count and
 

00:36:52.160 --> 00:36:54.230 align:start position:0%
don't need locks because count and
finish<00:36:52.480><c> are</c><00:36:52.560><c> not</c><00:36:52.800><c> shared</c><00:36:53.200><c> there's</c><00:36:53.520><c> only</c><00:36:53.839><c> one</c>

00:36:54.230 --> 00:36:54.240 align:start position:0%
finish are not shared there's only one
 

00:36:54.240 --> 00:36:55.750 align:start position:0%
finish are not shared there's only one
thread<00:36:54.560><c> that</c><00:36:54.720><c> actually</c><00:36:55.040><c> updates</c>

00:36:55.750 --> 00:36:55.760 align:start position:0%
thread that actually updates
 

00:36:55.760 --> 00:36:57.510 align:start position:0%
thread that actually updates
uh<00:36:56.160><c> count</c><00:36:56.400><c> and</c><00:36:56.480><c> finish</c><00:36:56.880><c> and</c><00:36:56.960><c> that's</c><00:36:57.200><c> the</c><00:36:57.280><c> main</c>

00:36:57.510 --> 00:36:57.520 align:start position:0%
uh count and finish and that's the main
 

00:36:57.520 --> 00:36:58.950 align:start position:0%
uh count and finish and that's the main
thread

00:36:58.950 --> 00:36:58.960 align:start position:0%
thread
 

00:36:58.960 --> 00:37:03.190 align:start position:0%
thread
okay<00:37:00.480><c> um</c><00:37:01.760><c> the</c>

00:37:03.190 --> 00:37:03.200 align:start position:0%
okay um the
 

00:37:03.200 --> 00:37:06.390 align:start position:0%
okay um the
uh<00:37:04.240><c> and</c><00:37:04.640><c> this</c><00:37:04.880><c> this</c><00:37:05.280><c> you</c><00:37:05.359><c> know</c><00:37:05.520><c> the</c><00:37:05.760><c> the</c><00:37:05.920><c> name</c>

00:37:06.390 --> 00:37:06.400 align:start position:0%
uh and this this you know the the name
 

00:37:06.400 --> 00:37:08.790 align:start position:0%
uh and this this you know the the name
the<00:37:06.640><c> the</c><00:37:07.280><c> sort</c><00:37:07.440><c> of</c><00:37:07.599><c> request</c><00:37:08.000><c> that</c><00:37:08.320><c> threats</c><00:37:08.720><c> you</c>

00:37:08.790 --> 00:37:08.800 align:start position:0%
the the sort of request that threats you
 

00:37:08.800 --> 00:37:11.030 align:start position:0%
the the sort of request that threats you
know<00:37:08.960><c> all</c><00:37:09.200><c> basically</c><00:37:09.680><c> just</c><00:37:09.920><c> write</c><00:37:10.160><c> to</c><00:37:10.320><c> this</c><00:37:10.640><c> uh</c>

00:37:11.030 --> 00:37:11.040 align:start position:0%
know all basically just write to this uh
 

00:37:11.040 --> 00:37:12.710 align:start position:0%
know all basically just write to this uh
channel<00:37:11.520><c> they</c><00:37:11.680><c> write</c><00:37:11.920><c> concurrently</c><00:37:12.400><c> perhaps</c>

00:37:12.710 --> 00:37:12.720 align:start position:0%
channel they write concurrently perhaps
 

00:37:12.720 --> 00:37:14.630 align:start position:0%
channel they write concurrently perhaps
to<00:37:12.800><c> the</c><00:37:12.960><c> channel</c><00:37:13.760><c> but</c><00:37:13.920><c> the</c><00:37:14.000><c> channels</c><00:37:14.400><c> are</c><00:37:14.480><c> one</c>

00:37:14.630 --> 00:37:14.640 align:start position:0%
to the channel but the channels are one
 

00:37:14.640 --> 00:37:15.829 align:start position:0%
to the channel but the channels are one
of<00:37:14.720><c> the</c><00:37:14.800><c> things</c><00:37:15.040><c> that</c><00:37:15.119><c> go</c><00:37:15.280><c> that</c><00:37:15.520><c> actually</c>

00:37:15.829 --> 00:37:15.839 align:start position:0%
of the things that go that actually
 

00:37:15.839 --> 00:37:17.510 align:start position:0%
of the things that go that actually
frets<00:37:16.160><c> save</c><00:37:16.400><c> so</c><00:37:16.640><c> multiple</c><00:37:17.040><c> threads</c><00:37:17.359><c> can</c>

00:37:17.510 --> 00:37:17.520 align:start position:0%
frets save so multiple threads can
 

00:37:17.520 --> 00:37:21.109 align:start position:0%
frets save so multiple threads can
actually<00:37:17.760><c> write</c><00:37:18.000><c> to</c><00:37:18.160><c> the</c><00:37:18.240><c> channel</c>

00:37:21.109 --> 00:37:21.119 align:start position:0%
 
 

00:37:21.119 --> 00:37:24.230 align:start position:0%
 
um<00:37:21.440><c> any</c><00:37:21.680><c> questions</c><00:37:22.079><c> about</c><00:37:22.240><c> this</c>

00:37:24.230 --> 00:37:24.240 align:start position:0%
um any questions about this
 

00:37:24.240 --> 00:37:27.750 align:start position:0%
um any questions about this
about<00:37:24.400><c> the</c><00:37:24.560><c> solution</c>

00:37:27.750 --> 00:37:27.760 align:start position:0%
 
 

00:37:27.760 --> 00:37:29.589 align:start position:0%
 
what<00:37:27.920><c> was</c><00:37:28.160><c> the</c><00:37:28.400><c> thing</c><00:37:28.560><c> about</c><00:37:28.880><c> like</c><00:37:29.119><c> having</c><00:37:29.440><c> a</c>

00:37:29.589 --> 00:37:29.599 align:start position:0%
what was the thing about like having a
 

00:37:29.599 --> 00:37:30.950 align:start position:0%
what was the thing about like having a
buffer

00:37:30.950 --> 00:37:30.960 align:start position:0%
buffer
 

00:37:30.960 --> 00:37:34.470 align:start position:0%
buffer
for<00:37:31.200><c> the</c><00:37:31.359><c> channel</c><00:37:32.240><c> yeah</c><00:37:32.640><c> so</c><00:37:33.040><c> uh</c><00:37:33.920><c> normally</c><00:37:34.320><c> when</c>

00:37:34.470 --> 00:37:34.480 align:start position:0%
for the channel yeah so uh normally when
 

00:37:34.480 --> 00:37:36.790 align:start position:0%
for the channel yeah so uh normally when
you<00:37:34.640><c> write</c><00:37:34.880><c> into</c><00:37:35.119><c> the</c><00:37:35.200><c> channel</c><00:37:35.520><c> and</c><00:37:35.680><c> nobody's</c>

00:37:36.790 --> 00:37:36.800 align:start position:0%
you write into the channel and nobody's
 

00:37:36.800 --> 00:37:38.470 align:start position:0%
you write into the channel and nobody's
reading<00:37:37.119><c> from</c><00:37:37.280><c> the</c><00:37:37.440><c> channel</c><00:37:37.760><c> or</c><00:37:37.920><c> no</c><00:37:38.079><c> thread</c><00:37:38.400><c> is</c>

00:37:38.470 --> 00:37:38.480 align:start position:0%
reading from the channel or no thread is
 

00:37:38.480 --> 00:37:40.230 align:start position:0%
reading from the channel or no thread is
reading<00:37:38.720><c> from</c><00:37:38.880><c> the</c><00:37:38.960><c> channel</c><00:37:39.599><c> then</c><00:37:39.760><c> the</c><00:37:39.920><c> center</c>

00:37:40.230 --> 00:37:40.240 align:start position:0%
reading from the channel then the center
 

00:37:40.240 --> 00:37:43.510 align:start position:0%
reading from the channel then the center
will<00:37:40.400><c> immediately</c><00:37:40.800><c> be</c><00:37:40.960><c> blocked</c>

00:37:43.510 --> 00:37:43.520 align:start position:0%
 
 

00:37:43.520 --> 00:37:46.230 align:start position:0%
 
you<00:37:43.680><c> can</c><00:37:44.000><c> specify</c><00:37:45.200><c> that</c><00:37:45.359><c> the</c><00:37:45.520><c> channel</c><00:37:45.920><c> has</c><00:37:46.160><c> a</c>

00:37:46.230 --> 00:37:46.240 align:start position:0%
you can specify that the channel has a
 

00:37:46.240 --> 00:37:49.030 align:start position:0%
you can specify that the channel has a
buffer<00:37:46.560><c> of</c><00:37:46.720><c> a</c><00:37:46.880><c> of</c><00:37:47.040><c> 10</c><00:37:47.359><c> or</c><00:37:47.520><c> 20</c>

00:37:49.030 --> 00:37:49.040 align:start position:0%
buffer of a of 10 or 20
 

00:37:49.040 --> 00:37:51.030 align:start position:0%
buffer of a of 10 or 20
and<00:37:49.599><c> uh</c><00:37:49.920><c> that</c><00:37:50.160><c> allows</c><00:37:50.480><c> the</c><00:37:50.560><c> channel</c><00:37:50.800><c> to</c><00:37:50.960><c> have</c>

00:37:51.030 --> 00:37:51.040 align:start position:0%
and uh that allows the channel to have
 

00:37:51.040 --> 00:37:52.790 align:start position:0%
and uh that allows the channel to have
multiple<00:37:51.440><c> values</c>

00:37:52.790 --> 00:37:52.800 align:start position:0%
multiple values
 

00:37:52.800 --> 00:37:56.310 align:start position:0%
multiple values
in<00:37:53.680><c> in</c><00:37:53.920><c> eight</c><00:37:54.079><c> to</c><00:37:54.240><c> four</c><00:37:54.640><c> labs</c><00:37:55.119><c> i've</c><00:37:55.359><c> never</c><00:37:55.599><c> used</c>

00:37:56.310 --> 00:37:56.320 align:start position:0%
in in eight to four labs i've never used
 

00:37:56.320 --> 00:37:59.030 align:start position:0%
in in eight to four labs i've never used
uh<00:37:56.880><c> buffered</c><00:37:57.680><c> channels</c><00:37:58.079><c> and</c><00:37:58.640><c> one</c><00:37:58.800><c> of</c><00:37:58.880><c> two</c>

00:37:59.030 --> 00:37:59.040 align:start position:0%
uh buffered channels and one of two
 

00:37:59.040 --> 00:38:00.310 align:start position:0%
uh buffered channels and one of two
three<00:37:59.200><c> times</c><00:37:59.440><c> i</c><00:37:59.599><c> did</c><00:37:59.760><c> it</c><00:37:59.920><c> you</c><00:38:00.000><c> know</c><00:38:00.160><c> i</c>

00:38:00.310 --> 00:38:00.320 align:start position:0%
three times i did it you know i
 

00:38:00.320 --> 00:38:01.109 align:start position:0%
three times i did it you know i
regretted<00:38:00.880><c> it</c>

00:38:01.109 --> 00:38:01.119 align:start position:0%
regretted it
 

00:38:01.119 --> 00:38:04.230 align:start position:0%
regretted it
so<00:38:01.440><c> in</c><00:38:01.520><c> general</c><00:38:01.839><c> i</c><00:38:02.240><c> i</c><00:38:02.400><c> don't</c><00:38:02.640><c> use</c><00:38:02.880><c> it</c>

00:38:04.230 --> 00:38:04.240 align:start position:0%
so in general i i don't use it
 

00:38:04.240 --> 00:38:07.109 align:start position:0%
so in general i i don't use it
but<00:38:04.400><c> this</c><00:38:04.560><c> is</c><00:38:04.640><c> a</c><00:38:04.720><c> really</c><00:38:05.040><c> important</c><00:38:05.440><c> point</c><00:38:06.960><c> uh</c>

00:38:07.109 --> 00:38:07.119 align:start position:0%
but this is a really important point uh
 

00:38:07.119 --> 00:38:08.710 align:start position:0%
but this is a really important point uh
this<00:38:07.359><c> but</c><00:38:07.599><c> this</c><00:38:07.760><c> program</c><00:38:08.079><c> is</c><00:38:08.240><c> actually</c><00:38:08.480><c> still</c>

00:38:08.710 --> 00:38:08.720 align:start position:0%
this but this program is actually still
 

00:38:08.720 --> 00:38:09.990 align:start position:0%
this but this program is actually still
not<00:38:08.960><c> very</c><00:38:09.200><c> good</c>

00:38:09.990 --> 00:38:10.000 align:start position:0%
not very good
 

00:38:10.000 --> 00:38:13.990 align:start position:0%
not very good
um<00:38:10.960><c> so</c><00:38:11.200><c> for</c><00:38:11.280><c> example</c><00:38:12.240><c> when</c><00:38:12.960><c> uh</c>

00:38:13.990 --> 00:38:14.000 align:start position:0%
um so for example when uh
 

00:38:14.000 --> 00:38:15.510 align:start position:0%
um so for example when uh
you<00:38:14.079><c> know</c><00:38:14.480><c> it</c><00:38:14.560><c> doesn't</c><00:38:14.800><c> matter</c><00:38:15.040><c> in</c><00:38:15.200><c> practice</c>

00:38:15.510 --> 00:38:15.520 align:start position:0%
you know it doesn't matter in practice
 

00:38:15.520 --> 00:38:17.430 align:start position:0%
you know it doesn't matter in practice
in<00:38:15.680><c> this</c><00:38:15.839><c> particular</c><00:38:16.240><c> example</c><00:38:16.640><c> but</c><00:38:16.800><c> it's</c><00:38:17.040><c> not</c>

00:38:17.430 --> 00:38:17.440 align:start position:0%
in this particular example but it's not
 

00:38:17.440 --> 00:38:20.230 align:start position:0%
in this particular example but it's not
in<00:38:17.920><c> in</c><00:38:18.720><c> in</c><00:38:18.880><c> some</c><00:38:19.040><c> collapse</c><00:38:19.520><c> if</c><00:38:19.599><c> we</c><00:38:19.839><c> could</c><00:38:20.000><c> bite</c>

00:38:20.230 --> 00:38:20.240 align:start position:0%
in in in some collapse if we could bite
 

00:38:20.240 --> 00:38:20.950 align:start position:0%
in in in some collapse if we could bite
you

00:38:20.950 --> 00:38:20.960 align:start position:0%
you
 

00:38:20.960 --> 00:38:23.349 align:start position:0%
you
uh<00:38:21.520><c> as</c><00:38:21.680><c> soon</c><00:38:21.920><c> as</c><00:38:22.079><c> it</c><00:38:22.160><c> reaches</c><00:38:22.480><c> count</c><00:38:22.800><c> five</c><00:38:23.200><c> what</c>

00:38:23.349 --> 00:38:23.359 align:start position:0%
uh as soon as it reaches count five what
 

00:38:23.359 --> 00:38:27.750 align:start position:0%
uh as soon as it reaches count five what
will<00:38:23.520><c> happen</c>

00:38:27.750 --> 00:38:27.760 align:start position:0%
 
 

00:38:27.760 --> 00:38:30.550 align:start position:0%
 
it<00:38:27.920><c> stops</c><00:38:28.320><c> listening</c><00:38:28.960><c> for</c><00:38:29.520><c> um</c><00:38:30.000><c> this</c><00:38:30.240><c> new</c>

00:38:30.550 --> 00:38:30.560 align:start position:0%
it stops listening for um this new
 

00:38:30.560 --> 00:38:31.109 align:start position:0%
it stops listening for um this new
channel

00:38:31.109 --> 00:38:31.119 align:start position:0%
channel
 

00:38:31.119 --> 00:38:33.030 align:start position:0%
channel
so<00:38:31.359><c> any</c><00:38:31.599><c> other</c><00:38:31.920><c> threads</c><00:38:32.400><c> um</c><00:38:32.720><c> are</c><00:38:32.800><c> just</c><00:38:32.960><c> going</c>

00:38:33.030 --> 00:38:33.040 align:start position:0%
so any other threads um are just going
 

00:38:33.040 --> 00:38:34.870 align:start position:0%
so any other threads um are just going
to<00:38:33.119><c> be</c><00:38:33.280><c> blocked</c><00:38:34.000><c> yeah</c><00:38:34.240><c> so</c><00:38:34.400><c> basically</c><00:38:34.720><c> this</c>

00:38:34.870 --> 00:38:34.880 align:start position:0%
to be blocked yeah so basically this
 

00:38:34.880 --> 00:38:36.230 align:start position:0%
to be blocked yeah so basically this
means<00:38:35.119><c> like</c><00:38:35.280><c> if</c><00:38:35.440><c> the</c><00:38:35.520><c> first</c><00:38:35.760><c> five</c>

00:38:36.230 --> 00:38:36.240 align:start position:0%
means like if the first five
 

00:38:36.240 --> 00:38:38.870 align:start position:0%
means like if the first five
threads<00:38:36.480><c> voted</c><00:38:36.960><c> uh</c><00:38:37.119><c> yes</c><00:38:38.079><c> then</c><00:38:38.320><c> the</c><00:38:38.400><c> next</c><00:38:38.640><c> five</c>

00:38:38.870 --> 00:38:38.880 align:start position:0%
threads voted uh yes then the next five
 

00:38:38.880 --> 00:38:39.589 align:start position:0%
threads voted uh yes then the next five
threads<00:38:39.119><c> will</c><00:38:39.280><c> be</c>

00:38:39.589 --> 00:38:39.599 align:start position:0%
threads will be
 

00:38:39.599 --> 00:38:42.710 align:start position:0%
threads will be
blocked<00:38:40.000><c> in</c><00:38:40.079><c> this</c><00:38:40.240><c> channel</c><00:38:40.640><c> correct</c><00:38:42.400><c> you</c><00:38:42.560><c> know</c>

00:38:42.710 --> 00:38:42.720 align:start position:0%
blocked in this channel correct you know
 

00:38:42.720 --> 00:38:44.950 align:start position:0%
blocked in this channel correct you know
they'll<00:38:42.960><c> be</c><00:38:43.119><c> hanging</c><00:38:43.440><c> around</c>

00:38:44.950 --> 00:38:44.960 align:start position:0%
they'll be hanging around
 

00:38:44.960 --> 00:38:47.670 align:start position:0%
they'll be hanging around
uh<00:38:45.440><c> and</c><00:38:46.000><c> uh</c><00:38:46.560><c> in</c><00:38:46.720><c> this</c><00:38:46.800><c> case</c><00:38:47.040><c> it</c><00:38:47.119><c> won't</c><00:38:47.280><c> be</c><00:38:47.520><c> a</c>

00:38:47.670 --> 00:38:47.680 align:start position:0%
uh and uh in this case it won't be a
 

00:38:47.680 --> 00:38:49.030 align:start position:0%
uh and uh in this case it won't be a
problem<00:38:48.000><c> because</c><00:38:48.160><c> as</c><00:38:48.320><c> most</c><00:38:48.480><c> of</c><00:38:48.640><c> you</c><00:38:48.720><c> guys</c>

00:38:49.030 --> 00:38:49.040 align:start position:0%
problem because as most of you guys
 

00:38:49.040 --> 00:38:50.870 align:start position:0%
problem because as most of you guys
have<00:38:49.119><c> most</c><00:38:49.359><c> observed</c><00:38:49.839><c> like</c><00:38:50.000><c> that</c><00:38:50.240><c> if</c><00:38:50.480><c> the</c><00:38:50.640><c> main</c>

00:38:50.870 --> 00:38:50.880 align:start position:0%
have most observed like that if the main
 

00:38:50.880 --> 00:38:53.030 align:start position:0%
have most observed like that if the main
thread<00:38:51.200><c> exits</c><00:38:51.920><c> it</c><00:38:52.079><c> actually</c><00:38:52.400><c> cleans</c><00:38:52.720><c> up</c><00:38:52.880><c> all</c>

00:38:53.030 --> 00:38:53.040 align:start position:0%
thread exits it actually cleans up all
 

00:38:53.040 --> 00:38:54.790 align:start position:0%
thread exits it actually cleans up all
the<00:38:53.200><c> other</c><00:38:53.359><c> threads</c><00:38:53.760><c> too</c>

00:38:54.790 --> 00:38:54.800 align:start position:0%
the other threads too
 

00:38:54.800 --> 00:38:56.470 align:start position:0%
the other threads too
uh<00:38:55.280><c> but</c><00:38:55.440><c> for</c><00:38:55.599><c> example</c><00:38:55.920><c> if</c><00:38:56.000><c> this</c><00:38:56.160><c> would</c><00:38:56.160><c> be</c><00:38:56.320><c> a</c>

00:38:56.470 --> 00:38:56.480 align:start position:0%
uh but for example if this would be a
 

00:38:56.480 --> 00:38:57.990 align:start position:0%
uh but for example if this would be a
long<00:38:56.720><c> running</c><00:38:57.119><c> surface</c>

00:38:57.990 --> 00:38:58.000 align:start position:0%
long running surface
 

00:38:58.000 --> 00:38:59.990 align:start position:0%
long running surface
uh<00:38:58.240><c> this</c><00:38:58.400><c> would</c><00:38:58.560><c> be</c><00:38:58.720><c> not</c><00:38:58.880><c> good</c><00:38:59.599><c> basically</c>

00:38:59.990 --> 00:39:00.000 align:start position:0%
uh this would be not good basically
 

00:39:00.000 --> 00:39:01.430 align:start position:0%
uh this would be not good basically
we're<00:39:00.160><c> leaking</c><00:39:00.560><c> threats</c><00:39:00.960><c> here</c><00:39:01.200><c> you</c><00:39:01.359><c> know</c>

00:39:01.430 --> 00:39:01.440 align:start position:0%
we're leaking threats here you know
 

00:39:01.440 --> 00:39:03.030 align:start position:0%
we're leaking threats here you know
they're<00:39:01.680><c> sitting</c><00:39:02.079><c> blocked</c><00:39:02.400><c> on</c><00:39:02.480><c> the</c><00:39:02.640><c> side</c>

00:39:03.030 --> 00:39:03.040 align:start position:0%
they're sitting blocked on the side
 

00:39:03.040 --> 00:39:05.270 align:start position:0%
they're sitting blocked on the side
uh<00:39:03.280><c> doing</c><00:39:03.520><c> nothing</c><00:39:03.920><c> uh</c><00:39:04.240><c> in</c><00:39:04.320><c> that</c><00:39:04.560><c> channel</c><00:39:05.119><c> and</c>

00:39:05.270 --> 00:39:05.280 align:start position:0%
uh doing nothing uh in that channel and
 

00:39:05.280 --> 00:39:06.870 align:start position:0%
uh doing nothing uh in that channel and
so<00:39:05.440><c> that's</c><00:39:05.760><c> quite</c><00:39:06.000><c> inconvenient</c>

00:39:06.870 --> 00:39:06.880 align:start position:0%
so that's quite inconvenient
 

00:39:06.880 --> 00:39:08.710 align:start position:0%
so that's quite inconvenient
and<00:39:07.440><c> uh</c><00:39:07.599><c> this</c><00:39:07.839><c> is</c><00:39:07.920><c> something</c><00:39:08.160><c> to</c><00:39:08.240><c> watch</c><00:39:08.560><c> out</c>

00:39:08.710 --> 00:39:08.720 align:start position:0%
and uh this is something to watch out
 

00:39:08.720 --> 00:39:11.349 align:start position:0%
and uh this is something to watch out
for<00:39:09.839><c> uh</c><00:39:10.160><c> and</c><00:39:10.240><c> this</c><00:39:10.400><c> showed</c><00:39:10.640><c> up</c><00:39:10.800><c> in</c><00:39:10.880><c> the</c><00:39:10.960><c> crawler</c>

00:39:11.349 --> 00:39:11.359 align:start position:0%
for uh and this showed up in the crawler
 

00:39:11.359 --> 00:39:12.830 align:start position:0%
for uh and this showed up in the crawler
i<00:39:11.440><c> think</c><00:39:11.520><c> for</c><00:39:11.680><c> many</c><00:39:12.000><c> uh</c><00:39:12.240><c> people</c><00:39:12.560><c> in</c><00:39:12.800><c> uh</c><00:39:12.560><c> and</c>

00:39:12.830 --> 00:39:12.840 align:start position:0%
i think for many uh people in uh and
 

00:39:12.840 --> 00:39:14.630 align:start position:0%
i think for many uh people in uh and
[Music]

00:39:14.630 --> 00:39:14.640 align:start position:0%
[Music]
 

00:39:14.640 --> 00:39:17.109 align:start position:0%
[Music]
there's<00:39:15.359><c> the</c><00:39:15.520><c> flip</c><00:39:15.760><c> side</c><00:39:16.000><c> of</c><00:39:16.079><c> this</c><00:39:16.320><c> is</c><00:39:16.720><c> that</c><00:39:16.960><c> if</c>

00:39:17.109 --> 00:39:17.119 align:start position:0%
there's the flip side of this is that if
 

00:39:17.119 --> 00:39:17.990 align:start position:0%
there's the flip side of this is that if
the<00:39:17.200><c> main</c><00:39:17.359><c> threat</c>

00:39:17.990 --> 00:39:18.000 align:start position:0%
the main threat
 

00:39:18.000 --> 00:39:19.589 align:start position:0%
the main threat
enters<00:39:18.240><c> too</c><00:39:18.480><c> early</c><00:39:18.880><c> before</c><00:39:19.280><c> any</c><00:39:19.440><c> of</c><00:39:19.520><c> the</c>

00:39:19.589 --> 00:39:19.599 align:start position:0%
enters too early before any of the
 

00:39:19.599 --> 00:39:21.829 align:start position:0%
enters too early before any of the
request<00:39:20.000><c> votes</c><00:39:20.240><c> are</c><00:39:20.320><c> done</c><00:39:20.960><c> uh</c><00:39:21.280><c> then</c><00:39:21.440><c> you</c><00:39:21.599><c> also</c>

00:39:21.829 --> 00:39:21.839 align:start position:0%
request votes are done uh then you also
 

00:39:21.839 --> 00:39:22.550 align:start position:0%
request votes are done uh then you also
have<00:39:21.920><c> a</c><00:39:22.079><c> problem</c>

00:39:22.550 --> 00:39:22.560 align:start position:0%
have a problem
 

00:39:22.560 --> 00:39:23.829 align:start position:0%
have a problem
and<00:39:22.720><c> so</c><00:39:22.880><c> there's</c><00:39:23.040><c> this</c><00:39:23.280><c> management</c><00:39:23.760><c> of</c>

00:39:23.829 --> 00:39:23.839 align:start position:0%
and so there's this management of
 

00:39:23.839 --> 00:39:25.750 align:start position:0%
and so there's this management of
threats<00:39:24.160><c> that</c><00:39:24.400><c> actually</c><00:39:25.200><c> is</c>

00:39:25.750 --> 00:39:25.760 align:start position:0%
threats that actually is
 

00:39:25.760 --> 00:39:28.870 align:start position:0%
threats that actually is
often<00:39:26.079><c> a</c><00:39:26.240><c> tricky</c><00:39:26.839><c> issue</c>

00:39:28.870 --> 00:39:28.880 align:start position:0%
often a tricky issue
 

00:39:28.880 --> 00:39:30.150 align:start position:0%
often a tricky issue
is<00:39:28.960><c> there</c><00:39:29.119><c> a</c><00:39:29.200><c> way</c><00:39:29.359><c> to</c><00:39:29.520><c> kill</c><00:39:29.760><c> the</c><00:39:29.839><c> thread</c>

00:39:30.150 --> 00:39:30.160 align:start position:0%
is there a way to kill the thread
 

00:39:30.160 --> 00:39:33.510 align:start position:0%
is there a way to kill the thread
without<00:39:30.720><c> um</c><00:39:31.280><c> exiting</c><00:39:31.760><c> from</c><00:39:31.920><c> me</c>

00:39:33.510 --> 00:39:33.520 align:start position:0%
without um exiting from me
 

00:39:33.520 --> 00:39:36.630 align:start position:0%
without um exiting from me
uh<00:39:34.400><c> well</c><00:39:34.640><c> you</c><00:39:34.720><c> can</c><00:39:34.880><c> send</c><00:39:35.040><c> it</c><00:39:35.200><c> a</c><00:39:35.520><c> variable</c><00:39:36.000><c> or</c><00:39:36.160><c> a</c>

00:39:36.630 --> 00:39:36.640 align:start position:0%
uh well you can send it a variable or a
 

00:39:36.640 --> 00:39:37.510 align:start position:0%
uh well you can send it a variable or a
value<00:39:37.040><c> on</c><00:39:37.119><c> some</c>

00:39:37.510 --> 00:39:37.520 align:start position:0%
value on some
 

00:39:37.520 --> 00:39:40.230 align:start position:0%
value on some
channels<00:39:37.839><c> saying</c><00:39:38.000><c> like</c><00:39:38.160><c> please</c><00:39:38.480><c> exit</c><00:39:39.680><c> but</c><00:39:40.000><c> you</c>

00:39:40.230 --> 00:39:40.240 align:start position:0%
channels saying like please exit but you
 

00:39:40.240 --> 00:39:47.910 align:start position:0%
channels saying like please exit but you
have<00:39:40.320><c> to</c><00:39:40.480><c> coordinate</c><00:39:40.960><c> it</c><00:39:41.119><c> yourself</c>

00:39:47.910 --> 00:39:47.920 align:start position:0%
 
 

00:39:47.920 --> 00:39:49.910 align:start position:0%
 
i<00:39:48.079><c> want</c><00:39:48.240><c> to</c><00:39:48.320><c> go</c><00:39:48.400><c> back</c><00:39:48.720><c> to</c><00:39:49.280><c> one</c><00:39:49.520><c> of</c><00:39:49.599><c> the</c><00:39:49.680><c> things</c>

00:39:49.910 --> 00:39:49.920 align:start position:0%
i want to go back to one of the things
 

00:39:49.920 --> 00:39:53.510 align:start position:0%
i want to go back to one of the things
that<00:39:50.160><c> actually</c><00:39:50.400><c> is</c><00:39:50.800><c> cool</c><00:39:51.119><c> about</c>

00:39:53.510 --> 00:39:53.520 align:start position:0%
 
 

00:39:53.520 --> 00:39:58.790 align:start position:0%
 
condition<00:39:53.920><c> variables</c><00:39:55.440><c> is</c><00:39:55.839><c> that</c><00:39:56.480><c> um</c>

00:39:58.790 --> 00:39:58.800 align:start position:0%
condition variables is that um
 

00:39:58.800 --> 00:39:59.990 align:start position:0%
condition variables is that um
in<00:39:58.960><c> principle</c><00:39:59.280><c> you</c><00:39:59.359><c> might</c><00:39:59.520><c> think</c><00:39:59.680><c> that</c><00:39:59.920><c> the</c>

00:39:59.990 --> 00:40:00.000 align:start position:0%
in principle you might think that the
 

00:40:00.000 --> 00:40:02.150 align:start position:0%
in principle you might think that the
same<00:40:00.240><c> issue</c><00:40:00.480><c> exists</c><00:40:00.880><c> here</c><00:40:01.760><c> uh</c>

00:40:02.150 --> 00:40:02.160 align:start position:0%
same issue exists here uh
 

00:40:02.160 --> 00:40:04.950 align:start position:0%
same issue exists here uh
where<00:40:02.480><c> like</c><00:40:02.640><c> this</c><00:40:02.800><c> fred</c><00:40:03.119><c> actually</c><00:40:03.440><c> runs</c><00:40:04.000><c> and</c>

00:40:04.950 --> 00:40:04.960 align:start position:0%
where like this fred actually runs and
 

00:40:04.960 --> 00:40:05.910 align:start position:0%
where like this fred actually runs and
uh

00:40:05.910 --> 00:40:05.920 align:start position:0%
uh
 

00:40:05.920 --> 00:40:09.030 align:start position:0%
uh
in<00:40:06.000><c> this</c><00:40:06.240><c> thread</c><00:40:07.200><c> and</c>

00:40:09.030 --> 00:40:09.040 align:start position:0%
in this thread and
 

00:40:09.040 --> 00:40:10.870 align:start position:0%
in this thread and
it<00:40:09.359><c> might</c><00:40:09.520><c> get</c><00:40:09.680><c> blocked</c><00:40:10.000><c> like</c><00:40:10.160><c> example</c><00:40:10.560><c> if</c><00:40:10.720><c> you</c>

00:40:10.870 --> 00:40:10.880 align:start position:0%
it might get blocked like example if you
 

00:40:10.880 --> 00:40:12.470 align:start position:0%
it might get blocked like example if you
know<00:40:10.960><c> we</c><00:40:11.119><c> reached</c><00:40:11.520><c> you</c><00:40:11.680><c> know</c><00:40:12.000><c> five</c>

00:40:12.470 --> 00:40:12.480 align:start position:0%
know we reached you know five
 

00:40:12.480 --> 00:40:14.069 align:start position:0%
know we reached you know five
you<00:40:12.640><c> know</c><00:40:12.800><c> this</c><00:40:12.960><c> main</c><00:40:13.200><c> thread</c><00:40:13.520><c> will</c><00:40:13.839><c> you</c><00:40:13.920><c> know</c>

00:40:14.069 --> 00:40:14.079 align:start position:0%
you know this main thread will you know
 

00:40:14.079 --> 00:40:16.150 align:start position:0%
you know this main thread will you know
perceive<00:40:14.480><c> doing</c><00:40:15.119><c> its</c><00:40:15.280><c> thing</c>

00:40:16.150 --> 00:40:16.160 align:start position:0%
perceive doing its thing
 

00:40:16.160 --> 00:40:17.990 align:start position:0%
perceive doing its thing
uh<00:40:16.480><c> while</c><00:40:16.720><c> the</c><00:40:16.800><c> other</c><00:40:16.960><c> guys</c><00:40:17.280><c> are</c><00:40:17.359><c> still</c><00:40:17.599><c> maybe</c>

00:40:17.990 --> 00:40:18.000 align:start position:0%
uh while the other guys are still maybe
 

00:40:18.000 --> 00:40:19.990 align:start position:0%
uh while the other guys are still maybe
actually<00:40:18.400><c> sitting</c><00:40:18.720><c> in</c><00:40:18.880><c> here</c>

00:40:19.990 --> 00:40:20.000 align:start position:0%
actually sitting in here
 

00:40:20.000 --> 00:40:22.710 align:start position:0%
actually sitting in here
uh<00:40:20.400><c> but</c><00:40:20.560><c> notice</c><00:40:21.040><c> these</c><00:40:21.520><c> in</c><00:40:21.599><c> this</c><00:40:21.839><c> case</c><00:40:22.560><c> they</c>

00:40:22.710 --> 00:40:22.720 align:start position:0%
uh but notice these in this case they
 

00:40:22.720 --> 00:40:24.390 align:start position:0%
uh but notice these in this case they
won't<00:40:22.960><c> be</c><00:40:23.119><c> blocked</c><00:40:23.839><c> uh</c>

00:40:24.390 --> 00:40:24.400 align:start position:0%
won't be blocked uh
 

00:40:24.400 --> 00:40:26.790 align:start position:0%
won't be blocked uh
because<00:40:24.640><c> you</c><00:40:24.720><c> know</c><00:40:24.800><c> well</c><00:40:25.040><c> grab</c><00:40:25.359><c> the</c><00:40:25.520><c> lock</c><00:40:26.240><c> then</c>

00:40:26.790 --> 00:40:26.800 align:start position:0%
because you know well grab the lock then
 

00:40:26.800 --> 00:40:28.630 align:start position:0%
because you know well grab the lock then
you<00:40:26.880><c> know</c><00:40:27.119><c> does</c><00:40:27.359><c> the</c><00:40:27.440><c> thing</c><00:40:27.680><c> does</c><00:40:27.920><c> a</c><00:40:28.000><c> broadcast</c>

00:40:28.630 --> 00:40:28.640 align:start position:0%
you know does the thing does a broadcast
 

00:40:28.640 --> 00:40:29.990 align:start position:0%
you know does the thing does a broadcast
and<00:40:28.720><c> the</c><00:40:28.800><c> broadcast</c><00:40:29.280><c> is</c><00:40:29.440><c> actually</c><00:40:29.760><c> not</c><00:40:29.920><c> a</c>

00:40:29.990 --> 00:40:30.000 align:start position:0%
and the broadcast is actually not a
 

00:40:30.000 --> 00:40:31.270 align:start position:0%
and the broadcast is actually not a
blocking<00:40:30.400><c> operation</c><00:40:30.960><c> so</c>

00:40:31.270 --> 00:40:31.280 align:start position:0%
blocking operation so
 

00:40:31.280 --> 00:40:32.790 align:start position:0%
blocking operation so
unlike<00:40:31.680><c> you</c><00:40:31.839><c> know</c><00:40:32.000><c> writing</c><00:40:32.240><c> to</c><00:40:32.400><c> a</c><00:40:32.480><c> channel</c>

00:40:32.790 --> 00:40:32.800 align:start position:0%
unlike you know writing to a channel
 

00:40:32.800 --> 00:40:34.550 align:start position:0%
unlike you know writing to a channel
that<00:40:33.040><c> is</c><00:40:33.119><c> a</c><00:40:33.200><c> blocking</c><00:40:33.599><c> operation</c><00:40:34.000><c> if</c><00:40:34.079><c> nobody</c>

00:40:34.550 --> 00:40:34.560 align:start position:0%
that is a blocking operation if nobody
 

00:40:34.560 --> 00:40:35.430 align:start position:0%
that is a blocking operation if nobody
is<00:40:34.720><c> listening</c>

00:40:35.430 --> 00:40:35.440 align:start position:0%
is listening
 

00:40:35.440 --> 00:40:37.270 align:start position:0%
is listening
the<00:40:35.680><c> con</c><00:40:35.920><c> broadcast</c><00:40:36.400><c> is</c><00:40:36.560><c> not</c><00:40:36.720><c> a</c><00:40:36.880><c> blocking</c>

00:40:37.270 --> 00:40:37.280 align:start position:0%
the con broadcast is not a blocking
 

00:40:37.280 --> 00:40:39.349 align:start position:0%
the con broadcast is not a blocking
operation<00:40:38.319><c> so</c><00:40:38.480><c> this</c><00:40:38.720><c> actually</c><00:40:38.880><c> works</c><00:40:39.119><c> out</c><00:40:39.280><c> in</c>

00:40:39.349 --> 00:40:39.359 align:start position:0%
operation so this actually works out in
 

00:40:39.359 --> 00:40:40.870 align:start position:0%
operation so this actually works out in
this<00:40:39.520><c> particular</c><00:40:39.920><c> program</c><00:40:40.319><c> you</c><00:40:40.480><c> know</c><00:40:40.640><c> by</c>

00:40:40.870 --> 00:40:40.880 align:start position:0%
this particular program you know by
 

00:40:40.880 --> 00:40:41.829 align:start position:0%
this particular program you know by
itself

00:40:41.829 --> 00:40:41.839 align:start position:0%
itself
 

00:40:41.839 --> 00:40:49.109 align:start position:0%
itself
correctly<00:40:43.680><c> okay</c>

00:40:49.109 --> 00:40:49.119 align:start position:0%
 
 

00:40:49.119 --> 00:40:51.990 align:start position:0%
 
okay<00:40:49.440><c> good</c><00:40:50.560><c> any</c><00:40:51.040><c> further</c><00:40:51.359><c> questions</c><00:40:51.680><c> about</c>

00:40:51.990 --> 00:40:52.000 align:start position:0%
okay good any further questions about
 

00:40:52.000 --> 00:40:52.790 align:start position:0%
okay good any further questions about
you<00:40:52.160><c> know</c><00:40:52.319><c> these</c>

00:40:52.790 --> 00:40:52.800 align:start position:0%
you know these
 

00:40:52.800 --> 00:41:00.390 align:start position:0%
you know these
two<00:40:52.960><c> examples</c><00:40:53.440><c> just</c><00:40:53.680><c> to</c><00:40:53.839><c> do</c>

00:41:00.390 --> 00:41:00.400 align:start position:0%
 
 

00:41:00.400 --> 00:41:03.910 align:start position:0%
 
okay<00:41:00.800><c> then</c><00:41:01.359><c> let's</c><00:41:01.520><c> talk</c><00:41:01.680><c> about</c><00:41:01.839><c> the</c><00:41:02.000><c> crawler</c>

00:41:03.910 --> 00:41:03.920 align:start position:0%
okay then let's talk about the crawler
 

00:41:03.920 --> 00:41:07.910 align:start position:0%
okay then let's talk about the crawler
and<00:41:05.760><c> so</c><00:41:06.000><c> the</c><00:41:06.800><c> crawler</c><00:41:07.200><c> is</c><00:41:07.280><c> also</c><00:41:07.599><c> a</c><00:41:07.680><c> more</c>

00:41:07.910 --> 00:41:07.920 align:start position:0%
and so the crawler is also a more
 

00:41:07.920 --> 00:41:09.270 align:start position:0%
and so the crawler is also a more
realistic<00:41:08.400><c> example</c><00:41:08.800><c> of</c><00:41:08.880><c> concurrent</c>

00:41:09.270 --> 00:41:09.280 align:start position:0%
realistic example of concurrent
 

00:41:09.280 --> 00:41:14.470 align:start position:0%
realistic example of concurrent
programming

00:41:14.470 --> 00:41:14.480 align:start position:0%
 
 

00:41:14.480 --> 00:41:17.750 align:start position:0%
 
yeah<00:41:14.800><c> and</c><00:41:15.040><c> just</c><00:41:15.200><c> to</c><00:41:15.280><c> remind</c><00:41:15.520><c> you</c><00:41:16.000><c> um</c><00:41:17.280><c> uh</c>

00:41:17.750 --> 00:41:17.760 align:start position:0%
yeah and just to remind you um uh
 

00:41:17.760 --> 00:41:20.870 align:start position:0%
yeah and just to remind you um uh
you<00:41:17.920><c> know</c><00:41:18.839><c> basically</c><00:41:19.839><c> the</c><00:41:20.000><c> idea</c><00:41:20.400><c> is</c><00:41:20.560><c> that</c><00:41:20.720><c> you</c>

00:41:20.870 --> 00:41:20.880 align:start position:0%
you know basically the idea is that you
 

00:41:20.880 --> 00:41:23.030 align:start position:0%
you know basically the idea is that you
know<00:41:20.960><c> you</c><00:41:21.119><c> start</c><00:41:21.440><c> out</c><00:41:21.680><c> with</c><00:41:22.000><c> a</c><00:41:22.160><c> url</c><00:41:22.640><c> for</c><00:41:22.800><c> some</c>

00:41:23.030 --> 00:41:23.040 align:start position:0%
know you start out with a url for some
 

00:41:23.040 --> 00:41:24.150 align:start position:0%
know you start out with a url for some
web<00:41:23.200><c> page</c>

00:41:24.150 --> 00:41:24.160 align:start position:0%
web page
 

00:41:24.160 --> 00:41:26.309 align:start position:0%
web page
uh<00:41:24.560><c> you</c><00:41:24.880><c> fetch</c><00:41:25.359><c> you</c><00:41:25.440><c> know</c><00:41:25.599><c> that</c><00:41:25.760><c> just</c><00:41:25.920><c> defects</c>

00:41:26.309 --> 00:41:26.319 align:start position:0%
uh you fetch you know that just defects
 

00:41:26.319 --> 00:41:28.790 align:start position:0%
uh you fetch you know that just defects
the<00:41:26.400><c> webpage</c><00:41:26.800><c> so</c><00:41:26.960><c> it</c><00:41:27.040><c> might</c><00:41:27.200><c> have</c><00:41:27.359><c> more</c><00:41:27.599><c> urls</c>

00:41:28.790 --> 00:41:28.800 align:start position:0%
the webpage so it might have more urls
 

00:41:28.800 --> 00:41:31.030 align:start position:0%
the webpage so it might have more urls
and<00:41:29.440><c> you</c><00:41:29.520><c> basically</c><00:41:29.920><c> proceed</c><00:41:30.400><c> you</c><00:41:30.560><c> know</c><00:41:30.800><c> then</c>

00:41:31.030 --> 00:41:31.040 align:start position:0%
and you basically proceed you know then
 

00:41:31.040 --> 00:41:32.470 align:start position:0%
and you basically proceed you know then
fetching<00:41:31.359><c> those</c><00:41:31.680><c> web</c><00:41:31.839><c> pages</c>

00:41:32.470 --> 00:41:32.480 align:start position:0%
fetching those web pages
 

00:41:32.480 --> 00:41:34.150 align:start position:0%
fetching those web pages
you<00:41:32.560><c> know</c><00:41:32.720><c> looking</c><00:41:33.040><c> at</c><00:41:33.119><c> those</c><00:41:33.359><c> urls</c><00:41:33.920><c> and</c><00:41:34.079><c> you</c>

00:41:34.150 --> 00:41:34.160 align:start position:0%
you know looking at those urls and you
 

00:41:34.160 --> 00:41:35.670 align:start position:0%
you know looking at those urls and you
keep<00:41:34.319><c> going</c>

00:41:35.670 --> 00:41:35.680 align:start position:0%
keep going
 

00:41:35.680 --> 00:41:37.510 align:start position:0%
keep going
the<00:41:35.920><c> idea</c><00:41:36.160><c> is</c><00:41:36.240><c> to</c><00:41:36.400><c> crawl</c><00:41:36.720><c> basically</c><00:41:37.119><c> the</c><00:41:37.200><c> whole</c>

00:41:37.510 --> 00:41:37.520 align:start position:0%
the idea is to crawl basically the whole
 

00:41:37.520 --> 00:41:39.270 align:start position:0%
the idea is to crawl basically the whole
internet<00:41:38.160><c> you</c><00:41:38.319><c> know</c><00:41:38.400><c> for</c><00:41:38.560><c> all</c><00:41:38.720><c> the</c><00:41:38.800><c> web</c><00:41:38.960><c> pages</c>

00:41:39.270 --> 00:41:39.280 align:start position:0%
internet you know for all the web pages
 

00:41:39.280 --> 00:41:39.910 align:start position:0%
internet you know for all the web pages
that<00:41:39.520><c> are</c>

00:41:39.910 --> 00:41:39.920 align:start position:0%
that are
 

00:41:39.920 --> 00:41:42.710 align:start position:0%
that are
exist<00:41:40.880><c> and</c><00:41:41.040><c> of</c><00:41:41.119><c> course</c><00:41:41.359><c> you</c><00:41:41.440><c> know</c><00:41:41.839><c> some</c><00:41:42.240><c> urls</c>

00:41:42.710 --> 00:41:42.720 align:start position:0%
exist and of course you know some urls
 

00:41:42.720 --> 00:41:43.510 align:start position:0%
exist and of course you know some urls
might<00:41:42.880><c> point</c><00:41:43.119><c> back</c>

00:41:43.510 --> 00:41:43.520 align:start position:0%
might point back
 

00:41:43.520 --> 00:41:45.430 align:start position:0%
might point back
to<00:41:43.839><c> a</c><00:41:44.000><c> web</c><00:41:44.160><c> page</c><00:41:44.400><c> that</c><00:41:44.480><c> you</c><00:41:44.560><c> already</c><00:41:44.880><c> visited</c>

00:41:45.430 --> 00:41:45.440 align:start position:0%
to a web page that you already visited
 

00:41:45.440 --> 00:41:47.910 align:start position:0%
to a web page that you already visited
and<00:41:45.680><c> so</c><00:41:46.319><c> the</c><00:41:46.480><c> goal</c><00:41:46.800><c> is</c><00:41:46.880><c> to</c><00:41:47.040><c> actually</c><00:41:47.359><c> not</c><00:41:47.599><c> visit</c>

00:41:47.910 --> 00:41:47.920 align:start position:0%
and so the goal is to actually not visit
 

00:41:47.920 --> 00:41:48.710 align:start position:0%
and so the goal is to actually not visit
the

00:41:48.710 --> 00:41:48.720 align:start position:0%
the
 

00:41:48.720 --> 00:41:52.230 align:start position:0%
the
same<00:41:48.960><c> webpage</c><00:41:49.520><c> twice</c>

00:41:52.230 --> 00:41:52.240 align:start position:0%
 
 

00:41:52.240 --> 00:41:53.589 align:start position:0%
 
and<00:41:52.319><c> so</c><00:41:52.480><c> the</c><00:41:52.560><c> goal</c><00:41:52.720><c> of</c><00:41:52.800><c> the</c><00:41:52.960><c> exercise</c><00:41:53.440><c> is</c><00:41:53.520><c> a</c>

00:41:53.589 --> 00:41:53.599 align:start position:0%
and so the goal of the exercise is a
 

00:41:53.599 --> 00:41:56.550 align:start position:0%
and so the goal of the exercise is a
couple<00:41:53.760><c> of</c><00:41:54.240><c> goals</c><00:41:54.560><c> that</c><00:41:54.640><c> you</c><00:41:54.800><c> want</c><00:41:54.880><c> to</c><00:41:55.119><c> achieve</c>

00:41:56.550 --> 00:41:56.560 align:start position:0%
couple of goals that you want to achieve
 

00:41:56.560 --> 00:42:03.030 align:start position:0%
couple of goals that you want to achieve
one<00:41:56.880><c> is</c><00:41:57.200><c> io</c><00:42:00.839><c> concurrency</c>

00:42:03.030 --> 00:42:03.040 align:start position:0%
one is io concurrency
 

00:42:03.040 --> 00:42:05.510 align:start position:0%
one is io concurrency
the<00:42:03.200><c> defense</c><00:42:03.599><c> operation</c><00:42:04.160><c> is</c><00:42:04.319><c> uh</c><00:42:05.040><c> may</c><00:42:05.280><c> take</c><00:42:05.440><c> a</c>

00:42:05.510 --> 00:42:05.520 align:start position:0%
the defense operation is uh may take a
 

00:42:05.520 --> 00:42:07.190 align:start position:0%
the defense operation is uh may take a
long<00:42:05.760><c> time</c><00:42:06.079><c> you</c><00:42:06.160><c> know</c><00:42:06.319><c> maybe</c><00:42:06.640><c> it's</c><00:42:06.800><c> a</c>

00:42:07.190 --> 00:42:07.200 align:start position:0%
long time you know maybe it's a
 

00:42:07.200 --> 00:42:08.470 align:start position:0%
long time you know maybe it's a
web<00:42:07.359><c> page</c><00:42:07.599><c> that</c><00:42:07.680><c> sits</c><00:42:07.920><c> on</c><00:42:08.000><c> the</c><00:42:08.079><c> other</c><00:42:08.240><c> side</c><00:42:08.400><c> of</c>

00:42:08.470 --> 00:42:08.480 align:start position:0%
web page that sits on the other side of
 

00:42:08.480 --> 00:42:10.550 align:start position:0%
web page that sits on the other side of
the<00:42:08.640><c> world</c><00:42:09.040><c> your</c><00:42:09.359><c> uh</c><00:42:09.680><c> maybe</c><00:42:09.920><c> goes</c><00:42:10.160><c> over</c><00:42:10.319><c> slow</c>

00:42:10.550 --> 00:42:10.560 align:start position:0%
the world your uh maybe goes over slow
 

00:42:10.560 --> 00:42:11.349 align:start position:0%
the world your uh maybe goes over slow
networks

00:42:11.349 --> 00:42:11.359 align:start position:0%
networks
 

00:42:11.359 --> 00:42:13.190 align:start position:0%
networks
and<00:42:11.599><c> while</c><00:42:12.000><c> your</c><00:42:12.400><c> one</c><00:42:12.560><c> thread</c><00:42:12.880><c> is</c><00:42:12.960><c> sort</c><00:42:13.119><c> of</c>

00:42:13.190 --> 00:42:13.200 align:start position:0%
and while your one thread is sort of
 

00:42:13.200 --> 00:42:14.390 align:start position:0%
and while your one thread is sort of
fetching<00:42:13.520><c> that</c><00:42:13.680><c> page</c><00:42:14.000><c> you</c><00:42:14.079><c> know</c><00:42:14.160><c> you</c><00:42:14.319><c> would</c>

00:42:14.390 --> 00:42:14.400 align:start position:0%
fetching that page you know you would
 

00:42:14.400 --> 00:42:16.150 align:start position:0%
fetching that page you know you would
like<00:42:14.560><c> to</c><00:42:14.640><c> be</c><00:42:14.800><c> able</c><00:42:14.960><c> to</c><00:42:15.119><c> fetch</c><00:42:15.359><c> other</c>

00:42:16.150 --> 00:42:16.160 align:start position:0%
like to be able to fetch other
 

00:42:16.160 --> 00:42:19.349 align:start position:0%
like to be able to fetch other
uh<00:42:16.800><c> other</c><00:42:17.119><c> uh</c><00:42:17.839><c> other</c><00:42:18.000><c> pages</c>

00:42:19.349 --> 00:42:19.359 align:start position:0%
uh other uh other pages
 

00:42:19.359 --> 00:42:21.670 align:start position:0%
uh other uh other pages
another<00:42:19.680><c> goal</c><00:42:19.839><c> is</c><00:42:20.240><c> this</c><00:42:20.400><c> correctness</c><00:42:20.880><c> goal</c><00:42:21.280><c> or</c>

00:42:21.670 --> 00:42:21.680 align:start position:0%
another goal is this correctness goal or
 

00:42:21.680 --> 00:42:22.870 align:start position:0%
another goal is this correctness goal or
you<00:42:21.839><c> know</c><00:42:22.079><c> performance</c><00:42:22.560><c> goal</c>

00:42:22.870 --> 00:42:22.880 align:start position:0%
you know performance goal
 

00:42:22.880 --> 00:42:24.790 align:start position:0%
you know performance goal
namely<00:42:23.280><c> you</c><00:42:23.359><c> know</c><00:42:23.520><c> if</c><00:42:23.599><c> that's</c><00:42:23.839><c> one</c><00:42:24.480><c> affect</c>

00:42:24.790 --> 00:42:24.800 align:start position:0%
namely you know if that's one affect
 

00:42:24.800 --> 00:42:29.990 align:start position:0%
namely you know if that's one affect
your<00:42:24.880><c> url</c><00:42:28.839><c> once</c>

00:42:29.990 --> 00:42:30.000 align:start position:0%
your url once
 

00:42:30.000 --> 00:42:31.829 align:start position:0%
your url once
and<00:42:30.400><c> you</c><00:42:30.560><c> know</c><00:42:30.800><c> presumably</c><00:42:31.200><c> you'd</c><00:42:31.440><c> also</c><00:42:31.680><c> like</c>

00:42:31.829 --> 00:42:31.839 align:start position:0%
and you know presumably you'd also like
 

00:42:31.839 --> 00:42:33.109 align:start position:0%
and you know presumably you'd also like
to<00:42:31.920><c> exploit</c><00:42:32.319><c> multiple</c><00:42:32.640><c> cores</c>

00:42:33.109 --> 00:42:33.119 align:start position:0%
to exploit multiple cores
 

00:42:33.119 --> 00:42:35.190 align:start position:0%
to exploit multiple cores
you<00:42:33.200><c> know</c><00:42:33.440><c> if</c><00:42:33.520><c> you</c><00:42:33.680><c> have</c><00:42:33.839><c> multiple</c><00:42:34.240><c> course</c><00:42:35.040><c> you</c>

00:42:35.190 --> 00:42:35.200 align:start position:0%
you know if you have multiple course you
 

00:42:35.200 --> 00:42:42.230 align:start position:0%
you know if you have multiple course you
can<00:42:35.359><c> do</c><00:42:35.520><c> more</c><00:42:35.760><c> comparable</c>

00:42:42.230 --> 00:42:42.240 align:start position:0%
 
 

00:42:42.240 --> 00:42:46.309 align:start position:0%
 
okay<00:42:43.680><c> so</c><00:42:44.400><c> uh</c><00:42:45.119><c> what</c><00:42:45.359><c> i'd</c><00:42:45.440><c> like</c><00:42:45.680><c> to</c>

00:42:46.309 --> 00:42:46.319 align:start position:0%
okay so uh what i'd like to
 

00:42:46.319 --> 00:42:49.430 align:start position:0%
okay so uh what i'd like to
do<00:42:46.880><c> uh</c><00:42:47.119><c> before</c><00:42:47.520><c> actually</c><00:42:48.000><c> uh</c>

00:42:49.430 --> 00:42:49.440 align:start position:0%
do uh before actually uh
 

00:42:49.440 --> 00:42:51.109 align:start position:0%
do uh before actually uh
talking<00:42:49.760><c> about</c><00:42:49.920><c> the</c><00:42:50.079><c> current</c><00:42:50.560><c> solutions</c>

00:42:51.109 --> 00:42:51.119 align:start position:0%
talking about the current solutions
 

00:42:51.119 --> 00:42:52.790 align:start position:0%
talking about the current solutions
first<00:42:51.599><c> let</c><00:42:51.760><c> me</c><00:42:52.000><c> show</c><00:42:52.240><c> you</c>

00:42:52.790 --> 00:42:52.800 align:start position:0%
first let me show you
 

00:42:52.800 --> 00:42:55.829 align:start position:0%
first let me show you
uh<00:42:53.359><c> a</c><00:42:53.440><c> simple</c><00:42:54.079><c> serial</c><00:42:54.480><c> solution</c><00:42:55.280><c> uh</c><00:42:55.520><c> so</c><00:42:55.680><c> that</c>

00:42:55.829 --> 00:42:55.839 align:start position:0%
uh a simple serial solution uh so that
 

00:42:55.839 --> 00:42:59.030 align:start position:0%
uh a simple serial solution uh so that
we<00:42:56.839><c> uh</c>

00:42:59.030 --> 00:42:59.040 align:start position:0%
we uh
 

00:42:59.040 --> 00:43:10.829 align:start position:0%
we uh
have<00:42:59.119><c> something</c><00:42:59.440><c> to</c><00:42:59.760><c> talk</c><00:43:00.000><c> about</c><00:43:00.319><c> as</c><00:43:00.560><c> a</c>

00:43:10.829 --> 00:43:10.839 align:start position:0%
 
 

00:43:10.839 --> 00:43:12.150 align:start position:0%
 
baseline

00:43:12.150 --> 00:43:12.160 align:start position:0%
baseline
 

00:43:12.160 --> 00:43:14.710 align:start position:0%
baseline
so<00:43:12.640><c> uh</c><00:43:13.200><c> something</c><00:43:13.520><c> i</c><00:43:13.760><c> have</c><00:43:13.839><c> free</c><00:43:14.000><c> solutions</c><00:43:14.560><c> in</c>

00:43:14.710 --> 00:43:14.720 align:start position:0%
so uh something i have free solutions in
 

00:43:14.720 --> 00:43:15.190 align:start position:0%
so uh something i have free solutions in
here

00:43:15.190 --> 00:43:15.200 align:start position:0%
here
 

00:43:15.200 --> 00:43:18.950 align:start position:0%
here
so<00:43:15.359><c> you</c><00:43:15.520><c> just</c>

00:43:18.950 --> 00:43:18.960 align:start position:0%
 
 

00:43:18.960 --> 00:43:27.349 align:start position:0%
 
run<00:43:19.200><c> them</c><00:43:20.960><c> go</c><00:43:24.839><c> run</c><00:43:25.920><c> a</c><00:43:26.160><c> serial</c><00:43:26.560><c> solution</c>

00:43:27.349 --> 00:43:27.359 align:start position:0%
run them go run a serial solution
 

00:43:27.359 --> 00:43:29.349 align:start position:0%
run them go run a serial solution
one<00:43:27.599><c> with</c><00:43:27.760><c> mutexes</c><00:43:28.240><c> and</c><00:43:28.319><c> one</c><00:43:28.480><c> with</c><00:43:28.720><c> channels</c>

00:43:29.349 --> 00:43:29.359 align:start position:0%
one with mutexes and one with channels
 

00:43:29.359 --> 00:43:31.990 align:start position:0%
one with mutexes and one with channels
uh<00:43:29.920><c> you</c><00:43:30.079><c> know</c><00:43:30.240><c> you</c><00:43:30.400><c> see</c><00:43:30.720><c> that</c>

00:43:31.990 --> 00:43:32.000 align:start position:0%
uh you know you see that
 

00:43:32.000 --> 00:43:33.270 align:start position:0%
uh you know you see that
more<00:43:32.240><c> or</c><00:43:32.319><c> less</c><00:43:32.480><c> they</c><00:43:32.640><c> produce</c><00:43:32.960><c> the</c><00:43:33.040><c> same</c>

00:43:33.270 --> 00:43:33.280 align:start position:0%
more or less they produce the same
 

00:43:33.280 --> 00:43:35.190 align:start position:0%
more or less they produce the same
result<00:43:33.760><c> you</c><00:43:33.839><c> know</c><00:43:34.000><c> two</c><00:43:34.240><c> found</c><00:43:34.640><c> one</c><00:43:34.800><c> missing</c>

00:43:35.190 --> 00:43:35.200 align:start position:0%
result you know two found one missing
 

00:43:35.200 --> 00:43:36.550 align:start position:0%
result you know two found one missing
two<00:43:35.440><c> found</c>

00:43:36.550 --> 00:43:36.560 align:start position:0%
two found
 

00:43:36.560 --> 00:43:38.150 align:start position:0%
two found
the<00:43:36.640><c> only</c><00:43:36.880><c> difference</c><00:43:37.200><c> is</c><00:43:37.280><c> that</c><00:43:37.599><c> the</c><00:43:37.760><c> order</c><00:43:38.079><c> of</c>

00:43:38.150 --> 00:43:38.160 align:start position:0%
the only difference is that the order of
 

00:43:38.160 --> 00:43:39.510 align:start position:0%
the only difference is that the order of
the<00:43:38.240><c> output</c><00:43:38.560><c> is</c><00:43:38.720><c> slightly</c><00:43:39.040><c> different</c><00:43:39.280><c> once</c><00:43:39.440><c> in</c>

00:43:39.510 --> 00:43:39.520 align:start position:0%
the output is slightly different once in
 

00:43:39.520 --> 00:43:41.109 align:start position:0%
the output is slightly different once in
a<00:43:39.599><c> while</c><00:43:39.839><c> and</c><00:43:40.000><c> of</c><00:43:40.079><c> course</c><00:43:40.319><c> it</c><00:43:40.480><c> has</c><00:43:40.560><c> to</c><00:43:40.800><c> do</c><00:43:40.960><c> with</c>

00:43:41.109 --> 00:43:41.119 align:start position:0%
a while and of course it has to do with
 

00:43:41.119 --> 00:43:43.750 align:start position:0%
a while and of course it has to do with
concurrency

00:43:43.750 --> 00:43:43.760 align:start position:0%
 
 

00:43:43.760 --> 00:43:47.829 align:start position:0%
 
okay<00:43:44.079><c> so</c><00:43:45.280><c> the</c><00:43:45.359><c> main</c><00:43:45.680><c> function</c>

00:43:47.829 --> 00:43:47.839 align:start position:0%
okay so the main function
 

00:43:47.839 --> 00:43:50.710 align:start position:0%
okay so the main function
calls<00:43:48.319><c> in</c><00:43:48.640><c> serial</c><00:43:49.119><c> with</c><00:43:49.440><c> the</c><00:43:49.680><c> starting</c><00:43:50.079><c> url</c>

00:43:50.710 --> 00:43:50.720 align:start position:0%
calls in serial with the starting url
 

00:43:50.720 --> 00:43:51.589 align:start position:0%
calls in serial with the starting url
the<00:43:50.880><c> fetcher</c>

00:43:51.589 --> 00:43:51.599 align:start position:0%
the fetcher
 

00:43:51.599 --> 00:43:55.030 align:start position:0%
the fetcher
and<00:43:51.839><c> then</c><00:43:52.160><c> an</c><00:43:52.319><c> empty</c><00:43:52.839><c> map</c><00:43:54.240><c> and</c><00:43:54.480><c> then</c>

00:43:55.030 --> 00:43:55.040 align:start position:0%
and then an empty map and then
 

00:43:55.040 --> 00:43:56.790 align:start position:0%
and then an empty map and then
the<00:43:55.200><c> serial</c><00:43:55.599><c> solution</c><00:43:56.079><c> is</c><00:43:56.240><c> basically</c><00:43:56.560><c> a</c><00:43:56.640><c> sort</c>

00:43:56.790 --> 00:43:56.800 align:start position:0%
the serial solution is basically a sort
 

00:43:56.800 --> 00:43:58.390 align:start position:0%
the serial solution is basically a sort
of<00:43:56.960><c> standard</c>

00:43:58.390 --> 00:43:58.400 align:start position:0%
of standard
 

00:43:58.400 --> 00:44:01.510 align:start position:0%
of standard
sequential<00:43:59.520><c> recursive</c><00:44:00.000><c> solution</c><00:44:01.359><c> we'll</c>

00:44:01.510 --> 00:44:01.520 align:start position:0%
sequential recursive solution we'll
 

00:44:01.520 --> 00:44:02.150 align:start position:0%
sequential recursive solution we'll
first<00:44:01.760><c> check</c>

00:44:02.150 --> 00:44:02.160 align:start position:0%
first check
 

00:44:02.160 --> 00:44:03.910 align:start position:0%
first check
if<00:44:02.319><c> we</c><00:44:02.480><c> already</c><00:44:02.800><c> visited</c><00:44:03.200><c> the</c><00:44:03.280><c> url</c><00:44:03.680><c> that's</c>

00:44:03.910 --> 00:44:03.920 align:start position:0%
if we already visited the url that's
 

00:44:03.920 --> 00:44:05.589 align:start position:0%
if we already visited the url that's
passed<00:44:04.240><c> into</c><00:44:04.560><c> us</c>

00:44:05.589 --> 00:44:05.599 align:start position:0%
passed into us
 

00:44:05.599 --> 00:44:07.030 align:start position:0%
passed into us
if<00:44:05.680><c> we</c><00:44:05.839><c> did</c><00:44:06.000><c> then</c><00:44:06.160><c> we</c><00:44:06.319><c> returned</c><00:44:06.560><c> immediately</c>

00:44:07.030 --> 00:44:07.040 align:start position:0%
if we did then we returned immediately
 

00:44:07.040 --> 00:44:08.950 align:start position:0%
if we did then we returned immediately
otherwise<00:44:07.520><c> we</c><00:44:07.680><c> mark</c><00:44:07.920><c> it</c><00:44:08.000><c> as</c><00:44:08.160><c> visit</c>

00:44:08.950 --> 00:44:08.960 align:start position:0%
otherwise we mark it as visit
 

00:44:08.960 --> 00:44:10.710 align:start position:0%
otherwise we mark it as visit
we'll<00:44:09.200><c> fetch</c><00:44:09.440><c> the</c><00:44:09.520><c> url</c><00:44:10.160><c> that</c><00:44:10.319><c> gives</c><00:44:10.480><c> us</c><00:44:10.640><c> a</c>

00:44:10.710 --> 00:44:10.720 align:start position:0%
we'll fetch the url that gives us a
 

00:44:10.720 --> 00:44:12.390 align:start position:0%
we'll fetch the url that gives us a
bunch<00:44:10.880><c> of</c><00:44:10.960><c> new</c><00:44:11.200><c> urls</c>

00:44:12.390 --> 00:44:12.400 align:start position:0%
bunch of new urls
 

00:44:12.400 --> 00:44:14.790 align:start position:0%
bunch of new urls
uh<00:44:12.640><c> we</c><00:44:12.960><c> look</c><00:44:13.119><c> through</c><00:44:13.359><c> all</c><00:44:13.440><c> the</c><00:44:13.599><c> urls</c><00:44:14.400><c> and</c><00:44:14.560><c> call</c>

00:44:14.790 --> 00:44:14.800 align:start position:0%
uh we look through all the urls and call
 

00:44:14.800 --> 00:44:15.589 align:start position:0%
uh we look through all the urls and call
basically<00:44:15.200><c> zero</c>

00:44:15.589 --> 00:44:15.599 align:start position:0%
basically zero
 

00:44:15.599 --> 00:44:17.349 align:start position:0%
basically zero
again<00:44:16.000><c> right</c><00:44:16.319><c> and</c><00:44:16.400><c> this</c><00:44:16.560><c> is</c><00:44:16.640><c> your</c><00:44:16.880><c> sequential</c>

00:44:17.349 --> 00:44:17.359 align:start position:0%
again right and this is your sequential
 

00:44:17.359 --> 00:44:19.670 align:start position:0%
again right and this is your sequential
solution<00:44:17.920><c> actually</c><00:44:18.160><c> what</c><00:44:18.400><c> i</c><00:44:18.560><c> expected</c>

00:44:19.670 --> 00:44:19.680 align:start position:0%
solution actually what i expected
 

00:44:19.680 --> 00:44:21.750 align:start position:0%
solution actually what i expected
and<00:44:20.000><c> you</c><00:44:20.160><c> know</c><00:44:20.319><c> your</c><00:44:20.480><c> goal</c><00:44:20.720><c> was</c><00:44:20.880><c> to</c><00:44:21.040><c> basically</c>

00:44:21.750 --> 00:44:21.760 align:start position:0%
and you know your goal was to basically
 

00:44:21.760 --> 00:44:24.069 align:start position:0%
and you know your goal was to basically
write<00:44:21.920><c> a</c><00:44:22.079><c> current</c><00:44:22.480><c> version</c><00:44:22.800><c> of</c><00:44:22.880><c> this</c>

00:44:24.069 --> 00:44:24.079 align:start position:0%
write a current version of this
 

00:44:24.079 --> 00:44:27.589 align:start position:0%
write a current version of this
um<00:44:24.800><c> and</c><00:44:24.960><c> so</c><00:44:25.599><c> uh</c><00:44:27.040><c> uh</c>

00:44:27.589 --> 00:44:27.599 align:start position:0%
um and so uh uh
 

00:44:27.599 --> 00:44:28.870 align:start position:0%
um and so uh uh
what<00:44:27.760><c> i</c><00:44:27.839><c> like</c><00:44:28.000><c> to</c><00:44:28.079><c> do</c><00:44:28.240><c> is</c><00:44:28.319><c> actually</c><00:44:28.640><c> to</c><00:44:28.720><c> make</c>

00:44:28.870 --> 00:44:28.880 align:start position:0%
what i like to do is actually to make
 

00:44:28.880 --> 00:44:30.710 align:start position:0%
what i like to do is actually to make
the<00:44:28.960><c> class</c><00:44:29.200><c> a</c><00:44:29.280><c> little</c><00:44:29.440><c> bit</c><00:44:29.599><c> interactive</c><00:44:30.240><c> uh</c><00:44:30.560><c> i</c>

00:44:30.710 --> 00:44:30.720 align:start position:0%
the class a little bit interactive uh i
 

00:44:30.720 --> 00:44:32.790 align:start position:0%
the class a little bit interactive uh i
want<00:44:30.880><c> to</c><00:44:30.960><c> go</c><00:44:31.200><c> switch</c><00:44:31.520><c> over</c><00:44:31.680><c> to</c><00:44:31.839><c> breakout</c><00:44:32.240><c> rooms</c>

00:44:32.790 --> 00:44:32.800 align:start position:0%
want to go switch over to breakout rooms
 

00:44:32.800 --> 00:44:35.510 align:start position:0%
want to go switch over to breakout rooms
and<00:44:33.359><c> what</c><00:44:33.520><c> we're</c><00:44:33.680><c> going</c><00:44:33.680><c> to</c><00:44:33.760><c> do</c><00:44:33.920><c> is</c><00:44:34.079><c> basically</c>

00:44:35.510 --> 00:44:35.520 align:start position:0%
and what we're going to do is basically
 

00:44:35.520 --> 00:44:36.550 align:start position:0%
and what we're going to do is basically
put

00:44:36.550 --> 00:44:36.560 align:start position:0%
put
 

00:44:36.560 --> 00:44:38.950 align:start position:0%
put
four<00:44:36.960><c> to</c><00:44:37.119><c> five</c><00:44:37.680><c> of</c><00:44:37.920><c> you</c><00:44:38.079><c> in</c><00:44:38.240><c> a</c><00:44:38.319><c> single</c><00:44:38.560><c> breakout</c>

00:44:38.950 --> 00:44:38.960 align:start position:0%
four to five of you in a single breakout
 

00:44:38.960 --> 00:44:39.910 align:start position:0%
four to five of you in a single breakout
room

00:44:39.910 --> 00:44:39.920 align:start position:0%
room
 

00:44:39.920 --> 00:44:42.309 align:start position:0%
room
for<00:44:40.160><c> about</c><00:44:40.480><c> 10</c><00:44:40.640><c> minutes</c><00:44:41.520><c> and</c><00:44:41.920><c> i</c><00:44:42.000><c> would</c><00:44:42.160><c> like</c>

00:44:42.309 --> 00:44:42.319 align:start position:0%
for about 10 minutes and i would like
 

00:44:42.319 --> 00:44:43.589 align:start position:0%
for about 10 minutes and i would like
you<00:44:42.480><c> to</c><00:44:42.640><c> do</c><00:44:42.880><c> is</c>

00:44:43.589 --> 00:44:43.599 align:start position:0%
you to do is
 

00:44:43.599 --> 00:44:45.270 align:start position:0%
you to do is
share<00:44:43.839><c> your</c><00:44:44.000><c> solution</c><00:44:44.720><c> with</c><00:44:44.880><c> each</c><00:44:45.040><c> other</c><00:44:45.200><c> and</c>

00:44:45.270 --> 00:44:45.280 align:start position:0%
share your solution with each other and
 

00:44:45.280 --> 00:44:46.870 align:start position:0%
share your solution with each other and
discuss<00:44:45.680><c> it</c><00:44:46.160><c> so</c><00:44:46.319><c> maybe</c>

00:44:46.870 --> 00:44:46.880 align:start position:0%
discuss it so maybe
 

00:44:46.880 --> 00:44:49.589 align:start position:0%
discuss it so maybe
the<00:44:47.599><c> best</c><00:44:47.760><c> way</c><00:44:47.920><c> to</c><00:44:48.000><c> go</c><00:44:48.160><c> about</c><00:44:48.480><c> it</c><00:44:48.640><c> is</c><00:44:48.800><c> that</c><00:44:49.440><c> one</c>

00:44:49.589 --> 00:44:49.599 align:start position:0%
the best way to go about it is that one
 

00:44:49.599 --> 00:44:50.309 align:start position:0%
the best way to go about it is that one
of<00:44:49.760><c> you</c>

00:44:50.309 --> 00:44:50.319 align:start position:0%
of you
 

00:44:50.319 --> 00:44:52.470 align:start position:0%
of you
you<00:44:50.480><c> know</c><00:44:50.960><c> you</c><00:44:51.040><c> get</c><00:44:51.200><c> into</c><00:44:51.440><c> the</c><00:44:51.599><c> room</c><00:44:52.240><c> one</c><00:44:52.400><c> of</c>

00:44:52.470 --> 00:44:52.480 align:start position:0%
you know you get into the room one of
 

00:44:52.480 --> 00:44:53.510 align:start position:0%
you know you get into the room one of
the<00:44:52.560><c> persons</c><00:44:52.960><c> in</c><00:44:53.040><c> the</c><00:44:53.200><c> room</c>

00:44:53.510 --> 00:44:53.520 align:start position:0%
the persons in the room
 

00:44:53.520 --> 00:44:55.349 align:start position:0%
the persons in the room
you<00:44:53.599><c> know</c><00:44:53.760><c> basically</c><00:44:54.160><c> screen</c><00:44:54.560><c> shares</c><00:44:55.119><c> their</c>

00:44:55.349 --> 00:44:55.359 align:start position:0%
you know basically screen shares their
 

00:44:55.359 --> 00:44:58.069 align:start position:0%
you know basically screen shares their
solution<00:44:56.400><c> and</c><00:44:56.800><c> discusses</c><00:44:57.359><c> you</c><00:44:57.440><c> know</c><00:44:57.599><c> one</c><00:44:57.839><c> the</c>

00:44:58.069 --> 00:44:58.079 align:start position:0%
solution and discusses you know one the
 

00:44:58.079 --> 00:44:59.990 align:start position:0%
solution and discusses you know one the
issues<00:44:58.480><c> that</c><00:44:58.800><c> he</c><00:44:58.960><c> or</c><00:44:59.119><c> she</c><00:44:59.359><c> ran</c><00:44:59.599><c> into</c>

00:44:59.990 --> 00:45:00.000 align:start position:0%
issues that he or she ran into
 

00:45:00.000 --> 00:45:01.750 align:start position:0%
issues that he or she ran into
and<00:45:00.160><c> other</c><00:45:00.400><c> people</c><00:45:00.640><c> can</c><00:45:00.800><c> comment</c><00:45:01.200><c> or</c><00:45:01.440><c> share</c>

00:45:01.750 --> 00:45:01.760 align:start position:0%
and other people can comment or share
 

00:45:01.760 --> 00:45:03.829 align:start position:0%
and other people can comment or share
other<00:45:01.920><c> solutions</c><00:45:02.880><c> and</c><00:45:03.119><c> just</c><00:45:03.280><c> to</c><00:45:03.359><c> get</c><00:45:03.520><c> into</c><00:45:03.760><c> the</c>

00:45:03.829 --> 00:45:03.839 align:start position:0%
other solutions and just to get into the
 

00:45:03.839 --> 00:45:05.109 align:start position:0%
other solutions and just to get into the
discussion<00:45:04.240><c> and</c><00:45:04.319><c> meet</c><00:45:04.480><c> some</c><00:45:04.640><c> other</c><00:45:04.800><c> students</c>

00:45:05.109 --> 00:45:05.119 align:start position:0%
discussion and meet some other students
 

00:45:05.119 --> 00:45:07.349 align:start position:0%
discussion and meet some other students
in<00:45:05.200><c> the</c><00:45:05.280><c> class</c>

00:45:07.349 --> 00:45:07.359 align:start position:0%
in the class
 

00:45:07.359 --> 00:45:11.589 align:start position:0%
in the class
any<00:45:07.599><c> questions</c><00:45:07.920><c> about</c><00:45:08.160><c> that</c>

00:45:11.589 --> 00:45:11.599 align:start position:0%
 
 

00:45:11.599 --> 00:45:15.510 align:start position:0%
 
okay<00:45:12.079><c> good</c><00:45:12.560><c> uh</c><00:45:13.040><c> let</c><00:45:13.200><c> me</c><00:45:13.359><c> go</c><00:45:13.599><c> back</c><00:45:13.839><c> to</c>

00:45:15.510 --> 00:45:15.520 align:start position:0%
okay good uh let me go back to
 

00:45:15.520 --> 00:45:17.750 align:start position:0%
okay good uh let me go back to
sharing<00:45:15.839><c> my</c><00:45:16.000><c> screen</c><00:45:16.240><c> again</c><00:45:17.280><c> can</c><00:45:17.440><c> everybody</c>

00:45:17.750 --> 00:45:17.760 align:start position:0%
sharing my screen again can everybody
 

00:45:17.760 --> 00:45:21.510 align:start position:0%
sharing my screen again can everybody
see<00:45:17.920><c> my</c><00:45:18.319><c> screen</c><00:45:18.560><c> again</c>

00:45:21.510 --> 00:45:21.520 align:start position:0%
 
 

00:45:21.520 --> 00:45:29.109 align:start position:0%
 
yep<00:45:21.839><c> looks</c><00:45:22.079><c> good</c><00:45:22.960><c> good</c><00:45:23.200><c> good</c><00:45:23.599><c> thank</c><00:45:23.760><c> you</c>

00:45:29.109 --> 00:45:29.119 align:start position:0%
 
 

00:45:29.119 --> 00:45:32.069 align:start position:0%
 
okay<00:45:29.359><c> so</c><00:45:30.480><c> hopefully</c><00:45:30.960><c> that</c><00:45:31.119><c> was</c><00:45:31.280><c> interesting</c>

00:45:32.069 --> 00:45:32.079 align:start position:0%
okay so hopefully that was interesting
 

00:45:32.079 --> 00:45:33.030 align:start position:0%
okay so hopefully that was interesting
um

00:45:33.030 --> 00:45:33.040 align:start position:0%
um
 

00:45:33.040 --> 00:45:35.750 align:start position:0%
um
and<00:45:33.680><c> let</c><00:45:33.839><c> me</c><00:45:34.160><c> you</c><00:45:34.319><c> know</c><00:45:34.720><c> talk</c><00:45:34.960><c> about</c><00:45:35.359><c> you</c><00:45:35.520><c> know</c>

00:45:35.750 --> 00:45:35.760 align:start position:0%
and let me you know talk about you know
 

00:45:35.760 --> 00:45:36.309 align:start position:0%
and let me you know talk about you know
the

00:45:36.309 --> 00:45:36.319 align:start position:0%
the
 

00:45:36.319 --> 00:45:39.349 align:start position:0%
the
solutions<00:45:36.800><c> that</c><00:45:36.960><c> i</c><00:45:37.200><c> have</c><00:45:38.240><c> uh</c><00:45:38.400><c> they're</c><00:45:38.960><c> posted</c>

00:45:39.349 --> 00:45:39.359 align:start position:0%
solutions that i have uh they're posted
 

00:45:39.359 --> 00:45:40.230 align:start position:0%
solutions that i have uh they're posted
on<00:45:39.440><c> the</c><00:45:39.520><c> schedule</c><00:45:39.839><c> page</c>

00:45:40.230 --> 00:45:40.240 align:start position:0%
on the schedule page
 

00:45:40.240 --> 00:45:43.750 align:start position:0%
on the schedule page
if<00:45:40.319><c> you</c><00:45:40.480><c> haven't</c><00:45:40.880><c> uh</c><00:45:42.079><c> uh</c><00:45:42.880><c> you</c><00:45:43.040><c> can</c><00:45:43.200><c> look</c>

00:45:43.750 --> 00:45:43.760 align:start position:0%
if you haven't uh uh you can look
 

00:45:43.760 --> 00:45:46.710 align:start position:0%
if you haven't uh uh you can look
uh<00:45:44.160><c> concurrently</c><00:45:44.880><c> with</c><00:45:45.040><c> me</c><00:45:45.200><c> if</c><00:45:45.280><c> you</c><00:45:45.359><c> want</c><00:45:45.520><c> to</c>

00:45:46.710 --> 00:45:46.720 align:start position:0%
uh concurrently with me if you want to
 

00:45:46.720 --> 00:45:47.910 align:start position:0%
uh concurrently with me if you want to
um

00:45:47.910 --> 00:45:47.920 align:start position:0%
um
 

00:45:47.920 --> 00:45:49.510 align:start position:0%
um
there<00:45:48.079><c> should</c><00:45:48.640><c> you</c><00:45:48.800><c> know</c><00:45:48.960><c> let</c><00:45:49.119><c> me</c><00:45:49.280><c> walk</c>

00:45:49.510 --> 00:45:49.520 align:start position:0%
there should you know let me walk
 

00:45:49.520 --> 00:45:50.950 align:start position:0%
there should you know let me walk
through<00:45:49.680><c> the</c>

00:45:50.950 --> 00:45:50.960 align:start position:0%
through the
 

00:45:50.960 --> 00:45:52.230 align:start position:0%
through the
new<00:45:51.119><c> text</c><00:45:51.359><c> version</c><00:45:51.680><c> first</c><00:45:51.920><c> and</c><00:45:52.000><c> then</c><00:45:52.160><c> i'll</c>

00:45:52.230 --> 00:45:52.240 align:start position:0%
new text version first and then i'll
 

00:45:52.240 --> 00:45:54.470 align:start position:0%
new text version first and then i'll
walk<00:45:52.480><c> through</c><00:45:52.720><c> the</c>

00:45:54.470 --> 00:45:54.480 align:start position:0%
walk through the
 

00:45:54.480 --> 00:45:59.030 align:start position:0%
walk through the
channel<00:45:54.800><c> one</c><00:45:55.599><c> second</c><00:45:56.400><c> uh</c><00:45:57.280><c> so</c><00:45:57.520><c> here's</c><00:45:57.839><c> the</c>

00:45:59.030 --> 00:45:59.040 align:start position:0%
channel one second uh so here's the
 

00:45:59.040 --> 00:46:01.829 align:start position:0%
channel one second uh so here's the
the<00:46:00.000><c> mutex</c><00:46:00.400><c> one</c><00:46:00.560><c> the</c><00:46:00.640><c> mutex</c><00:46:01.040><c> one</c><00:46:01.440><c> uh</c>

00:46:01.829 --> 00:46:01.839 align:start position:0%
the mutex one the mutex one uh
 

00:46:01.839 --> 00:46:03.109 align:start position:0%
the mutex one the mutex one uh
declaration<00:46:02.560><c> struct</c>

00:46:03.109 --> 00:46:03.119 align:start position:0%
declaration struct
 

00:46:03.119 --> 00:46:04.790 align:start position:0%
declaration struct
you<00:46:03.200><c> know</c><00:46:03.359><c> with</c><00:46:03.680><c> that</c><00:46:03.839><c> has</c><00:46:04.160><c> both</c><00:46:04.400><c> the</c><00:46:04.480><c> map</c><00:46:04.720><c> and</c>

00:46:04.790 --> 00:46:04.800 align:start position:0%
you know with that has both the map and
 

00:46:04.800 --> 00:46:06.470 align:start position:0%
you know with that has both the map and
the<00:46:04.960><c> mutex</c><00:46:05.599><c> and</c>

00:46:06.470 --> 00:46:06.480 align:start position:0%
the mutex and
 

00:46:06.480 --> 00:46:08.470 align:start position:0%
the mutex and
the<00:46:06.880><c> map</c><00:46:07.119><c> needs</c><00:46:07.280><c> to</c><00:46:07.440><c> be</c><00:46:07.520><c> protected</c><00:46:07.839><c> by</c><00:46:08.079><c> mutex</c>

00:46:08.470 --> 00:46:08.480 align:start position:0%
the map needs to be protected by mutex
 

00:46:08.480 --> 00:46:09.670 align:start position:0%
the map needs to be protected by mutex
because<00:46:08.720><c> there's</c><00:46:08.960><c> gonna</c><00:46:09.119><c> be</c><00:46:09.200><c> concurrent</c>

00:46:09.670 --> 00:46:09.680 align:start position:0%
because there's gonna be concurrent
 

00:46:09.680 --> 00:46:11.349 align:start position:0%
because there's gonna be concurrent
access<00:46:10.000><c> to</c><00:46:10.079><c> the</c><00:46:10.240><c> map</c>

00:46:11.349 --> 00:46:11.359 align:start position:0%
access to the map
 

00:46:11.359 --> 00:46:13.349 align:start position:0%
access to the map
so<00:46:11.599><c> map</c><00:46:11.760><c> by</c><00:46:11.920><c> itself</c><00:46:12.319><c> is</c><00:46:12.400><c> not</c><00:46:12.560><c> fred</c><00:46:12.880><c> say</c><00:46:13.119><c> it's</c><00:46:13.280><c> up</c>

00:46:13.349 --> 00:46:13.359 align:start position:0%
so map by itself is not fred say it's up
 

00:46:13.359 --> 00:46:15.270 align:start position:0%
so map by itself is not fred say it's up
to<00:46:13.520><c> the</c><00:46:13.599><c> programmer</c><00:46:14.079><c> to</c><00:46:14.160><c> actually</c><00:46:14.400><c> make</c><00:46:14.560><c> the</c>

00:46:15.270 --> 00:46:15.280 align:start position:0%
to the programmer to actually make the
 

00:46:15.280 --> 00:46:18.630 align:start position:0%
to the programmer to actually make the
map<00:46:15.520><c> fret</c><00:46:15.839><c> safe</c><00:46:17.200><c> and</c><00:46:17.280><c> the</c><00:46:17.359><c> control</c><00:46:18.000><c> mutex</c><00:46:18.480><c> one</c>

00:46:18.630 --> 00:46:18.640 align:start position:0%
map fret safe and the control mutex one
 

00:46:18.640 --> 00:46:20.630 align:start position:0%
map fret safe and the control mutex one
works<00:46:18.960><c> sort</c><00:46:19.119><c> of</c><00:46:19.200><c> similar</c><00:46:19.520><c> to</c><00:46:19.680><c> the</c><00:46:19.839><c> serial</c><00:46:20.319><c> one</c>

00:46:20.630 --> 00:46:20.640 align:start position:0%
works sort of similar to the serial one
 

00:46:20.640 --> 00:46:22.309 align:start position:0%
works sort of similar to the serial one
except<00:46:20.880><c> for</c><00:46:21.119><c> whenever</c><00:46:21.440><c> their</c><00:46:21.599><c> start</c><00:46:22.000><c> stage</c>

00:46:22.309 --> 00:46:22.319 align:start position:0%
except for whenever their start stage
 

00:46:22.319 --> 00:46:24.069 align:start position:0%
except for whenever their start stage
basically<00:46:22.640><c> takes</c><00:46:22.880><c> a</c><00:46:22.960><c> walk</c><00:46:23.280><c> out</c><00:46:23.520><c> now</c><00:46:23.760><c> so</c><00:46:23.920><c> we'll</c>

00:46:24.069 --> 00:46:24.079 align:start position:0%
basically takes a walk out now so we'll
 

00:46:24.079 --> 00:46:25.990 align:start position:0%
basically takes a walk out now so we'll
take<00:46:24.319><c> the</c><00:46:24.400><c> lock</c><00:46:24.800><c> you</c><00:46:24.960><c> know</c><00:46:25.040><c> we</c><00:46:25.200><c> look</c><00:46:25.440><c> at</c><00:46:25.520><c> the</c>

00:46:25.990 --> 00:46:26.000 align:start position:0%
take the lock you know we look at the
 

00:46:26.000 --> 00:46:28.230 align:start position:0%
take the lock you know we look at the
if<00:46:26.160><c> the</c><00:46:26.480><c> url</c><00:46:26.880><c> already</c><00:46:27.200><c> has</c><00:46:27.280><c> been</c><00:46:27.440><c> fetched</c><00:46:28.079><c> if</c>

00:46:28.230 --> 00:46:28.240 align:start position:0%
if the url already has been fetched if
 

00:46:28.240 --> 00:46:29.030 align:start position:0%
if the url already has been fetched if
it<00:46:28.319><c> hasn't</c><00:46:28.560><c> been</c><00:46:28.720><c> fed</c>

00:46:29.030 --> 00:46:29.040 align:start position:0%
it hasn't been fed
 

00:46:29.040 --> 00:46:31.270 align:start position:0%
it hasn't been fed
the<00:46:29.119><c> market</c><00:46:29.440><c> has</c><00:46:29.680><c> now</c><00:46:29.920><c> been</c><00:46:30.160><c> fetched</c><00:46:31.119><c> or</c>

00:46:31.270 --> 00:46:31.280 align:start position:0%
the market has now been fetched or
 

00:46:31.280 --> 00:46:33.990 align:start position:0%
the market has now been fetched or
hasn't<00:46:31.599><c> been</c><00:46:31.839><c> fetched</c><00:46:32.240><c> and</c><00:46:32.400><c> we're</c><00:46:32.640><c> in</c><00:46:32.800><c> lock</c>

00:46:33.990 --> 00:46:34.000 align:start position:0%
hasn't been fetched and we're in lock
 

00:46:34.000 --> 00:46:35.990 align:start position:0%
hasn't been fetched and we're in lock
and<00:46:34.560><c> we</c><00:46:34.800><c> kept</c><00:46:35.040><c> this</c><00:46:35.200><c> already</c><00:46:35.520><c> valued</c><00:46:35.839><c> to</c>

00:46:35.990 --> 00:46:36.000 align:start position:0%
and we kept this already valued to
 

00:46:36.000 --> 00:46:38.470 align:start position:0%
and we kept this already valued to
decide<00:46:36.240><c> whether</c><00:46:36.480><c> we</c><00:46:36.560><c> should</c><00:46:36.720><c> return</c><00:46:37.119><c> or</c><00:46:37.200><c> not</c>

00:46:38.470 --> 00:46:38.480 align:start position:0%
decide whether we should return or not
 

00:46:38.480 --> 00:46:41.910 align:start position:0%
decide whether we should return or not
and<00:46:38.560><c> then</c><00:46:39.440><c> uh</c><00:46:40.079><c> you</c><00:46:40.240><c> know</c><00:46:40.319><c> we</c><00:46:40.960><c> this</c><00:46:41.200><c> go</c><00:46:41.359><c> routine</c>

00:46:41.910 --> 00:46:41.920 align:start position:0%
and then uh you know we this go routine
 

00:46:41.920 --> 00:46:44.870 align:start position:0%
and then uh you know we this go routine
starts<00:46:42.319><c> fetching</c><00:46:43.040><c> uh</c><00:46:44.160><c> a</c><00:46:44.319><c> page</c><00:46:44.640><c> it</c><00:46:44.720><c> gets</c><00:46:44.800><c> a</c>

00:46:44.870 --> 00:46:44.880 align:start position:0%
starts fetching uh a page it gets a
 

00:46:44.880 --> 00:46:46.470 align:start position:0%
starts fetching uh a page it gets a
bunch<00:46:45.040><c> of</c><00:46:45.200><c> urls</c><00:46:45.680><c> back</c>

00:46:46.470 --> 00:46:46.480 align:start position:0%
bunch of urls back
 

00:46:46.480 --> 00:46:50.069 align:start position:0%
bunch of urls back
and<00:46:46.560><c> then</c><00:46:46.800><c> for</c><00:46:47.040><c> every</c><00:46:47.599><c> uh</c><00:46:47.839><c> url</c><00:46:48.400><c> back</c><00:46:49.359><c> uh</c>

00:46:50.069 --> 00:46:50.079 align:start position:0%
and then for every uh url back uh
 

00:46:50.079 --> 00:46:52.470 align:start position:0%
and then for every uh url back uh
it<00:46:50.480><c> creates</c><00:46:50.800><c> a</c><00:46:50.880><c> new</c><00:46:51.280><c> go</c><00:46:51.520><c> routine</c><00:46:51.920><c> here</c><00:46:52.240><c> on</c><00:46:52.319><c> this</c>

00:46:52.470 --> 00:46:52.480 align:start position:0%
it creates a new go routine here on this
 

00:46:52.480 --> 00:46:53.430 align:start position:0%
it creates a new go routine here on this
side

00:46:53.430 --> 00:46:53.440 align:start position:0%
side
 

00:46:53.440 --> 00:46:55.910 align:start position:0%
side
uh<00:46:54.079><c> passes</c><00:46:54.560><c> in</c><00:46:54.720><c> the</c><00:46:54.880><c> url</c><00:46:55.359><c> that</c><00:46:55.359><c> that</c><00:46:55.680><c> go</c>

00:46:55.910 --> 00:46:55.920 align:start position:0%
uh passes in the url that that go
 

00:46:55.920 --> 00:46:57.430 align:start position:0%
uh passes in the url that that go
routine<00:46:56.400><c> is</c><00:46:56.560><c> supposed</c><00:46:56.880><c> to</c>

00:46:57.430 --> 00:46:57.440 align:start position:0%
routine is supposed to
 

00:46:57.440 --> 00:47:00.550 align:start position:0%
routine is supposed to
fetch<00:46:57.920><c> and</c><00:46:58.240><c> crawl</c><00:47:00.079><c> uh</c>

00:47:00.550 --> 00:47:00.560 align:start position:0%
fetch and crawl uh
 

00:47:00.560 --> 00:47:02.150 align:start position:0%
fetch and crawl uh
the<00:47:00.720><c> only</c><00:47:00.960><c> sort</c><00:47:01.119><c> of</c><00:47:01.200><c> other</c><00:47:01.440><c> interesting</c><00:47:01.839><c> thing</c>

00:47:02.150 --> 00:47:02.160 align:start position:0%
the only sort of other interesting thing
 

00:47:02.160 --> 00:47:04.069 align:start position:0%
the only sort of other interesting thing
here<00:47:02.560><c> uh</c>

00:47:04.069 --> 00:47:04.079 align:start position:0%
here uh
 

00:47:04.079 --> 00:47:06.069 align:start position:0%
here uh
is<00:47:04.319><c> that</c><00:47:04.480><c> it</c><00:47:04.640><c> uses</c><00:47:05.200><c> something</c><00:47:05.520><c> called</c><00:47:05.839><c> weight</c>

00:47:06.069 --> 00:47:06.079 align:start position:0%
is that it uses something called weight
 

00:47:06.079 --> 00:47:07.990 align:start position:0%
is that it uses something called weight
group<00:47:06.880><c> and</c><00:47:07.040><c> weight</c><00:47:07.280><c> group</c><00:47:07.520><c> is</c><00:47:07.760><c> a</c><00:47:07.839><c> very</c>

00:47:07.990 --> 00:47:08.000 align:start position:0%
group and weight group is a very
 

00:47:08.000 --> 00:47:09.750 align:start position:0%
group and weight group is a very
convenient<00:47:08.480><c> primitive</c><00:47:08.800><c> to</c><00:47:09.119><c> keep</c><00:47:09.359><c> track</c><00:47:09.599><c> how</c>

00:47:09.750 --> 00:47:09.760 align:start position:0%
convenient primitive to keep track how
 

00:47:09.760 --> 00:47:09.990 align:start position:0%
convenient primitive to keep track how
many

00:47:09.990 --> 00:47:10.000 align:start position:0%
many
 

00:47:10.000 --> 00:47:12.150 align:start position:0%
many
threads<00:47:10.319><c> you</c><00:47:10.400><c> still</c><00:47:10.640><c> have</c><00:47:11.119><c> active</c><00:47:11.599><c> and</c><00:47:11.920><c> when</c>

00:47:12.150 --> 00:47:12.160 align:start position:0%
threads you still have active and when
 

00:47:12.160 --> 00:47:13.349 align:start position:0%
threads you still have active and when
you<00:47:12.240><c> can</c><00:47:12.400><c> terminate</c>

00:47:13.349 --> 00:47:13.359 align:start position:0%
you can terminate
 

00:47:13.359 --> 00:47:14.630 align:start position:0%
you can terminate
and<00:47:13.520><c> this</c><00:47:13.680><c> was</c><00:47:13.839><c> a</c><00:47:13.920><c> really</c><00:47:14.160><c> sort</c><00:47:14.319><c> of</c><00:47:14.400><c> a</c><00:47:14.480><c> big</c>

00:47:14.630 --> 00:47:14.640 align:start position:0%
and this was a really sort of a big
 

00:47:14.640 --> 00:47:16.069 align:start position:0%
and this was a really sort of a big
issue<00:47:14.880><c> in</c><00:47:14.960><c> this</c><00:47:15.119><c> particular</c><00:47:15.440><c> assignment</c><00:47:15.920><c> that</c>

00:47:16.069 --> 00:47:16.079 align:start position:0%
issue in this particular assignment that
 

00:47:16.079 --> 00:47:17.829 align:start position:0%
issue in this particular assignment that
if<00:47:16.240><c> you</c><00:47:16.480><c> terminated</c><00:47:16.960><c> too</c><00:47:17.119><c> early</c><00:47:17.520><c> then</c><00:47:17.680><c> you</c>

00:47:17.829 --> 00:47:17.839 align:start position:0%
if you terminated too early then you
 

00:47:17.839 --> 00:47:18.470 align:start position:0%
if you terminated too early then you
didn't<00:47:18.079><c> crawl</c>

00:47:18.470 --> 00:47:18.480 align:start position:0%
didn't crawl
 

00:47:18.480 --> 00:47:20.790 align:start position:0%
didn't crawl
the<00:47:18.560><c> web</c><00:47:18.800><c> pages</c><00:47:19.839><c> and</c><00:47:20.000><c> so</c><00:47:20.160><c> you</c><00:47:20.240><c> need</c><00:47:20.400><c> to</c><00:47:20.559><c> keep</c>

00:47:20.790 --> 00:47:20.800 align:start position:0%
the web pages and so you need to keep
 

00:47:20.800 --> 00:47:23.190 align:start position:0%
the web pages and so you need to keep
track<00:47:21.200><c> of</c><00:47:21.280><c> whether</c><00:47:21.599><c> you're</c>

00:47:23.190 --> 00:47:23.200 align:start position:0%
track of whether you're
 

00:47:23.200 --> 00:47:24.630 align:start position:0%
track of whether you're
whether<00:47:23.520><c> there's</c><00:47:23.680><c> still</c><00:47:23.920><c> outstanding</c><00:47:24.480><c> web</c>

00:47:24.630 --> 00:47:24.640 align:start position:0%
whether there's still outstanding web
 

00:47:24.640 --> 00:47:26.309 align:start position:0%
whether there's still outstanding web
pages<00:47:24.960><c> to</c><00:47:25.040><c> be</c><00:47:25.280><c> crawled</c><00:47:25.680><c> uh</c><00:47:25.920><c> saying</c><00:47:26.160><c> weight</c>

00:47:26.309 --> 00:47:26.319 align:start position:0%
pages to be crawled uh saying weight
 

00:47:26.319 --> 00:47:27.990 align:start position:0%
pages to be crawled uh saying weight
group<00:47:26.480><c> does</c><00:47:26.720><c> it</c><00:47:26.800><c> very</c><00:47:27.119><c> easily</c>

00:47:27.990 --> 00:47:28.000 align:start position:0%
group does it very easily
 

00:47:28.000 --> 00:47:29.510 align:start position:0%
group does it very easily
uh<00:47:28.319><c> basically</c><00:47:28.640><c> every</c><00:47:28.800><c> time</c><00:47:29.119><c> you</c><00:47:29.280><c> call</c><00:47:29.440><c> a</c>

00:47:29.510 --> 00:47:29.520 align:start position:0%
uh basically every time you call a
 

00:47:29.520 --> 00:47:32.150 align:start position:0%
uh basically every time you call a
friend<00:47:29.839><c> you</c><00:47:30.000><c> call</c><00:47:30.559><c> uh</c><00:47:30.960><c> ad</c>

00:47:32.150 --> 00:47:32.160 align:start position:0%
friend you call uh ad
 

00:47:32.160 --> 00:47:34.630 align:start position:0%
friend you call uh ad
and<00:47:32.319><c> then</c><00:47:32.640><c> when</c><00:47:32.800><c> the</c><00:47:32.960><c> threat</c><00:47:33.200><c> terminates</c><00:47:34.319><c> uh</c>

00:47:34.630 --> 00:47:34.640 align:start position:0%
and then when the threat terminates uh
 

00:47:34.640 --> 00:47:35.670 align:start position:0%
and then when the threat terminates uh
you<00:47:34.800><c> call</c>

00:47:35.670 --> 00:47:35.680 align:start position:0%
you call
 

00:47:35.680 --> 00:47:37.990 align:start position:0%
you call
done<00:47:36.720><c> and</c><00:47:36.960><c> you</c><00:47:37.040><c> know</c><00:47:37.200><c> you</c><00:47:37.440><c> could</c><00:47:37.599><c> conveniently</c>

00:47:37.990 --> 00:47:38.000 align:start position:0%
done and you know you could conveniently
 

00:47:38.000 --> 00:47:39.829 align:start position:0%
done and you know you could conveniently
do<00:47:38.160><c> that</c><00:47:38.319><c> in</c><00:47:38.400><c> the</c><00:47:38.480><c> defer</c><00:47:38.880><c> statement</c>

00:47:39.829 --> 00:47:39.839 align:start position:0%
do that in the defer statement
 

00:47:39.839 --> 00:47:41.670 align:start position:0%
do that in the defer statement
and<00:47:40.000><c> then</c><00:47:40.559><c> the</c><00:47:40.640><c> main</c><00:47:40.880><c> thread</c><00:47:41.119><c> that</c><00:47:41.280><c> is</c><00:47:41.359><c> waiting</c>

00:47:41.670 --> 00:47:41.680 align:start position:0%
and then the main thread that is waiting
 

00:47:41.680 --> 00:47:43.030 align:start position:0%
and then the main thread that is waiting
for<00:47:42.079><c> all</c><00:47:42.160><c> the</c><00:47:42.240><c> frequency</c><00:47:42.559><c> terminal</c><00:47:42.880><c> just</c>

00:47:43.030 --> 00:47:43.040 align:start position:0%
for all the frequency terminal just
 

00:47:43.040 --> 00:47:44.710 align:start position:0%
for all the frequency terminal just
cause<00:47:43.359><c> weight</c><00:47:43.599><c> and</c><00:47:43.760><c> weight</c><00:47:44.000><c> will</c><00:47:44.160><c> return</c>

00:47:44.710 --> 00:47:44.720 align:start position:0%
cause weight and weight will return
 

00:47:44.720 --> 00:47:47.190 align:start position:0%
cause weight and weight will return
until<00:47:45.119><c> every</c><00:47:45.440><c> fret</c><00:47:45.760><c> that</c><00:47:45.920><c> was</c><00:47:46.160><c> started</c><00:47:46.640><c> for</c>

00:47:47.190 --> 00:47:47.200 align:start position:0%
until every fret that was started for
 

00:47:47.200 --> 00:47:48.950 align:start position:0%
until every fret that was started for
every<00:47:47.520><c> every</c><00:47:47.760><c> add</c><00:47:48.000><c> one</c>

00:47:48.950 --> 00:47:48.960 align:start position:0%
every every add one
 

00:47:48.960 --> 00:47:50.549 align:start position:0%
every every add one
if<00:47:49.119><c> all</c><00:47:49.280><c> those</c><00:47:49.520><c> threads</c><00:47:49.760><c> actually</c><00:47:50.000><c> have</c><00:47:50.240><c> been</c>

00:47:50.549 --> 00:47:50.559 align:start position:0%
if all those threads actually have been
 

00:47:50.559 --> 00:47:53.270 align:start position:0%
if all those threads actually have been
uh<00:47:51.200><c> exited</c>

00:47:53.270 --> 00:47:53.280 align:start position:0%
uh exited
 

00:47:53.280 --> 00:47:56.630 align:start position:0%
uh exited
so<00:47:53.520><c> that's</c><00:47:53.760><c> the</c><00:47:55.200><c> mutex</c>

00:47:56.630 --> 00:47:56.640 align:start position:0%
so that's the mutex
 

00:47:56.640 --> 00:48:00.069 align:start position:0%
so that's the mutex
version

00:48:00.069 --> 00:48:00.079 align:start position:0%
 
 

00:48:00.079 --> 00:48:01.829 align:start position:0%
 
and<00:48:00.240><c> you</c><00:48:00.319><c> can</c><00:48:00.400><c> think</c><00:48:00.559><c> about</c><00:48:00.960><c> sync</c><00:48:01.280><c> weight</c><00:48:01.599><c> as</c>

00:48:01.829 --> 00:48:01.839 align:start position:0%
and you can think about sync weight as
 

00:48:01.839 --> 00:48:03.349 align:start position:0%
and you can think about sync weight as
sort<00:48:02.000><c> of</c><00:48:02.079><c> being</c><00:48:02.319><c> internally</c><00:48:02.800><c> implemented</c>

00:48:03.349 --> 00:48:03.359 align:start position:0%
sort of being internally implemented
 

00:48:03.359 --> 00:48:03.910 align:start position:0%
sort of being internally implemented
using

00:48:03.910 --> 00:48:03.920 align:start position:0%
using
 

00:48:03.920 --> 00:48:07.109 align:start position:0%
using
a<00:48:04.079><c> condition</c><00:48:04.839><c> variable</c>

00:48:07.109 --> 00:48:07.119 align:start position:0%
a condition variable
 

00:48:07.119 --> 00:48:10.309 align:start position:0%
a condition variable
okay<00:48:07.359><c> let</c><00:48:07.440><c> me</c><00:48:07.599><c> look</c><00:48:07.760><c> at</c><00:48:07.839><c> the</c><00:48:09.040><c> uh</c>

00:48:10.309 --> 00:48:10.319 align:start position:0%
okay let me look at the uh
 

00:48:10.319 --> 00:48:14.150 align:start position:0%
okay let me look at the uh
the<00:48:10.559><c> channel</c><00:48:10.880><c> version</c><00:48:12.319><c> uh</c><00:48:13.280><c> so</c><00:48:13.440><c> here's</c><00:48:13.680><c> the</c>

00:48:14.150 --> 00:48:14.160 align:start position:0%
the channel version uh so here's the
 

00:48:14.160 --> 00:48:15.910 align:start position:0%
the channel version uh so here's the
channel<00:48:14.480><c> version</c><00:48:14.800><c> is</c><00:48:14.880><c> basically</c><00:48:15.200><c> sort</c><00:48:15.359><c> of</c>

00:48:15.910 --> 00:48:15.920 align:start position:0%
channel version is basically sort of
 

00:48:15.920 --> 00:48:19.030 align:start position:0%
channel version is basically sort of
working<00:48:16.480><c> organized</c><00:48:17.119><c> as</c><00:48:17.680><c> the</c><00:48:18.079><c> mapreduce</c>

00:48:19.030 --> 00:48:19.040 align:start position:0%
working organized as the mapreduce
 

00:48:19.040 --> 00:48:21.990 align:start position:0%
working organized as the mapreduce
uh<00:48:20.240><c> lab</c><00:48:20.480><c> where</c><00:48:20.720><c> there's</c><00:48:20.960><c> a</c><00:48:21.040><c> coordinator</c><00:48:21.760><c> and</c>

00:48:21.990 --> 00:48:22.000 align:start position:0%
uh lab where there's a coordinator and
 

00:48:22.000 --> 00:48:23.349 align:start position:0%
uh lab where there's a coordinator and
workers

00:48:23.349 --> 00:48:23.359 align:start position:0%
workers
 

00:48:23.359 --> 00:48:26.630 align:start position:0%
workers
and<00:48:23.599><c> so</c><00:48:24.559><c> uh</c><00:48:24.960><c> we</c><00:48:25.200><c> start</c><00:48:25.440><c> off</c><00:48:25.680><c> you</c><00:48:25.839><c> know</c><00:48:26.240><c> we</c><00:48:26.400><c> start</c>

00:48:26.630 --> 00:48:26.640 align:start position:0%
and so uh we start off you know we start
 

00:48:26.640 --> 00:48:29.109 align:start position:0%
and so uh we start off you know we start
off<00:48:26.800><c> creating</c><00:48:27.119><c> a</c><00:48:27.280><c> coordinated</c><00:48:27.839><c> thread</c>

00:48:29.109 --> 00:48:29.119 align:start position:0%
off creating a coordinated thread
 

00:48:29.119 --> 00:48:30.950 align:start position:0%
off creating a coordinated thread
and<00:48:29.280><c> the</c><00:48:29.359><c> way</c><00:48:29.520><c> we</c><00:48:29.599><c> do</c><00:48:29.760><c> that</c><00:48:30.079><c> actually</c><00:48:30.559><c> is</c><00:48:30.720><c> we</c>

00:48:30.950 --> 00:48:30.960 align:start position:0%
and the way we do that actually is we
 

00:48:30.960 --> 00:48:32.309 align:start position:0%
and the way we do that actually is we
make<00:48:31.200><c> a</c><00:48:31.280><c> channel</c>

00:48:32.309 --> 00:48:32.319 align:start position:0%
make a channel
 

00:48:32.319 --> 00:48:34.390 align:start position:0%
make a channel
and<00:48:32.880><c> then</c><00:48:33.040><c> we</c><00:48:33.200><c> pass</c><00:48:33.520><c> the</c><00:48:33.760><c> channel</c><00:48:34.079><c> into</c><00:48:34.319><c> the</c>

00:48:34.390 --> 00:48:34.400 align:start position:0%
and then we pass the channel into the
 

00:48:34.400 --> 00:48:36.309 align:start position:0%
and then we pass the channel into the
coordinator<00:48:35.119><c> uh</c><00:48:35.440><c> the</c><00:48:35.599><c> coordinator</c><00:48:36.000><c> of</c><00:48:36.079><c> course</c>

00:48:36.309 --> 00:48:36.319 align:start position:0%
coordinator uh the coordinator of course
 

00:48:36.319 --> 00:48:37.990 align:start position:0%
coordinator uh the coordinator of course
has<00:48:36.480><c> to</c><00:48:36.559><c> start</c><00:48:36.880><c> with</c><00:48:37.040><c> a</c><00:48:37.119><c> url</c><00:48:37.599><c> the</c><00:48:37.680><c> beginning</c>

00:48:37.990 --> 00:48:38.000 align:start position:0%
has to start with a url the beginning
 

00:48:38.000 --> 00:48:39.190 align:start position:0%
has to start with a url the beginning
url<00:48:38.400><c> so</c><00:48:38.559><c> we</c><00:48:38.720><c> need</c><00:48:38.880><c> to</c>

00:48:39.190 --> 00:48:39.200 align:start position:0%
url so we need to
 

00:48:39.200 --> 00:48:40.630 align:start position:0%
url so we need to
supply<00:48:39.599><c> that</c><00:48:39.839><c> on</c><00:48:40.000><c> the</c><00:48:40.079><c> channel</c><00:48:40.400><c> that's</c><00:48:40.559><c> the</c>

00:48:40.630 --> 00:48:40.640 align:start position:0%
supply that on the channel that's the
 

00:48:40.640 --> 00:48:42.230 align:start position:0%
supply that on the channel that's the
most<00:48:40.800><c> convenient</c><00:48:41.280><c> thing</c><00:48:41.440><c> to</c><00:48:41.520><c> do</c><00:48:41.760><c> as</c><00:48:41.920><c> we'll</c><00:48:42.079><c> see</c>

00:48:42.230 --> 00:48:42.240 align:start position:0%
most convenient thing to do as we'll see
 

00:48:42.240 --> 00:48:43.430 align:start position:0%
most convenient thing to do as we'll see
in<00:48:42.400><c> a</c><00:48:42.480><c> second</c>

00:48:43.430 --> 00:48:43.440 align:start position:0%
in a second
 

00:48:43.440 --> 00:48:45.430 align:start position:0%
in a second
uh<00:48:43.760><c> but</c><00:48:44.000><c> you</c><00:48:44.160><c> know</c><00:48:44.240><c> to</c><00:48:44.880><c> send</c><00:48:45.119><c> it</c><00:48:45.280><c> on</c><00:48:45.359><c> the</c>

00:48:45.430 --> 00:48:45.440 align:start position:0%
uh but you know to send it on the
 

00:48:45.440 --> 00:48:46.870 align:start position:0%
uh but you know to send it on the
channel<00:48:45.760><c> we</c><00:48:45.839><c> basically</c><00:48:46.160><c> have</c><00:48:46.240><c> to</c><00:48:46.400><c> create</c><00:48:46.640><c> a</c><00:48:46.720><c> go</c>

00:48:46.870 --> 00:48:46.880 align:start position:0%
channel we basically have to create a go
 

00:48:46.880 --> 00:48:47.990 align:start position:0%
channel we basically have to create a go
routine<00:48:47.280><c> because</c><00:48:47.520><c> otherwise</c>

00:48:47.990 --> 00:48:48.000 align:start position:0%
routine because otherwise
 

00:48:48.000 --> 00:48:50.390 align:start position:0%
routine because otherwise
you<00:48:48.079><c> know</c><00:48:48.160><c> we</c><00:48:48.319><c> deadlock</c><00:48:48.800><c> here</c><00:48:49.760><c> so</c><00:48:49.920><c> we</c><00:48:50.160><c> and</c><00:48:50.240><c> this</c>

00:48:50.390 --> 00:48:50.400 align:start position:0%
you know we deadlock here so we and this
 

00:48:50.400 --> 00:48:51.670 align:start position:0%
you know we deadlock here so we and this
is<00:48:50.480><c> our</c><00:48:50.640><c> typical</c><00:48:50.960><c> thing</c><00:48:51.280><c> we</c>

00:48:51.670 --> 00:48:51.680 align:start position:0%
is our typical thing we
 

00:48:51.680 --> 00:48:53.589 align:start position:0%
is our typical thing we
could<00:48:52.000><c> go</c><00:48:52.240><c> to</c><00:48:52.400><c> just</c><00:48:52.559><c> to</c><00:48:52.640><c> send</c><00:48:52.880><c> that</c><00:48:53.119><c> value</c><00:48:53.520><c> on</c>

00:48:53.589 --> 00:48:53.599 align:start position:0%
could go to just to send that value on
 

00:48:53.599 --> 00:48:54.950 align:start position:0%
could go to just to send that value on
the<00:48:53.680><c> channel</c>

00:48:54.950 --> 00:48:54.960 align:start position:0%
the channel
 

00:48:54.960 --> 00:48:58.069 align:start position:0%
the channel
so<00:48:55.119><c> let's</c><00:48:55.280><c> look</c><00:48:55.440><c> at</c><00:48:55.599><c> the</c><00:48:55.680><c> coordinator</c>

00:48:58.069 --> 00:48:58.079 align:start position:0%
so let's look at the coordinator
 

00:48:58.079 --> 00:49:00.790 align:start position:0%
so let's look at the coordinator
here's<00:48:58.319><c> the</c><00:48:58.480><c> coordinator</c><00:49:00.079><c> it</c><00:49:00.160><c> doesn't</c><00:49:00.559><c> use</c>

00:49:00.790 --> 00:49:00.800 align:start position:0%
here's the coordinator it doesn't use
 

00:49:00.800 --> 00:49:02.069 align:start position:0%
here's the coordinator it doesn't use
any<00:49:01.040><c> locks</c><00:49:01.359><c> at</c><00:49:01.520><c> all</c>

00:49:02.069 --> 00:49:02.079 align:start position:0%
any locks at all
 

00:49:02.079 --> 00:49:03.829 align:start position:0%
any locks at all
because<00:49:02.400><c> you</c><00:49:02.480><c> know</c><00:49:02.720><c> the</c><00:49:03.040><c> the</c><00:49:03.200><c> data</c><00:49:03.520><c> structures</c>

00:49:03.829 --> 00:49:03.839 align:start position:0%
because you know the the data structures
 

00:49:03.839 --> 00:49:05.190 align:start position:0%
because you know the the data structures
that<00:49:04.240><c> uh</c>

00:49:05.190 --> 00:49:05.200 align:start position:0%
that uh
 

00:49:05.200 --> 00:49:06.710 align:start position:0%
that uh
uh<00:49:05.520><c> there's</c><00:49:05.680><c> no</c><00:49:05.839><c> data</c><00:49:06.160><c> structures</c><00:49:06.480><c> actually</c>

00:49:06.710 --> 00:49:06.720 align:start position:0%
uh there's no data structures actually
 

00:49:06.720 --> 00:49:08.390 align:start position:0%
uh there's no data structures actually
being<00:49:06.880><c> shared</c><00:49:07.280><c> like</c><00:49:07.520><c> fetched</c>

00:49:08.390 --> 00:49:08.400 align:start position:0%
being shared like fetched
 

00:49:08.400 --> 00:49:09.670 align:start position:0%
being shared like fetched
you<00:49:08.480><c> know</c><00:49:08.640><c> the</c><00:49:08.800><c> map</c><00:49:09.040><c> that</c><00:49:09.200><c> actually</c><00:49:09.440><c> keeps</c>

00:49:09.670 --> 00:49:09.680 align:start position:0%
you know the map that actually keeps
 

00:49:09.680 --> 00:49:11.990 align:start position:0%
you know the map that actually keeps
track<00:49:09.839><c> of</c><00:49:10.240><c> which</c><00:49:10.559><c> uh</c><00:49:10.800><c> urls</c><00:49:11.280><c> has</c><00:49:11.359><c> manufactured</c>

00:49:11.990 --> 00:49:12.000 align:start position:0%
track of which uh urls has manufactured
 

00:49:12.000 --> 00:49:14.829 align:start position:0%
track of which uh urls has manufactured
is<00:49:12.160><c> actually</c><00:49:12.400><c> only</c><00:49:13.040><c> accessed</c><00:49:13.520><c> within</c><00:49:13.839><c> the</c>

00:49:14.829 --> 00:49:14.839 align:start position:0%
is actually only accessed within the
 

00:49:14.839 --> 00:49:16.309 align:start position:0%
is actually only accessed within the
coordinator

00:49:16.309 --> 00:49:16.319 align:start position:0%
coordinator
 

00:49:16.319 --> 00:49:17.990 align:start position:0%
coordinator
so<00:49:16.480><c> the</c><00:49:16.559><c> coordinator</c><00:49:17.119><c> got</c><00:49:17.359><c> a</c><00:49:17.599><c> you</c><00:49:17.760><c> know</c><00:49:17.839><c> when</c>

00:49:17.990 --> 00:49:18.000 align:start position:0%
so the coordinator got a you know when
 

00:49:18.000 --> 00:49:19.510 align:start position:0%
so the coordinator got a you know when
we<00:49:18.400><c> called</c><00:49:18.720><c> it</c><00:49:18.800><c> initially</c>

00:49:19.510 --> 00:49:19.520 align:start position:0%
we called it initially
 

00:49:19.520 --> 00:49:22.790 align:start position:0%
we called it initially
uh<00:49:20.000><c> we</c><00:49:20.240><c> got</c><00:49:20.400><c> a</c><00:49:20.880><c> it</c><00:49:21.040><c> has</c><00:49:21.359><c> a</c><00:49:21.839><c> one</c><00:49:22.079><c> url</c>

00:49:22.790 --> 00:49:22.800 align:start position:0%
uh we got a it has a one url
 

00:49:22.800 --> 00:49:25.190 align:start position:0%
uh we got a it has a one url
it<00:49:23.200><c> checks</c><00:49:23.440><c> the</c><00:49:23.599><c> fetch</c><00:49:24.400><c> map</c><00:49:24.720><c> and</c><00:49:24.800><c> then</c><00:49:24.960><c> for</c>

00:49:25.190 --> 00:49:25.200 align:start position:0%
it checks the fetch map and then for
 

00:49:25.200 --> 00:49:26.790 align:start position:0%
it checks the fetch map and then for
every<00:49:25.440><c> url</c>

00:49:26.790 --> 00:49:26.800 align:start position:0%
every url
 

00:49:26.800 --> 00:49:29.109 align:start position:0%
every url
then<00:49:27.040><c> it</c><00:49:27.119><c> goes</c><00:49:27.359><c> basically</c><00:49:27.920><c> you</c><00:49:28.000><c> know</c><00:49:28.720><c> cycles</c>

00:49:29.109 --> 00:49:29.119 align:start position:0%
then it goes basically you know cycles
 

00:49:29.119 --> 00:49:30.870 align:start position:0%
then it goes basically you know cycles
through<00:49:29.760><c> reach</c><00:49:30.079><c> the</c>

00:49:30.870 --> 00:49:30.880 align:start position:0%
through reach the
 

00:49:30.880 --> 00:49:32.950 align:start position:0%
through reach the
channel<00:49:31.280><c> using</c><00:49:31.599><c> a</c><00:49:31.680><c> range</c><00:49:32.000><c> statement</c><00:49:32.880><c> and</c>

00:49:32.950 --> 00:49:32.960 align:start position:0%
channel using a range statement and
 

00:49:32.960 --> 00:49:34.470 align:start position:0%
channel using a range statement and
basically<00:49:33.359><c> what</c><00:49:33.440><c> this</c><00:49:33.680><c> does</c><00:49:34.000><c> is</c><00:49:34.160><c> it</c><00:49:34.319><c> just</c>

00:49:34.470 --> 00:49:34.480 align:start position:0%
basically what this does is it just
 

00:49:34.480 --> 00:49:36.309 align:start position:0%
basically what this does is it just
keeps<00:49:34.800><c> reading</c><00:49:35.119><c> the</c><00:49:35.200><c> channel</c><00:49:35.599><c> and</c><00:49:35.839><c> just</c><00:49:36.000><c> grabs</c>

00:49:36.309 --> 00:49:36.319 align:start position:0%
keeps reading the channel and just grabs
 

00:49:36.319 --> 00:49:37.990 align:start position:0%
keeps reading the channel and just grabs
the<00:49:36.400><c> next</c><00:49:36.559><c> value</c><00:49:36.800><c> it</c><00:49:36.880><c> gives</c><00:49:37.119><c> an</c><00:49:37.280><c> x</c><00:49:37.440><c> value</c><00:49:37.760><c> grabs</c>

00:49:37.990 --> 00:49:38.000 align:start position:0%
the next value it gives an x value grabs
 

00:49:38.000 --> 00:49:40.069 align:start position:0%
the next value it gives an x value grabs
the<00:49:38.079><c> next</c><00:49:38.319><c> value</c><00:49:38.640><c> so</c><00:49:38.880><c> basically</c><00:49:39.200><c> it</c><00:49:39.280><c> grabs</c><00:49:39.599><c> the</c>

00:49:40.069 --> 00:49:40.079 align:start position:0%
the next value so basically it grabs the
 

00:49:40.079 --> 00:49:42.309 align:start position:0%
the next value so basically it grabs the
url<00:49:40.880><c> we</c><00:49:41.040><c> know</c><00:49:41.200><c> there's</c><00:49:41.440><c> one</c><00:49:41.680><c> in</c><00:49:41.839><c> it</c><00:49:42.079><c> because</c>

00:49:42.309 --> 00:49:42.319 align:start position:0%
url we know there's one in it because
 

00:49:42.319 --> 00:49:43.270 align:start position:0%
url we know there's one in it because
you<00:49:42.480><c> know</c><00:49:42.559><c> we</c><00:49:42.720><c> put</c><00:49:42.880><c> it</c><00:49:43.040><c> on</c>

00:49:43.270 --> 00:49:43.280 align:start position:0%
you know we put it on
 

00:49:43.280 --> 00:49:46.390 align:start position:0%
you know we put it on
when<00:49:43.520><c> we</c><00:49:43.680><c> created</c><00:49:44.079><c> it</c><00:49:44.960><c> and</c><00:49:45.040><c> then</c><00:49:45.520><c> for</c><00:49:45.680><c> that</c><00:49:45.920><c> url</c>

00:49:46.390 --> 00:49:46.400 align:start position:0%
when we created it and then for that url
 

00:49:46.400 --> 00:49:47.990 align:start position:0%
when we created it and then for that url
we<00:49:46.559><c> sort</c><00:49:46.720><c> of</c><00:49:46.800><c> roughly</c><00:49:47.119><c> do</c><00:49:47.280><c> the</c><00:49:47.440><c> same</c><00:49:47.599><c> thing</c>

00:49:47.990 --> 00:49:48.000 align:start position:0%
we sort of roughly do the same thing
 

00:49:48.000 --> 00:49:51.109 align:start position:0%
we sort of roughly do the same thing
as<00:49:48.400><c> the</c><00:49:49.440><c> uh</c>

00:49:51.109 --> 00:49:51.119 align:start position:0%
as the uh
 

00:49:51.119 --> 00:49:54.390 align:start position:0%
as the uh
concurrent<00:49:52.079><c> as</c><00:49:52.240><c> the</c><00:49:52.480><c> mutex</c><00:49:52.960><c> one</c><00:49:53.680><c> uh</c>

00:49:54.390 --> 00:49:54.400 align:start position:0%
concurrent as the mutex one uh
 

00:49:54.400 --> 00:49:56.470 align:start position:0%
concurrent as the mutex one uh
you<00:49:54.559><c> know</c><00:49:54.720><c> we</c><00:49:55.040><c> see</c><00:49:55.200><c> if</c><00:49:55.359><c> the</c><00:49:55.520><c> url</c><00:49:55.920><c> has</c><00:49:56.160><c> already</c>

00:49:56.470 --> 00:49:56.480 align:start position:0%
you know we see if the url has already
 

00:49:56.480 --> 00:49:57.750 align:start position:0%
you know we see if the url has already
been<00:49:56.640><c> fetched</c>

00:49:57.750 --> 00:49:57.760 align:start position:0%
been fetched
 

00:49:57.760 --> 00:50:00.230 align:start position:0%
been fetched
if<00:49:58.000><c> it</c><00:49:58.079><c> hasn't</c><00:49:58.319><c> been</c><00:49:58.559><c> such</c><00:49:59.040><c> then</c><00:49:59.440><c> we're</c><00:49:59.599><c> done</c>

00:50:00.230 --> 00:50:00.240 align:start position:0%
if it hasn't been such then we're done
 

00:50:00.240 --> 00:50:01.349 align:start position:0%
if it hasn't been such then we're done
otherwise<00:50:00.720><c> we'll</c><00:50:00.960><c> create</c>

00:50:01.349 --> 00:50:01.359 align:start position:0%
otherwise we'll create
 

00:50:01.359 --> 00:50:07.030 align:start position:0%
otherwise we'll create
a<00:50:01.599><c> go</c><00:50:02.000><c> worker</c><00:50:02.559><c> to</c><00:50:02.880><c> actually</c><00:50:03.200><c> fetch</c><00:50:03.520><c> that</c><00:50:03.760><c> url</c>

00:50:07.030 --> 00:50:07.040 align:start position:0%
 
 

00:50:07.040 --> 00:50:08.870 align:start position:0%
 
and<00:50:07.200><c> we</c><00:50:07.359><c> keep</c><00:50:07.599><c> track</c><00:50:07.920><c> of</c><00:50:08.079><c> how</c><00:50:08.240><c> many</c>

00:50:08.870 --> 00:50:08.880 align:start position:0%
and we keep track of how many
 

00:50:08.880 --> 00:50:11.270 align:start position:0%
and we keep track of how many
outstanding<00:50:09.760><c> workers</c><00:50:10.240><c> we</c><00:50:10.400><c> have</c><00:50:10.640><c> so</c><00:50:10.960><c> n</c><00:50:11.119><c> is</c>

00:50:11.270 --> 00:50:11.280 align:start position:0%
outstanding workers we have so n is
 

00:50:11.280 --> 00:50:12.870 align:start position:0%
outstanding workers we have so n is
counting<00:50:11.599><c> the</c><00:50:11.599><c> number</c><00:50:11.839><c> of</c><00:50:11.920><c> workers</c><00:50:12.400><c> and</c><00:50:12.640><c> only</c>

00:50:12.870 --> 00:50:12.880 align:start position:0%
counting the number of workers and only
 

00:50:12.880 --> 00:50:14.150 align:start position:0%
counting the number of workers and only
when<00:50:13.119><c> n</c><00:50:13.280><c> is</c><00:50:13.359><c> zero</c>

00:50:14.150 --> 00:50:14.160 align:start position:0%
when n is zero
 

00:50:14.160 --> 00:50:17.510 align:start position:0%
when n is zero
uh<00:50:14.559><c> do</c><00:50:14.720><c> we</c><00:50:15.040><c> terminate</c><00:50:15.839><c> the</c><00:50:16.400><c> coordinator</c>

00:50:17.510 --> 00:50:17.520 align:start position:0%
uh do we terminate the coordinator
 

00:50:17.520 --> 00:50:19.589 align:start position:0%
uh do we terminate the coordinator
uh<00:50:17.760><c> to</c><00:50:18.000><c> make</c><00:50:18.160><c> sure</c><00:50:18.400><c> that</c><00:50:18.559><c> basically</c><00:50:19.119><c> we</c><00:50:19.359><c> have</c>

00:50:19.589 --> 00:50:19.599 align:start position:0%
uh to make sure that basically we have
 

00:50:19.599 --> 00:50:20.790 align:start position:0%
uh to make sure that basically we have
fetched<00:50:20.160><c> all</c><00:50:20.400><c> the</c>

00:50:20.790 --> 00:50:20.800 align:start position:0%
fetched all the
 

00:50:20.800 --> 00:50:22.470 align:start position:0%
fetched all the
web<00:50:20.960><c> pages</c><00:50:21.520><c> that</c><00:50:21.680><c> we're</c><00:50:21.839><c> supposed</c><00:50:22.160><c> to</c><00:50:22.319><c> be</c>

00:50:22.470 --> 00:50:22.480 align:start position:0%
web pages that we're supposed to be
 

00:50:22.480 --> 00:50:24.950 align:start position:0%
web pages that we're supposed to be
affecting<00:50:23.680><c> so</c><00:50:23.839><c> let's</c><00:50:24.000><c> look</c><00:50:24.240><c> at</c><00:50:24.319><c> the</c><00:50:24.400><c> worker</c>

00:50:24.950 --> 00:50:24.960 align:start position:0%
affecting so let's look at the worker
 

00:50:24.960 --> 00:50:26.470 align:start position:0%
affecting so let's look at the worker
worker<00:50:25.280><c> basically</c><00:50:25.680><c> calls</c><00:50:25.920><c> fetch</c><00:50:26.240><c> you</c><00:50:26.319><c> know</c>

00:50:26.470 --> 00:50:26.480 align:start position:0%
worker basically calls fetch you know
 

00:50:26.480 --> 00:50:27.910 align:start position:0%
worker basically calls fetch you know
this<00:50:26.640><c> of</c><00:50:26.800><c> course</c><00:50:27.040><c> not</c><00:50:27.200><c> happens</c><00:50:27.520><c> completely</c><00:50:27.839><c> in</c>

00:50:27.910 --> 00:50:27.920 align:start position:0%
this of course not happens completely in
 

00:50:27.920 --> 00:50:31.109 align:start position:0%
this of course not happens completely in
parallel<00:50:28.319><c> with</c><00:50:28.559><c> any</c><00:50:28.800><c> other</c><00:50:28.960><c> workers</c>

00:50:31.109 --> 00:50:31.119 align:start position:0%
parallel with any other workers
 

00:50:31.119 --> 00:50:34.069 align:start position:0%
parallel with any other workers
if<00:50:31.440><c> it</c><00:50:31.520><c> actually</c><00:50:31.760><c> fetches</c><00:50:32.880><c> some</c><00:50:33.200><c> url</c><00:50:33.920><c> from</c>

00:50:34.069 --> 00:50:34.079 align:start position:0%
if it actually fetches some url from
 

00:50:34.079 --> 00:50:34.390 align:start position:0%
if it actually fetches some url from
that

00:50:34.390 --> 00:50:34.400 align:start position:0%
that
 

00:50:34.400 --> 00:50:35.990 align:start position:0%
that
webpage<00:50:34.880><c> it</c><00:50:35.040><c> basically</c><00:50:35.440><c> writes</c><00:50:35.680><c> all</c><00:50:35.760><c> those</c>

00:50:35.990 --> 00:50:36.000 align:start position:0%
webpage it basically writes all those
 

00:50:36.000 --> 00:50:37.910 align:start position:0%
webpage it basically writes all those
urls<00:50:36.640><c> to</c><00:50:36.880><c> the</c><00:50:37.280><c> channel</c>

00:50:37.910 --> 00:50:37.920 align:start position:0%
urls to the channel
 

00:50:37.920 --> 00:50:39.990 align:start position:0%
urls to the channel
and<00:50:38.160><c> so</c><00:50:38.720><c> the</c><00:50:38.880><c> coordinator</c><00:50:39.520><c> will</c><00:50:39.599><c> get</c><00:50:39.839><c> all</c>

00:50:39.990 --> 00:50:40.000 align:start position:0%
and so the coordinator will get all
 

00:50:40.000 --> 00:50:41.430 align:start position:0%
and so the coordinator will get all
those<00:50:40.240><c> channels</c><00:50:40.800><c> through</c><00:50:40.960><c> its</c><00:50:41.119><c> range</c>

00:50:41.430 --> 00:50:41.440 align:start position:0%
those channels through its range
 

00:50:41.440 --> 00:50:43.109 align:start position:0%
those channels through its range
statement

00:50:43.109 --> 00:50:43.119 align:start position:0%
statement
 

00:50:43.119 --> 00:50:44.870 align:start position:0%
statement
and<00:50:43.359><c> then</c><00:50:43.599><c> when</c><00:50:43.839><c> it's</c><00:50:43.920><c> done</c><00:50:44.319><c> you</c><00:50:44.400><c> know</c><00:50:44.559><c> writing</c>

00:50:44.870 --> 00:50:44.880 align:start position:0%
and then when it's done you know writing
 

00:50:44.880 --> 00:50:47.430 align:start position:0%
and then when it's done you know writing
all<00:50:45.040><c> the</c><00:50:45.920><c> urls</c><00:50:46.400><c> through</c><00:50:46.559><c> the</c><00:50:46.720><c> channel</c>

00:50:47.430 --> 00:50:47.440 align:start position:0%
all the urls through the channel
 

00:50:47.440 --> 00:50:50.390 align:start position:0%
all the urls through the channel
then<00:50:47.599><c> the</c><00:50:47.839><c> coordinator</c><00:50:48.720><c> uh</c><00:50:49.119><c> the</c><00:50:49.200><c> worker</c><00:50:49.680><c> exits</c>

00:50:50.390 --> 00:50:50.400 align:start position:0%
then the coordinator uh the worker exits
 

00:50:50.400 --> 00:50:51.430 align:start position:0%
then the coordinator uh the worker exits
and<00:50:50.800><c> that</c><00:50:50.960><c> will</c>

00:50:51.430 --> 00:50:51.440 align:start position:0%
and that will
 

00:50:51.440 --> 00:50:54.710 align:start position:0%
and that will
you<00:50:51.520><c> know</c><00:50:51.760><c> at</c><00:50:51.839><c> some</c><00:50:52.079><c> point</c><00:50:52.839><c> uh</c><00:50:54.000><c> decrease</c>

00:50:54.710 --> 00:50:54.720 align:start position:0%
you know at some point uh decrease
 

00:50:54.720 --> 00:50:58.790 align:start position:0%
you know at some point uh decrease
you<00:50:54.880><c> know</c><00:50:55.119><c> and</c><00:50:55.680><c> and</c><00:50:55.839><c> then</c><00:50:56.160><c> at</c><00:50:56.240><c> the</c><00:50:56.400><c> end</c>

00:50:58.790 --> 00:50:58.800 align:start position:0%
 
 

00:50:58.800 --> 00:51:02.309 align:start position:0%
 
and<00:50:58.880><c> that's</c><00:50:59.200><c> it</c><00:50:59.359><c> basically</c><00:51:01.280><c> okay</c>

00:51:02.309 --> 00:51:02.319 align:start position:0%
and that's it basically okay
 

00:51:02.319 --> 00:51:04.549 align:start position:0%
and that's it basically okay
so<00:51:02.480><c> those</c><00:51:02.720><c> are</c><00:51:02.800><c> the</c><00:51:02.880><c> two</c><00:51:03.040><c> solutions</c><00:51:03.599><c> uh</c><00:51:04.319><c> any</c>

00:51:04.549 --> 00:51:04.559 align:start position:0%
so those are the two solutions uh any
 

00:51:04.559 --> 00:51:12.630 align:start position:0%
so those are the two solutions uh any
questions<00:51:04.880><c> about</c><00:51:06.839><c> these</c>

00:51:12.630 --> 00:51:12.640 align:start position:0%
 
 

00:51:12.640 --> 00:51:15.910 align:start position:0%
 
is<00:51:12.720><c> it</c><00:51:12.880><c> all</c><00:51:13.040><c> clear</c>

00:51:15.910 --> 00:51:15.920 align:start position:0%
 
 

00:51:15.920 --> 00:51:18.630 align:start position:0%
 
there<00:51:16.079><c> is</c><00:51:16.240><c> a</c><00:51:16.400><c> question</c><00:51:16.800><c> in</c><00:51:16.960><c> chat</c><00:51:17.599><c> ah</c><00:51:17.920><c> okay</c><00:51:18.319><c> uh</c>

00:51:18.630 --> 00:51:18.640 align:start position:0%
there is a question in chat ah okay uh
 

00:51:18.640 --> 00:51:19.510 align:start position:0%
there is a question in chat ah okay uh
let<00:51:18.800><c> me</c>

00:51:19.510 --> 00:51:19.520 align:start position:0%
let me
 

00:51:19.520 --> 00:51:32.710 align:start position:0%
let me
get<00:51:19.680><c> my</c><00:51:19.839><c> chat</c><00:51:20.079><c> list</c><00:51:21.200><c> back</c><00:51:21.200><c> backup</c>

00:51:32.710 --> 00:51:32.720 align:start position:0%
 
 

00:51:32.720 --> 00:51:36.230 align:start position:0%
 
okay<00:51:33.040><c> so</c><00:51:33.200><c> the</c><00:51:33.440><c> question</c><00:51:33.920><c> is</c><00:51:35.119><c> when</c><00:51:35.520><c> ch</c><00:51:36.000><c> has</c><00:51:36.160><c> a</c>

00:51:36.230 --> 00:51:36.240 align:start position:0%
okay so the question is when ch has a
 

00:51:36.240 --> 00:51:38.309 align:start position:0%
okay so the question is when ch has a
value<00:51:36.640><c> in</c><00:51:36.800><c> it</c><00:51:36.960><c> and</c><00:51:37.280><c> all</c><00:51:37.440><c> other</c><00:51:37.599><c> threads</c><00:51:38.000><c> be</c>

00:51:38.309 --> 00:51:38.319 align:start position:0%
value in it and all other threads be
 

00:51:38.319 --> 00:51:41.829 align:start position:0%
value in it and all other threads be
idle<00:51:39.359><c> uh</c><00:51:40.559><c> it</c><00:51:40.720><c> is</c><00:51:40.880><c> the</c><00:51:40.960><c> case</c><00:51:41.200><c> that</c>

00:51:41.829 --> 00:51:41.839 align:start position:0%
idle uh it is the case that
 

00:51:41.839 --> 00:51:44.150 align:start position:0%
idle uh it is the case that
the<00:51:42.720><c> since</c><00:51:42.960><c> this</c><00:51:43.119><c> is</c><00:51:43.200><c> not</c><00:51:43.440><c> a</c><00:51:43.520><c> buffer</c><00:51:43.839><c> channel</c>

00:51:44.150 --> 00:51:44.160 align:start position:0%
the since this is not a buffer channel
 

00:51:44.160 --> 00:51:45.670 align:start position:0%
the since this is not a buffer channel
that<00:51:44.400><c> you</c><00:51:44.559><c> know</c><00:51:44.640><c> there's</c><00:51:44.960><c> going</c><00:51:45.040><c> to</c><00:51:45.119><c> be</c><00:51:45.280><c> only</c>

00:51:45.670 --> 00:51:45.680 align:start position:0%
that you know there's going to be only
 

00:51:45.680 --> 00:51:48.069 align:start position:0%
that you know there's going to be only
one<00:51:46.000><c> request</c><00:51:46.480><c> in</c><00:51:46.559><c> the</c><00:51:46.640><c> channel</c><00:51:46.960><c> at</c><00:51:47.040><c> the</c><00:51:47.200><c> time</c>

00:51:48.069 --> 00:51:48.079 align:start position:0%
one request in the channel at the time
 

00:51:48.079 --> 00:51:50.630 align:start position:0%
one request in the channel at the time
and<00:51:48.240><c> so</c><00:51:48.640><c> all</c><00:51:48.720><c> the</c><00:51:48.880><c> frets</c><00:51:49.280><c> you</c><00:51:49.440><c> know</c><00:51:49.680><c> will</c><00:51:49.920><c> be</c>

00:51:50.630 --> 00:51:50.640 align:start position:0%
and so all the frets you know will be
 

00:51:50.640 --> 00:51:53.990 align:start position:0%
and so all the frets you know will be
appending<00:51:51.040><c> to</c><00:51:51.200><c> the</c><00:51:51.280><c> channel</c><00:51:51.680><c> one</c><00:51:51.839><c> by</c><00:51:52.000><c> one</c>

00:51:53.990 --> 00:51:54.000 align:start position:0%
appending to the channel one by one
 

00:51:54.000 --> 00:51:55.589 align:start position:0%
appending to the channel one by one
but<00:51:54.319><c> doesn't</c><00:51:54.640><c> that</c><00:51:54.880><c> make</c><00:51:55.119><c> the</c><00:51:55.280><c> program</c>

00:51:55.589 --> 00:51:55.599 align:start position:0%
but doesn't that make the program
 

00:51:55.599 --> 00:51:57.430 align:start position:0%
but doesn't that make the program
sequential<00:51:56.319><c> because</c><00:51:56.720><c> no</c><00:51:56.880><c> two</c><00:51:57.119><c> threads</c><00:51:57.359><c> are</c>

00:51:57.430 --> 00:51:57.440 align:start position:0%
sequential because no two threads are
 

00:51:57.440 --> 00:51:58.470 align:start position:0%
sequential because no two threads are
running<00:51:57.680><c> in</c><00:51:57.760><c> parallel</c>

00:51:58.470 --> 00:51:58.480 align:start position:0%
running in parallel
 

00:51:58.480 --> 00:52:00.630 align:start position:0%
running in parallel
except<00:51:58.720><c> the</c><00:51:58.880><c> main</c><00:51:59.040><c> thread</c><00:51:59.359><c> and</c><00:51:59.599><c> one</c><00:51:59.920><c> well</c><00:52:00.079><c> the</c>

00:52:00.630 --> 00:52:00.640 align:start position:0%
except the main thread and one well the
 

00:52:00.640 --> 00:52:01.510 align:start position:0%
except the main thread and one well the
the<00:52:00.800><c> fetchish</c>

00:52:01.510 --> 00:52:01.520 align:start position:0%
the fetchish
 

00:52:01.520 --> 00:52:04.230 align:start position:0%
the fetchish
will<00:52:01.760><c> still</c><00:52:01.920><c> happen</c><00:52:02.240><c> in</c><00:52:02.839><c> parallel</c><00:52:03.920><c> and</c><00:52:04.000><c> those</c>

00:52:04.230 --> 00:52:04.240 align:start position:0%
will still happen in parallel and those
 

00:52:04.240 --> 00:52:05.910 align:start position:0%
will still happen in parallel and those
are<00:52:04.319><c> presumably</c><00:52:04.720><c> the</c><00:52:04.800><c> expensive</c><00:52:05.200><c> operation</c>

00:52:05.910 --> 00:52:05.920 align:start position:0%
are presumably the expensive operation
 

00:52:05.920 --> 00:52:09.510 align:start position:0%
are presumably the expensive operation
right<00:52:06.160><c> those</c><00:52:06.400><c> go</c><00:52:06.640><c> out</c><00:52:06.800><c> across</c><00:52:07.040><c> the</c><00:52:07.200><c> internet</c>

00:52:09.510 --> 00:52:09.520 align:start position:0%
right those go out across the internet
 

00:52:09.520 --> 00:52:13.910 align:start position:0%
right those go out across the internet
got<00:52:09.760><c> it</c><00:52:09.839><c> thank</c><00:52:10.079><c> you</c>

00:52:13.910 --> 00:52:13.920 align:start position:0%
 
 

00:52:13.920 --> 00:52:16.829 align:start position:0%
 
okay<00:52:14.640><c> let</c><00:52:14.800><c> me</c><00:52:14.960><c> switch</c><00:52:15.200><c> back</c><00:52:15.440><c> to</c><00:52:16.240><c> my</c><00:52:16.480><c> other</c>

00:52:16.829 --> 00:52:16.839 align:start position:0%
okay let me switch back to my other
 

00:52:16.839 --> 00:52:19.349 align:start position:0%
okay let me switch back to my other
screen<00:52:17.839><c> and</c>

00:52:19.349 --> 00:52:19.359 align:start position:0%
screen and
 

00:52:19.359 --> 00:52:21.510 align:start position:0%
screen and
talk<00:52:19.599><c> a</c><00:52:19.680><c> little</c><00:52:19.839><c> bit</c><00:52:19.920><c> about</c><00:52:20.160><c> rpc</c><00:52:21.119><c> since</c><00:52:21.359><c> that's</c>

00:52:21.510 --> 00:52:21.520 align:start position:0%
talk a little bit about rpc since that's
 

00:52:21.520 --> 00:52:23.510 align:start position:0%
talk a little bit about rpc since that's
the<00:52:21.680><c> other</c><00:52:21.920><c> thing</c><00:52:22.240><c> tool</c><00:52:22.480><c> that</c><00:52:22.640><c> you</c><00:52:22.800><c> need</c>

00:52:23.510 --> 00:52:23.520 align:start position:0%
the other thing tool that you need
 

00:52:23.520 --> 00:52:27.589 align:start position:0%
the other thing tool that you need
for<00:52:23.680><c> the</c><00:52:23.839><c> labs</c>

00:52:27.589 --> 00:52:27.599 align:start position:0%
 
 

00:52:27.599 --> 00:52:29.349 align:start position:0%
 
i'm<00:52:27.760><c> not</c><00:52:27.920><c> going</c><00:52:28.000><c> to</c><00:52:28.160><c> say</c><00:52:28.319><c> a</c><00:52:28.400><c> ton</c><00:52:28.559><c> about</c><00:52:28.800><c> it</c><00:52:29.119><c> but</c>

00:52:29.349 --> 00:52:29.359 align:start position:0%
i'm not going to say a ton about it but
 

00:52:29.359 --> 00:52:31.510 align:start position:0%
i'm not going to say a ton about it but
there's<00:52:29.599><c> a</c>

00:52:31.510 --> 00:52:31.520 align:start position:0%
there's a
 

00:52:31.520 --> 00:52:34.309 align:start position:0%
there's a
rpc<00:52:32.319><c> which</c><00:52:32.559><c> stands</c><00:52:32.800><c> for</c><00:52:33.040><c> remote</c><00:52:33.839><c> procedure</c>

00:52:34.309 --> 00:52:34.319 align:start position:0%
rpc which stands for remote procedure
 

00:52:34.319 --> 00:52:41.589 align:start position:0%
rpc which stands for remote procedure
call

00:52:41.589 --> 00:52:41.599 align:start position:0%
 
 

00:52:41.599 --> 00:52:44.710 align:start position:0%
 
and<00:52:41.920><c> basically</c><00:52:42.319><c> the</c><00:52:42.480><c> goal</c><00:52:43.200><c> you</c><00:52:43.280><c> know</c><00:52:43.440><c> the</c><00:52:44.400><c> goal</c>

00:52:44.710 --> 00:52:44.720 align:start position:0%
and basically the goal you know the goal
 

00:52:44.720 --> 00:52:45.670 align:start position:0%
and basically the goal you know the goal
of<00:52:44.880><c> an</c>

00:52:45.670 --> 00:52:45.680 align:start position:0%
of an
 

00:52:45.680 --> 00:52:48.069 align:start position:0%
of an
ipc<00:52:46.240><c> system</c><00:52:46.720><c> uh</c><00:52:46.960><c> like</c><00:52:47.119><c> the</c><00:52:47.280><c> one</c><00:52:47.440><c> that</c><00:52:47.599><c> go</c><00:52:47.839><c> has</c>

00:52:48.069 --> 00:52:48.079 align:start position:0%
ipc system uh like the one that go has
 

00:52:48.079 --> 00:52:49.990 align:start position:0%
ipc system uh like the one that go has
is<00:52:48.240><c> to</c><00:52:48.319><c> make</c><00:52:48.559><c> sort</c><00:52:48.720><c> of</c><00:52:48.880><c> rpcs</c>

00:52:49.990 --> 00:52:50.000 align:start position:0%
is to make sort of rpcs
 

00:52:50.000 --> 00:52:52.630 align:start position:0%
is to make sort of rpcs
behave<00:52:50.559><c> roughly</c><00:52:50.960><c> similar</c><00:52:51.839><c> to</c><00:52:52.079><c> procedural</c>

00:52:52.630 --> 00:52:52.640 align:start position:0%
behave roughly similar to procedural
 

00:52:52.640 --> 00:52:53.430 align:start position:0%
behave roughly similar to procedural
calls

00:52:53.430 --> 00:52:53.440 align:start position:0%
calls
 

00:52:53.440 --> 00:52:54.870 align:start position:0%
calls
local<00:52:53.680><c> procedure</c><00:52:54.079><c> calls</c><00:52:54.319><c> that</c><00:52:54.400><c> you</c><00:52:54.480><c> execute</c>

00:52:54.870 --> 00:52:54.880 align:start position:0%
local procedure calls that you execute
 

00:52:54.880 --> 00:52:57.190 align:start position:0%
local procedure calls that you execute
on<00:52:54.960><c> the</c><00:52:55.119><c> stack</c><00:52:56.000><c> right</c><00:52:56.319><c> and</c><00:52:56.400><c> so</c>

00:52:57.190 --> 00:52:57.200 align:start position:0%
on the stack right and so
 

00:52:57.200 --> 00:52:58.870 align:start position:0%
on the stack right and so
the<00:52:57.359><c> goal</c><00:52:57.680><c> is</c><00:52:57.839><c> that</c><00:52:58.000><c> for</c><00:52:58.160><c> example</c><00:52:58.480><c> if</c><00:52:58.640><c> you</c><00:52:58.720><c> have</c>

00:52:58.870 --> 00:52:58.880 align:start position:0%
the goal is that for example if you have
 

00:52:58.880 --> 00:53:01.030 align:start position:0%
the goal is that for example if you have
a<00:52:58.960><c> client</c><00:53:00.160><c> in</c><00:53:00.400><c> rpc</c>

00:53:01.030 --> 00:53:01.040 align:start position:0%
a client in rpc
 

00:53:01.040 --> 00:53:03.430 align:start position:0%
a client in rpc
terminology<00:53:01.839><c> the</c><00:53:02.720><c> caller</c><00:53:02.960><c> is</c><00:53:03.040><c> typically</c>

00:53:03.430 --> 00:53:03.440 align:start position:0%
terminology the caller is typically
 

00:53:03.440 --> 00:53:05.670 align:start position:0%
terminology the caller is typically
called<00:53:03.599><c> the</c><00:53:03.760><c> client</c><00:53:04.319><c> and</c><00:53:04.559><c> the</c>

00:53:05.670 --> 00:53:05.680 align:start position:0%
called the client and the
 

00:53:05.680 --> 00:53:08.069 align:start position:0%
called the client and the
the<00:53:05.839><c> callee</c><00:53:06.240><c> is</c><00:53:06.319><c> called</c><00:53:06.480><c> the</c><00:53:06.559><c> server</c><00:53:07.760><c> saying</c>

00:53:08.069 --> 00:53:08.079 align:start position:0%
the callee is called the server saying
 

00:53:08.079 --> 00:53:09.670 align:start position:0%
the callee is called the server saying
you<00:53:08.240><c> have</c><00:53:08.400><c> a</c><00:53:08.480><c> function</c><00:53:08.800><c> in</c>

00:53:09.670 --> 00:53:09.680 align:start position:0%
you have a function in
 

00:53:09.680 --> 00:53:11.910 align:start position:0%
you have a function in
you<00:53:09.760><c> know</c><00:53:10.000><c> fn</c><00:53:10.559><c> you</c><00:53:10.720><c> know</c><00:53:11.040><c> we're</c><00:53:11.280><c> calling</c><00:53:11.599><c> with</c>

00:53:11.910 --> 00:53:11.920 align:start position:0%
you know fn you know we're calling with
 

00:53:11.920 --> 00:53:13.190 align:start position:0%
you know fn you know we're calling with
x<00:53:12.160><c> and</c><00:53:12.319><c> y</c>

00:53:13.190 --> 00:53:13.200 align:start position:0%
x and y
 

00:53:13.200 --> 00:53:15.109 align:start position:0%
x and y
and<00:53:13.359><c> then</c><00:53:13.599><c> at</c><00:53:13.680><c> the</c><00:53:13.839><c> server</c><00:53:14.720><c> there's</c><00:53:14.960><c> the</c>

00:53:15.109 --> 00:53:15.119 align:start position:0%
and then at the server there's the
 

00:53:15.119 --> 00:53:18.470 align:start position:0%
and then at the server there's the
implementation<00:53:15.680><c> of</c><00:53:15.760><c> this</c><00:53:15.920><c> function</c>

00:53:18.470 --> 00:53:18.480 align:start position:0%
 
 

00:53:18.480 --> 00:53:20.790 align:start position:0%
 
and<00:53:18.640><c> so</c><00:53:18.880><c> there's</c><00:53:19.119><c> a</c><00:53:19.200><c> function</c><00:53:19.599><c> n</c><00:53:19.839><c> whatever</c><00:53:20.240><c> x</c>

00:53:20.790 --> 00:53:20.800 align:start position:0%
and so there's a function n whatever x
 

00:53:20.800 --> 00:53:21.510 align:start position:0%
and so there's a function n whatever x
comma<00:53:21.119><c> y</c>

00:53:21.510 --> 00:53:21.520 align:start position:0%
comma y
 

00:53:21.520 --> 00:53:25.270 align:start position:0%
comma y
int<00:53:22.800><c> and</c><00:53:23.520><c> you</c><00:53:23.680><c> know</c><00:53:23.760><c> it</c><00:53:23.920><c> returns</c>

00:53:25.270 --> 00:53:25.280 align:start position:0%
int and you know it returns
 

00:53:25.280 --> 00:53:26.710 align:start position:0%
int and you know it returns
you<00:53:25.359><c> know</c><00:53:25.520><c> whatever</c><00:53:25.839><c> does</c><00:53:26.000><c> some</c><00:53:26.160><c> computation</c>

00:53:26.710 --> 00:53:26.720 align:start position:0%
you know whatever does some computation
 

00:53:26.720 --> 00:53:29.990 align:start position:0%
you know whatever does some computation
but<00:53:26.880><c> maybe</c><00:53:27.200><c> use</c><00:53:27.359><c> this</c><00:53:27.520><c> returns</c>

00:53:29.990 --> 00:53:30.000 align:start position:0%
but maybe use this returns
 

00:53:30.000 --> 00:53:33.190 align:start position:0%
but maybe use this returns
uh<00:53:30.400><c> x</c><00:53:30.559><c> plus</c><00:53:30.800><c> y</c>

00:53:33.190 --> 00:53:33.200 align:start position:0%
 
 

00:53:33.200 --> 00:53:36.150 align:start position:0%
 
right<00:53:33.520><c> and</c><00:53:33.680><c> so</c><00:53:34.079><c> uh</c><00:53:35.040><c> what</c><00:53:35.200><c> we</c><00:53:35.440><c> like</c><00:53:35.599><c> to</c><00:53:35.839><c> like</c><00:53:36.000><c> to</c>

00:53:36.150 --> 00:53:36.160 align:start position:0%
right and so uh what we like to like to
 

00:53:36.160 --> 00:53:37.670 align:start position:0%
right and so uh what we like to like to
have<00:53:36.319><c> happen</c><00:53:36.720><c> or</c><00:53:36.880><c> like</c><00:53:37.040><c> the</c><00:53:37.200><c> model</c><00:53:37.440><c> that</c><00:53:37.520><c> we</c>

00:53:37.670 --> 00:53:37.680 align:start position:0%
have happen or like the model that we
 

00:53:37.680 --> 00:53:38.549 align:start position:0%
have happen or like the model that we
would<00:53:37.839><c> like</c><00:53:38.000><c> to</c>

00:53:38.549 --> 00:53:38.559 align:start position:0%
would like to
 

00:53:38.559 --> 00:53:40.470 align:start position:0%
would like to
sort<00:53:38.800><c> ourselves</c><00:53:39.359><c> to</c><00:53:39.440><c> think</c><00:53:39.599><c> about</c><00:53:39.920><c> is</c><00:53:40.079><c> that</c>

00:53:40.470 --> 00:53:40.480 align:start position:0%
sort ourselves to think about is that
 

00:53:40.480 --> 00:53:42.150 align:start position:0%
sort ourselves to think about is that
when<00:53:40.640><c> the</c><00:53:40.720><c> client</c><00:53:40.960><c> calls</c><00:53:41.200><c> this</c><00:53:41.359><c> function</c>

00:53:42.150 --> 00:53:42.160 align:start position:0%
when the client calls this function
 

00:53:42.160 --> 00:53:45.190 align:start position:0%
when the client calls this function
uh<00:53:42.480><c> fn</c><00:53:43.280><c> uh</c><00:53:43.599><c> the</c><00:53:43.760><c> rpc</c><00:53:44.319><c> system</c><00:53:44.800><c> will</c>

00:53:45.190 --> 00:53:45.200 align:start position:0%
uh fn uh the rpc system will
 

00:53:45.200 --> 00:53:46.549 align:start position:0%
uh fn uh the rpc system will
make<00:53:45.359><c> sure</c><00:53:45.680><c> that</c><00:53:45.839><c> there's</c><00:53:46.000><c> an</c><00:53:46.160><c> infra</c>

00:53:46.549 --> 00:53:46.559 align:start position:0%
make sure that there's an infra
 

00:53:46.559 --> 00:53:48.069 align:start position:0%
make sure that there's an infra
corresponding<00:53:47.119><c> amount</c><00:53:47.280><c> of</c><00:53:47.520><c> information</c>

00:53:48.069 --> 00:53:48.079 align:start position:0%
corresponding amount of information
 

00:53:48.079 --> 00:53:49.750 align:start position:0%
corresponding amount of information
happening<00:53:48.400><c> on</c><00:53:48.480><c> the</c><00:53:48.640><c> server</c><00:53:48.960><c> side</c>

00:53:49.750 --> 00:53:49.760 align:start position:0%
happening on the server side
 

00:53:49.760 --> 00:53:52.069 align:start position:0%
happening on the server side
uh<00:53:50.160><c> passes</c><00:53:50.480><c> the</c><00:53:50.640><c> arguments</c><00:53:51.200><c> x</c><00:53:51.359><c> and</c><00:53:51.520><c> y</c><00:53:51.760><c> you</c><00:53:51.920><c> know</c>

00:53:52.069 --> 00:53:52.079 align:start position:0%
uh passes the arguments x and y you know
 

00:53:52.079 --> 00:53:53.030 align:start position:0%
uh passes the arguments x and y you know
to<00:53:52.240><c> the</c><00:53:52.400><c> server</c>

00:53:53.030 --> 00:53:53.040 align:start position:0%
to the server
 

00:53:53.040 --> 00:53:55.829 align:start position:0%
to the server
the<00:53:53.200><c> code</c><00:53:53.440><c> runs</c><00:53:53.760><c> on</c><00:53:53.839><c> the</c><00:53:54.000><c> server</c><00:53:54.880><c> uh</c><00:53:55.359><c> it</c><00:53:55.680><c> you</c>

00:53:55.829 --> 00:53:55.839 align:start position:0%
the code runs on the server uh it you
 

00:53:55.839 --> 00:53:56.309 align:start position:0%
the code runs on the server uh it you
know

00:53:56.309 --> 00:53:56.319 align:start position:0%
know
 

00:53:56.319 --> 00:53:59.109 align:start position:0%
know
returns<00:53:56.720><c> a</c><00:53:56.800><c> result</c><00:53:57.280><c> you</c><00:53:57.440><c> know</c><00:53:57.760><c> you</c><00:53:57.839><c> see</c><00:53:58.960><c> and</c>

00:53:59.109 --> 00:53:59.119 align:start position:0%
returns a result you know you see and
 

00:53:59.119 --> 00:54:00.390 align:start position:0%
returns a result you know you see and
that<00:53:59.280><c> result</c><00:53:59.760><c> is</c><00:53:59.839><c> then</c>

00:54:00.390 --> 00:54:00.400 align:start position:0%
that result is then
 

00:54:00.400 --> 00:54:02.950 align:start position:0%
that result is then
communicated<00:54:00.960><c> back</c><00:54:01.200><c> to</c><00:54:01.440><c> the</c><00:54:01.599><c> client</c><00:54:02.400><c> and</c><00:54:02.880><c> you</c>

00:54:02.950 --> 00:54:02.960 align:start position:0%
communicated back to the client and you
 

00:54:02.960 --> 00:54:04.470 align:start position:0%
communicated back to the client and you
know<00:54:03.359><c> and</c><00:54:03.839><c> and</c><00:54:04.000><c> then</c>

00:54:04.470 --> 00:54:04.480 align:start position:0%
know and and then
 

00:54:04.480 --> 00:54:07.109 align:start position:0%
know and and then
fn<00:54:04.880><c> will</c><00:54:05.119><c> resume</c><00:54:05.760><c> and</c><00:54:06.079><c> will</c><00:54:06.240><c> return</c><00:54:06.800><c> and</c><00:54:06.960><c> the</c>

00:54:07.109 --> 00:54:07.119 align:start position:0%
fn will resume and will return and the
 

00:54:07.119 --> 00:54:08.390 align:start position:0%
fn will resume and will return and the
client<00:54:07.440><c> will</c><00:54:07.599><c> return</c><00:54:08.079><c> uh</c>

00:54:08.390 --> 00:54:08.400 align:start position:0%
client will return uh
 

00:54:08.400 --> 00:54:11.270 align:start position:0%
client will return uh
we'll<00:54:08.559><c> resume</c><00:54:09.119><c> with</c><00:54:09.440><c> you</c><00:54:09.599><c> know</c><00:54:09.680><c> the</c><00:54:10.480><c> x</c><00:54:10.640><c> plus</c><00:54:10.960><c> y</c>

00:54:11.270 --> 00:54:11.280 align:start position:0%
we'll resume with you know the x plus y
 

00:54:11.280 --> 00:54:11.750 align:start position:0%
we'll resume with you know the x plus y
in

00:54:11.750 --> 00:54:11.760 align:start position:0%
in
 

00:54:11.760 --> 00:54:14.549 align:start position:0%
in
the<00:54:11.839><c> value</c><00:54:12.079><c> of</c><00:54:12.240><c> x</c><00:54:12.400><c> plus</c><00:54:12.559><c> y</c><00:54:12.720><c> and</c><00:54:12.960><c> z</c><00:54:13.680><c> right</c><00:54:14.400><c> so</c>

00:54:14.549 --> 00:54:14.559 align:start position:0%
the value of x plus y and z right so
 

00:54:14.559 --> 00:54:15.910 align:start position:0%
the value of x plus y and z right so
this<00:54:14.800><c> looks</c><00:54:14.960><c> like</c><00:54:15.200><c> you</c><00:54:15.280><c> know</c><00:54:15.440><c> even</c><00:54:15.599><c> though</c><00:54:15.760><c> the</c>

00:54:15.910 --> 00:54:15.920 align:start position:0%
this looks like you know even though the
 

00:54:15.920 --> 00:54:17.030 align:start position:0%
this looks like you know even though the
programs<00:54:16.319><c> are</c><00:54:16.400><c> running</c><00:54:16.640><c> on</c><00:54:16.800><c> different</c>

00:54:17.030 --> 00:54:17.040 align:start position:0%
programs are running on different
 

00:54:17.040 --> 00:54:17.829 align:start position:0%
programs are running on different
computers

00:54:17.829 --> 00:54:17.839 align:start position:0%
computers
 

00:54:17.839 --> 00:54:18.950 align:start position:0%
computers
you<00:54:17.920><c> know</c><00:54:18.079><c> they're</c><00:54:18.319><c> not</c><00:54:18.480><c> sort</c><00:54:18.559><c> of</c><00:54:18.720><c> a</c><00:54:18.800><c> hard</c>

00:54:18.950 --> 00:54:18.960 align:start position:0%
you know they're not sort of a hard
 

00:54:18.960 --> 00:54:21.270 align:start position:0%
you know they're not sort of a hard
boundary<00:54:19.440><c> here</c><00:54:19.920><c> uh</c><00:54:20.240><c> it</c><00:54:20.319><c> looks</c><00:54:20.559><c> like</c><00:54:20.800><c> you</c><00:54:20.880><c> know</c>

00:54:21.270 --> 00:54:21.280 align:start position:0%
boundary here uh it looks like you know
 

00:54:21.280 --> 00:54:23.109 align:start position:0%
boundary here uh it looks like you know
they<00:54:21.520><c> they</c><00:54:22.000><c> uh</c><00:54:22.400><c> make</c><00:54:22.640><c> sort</c><00:54:22.800><c> of</c><00:54:22.880><c> regular</c>

00:54:23.109 --> 00:54:23.119 align:start position:0%
they they uh make sort of regular
 

00:54:23.119 --> 00:54:24.790 align:start position:0%
they they uh make sort of regular
procedure<00:54:23.599><c> calls</c>

00:54:24.790 --> 00:54:24.800 align:start position:0%
procedure calls
 

00:54:24.800 --> 00:54:26.630 align:start position:0%
procedure calls
um<00:54:25.440><c> and</c><00:54:25.520><c> we'll</c><00:54:25.680><c> see</c><00:54:25.839><c> in</c><00:54:25.920><c> a</c><00:54:26.000><c> second</c><00:54:26.240><c> that</c>

00:54:26.630 --> 00:54:26.640 align:start position:0%
um and we'll see in a second that
 

00:54:26.640 --> 00:54:28.230 align:start position:0%
um and we'll see in a second that
actually<00:54:27.200><c> uh</c>

00:54:28.230 --> 00:54:28.240 align:start position:0%
actually uh
 

00:54:28.240 --> 00:54:29.829 align:start position:0%
actually uh
we<00:54:28.480><c> can</c><00:54:28.559><c> make</c><00:54:28.720><c> a</c><00:54:28.800><c> lot</c><00:54:28.960><c> of</c><00:54:29.040><c> similarities</c><00:54:29.599><c> but</c>

00:54:29.829 --> 00:54:29.839 align:start position:0%
we can make a lot of similarities but
 

00:54:29.839 --> 00:54:31.270 align:start position:0%
we can make a lot of similarities but
it's<00:54:30.000><c> possible</c><00:54:30.319><c> to</c><00:54:30.400><c> make</c><00:54:30.559><c> them</c><00:54:30.720><c> very</c><00:54:30.960><c> behave</c>

00:54:31.270 --> 00:54:31.280 align:start position:0%
it's possible to make them very behave
 

00:54:31.280 --> 00:54:32.069 align:start position:0%
it's possible to make them very behave
very<00:54:31.520><c> similar</c>

00:54:32.069 --> 00:54:32.079 align:start position:0%
very similar
 

00:54:32.079 --> 00:54:33.510 align:start position:0%
very similar
but<00:54:32.319><c> we'll</c><00:54:32.480><c> see</c><00:54:32.640><c> there's</c><00:54:32.880><c> also</c><00:54:33.119><c> a</c><00:54:33.200><c> sort</c><00:54:33.359><c> of</c><00:54:33.440><c> a</c>

00:54:33.510 --> 00:54:33.520 align:start position:0%
but we'll see there's also a sort of a
 

00:54:33.520 --> 00:54:35.109 align:start position:0%
but we'll see there's also a sort of a
fundamental<00:54:34.079><c> difference</c><00:54:34.480><c> that</c><00:54:34.720><c> actually</c><00:54:34.960><c> has</c>

00:54:35.109 --> 00:54:35.119 align:start position:0%
fundamental difference that actually has
 

00:54:35.119 --> 00:54:37.910 align:start position:0%
fundamental difference that actually has
to<00:54:35.200><c> really</c><00:54:35.359><c> do</c><00:54:35.520><c> with</c><00:54:35.680><c> distributed</c><00:54:36.839><c> computing</c>

00:54:37.910 --> 00:54:37.920 align:start position:0%
to really do with distributed computing
 

00:54:37.920 --> 00:54:39.190 align:start position:0%
to really do with distributed computing
but<00:54:38.079><c> before</c><00:54:38.400><c> getting</c><00:54:38.559><c> there</c><00:54:38.799><c> let</c><00:54:38.960><c> me</c><00:54:39.040><c> first</c>

00:54:39.190 --> 00:54:39.200 align:start position:0%
but before getting there let me first
 

00:54:39.200 --> 00:54:39.670 align:start position:0%
but before getting there let me first
sort<00:54:39.359><c> of</c>

00:54:39.670 --> 00:54:39.680 align:start position:0%
sort of
 

00:54:39.680 --> 00:54:43.109 align:start position:0%
sort of
uh<00:54:40.720><c> sketch</c><00:54:41.119><c> out</c><00:54:41.280><c> how</c><00:54:41.440><c> you</c><00:54:41.599><c> can</c><00:54:41.680><c> make</c><00:54:41.839><c> this</c><00:54:42.079><c> work</c>

00:54:43.109 --> 00:54:43.119 align:start position:0%
uh sketch out how you can make this work
 

00:54:43.119 --> 00:54:44.390 align:start position:0%
uh sketch out how you can make this work
and<00:54:43.280><c> this</c><00:54:43.440><c> is</c><00:54:43.520><c> sort</c><00:54:43.680><c> of</c><00:54:43.839><c> roughly</c><00:54:44.160><c> you</c><00:54:44.240><c> know</c>

00:54:44.390 --> 00:54:44.400 align:start position:0%
and this is sort of roughly you know
 

00:54:44.400 --> 00:54:46.309 align:start position:0%
and this is sort of roughly you know
what<00:54:44.559><c> go</c><00:54:44.720><c> does</c><00:54:44.960><c> too</c><00:54:45.680><c> so</c>

00:54:46.309 --> 00:54:46.319 align:start position:0%
what go does too so
 

00:54:46.319 --> 00:54:47.829 align:start position:0%
what go does too so
so<00:54:46.480><c> the</c><00:54:46.559><c> way</c><00:54:46.880><c> you</c><00:54:46.960><c> know</c><00:54:47.119><c> to</c><00:54:47.200><c> think</c><00:54:47.359><c> about</c><00:54:47.520><c> it</c><00:54:47.680><c> is</c>

00:54:47.829 --> 00:54:47.839 align:start position:0%
so the way you know to think about it is
 

00:54:47.839 --> 00:54:50.230 align:start position:0%
so the way you know to think about it is
that<00:54:48.160><c> when</c><00:54:48.319><c> the</c><00:54:48.480><c> client</c>

00:54:50.230 --> 00:54:50.240 align:start position:0%
that when the client
 

00:54:50.240 --> 00:54:53.430 align:start position:0%
that when the client
near<00:54:50.480><c> our</c><00:54:50.880><c> program</c><00:54:52.559><c> and</c><00:54:52.880><c> when</c><00:54:53.119><c> the</c><00:54:53.200><c> client</c>

00:54:53.430 --> 00:54:53.440 align:start position:0%
near our program and when the client
 

00:54:53.440 --> 00:54:54.549 align:start position:0%
near our program and when the client
calls<00:54:53.760><c> the</c><00:54:53.920><c> function</c><00:54:54.319><c> f</c>

00:54:54.549 --> 00:54:54.559 align:start position:0%
calls the function f
 

00:54:54.559 --> 00:54:57.990 align:start position:0%
calls the function f
n<00:54:54.960><c> with</c><00:54:55.200><c> x</c><00:54:55.440><c> and</c><00:54:55.599><c> y</c><00:54:56.000><c> in</c><00:54:56.160><c> it</c><00:54:57.040><c> uh</c><00:54:57.280><c> what</c><00:54:57.520><c> it</c><00:54:57.599><c> does</c><00:54:57.839><c> is</c>

00:54:57.990 --> 00:54:58.000 align:start position:0%
n with x and y in it uh what it does is
 

00:54:58.000 --> 00:54:59.430 align:start position:0%
n with x and y in it uh what it does is
actually<00:54:58.240><c> calls</c><00:54:58.640><c> something</c><00:54:58.880><c> what's</c><00:54:59.119><c> called</c><00:54:59.280><c> a</c>

00:54:59.430 --> 00:54:59.440 align:start position:0%
actually calls something what's called a
 

00:54:59.440 --> 00:55:01.270 align:start position:0%
actually calls something what's called a
stop

00:55:01.270 --> 00:55:01.280 align:start position:0%
stop
 

00:55:01.280 --> 00:55:02.870 align:start position:0%
stop
and<00:55:01.520><c> the</c><00:55:01.680><c> stop</c><00:55:02.000><c> is</c><00:55:02.079><c> basically</c><00:55:02.400><c> a</c><00:55:02.559><c> local</c>

00:55:02.870 --> 00:55:02.880 align:start position:0%
and the stop is basically a local
 

00:55:02.880 --> 00:55:04.870 align:start position:0%
and the stop is basically a local
function<00:55:03.359><c> you</c><00:55:03.520><c> know</c><00:55:03.680><c> called</c><00:55:04.000><c> f</c><00:55:04.240><c> n</c>

00:55:04.870 --> 00:55:04.880 align:start position:0%
function you know called f n
 

00:55:04.880 --> 00:55:07.430 align:start position:0%
function you know called f n
and<00:55:05.200><c> with</c><00:55:05.440><c> the</c><00:55:05.599><c> two</c><00:55:05.839><c> arguments</c><00:55:06.799><c> declared</c><00:55:07.280><c> with</c>

00:55:07.430 --> 00:55:07.440 align:start position:0%
and with the two arguments declared with
 

00:55:07.440 --> 00:55:08.230 align:start position:0%
and with the two arguments declared with
x<00:55:07.599><c> and</c><00:55:07.680><c> y</c>

00:55:08.230 --> 00:55:08.240 align:start position:0%
x and y
 

00:55:08.240 --> 00:55:11.349 align:start position:0%
x and y
and<00:55:08.480><c> basically</c><00:55:08.799><c> what</c><00:55:08.960><c> the</c><00:55:09.040><c> stop</c><00:55:09.359><c> does</c>

00:55:11.349 --> 00:55:11.359 align:start position:0%
and basically what the stop does
 

00:55:11.359 --> 00:55:13.349 align:start position:0%
and basically what the stop does
you<00:55:11.520><c> think</c><00:55:11.760><c> this</c><00:55:11.920><c> is</c><00:55:12.000><c> a</c><00:55:12.160><c> stop</c><00:55:12.400><c> procedure</c><00:55:13.280><c> and</c>

00:55:13.349 --> 00:55:13.359 align:start position:0%
you think this is a stop procedure and
 

00:55:13.359 --> 00:55:14.870 align:start position:0%
you think this is a stop procedure and
what<00:55:13.520><c> the</c><00:55:13.599><c> stop</c><00:55:13.839><c> procedure</c><00:55:14.319><c> basically</c><00:55:14.640><c> does</c>

00:55:14.870 --> 00:55:14.880 align:start position:0%
what the stop procedure basically does
 

00:55:14.880 --> 00:55:15.270 align:start position:0%
what the stop procedure basically does
it

00:55:15.270 --> 00:55:15.280 align:start position:0%
it
 

00:55:15.280 --> 00:55:18.230 align:start position:0%
it
builds<00:55:15.520><c> a</c><00:55:15.599><c> message</c><00:55:17.200><c> uh</c><00:55:17.680><c> you</c><00:55:17.760><c> know</c><00:55:17.920><c> saying</c><00:55:18.160><c> you</c>

00:55:18.230 --> 00:55:18.240 align:start position:0%
builds a message uh you know saying you
 

00:55:18.240 --> 00:55:20.230 align:start position:0%
builds a message uh you know saying you
know<00:55:18.400><c> which</c><00:55:18.640><c> function</c><00:55:18.960><c> needs</c><00:55:19.200><c> to</c><00:55:19.280><c> be</c><00:55:19.440><c> called</c>

00:55:20.230 --> 00:55:20.240 align:start position:0%
know which function needs to be called
 

00:55:20.240 --> 00:55:22.150 align:start position:0%
know which function needs to be called
you<00:55:20.319><c> know</c><00:55:20.480><c> the</c><00:55:20.640><c> arguments</c><00:55:21.280><c> of</c><00:55:21.440><c> the</c><00:55:21.520><c> function</c>

00:55:22.150 --> 00:55:22.160 align:start position:0%
you know the arguments of the function
 

00:55:22.160 --> 00:55:23.510 align:start position:0%
you know the arguments of the function
you<00:55:22.240><c> know</c><00:55:22.400><c> the</c><00:55:22.559><c> types</c><00:55:22.880><c> of</c><00:55:22.960><c> the</c><00:55:23.200><c> fun</c>

00:55:23.510 --> 00:55:23.520 align:start position:0%
you know the types of the fun
 

00:55:23.520 --> 00:55:25.670 align:start position:0%
you know the types of the fun
of<00:55:23.599><c> those</c><00:55:24.000><c> arguments</c><00:55:24.559><c> the</c><00:55:24.960><c> values</c><00:55:25.359><c> of</c><00:55:25.440><c> these</c>

00:55:25.670 --> 00:55:25.680 align:start position:0%
of those arguments the values of these
 

00:55:25.680 --> 00:55:26.549 align:start position:0%
of those arguments the values of these
arguments

00:55:26.549 --> 00:55:26.559 align:start position:0%
arguments
 

00:55:26.559 --> 00:55:29.589 align:start position:0%
arguments
et<00:55:26.720><c> cetera</c><00:55:26.960><c> et</c><00:55:27.040><c> cetera</c><00:55:28.000><c> and</c><00:55:28.160><c> then</c><00:55:28.960><c> uh</c>

00:55:29.589 --> 00:55:29.599 align:start position:0%
et cetera et cetera and then uh
 

00:55:29.599 --> 00:55:31.990 align:start position:0%
et cetera et cetera and then uh
what<00:55:29.839><c> the</c><00:55:30.319><c> uh</c><00:55:30.799><c> stuff</c><00:55:31.119><c> does</c><00:55:31.359><c> actually</c><00:55:31.680><c> it</c><00:55:31.760><c> sends</c>

00:55:31.990 --> 00:55:32.000 align:start position:0%
what the uh stuff does actually it sends
 

00:55:32.000 --> 00:55:32.950 align:start position:0%
what the uh stuff does actually it sends
it<00:55:32.160><c> over</c><00:55:32.319><c> to</c><00:55:32.400><c> network</c>

00:55:32.950 --> 00:55:32.960 align:start position:0%
it over to network
 

00:55:32.960 --> 00:55:35.190 align:start position:0%
it over to network
you<00:55:33.040><c> know</c><00:55:33.200><c> to</c><00:55:33.520><c> a</c><00:55:33.680><c> corresponding</c><00:55:34.640><c> stub</c><00:55:34.960><c> at</c><00:55:35.040><c> the</c>

00:55:35.190 --> 00:55:35.200 align:start position:0%
you know to a corresponding stub at the
 

00:55:35.200 --> 00:55:38.870 align:start position:0%
you know to a corresponding stub at the
server

00:55:38.870 --> 00:55:38.880 align:start position:0%
 
 

00:55:38.880 --> 00:55:41.910 align:start position:0%
 
so<00:55:39.119><c> the</c><00:55:39.359><c> server</c><00:55:39.760><c> receives</c><00:55:40.160><c> this</c><00:55:40.400><c> message</c>

00:55:41.910 --> 00:55:41.920 align:start position:0%
so the server receives this message
 

00:55:41.920 --> 00:55:44.549 align:start position:0%
so the server receives this message
and<00:55:42.240><c> basically</c><00:55:42.960><c> you</c><00:55:43.119><c> know</c><00:55:44.160><c> takes</c><00:55:44.400><c> this</c>

00:55:44.549 --> 00:55:44.559 align:start position:0%
and basically you know takes this
 

00:55:44.559 --> 00:55:45.910 align:start position:0%
and basically you know takes this
message

00:55:45.910 --> 00:55:45.920 align:start position:0%
message
 

00:55:45.920 --> 00:55:48.789 align:start position:0%
message
and<00:55:46.079><c> then</c><00:55:46.640><c> marshall</c><00:55:47.040><c> or</c><00:55:47.280><c> marshall</c><00:55:48.400><c> this</c><00:55:48.559><c> is</c><00:55:48.640><c> a</c>

00:55:48.789 --> 00:55:48.799 align:start position:0%
and then marshall or marshall this is a
 

00:55:48.799 --> 00:55:49.270 align:start position:0%
and then marshall or marshall this is a
the

00:55:49.270 --> 00:55:49.280 align:start position:0%
the
 

00:55:49.280 --> 00:55:50.870 align:start position:0%
the
term<00:55:49.680><c> that's</c><00:55:49.920><c> being</c><00:55:50.079><c> used</c><00:55:50.480><c> to</c><00:55:50.559><c> basically</c>

00:55:50.870 --> 00:55:50.880 align:start position:0%
term that's being used to basically
 

00:55:50.880 --> 00:55:52.549 align:start position:0%
term that's being used to basically
convert<00:55:52.079><c> uh</c>

00:55:52.549 --> 00:55:52.559 align:start position:0%
convert uh
 

00:55:52.559 --> 00:55:55.990 align:start position:0%
convert uh
values<00:55:53.359><c> uh</c><00:55:54.079><c> from</c><00:55:54.720><c> sort</c><00:55:54.880><c> of</c><00:55:55.200><c> to</c><00:55:55.359><c> bite</c><00:55:55.599><c> arrays</c>

00:55:55.990 --> 00:55:56.000 align:start position:0%
values uh from sort of to bite arrays
 

00:55:56.000 --> 00:55:57.349 align:start position:0%
values uh from sort of to bite arrays
and<00:55:56.160><c> from</c><00:55:56.319><c> by</c><00:55:56.480><c> the</c><00:55:56.559><c> rays</c><00:55:56.799><c> back</c>

00:55:57.349 --> 00:55:57.359 align:start position:0%
and from by the rays back
 

00:55:57.359 --> 00:56:00.150 align:start position:0%
and from by the rays back
to<00:55:57.520><c> values</c><00:55:58.799><c> and</c><00:55:58.960><c> then</c><00:55:59.200><c> calls</c><00:55:59.680><c> you</c><00:55:59.839><c> know</c><00:56:00.000><c> this</c>

00:56:00.150 --> 00:56:00.160 align:start position:0%
to values and then calls you know this
 

00:56:00.160 --> 00:56:01.109 align:start position:0%
to values and then calls you know this
function

00:56:01.109 --> 00:56:01.119 align:start position:0%
function
 

00:56:01.119 --> 00:56:06.150 align:start position:0%
function
fn<00:56:01.760><c> at</c><00:56:01.920><c> the</c><00:56:02.079><c> server</c><00:56:02.880><c> here's</c><00:56:03.119><c> our</c><00:56:03.680><c> fnx</c>

00:56:06.150 --> 00:56:06.160 align:start position:0%
fn at the server here's our fnx
 

00:56:06.160 --> 00:56:09.349 align:start position:0%
fn at the server here's our fnx
blah<00:56:06.319><c> blah</c><00:56:06.559><c> blah</c>

00:56:09.349 --> 00:56:09.359 align:start position:0%
 
 

00:56:09.359 --> 00:56:10.630 align:start position:0%
 
all<00:56:09.440><c> right</c><00:56:09.520><c> so</c><00:56:09.680><c> the</c><00:56:09.839><c> stub</c><00:56:10.079><c> basically</c><00:56:10.400><c> calls</c>

00:56:10.630 --> 00:56:10.640 align:start position:0%
all right so the stub basically calls
 

00:56:10.640 --> 00:56:12.470 align:start position:0%
all right so the stub basically calls
the<00:56:10.799><c> function</c><00:56:11.119><c> the</c><00:56:11.280><c> function</c><00:56:11.599><c> returns</c><00:56:12.079><c> back</c>

00:56:12.470 --> 00:56:12.480 align:start position:0%
the function the function returns back
 

00:56:12.480 --> 00:56:15.109 align:start position:0%
the function the function returns back
into<00:56:12.720><c> this</c><00:56:12.960><c> stuff</c><00:56:13.920><c> this</c><00:56:14.079><c> stuff</c><00:56:14.400><c> marshalls</c><00:56:14.960><c> you</c>

00:56:15.109 --> 00:56:15.119 align:start position:0%
into this stuff this stuff marshalls you
 

00:56:15.119 --> 00:56:16.789 align:start position:0%
into this stuff this stuff marshalls you
know<00:56:15.200><c> the</c><00:56:15.680><c> response</c><00:56:16.240><c> value</c>

00:56:16.789 --> 00:56:16.799 align:start position:0%
know the response value
 

00:56:16.799 --> 00:56:19.910 align:start position:0%
know the response value
like<00:56:16.960><c> the</c><00:56:17.119><c> z</c><00:56:18.319><c> x</c><00:56:18.480><c> plus</c><00:56:18.720><c> y</c>

00:56:19.910 --> 00:56:19.920 align:start position:0%
like the z x plus y
 

00:56:19.920 --> 00:56:23.990 align:start position:0%
like the z x plus y
um<00:56:20.640><c> and</c><00:56:20.799><c> since</c><00:56:21.040><c> the</c><00:56:21.280><c> back</c><00:56:21.599><c> you</c><00:56:21.760><c> know</c><00:56:22.000><c> to</c><00:56:22.559><c> the</c>

00:56:23.990 --> 00:56:24.000 align:start position:0%
um and since the back you know to the
 

00:56:24.000 --> 00:56:25.750 align:start position:0%
um and since the back you know to the
climb<00:56:24.319><c> stop</c><00:56:24.799><c> and</c><00:56:24.880><c> the</c><00:56:25.040><c> client</c><00:56:25.280><c> stop</c><00:56:25.520><c> is</c><00:56:25.599><c> still</c>

00:56:25.750 --> 00:56:25.760 align:start position:0%
climb stop and the client stop is still
 

00:56:25.760 --> 00:56:27.270 align:start position:0%
climb stop and the client stop is still
waiting<00:56:26.160><c> so</c><00:56:26.319><c> basically</c><00:56:26.720><c> the</c><00:56:26.799><c> client</c><00:56:27.119><c> stuff</c>

00:56:27.270 --> 00:56:27.280 align:start position:0%
waiting so basically the client stuff
 

00:56:27.280 --> 00:56:28.710 align:start position:0%
waiting so basically the client stuff
the<00:56:27.359><c> way</c><00:56:27.520><c> it</c><00:56:27.680><c> actually</c><00:56:27.920><c> works</c><00:56:28.240><c> it</c><00:56:28.400><c> sends</c><00:56:28.640><c> out</c>

00:56:28.710 --> 00:56:28.720 align:start position:0%
the way it actually works it sends out
 

00:56:28.720 --> 00:56:30.150 align:start position:0%
the way it actually works it sends out
the<00:56:28.799><c> request</c><00:56:29.359><c> and</c><00:56:29.440><c> then</c><00:56:29.599><c> waits</c><00:56:29.839><c> for</c><00:56:30.000><c> the</c>

00:56:30.150 --> 00:56:30.160 align:start position:0%
the request and then waits for the
 

00:56:30.160 --> 00:56:31.829 align:start position:0%
the request and then waits for the
response<00:56:30.559><c> and</c><00:56:30.720><c> so</c><00:56:30.799><c> when</c><00:56:30.960><c> the</c><00:56:31.119><c> response</c><00:56:31.520><c> comes</c>

00:56:31.829 --> 00:56:31.839 align:start position:0%
response and so when the response comes
 

00:56:31.839 --> 00:56:32.710 align:start position:0%
response and so when the response comes
back<00:56:32.079><c> in</c>

00:56:32.710 --> 00:56:32.720 align:start position:0%
back in
 

00:56:32.720 --> 00:56:37.990 align:start position:0%
back in
you<00:56:32.799><c> know</c><00:56:32.960><c> it</c><00:56:33.200><c> unmarshals</c>

00:56:37.990 --> 00:56:38.000 align:start position:0%
 
 

00:56:38.000 --> 00:56:39.670 align:start position:0%
 
and<00:56:38.079><c> then</c><00:56:38.480><c> you</c><00:56:38.559><c> know</c><00:56:38.720><c> returns</c><00:56:39.119><c> the</c><00:56:39.200><c> value</c><00:56:39.520><c> to</c>

00:56:39.670 --> 00:56:39.680 align:start position:0%
and then you know returns the value to
 

00:56:39.680 --> 00:56:41.510 align:start position:0%
and then you know returns the value to
the<00:56:39.760><c> clients</c><00:56:40.559><c> right</c><00:56:40.799><c> so</c><00:56:40.960><c> basically</c>

00:56:41.510 --> 00:56:41.520 align:start position:0%
the clients right so basically
 

00:56:41.520 --> 00:56:44.870 align:start position:0%
the clients right so basically
these<00:56:41.760><c> two</c><00:56:42.000><c> stops</c><00:56:42.960><c> uh</c><00:56:43.280><c> sort</c><00:56:43.520><c> of</c><00:56:43.680><c> make</c><00:56:44.160><c> a</c>

00:56:44.870 --> 00:56:44.880 align:start position:0%
these two stops uh sort of make a
 

00:56:44.880 --> 00:56:46.549 align:start position:0%
these two stops uh sort of make a
remote<00:56:45.200><c> procedure</c><00:56:45.599><c> called</c><00:56:45.920><c> look</c><00:56:46.079><c> like</c><00:56:46.319><c> a</c>

00:56:46.549 --> 00:56:46.559 align:start position:0%
remote procedure called look like a
 

00:56:46.559 --> 00:56:47.990 align:start position:0%
remote procedure called look like a
regular<00:56:46.799><c> procedure</c><00:56:47.280><c> called</c><00:56:47.520><c> you</c><00:56:47.599><c> know</c><00:56:47.760><c> for</c>

00:56:47.990 --> 00:56:48.000 align:start position:0%
regular procedure called you know for
 

00:56:48.000 --> 00:56:50.390 align:start position:0%
regular procedure called you know for
almost<00:56:48.240><c> you</c><00:56:48.319><c> can't</c><00:56:48.559><c> tell</c>

00:56:50.390 --> 00:56:50.400 align:start position:0%
almost you can't tell
 

00:56:50.400 --> 00:56:53.430 align:start position:0%
almost you can't tell
and<00:56:50.640><c> the</c><00:56:50.880><c> key</c><00:56:51.839><c> uh</c><00:56:53.200><c> and</c>

00:56:53.430 --> 00:56:53.440 align:start position:0%
and the key uh and
 

00:56:53.440 --> 00:56:54.630 align:start position:0%
and the key uh and
these<00:56:53.599><c> stops</c><00:56:53.920><c> are</c><00:56:54.000><c> generally</c><00:56:54.400><c> you</c><00:56:54.480><c> know</c>

00:56:54.630 --> 00:56:54.640 align:start position:0%
these stops are generally you know
 

00:56:54.640 --> 00:56:56.630 align:start position:0%
these stops are generally you know
automatically<00:56:55.119><c> generated</c><00:56:56.079><c> and</c><00:56:56.240><c> so</c><00:56:56.480><c> the</c>

00:56:56.630 --> 00:56:56.640 align:start position:0%
automatically generated and so the
 

00:56:56.640 --> 00:56:57.670 align:start position:0%
automatically generated and so the
compiler<00:56:57.200><c> and</c><00:56:57.280><c> like</c>

00:56:57.670 --> 00:56:57.680 align:start position:0%
compiler and like
 

00:56:57.680 --> 00:56:58.950 align:start position:0%
compiler and like
in<00:56:57.760><c> case</c><00:56:57.920><c> of</c><00:56:58.000><c> the</c><00:56:58.079><c> cocoa</c><00:56:58.319><c> powder</c><00:56:58.559><c> that</c><00:56:58.799><c> will</c>

00:56:58.950 --> 00:56:58.960 align:start position:0%
in case of the cocoa powder that will
 

00:56:58.960 --> 00:57:01.190 align:start position:0%
in case of the cocoa powder that will
generate<00:56:59.359><c> these</c><00:56:59.440><c> stuff</c><00:56:59.760><c> for</c><00:57:00.000><c> you</c><00:57:00.640><c> uh</c>

00:57:01.190 --> 00:57:01.200 align:start position:0%
generate these stuff for you uh
 

00:57:01.200 --> 00:57:03.589 align:start position:0%
generate these stuff for you uh
and<00:57:01.839><c> uh</c><00:57:02.160><c> do</c><00:57:02.400><c> the</c><00:57:02.640><c> uh</c><00:57:02.880><c> marshalling</c><00:57:03.280><c> and</c><00:57:03.359><c> then</c>

00:57:03.589 --> 00:57:03.599 align:start position:0%
and uh do the uh marshalling and then
 

00:57:03.599 --> 00:57:06.150 align:start position:0%
and uh do the uh marshalling and then
marshall<00:57:03.920><c> your</c><00:57:04.160><c> arguments</c><00:57:04.559><c> for</c><00:57:04.720><c> you</c>

00:57:06.150 --> 00:57:06.160 align:start position:0%
marshall your arguments for you
 

00:57:06.160 --> 00:57:09.589 align:start position:0%
marshall your arguments for you
um<00:57:06.720><c> and</c><00:57:07.359><c> um</c><00:57:08.000><c> and</c><00:57:08.160><c> that's</c><00:57:08.480><c> how</c><00:57:08.640><c> it</c><00:57:08.799><c> goes</c>

00:57:09.589 --> 00:57:09.599 align:start position:0%
um and um and that's how it goes
 

00:57:09.599 --> 00:57:12.950 align:start position:0%
um and um and that's how it goes
also<00:57:10.720><c> so</c><00:57:11.280><c> when</c><00:57:11.520><c> you're</c><00:57:11.839><c> doing</c><00:57:12.240><c> it</c><00:57:12.400><c> from</c><00:57:12.720><c> the</c>

00:57:12.950 --> 00:57:12.960 align:start position:0%
also so when you're doing it from the
 

00:57:12.960 --> 00:57:14.549 align:start position:0%
also so when you're doing it from the
server<00:57:13.359><c> to</c><00:57:13.520><c> the</c><00:57:13.599><c> client</c><00:57:14.000><c> there's</c><00:57:14.240><c> also</c>

00:57:14.549 --> 00:57:14.559 align:start position:0%
server to the client there's also
 

00:57:14.559 --> 00:57:16.630 align:start position:0%
server to the client there's also
another<00:57:14.960><c> stub</c><00:57:15.280><c> again</c>

00:57:16.630 --> 00:57:16.640 align:start position:0%
another stub again
 

00:57:16.640 --> 00:57:18.710 align:start position:0%
another stub again
you<00:57:16.799><c> basically</c><00:57:17.200><c> return</c><00:57:17.599><c> back</c><00:57:17.760><c> to</c><00:57:17.920><c> that</c><00:57:18.480><c> first</c>

00:57:18.710 --> 00:57:18.720 align:start position:0%
you basically return back to that first
 

00:57:18.720 --> 00:57:19.829 align:start position:0%
you basically return back to that first
stop<00:57:19.520><c> so</c>

00:57:19.829 --> 00:57:19.839 align:start position:0%
stop so
 

00:57:19.839 --> 00:57:21.990 align:start position:0%
stop so
this<00:57:20.079><c> stop</c><00:57:20.400><c> this</c><00:57:20.640><c> makes</c><00:57:20.799><c> a</c><00:57:20.960><c> procedure</c><00:57:21.359><c> call</c><00:57:21.599><c> to</c>

00:57:21.990 --> 00:57:22.000 align:start position:0%
this stop this makes a procedure call to
 

00:57:22.000 --> 00:57:23.990 align:start position:0%
this stop this makes a procedure call to
basically<00:57:22.400><c> calls</c><00:57:22.640><c> the</c><00:57:22.720><c> procedure</c><00:57:23.280><c> fm</c>

00:57:23.990 --> 00:57:24.000 align:start position:0%
basically calls the procedure fm
 

00:57:24.000 --> 00:57:25.910 align:start position:0%
basically calls the procedure fm
that<00:57:24.160><c> procedure</c><00:57:24.640><c> returns</c><00:57:25.200><c> right</c><00:57:25.520><c> into</c><00:57:25.760><c> the</c>

00:57:25.910 --> 00:57:25.920 align:start position:0%
that procedure returns right into the
 

00:57:25.920 --> 00:57:27.109 align:start position:0%
that procedure returns right into the
stop<00:57:26.160><c> because</c><00:57:26.400><c> the</c><00:57:26.799><c> stop</c>

00:57:27.109 --> 00:57:27.119 align:start position:0%
stop because the stop
 

00:57:27.119 --> 00:57:29.190 align:start position:0%
stop because the stop
called<00:57:27.440><c> it</c><00:57:27.839><c> oh</c><00:57:28.000><c> it's</c><00:57:28.160><c> the</c><00:57:28.240><c> same</c><00:57:28.640><c> stuff</c><00:57:28.960><c> that</c><00:57:29.119><c> it</c>

00:57:29.190 --> 00:57:29.200 align:start position:0%
called it oh it's the same stuff that it
 

00:57:29.200 --> 00:57:30.230 align:start position:0%
called it oh it's the same stuff that it
goes<00:57:29.520><c> in</c>

00:57:30.230 --> 00:57:30.240 align:start position:0%
goes in
 

00:57:30.240 --> 00:57:34.789 align:start position:0%
goes in
exactly<00:57:31.839><c> got</c><00:57:32.079><c> it</c><00:57:32.880><c> okay</c>

00:57:34.789 --> 00:57:34.799 align:start position:0%
exactly got it okay
 

00:57:34.799 --> 00:57:37.190 align:start position:0%
exactly got it okay
okay<00:57:35.040><c> so</c><00:57:35.359><c> uh</c><00:57:35.839><c> let</c><00:57:36.000><c> me</c><00:57:36.240><c> show</c><00:57:36.400><c> you</c><00:57:36.720><c> sort</c><00:57:36.880><c> of</c><00:57:36.960><c> how</c>

00:57:37.190 --> 00:57:37.200 align:start position:0%
okay so uh let me show you sort of how
 

00:57:37.200 --> 00:57:43.270 align:start position:0%
okay so uh let me show you sort of how
this<00:57:37.359><c> plays</c><00:57:37.680><c> out</c><00:57:37.920><c> inside</c><00:57:38.400><c> of</c><00:57:38.559><c> go</c>

00:57:43.270 --> 00:57:43.280 align:start position:0%
 
 

00:57:43.280 --> 00:57:46.870 align:start position:0%
 
and<00:57:43.760><c> by</c><00:57:44.319><c> showing</c><00:57:44.720><c> you</c><00:57:45.280><c> a</c><00:57:45.599><c> very</c><00:57:45.920><c> simple</c>

00:57:46.870 --> 00:57:46.880 align:start position:0%
and by showing you a very simple
 

00:57:46.880 --> 00:57:49.910 align:start position:0%
and by showing you a very simple
key<00:57:47.040><c> value</c><00:57:47.359><c> server</c>

00:57:49.910 --> 00:57:49.920 align:start position:0%
 
 

00:57:49.920 --> 00:57:51.510 align:start position:0%
 
and<00:57:50.079><c> you'll</c><00:57:50.319><c> see</c><00:57:50.559><c> you</c><00:57:50.640><c> know</c><00:57:50.799><c> it</c><00:57:50.960><c> doesn't</c><00:57:51.280><c> look</c>

00:57:51.510 --> 00:57:51.520 align:start position:0%
and you'll see you know it doesn't look
 

00:57:51.520 --> 00:57:53.109 align:start position:0%
and you'll see you know it doesn't look
exactly<00:57:51.920><c> what</c><00:57:52.079><c> our</c><00:57:52.160><c> procedure</c><00:57:52.559><c> calls</c><00:57:52.799><c> but</c><00:57:52.960><c> it</c>

00:57:53.109 --> 00:57:53.119 align:start position:0%
exactly what our procedure calls but it
 

00:57:53.119 --> 00:57:53.349 align:start position:0%
exactly what our procedure calls but it
is

00:57:53.349 --> 00:57:53.359 align:start position:0%
is
 

00:57:53.359 --> 00:57:56.950 align:start position:0%
is
pretty<00:57:53.599><c> close</c><00:57:54.799><c> uh</c><00:57:55.760><c> so</c><00:57:56.000><c> the</c><00:57:56.160><c> typical</c><00:57:56.480><c> thing</c><00:57:56.799><c> is</c>

00:57:56.950 --> 00:57:56.960 align:start position:0%
pretty close uh so the typical thing is
 

00:57:56.960 --> 00:57:58.470 align:start position:0%
pretty close uh so the typical thing is
that<00:57:57.200><c> you</c><00:57:57.280><c> know</c><00:57:57.440><c> you</c><00:57:57.599><c> actually</c><00:57:57.839><c> declare</c>

00:57:58.470 --> 00:57:58.480 align:start position:0%
that you know you actually declare
 

00:57:58.480 --> 00:58:00.950 align:start position:0%
that you know you actually declare
a<00:57:58.559><c> typical</c><00:57:59.520><c> convention</c><00:58:00.240><c> for</c><00:58:00.400><c> the</c><00:58:00.480><c> main</c><00:58:00.720><c> goal</c>

00:58:00.950 --> 00:58:00.960 align:start position:0%
a typical convention for the main goal
 

00:58:00.960 --> 00:58:05.109 align:start position:0%
a typical convention for the main goal
is<00:58:01.119><c> that</c><00:58:01.280><c> you</c><00:58:01.440><c> declare</c>

00:58:05.109 --> 00:58:05.119 align:start position:0%
 
 

00:58:05.119 --> 00:58:06.950 align:start position:0%
 
the<00:58:05.200><c> arguments</c><00:58:05.680><c> as</c><00:58:05.839><c> trucks</c><00:58:06.319><c> and</c><00:58:06.559><c> so</c><00:58:06.799><c> we're</c>

00:58:06.950 --> 00:58:06.960 align:start position:0%
the arguments as trucks and so we're
 

00:58:06.960 --> 00:58:08.789 align:start position:0%
the arguments as trucks and so we're
going<00:58:07.040><c> to</c><00:58:07.280><c> implement</c><00:58:07.599><c> two</c><00:58:07.760><c> procedures</c>

00:58:08.789 --> 00:58:08.799 align:start position:0%
going to implement two procedures
 

00:58:08.799 --> 00:58:10.549 align:start position:0%
going to implement two procedures
two<00:58:08.960><c> remote</c><00:58:09.280><c> procedures</c><00:58:09.680><c> one</c><00:58:09.839><c> is</c><00:58:10.000><c> put</c><00:58:10.240><c> and</c><00:58:10.400><c> one</c>

00:58:10.549 --> 00:58:10.559 align:start position:0%
two remote procedures one is put and one
 

00:58:10.559 --> 00:58:12.870 align:start position:0%
two remote procedures one is put and one
is<00:58:10.720><c> get</c><00:58:11.599><c> and</c><00:58:11.920><c> put</c><00:58:12.240><c> is</c><00:58:12.319><c> basically</c>

00:58:12.870 --> 00:58:12.880 align:start position:0%
is get and put is basically
 

00:58:12.880 --> 00:58:14.710 align:start position:0%
is get and put is basically
fruit<00:58:13.200><c> rx</c><00:58:13.520><c> is</c><00:58:13.680><c> the</c><00:58:13.839><c> arguments</c><00:58:14.240><c> to</c><00:58:14.319><c> the</c><00:58:14.480><c> put</c>

00:58:14.710 --> 00:58:14.720 align:start position:0%
fruit rx is the arguments to the put
 

00:58:14.720 --> 00:58:16.150 align:start position:0%
fruit rx is the arguments to the put
input<00:58:14.960><c> replies</c><00:58:15.440><c> the</c><00:58:15.520><c> response</c>

00:58:16.150 --> 00:58:16.160 align:start position:0%
input replies the response
 

00:58:16.160 --> 00:58:18.069 align:start position:0%
input replies the response
similarly<00:58:16.480><c> and</c><00:58:16.640><c> there's</c><00:58:16.799><c> a</c><00:58:16.880><c> get</c><00:58:17.040><c> rx</c><00:58:17.359><c> with</c><00:58:17.520><c> the</c>

00:58:18.069 --> 00:58:18.079 align:start position:0%
similarly and there's a get rx with the
 

00:58:18.079 --> 00:58:20.549 align:start position:0%
similarly and there's a get rx with the
request<00:58:18.640><c> or</c><00:58:18.960><c> the</c><00:58:19.200><c> arguments</c><00:58:19.680><c> to</c><00:58:19.839><c> the</c><00:58:20.000><c> request</c>

00:58:20.549 --> 00:58:20.559 align:start position:0%
request or the arguments to the request
 

00:58:20.559 --> 00:58:23.990 align:start position:0%
request or the arguments to the request
get<00:58:20.799><c> procedure</c><00:58:21.520><c> and</c><00:58:21.599><c> then</c><00:58:21.839><c> reply</c><00:58:23.520><c> and</c><00:58:23.680><c> so</c><00:58:23.839><c> let</c>

00:58:23.990 --> 00:58:24.000 align:start position:0%
get procedure and then reply and so let
 

00:58:24.000 --> 00:58:25.190 align:start position:0%
get procedure and then reply and so let
me<00:58:24.160><c> first</c><00:58:24.319><c> look</c><00:58:24.480><c> at</c><00:58:24.559><c> the</c><00:58:24.720><c> server</c>

00:58:25.190 --> 00:58:25.200 align:start position:0%
me first look at the server
 

00:58:25.200 --> 00:58:27.109 align:start position:0%
me first look at the server
so<00:58:25.359><c> here's</c><00:58:25.680><c> our</c><00:58:25.839><c> two</c><00:58:26.079><c> functions</c><00:58:26.720><c> you</c><00:58:26.880><c> know</c>

00:58:27.109 --> 00:58:27.119 align:start position:0%
so here's our two functions you know
 

00:58:27.119 --> 00:58:28.309 align:start position:0%
so here's our two functions you know
actually<00:58:27.760><c> the</c>

00:58:28.309 --> 00:58:28.319 align:start position:0%
actually the
 

00:58:28.319 --> 00:58:29.589 align:start position:0%
actually the
two<00:58:28.799><c> functions</c><00:58:29.119><c> that</c><00:58:29.200><c> we're</c><00:58:29.280><c> going</c><00:58:29.359><c> to</c><00:58:29.440><c> be</c>

00:58:29.589 --> 00:58:29.599 align:start position:0%
two functions that we're going to be
 

00:58:29.599 --> 00:58:31.750 align:start position:0%
two functions that we're going to be
calling<00:58:30.000><c> on</c><00:58:30.400><c> the</c><00:58:30.480><c> server</c>

00:58:31.750 --> 00:58:31.760 align:start position:0%
calling on the server
 

00:58:31.760 --> 00:58:33.990 align:start position:0%
calling on the server
um<00:58:32.400><c> i</c><00:58:32.559><c> think</c><00:58:32.799><c> i'll</c><00:58:33.119><c> skip</c><00:58:33.359><c> down</c><00:58:33.520><c> for</c><00:58:33.680><c> that</c><00:58:33.839><c> for</c><00:58:33.920><c> a</c>

00:58:33.990 --> 00:58:34.000 align:start position:0%
um i think i'll skip down for that for a
 

00:58:34.000 --> 00:58:35.190 align:start position:0%
um i think i'll skip down for that for a
second

00:58:35.190 --> 00:58:35.200 align:start position:0%
second
 

00:58:35.200 --> 00:58:41.270 align:start position:0%
second
so<00:58:35.599><c> maybe</c><00:58:35.920><c> actually</c><00:58:36.640><c> you</c><00:58:36.799><c> know</c>

00:58:41.270 --> 00:58:41.280 align:start position:0%
 
 

00:58:41.280 --> 00:58:43.109 align:start position:0%
 
let<00:58:41.440><c> me</c><00:58:42.079><c> talk</c><00:58:42.240><c> about</c><00:58:42.400><c> them</c><00:58:42.559><c> a</c><00:58:42.640><c> little</c><00:58:42.799><c> bit</c><00:58:42.960><c> so</c>

00:58:43.109 --> 00:58:43.119 align:start position:0%
let me talk about them a little bit so
 

00:58:43.119 --> 00:58:45.270 align:start position:0%
let me talk about them a little bit so
this<00:58:43.280><c> is</c><00:58:43.359><c> the</c><00:58:43.599><c> client</c><00:58:44.000><c> site</c>

00:58:45.270 --> 00:58:45.280 align:start position:0%
this is the client site
 

00:58:45.280 --> 00:58:47.670 align:start position:0%
this is the client site
so<00:58:45.440><c> the</c><00:58:45.599><c> client</c><00:58:45.839><c> calls</c><00:58:46.160><c> a</c><00:58:46.240><c> function</c><00:58:46.640><c> get</c><00:58:47.040><c> and</c>

00:58:47.670 --> 00:58:47.680 align:start position:0%
so the client calls a function get and
 

00:58:47.680 --> 00:58:48.549 align:start position:0%
so the client calls a function get and
uh<00:58:48.240><c> what</c>

00:58:48.549 --> 00:58:48.559 align:start position:0%
uh what
 

00:58:48.559 --> 00:58:51.109 align:start position:0%
uh what
inside<00:58:48.880><c> of</c><00:58:49.040><c> get</c><00:58:49.280><c> you</c><00:58:49.440><c> know</c><00:58:49.680><c> you</c><00:58:50.559><c> this</c><00:58:50.799><c> function</c>

00:58:51.109 --> 00:58:51.119 align:start position:0%
inside of get you know you this function
 

00:58:51.119 --> 00:58:52.630 align:start position:0%
inside of get you know you this function
actually<00:58:51.359><c> connects</c><00:58:51.680><c> to</c><00:58:51.839><c> the</c><00:58:52.000><c> server</c><00:58:52.319><c> i'll</c><00:58:52.480><c> see</c>

00:58:52.630 --> 00:58:52.640 align:start position:0%
actually connects to the server i'll see
 

00:58:52.640 --> 00:58:54.309 align:start position:0%
actually connects to the server i'll see
in<00:58:52.720><c> a</c><00:58:52.720><c> second</c><00:58:52.960><c> what</c><00:58:53.119><c> that</c><00:58:53.280><c> means</c>

00:58:54.309 --> 00:58:54.319 align:start position:0%
in a second what that means
 

00:58:54.319 --> 00:58:56.789 align:start position:0%
in a second what that means
um<00:58:55.359><c> it</c><00:58:55.520><c> fills</c><00:58:55.760><c> in</c><00:58:55.839><c> the</c><00:58:56.000><c> arguments</c><00:58:56.640><c> it</c>

00:58:56.789 --> 00:58:56.799 align:start position:0%
um it fills in the arguments it
 

00:58:56.799 --> 00:58:58.549 align:start position:0%
um it fills in the arguments it
allocates<00:58:57.119><c> a</c><00:58:57.200><c> response</c><00:58:57.760><c> and</c><00:58:57.839><c> then</c><00:58:58.079><c> calls</c><00:58:58.400><c> this</c>

00:58:58.549 --> 00:58:58.559 align:start position:0%
allocates a response and then calls this
 

00:58:58.559 --> 00:58:59.510 align:start position:0%
allocates a response and then calls this
procedure<00:58:59.040><c> client</c>

00:58:59.510 --> 00:58:59.520 align:start position:0%
procedure client
 

00:58:59.520 --> 00:59:01.270 align:start position:0%
procedure client
it<00:58:59.680><c> calls</c><00:59:00.000><c> call</c><00:59:00.559><c> you</c><00:59:00.640><c> can</c><00:59:00.720><c> think</c><00:59:00.880><c> about</c><00:59:01.040><c> this</c>

00:59:01.270 --> 00:59:01.280 align:start position:0%
it calls call you can think about this
 

00:59:01.280 --> 00:59:02.789 align:start position:0%
it calls call you can think about this
as<00:59:01.359><c> a</c><00:59:01.520><c> generic</c><00:59:02.000><c> stun</c>

00:59:02.789 --> 00:59:02.799 align:start position:0%
as a generic stun
 

00:59:02.799 --> 00:59:04.230 align:start position:0%
as a generic stun
that<00:59:02.960><c> basically</c><00:59:03.359><c> takes</c><00:59:03.599><c> the</c><00:59:03.760><c> method</c><00:59:04.079><c> that</c>

00:59:04.230 --> 00:59:04.240 align:start position:0%
that basically takes the method that
 

00:59:04.240 --> 00:59:05.910 align:start position:0%
that basically takes the method that
needs<00:59:04.400><c> to</c><00:59:04.480><c> be</c><00:59:04.559><c> called</c><00:59:04.799><c> on</c><00:59:04.960><c> the</c><00:59:05.040><c> server</c><00:59:05.599><c> and</c><00:59:05.760><c> the</c>

00:59:05.910 --> 00:59:05.920 align:start position:0%
needs to be called on the server and the
 

00:59:05.920 --> 00:59:07.670 align:start position:0%
needs to be called on the server and the
arguments<00:59:06.400><c> and</c><00:59:06.480><c> the</c><00:59:06.559><c> reply</c><00:59:07.040><c> and</c><00:59:07.200><c> so</c><00:59:07.440><c> call</c>

00:59:07.670 --> 00:59:07.680 align:start position:0%
arguments and the reply and so call
 

00:59:07.680 --> 00:59:09.030 align:start position:0%
arguments and the reply and so call
always<00:59:07.920><c> has</c><00:59:08.079><c> three</c><00:59:08.319><c> arguments</c>

00:59:09.030 --> 00:59:09.040 align:start position:0%
always has three arguments
 

00:59:09.040 --> 00:59:13.109 align:start position:0%
always has three arguments
the<00:59:09.200><c> method</c><00:59:10.000><c> the</c><00:59:10.400><c> argument</c><00:59:11.280><c> and</c><00:59:11.440><c> the</c><00:59:11.520><c> response</c>

00:59:13.109 --> 00:59:13.119 align:start position:0%
the method the argument and the response
 

00:59:13.119 --> 00:59:15.910 align:start position:0%
the method the argument and the response
and<00:59:13.280><c> then</c><00:59:13.839><c> call</c><00:59:14.160><c> internally</c><00:59:14.799><c> we'll</c><00:59:15.520><c> send</c>

00:59:15.910 --> 00:59:15.920 align:start position:0%
and then call internally we'll send
 

00:59:15.920 --> 00:59:17.829 align:start position:0%
and then call internally we'll send
marshall<00:59:16.319><c> the</c><00:59:16.559><c> arguments</c>

00:59:17.829 --> 00:59:17.839 align:start position:0%
marshall the arguments
 

00:59:17.839 --> 00:59:20.150 align:start position:0%
marshall the arguments
send<00:59:18.079><c> the</c><00:59:18.160><c> message</c><00:59:18.480><c> to</c><00:59:18.640><c> the</c><00:59:18.799><c> server</c><00:59:19.280><c> over</c><00:59:19.680><c> the</c>

00:59:20.150 --> 00:59:20.160 align:start position:0%
send the message to the server over the
 

00:59:20.160 --> 00:59:21.109 align:start position:0%
send the message to the server over the
connection

00:59:21.109 --> 00:59:21.119 align:start position:0%
connection
 

00:59:21.119 --> 00:59:23.510 align:start position:0%
connection
and<00:59:21.359><c> wait</c><00:59:21.520><c> for</c><00:59:21.680><c> the</c><00:59:21.839><c> response</c><00:59:22.720><c> the</c><00:59:22.880><c> reply</c><00:59:23.359><c> when</c>

00:59:23.510 --> 00:59:23.520 align:start position:0%
and wait for the response the reply when
 

00:59:23.520 --> 00:59:25.270 align:start position:0%
and wait for the response the reply when
the<00:59:23.599><c> replies</c><00:59:24.000><c> comes</c><00:59:24.240><c> in</c><00:59:24.400><c> the</c><00:59:24.559><c> reply</c><00:59:24.880><c> structure</c>

00:59:25.270 --> 00:59:25.280 align:start position:0%
the replies comes in the reply structure
 

00:59:25.280 --> 00:59:25.990 align:start position:0%
the replies comes in the reply structure
will<00:59:25.359><c> be</c><00:59:25.520><c> filled</c><00:59:25.760><c> in</c>

00:59:25.990 --> 00:59:26.000 align:start position:0%
will be filled in
 

00:59:26.000 --> 00:59:28.309 align:start position:0%
will be filled in
by<00:59:26.240><c> the</c><00:59:26.400><c> call</c><00:59:26.720><c> stub</c><00:59:27.440><c> and</c><00:59:27.599><c> then</c><00:59:27.920><c> when</c><00:59:28.079><c> that's</c>

00:59:28.309 --> 00:59:28.319 align:start position:0%
by the call stub and then when that's
 

00:59:28.319 --> 00:59:30.829 align:start position:0%
by the call stub and then when that's
done<00:59:28.559><c> then</c><00:59:28.880><c> return</c><00:59:29.280><c> out</c><00:59:29.440><c> of</c><00:59:29.520><c> the</c><00:59:29.680><c> call</c>

00:59:30.829 --> 00:59:30.839 align:start position:0%
done then return out of the call
 

00:59:30.839 --> 00:59:33.589 align:start position:0%
done then return out of the call
call<00:59:32.079><c> and</c><00:59:32.319><c> basically</c><00:59:32.720><c> put</c><00:59:32.880><c> looks</c><00:59:33.119><c> exactly</c><00:59:33.520><c> the</c>

00:59:33.589 --> 00:59:33.599 align:start position:0%
call and basically put looks exactly the
 

00:59:33.599 --> 00:59:36.230 align:start position:0%
call and basically put looks exactly the
same<00:59:33.760><c> way</c>

00:59:36.230 --> 00:59:36.240 align:start position:0%
 
 

00:59:36.240 --> 00:59:38.390 align:start position:0%
 
great<00:59:36.559><c> and</c><00:59:36.640><c> so</c><00:59:36.799><c> on</c><00:59:36.880><c> the</c><00:59:36.960><c> server</c><00:59:37.359><c> side</c><00:59:38.240><c> let's</c>

00:59:38.390 --> 00:59:38.400 align:start position:0%
great and so on the server side let's
 

00:59:38.400 --> 00:59:40.150 align:start position:0%
great and so on the server side let's
see<00:59:38.559><c> how</c><00:59:38.720><c> that</c><00:59:38.880><c> is</c><00:59:39.040><c> implemented</c>

00:59:40.150 --> 00:59:40.160 align:start position:0%
see how that is implemented
 

00:59:40.160 --> 00:59:43.190 align:start position:0%
see how that is implemented
the<00:59:40.319><c> server</c><00:59:40.640><c> has</c><00:59:40.880><c> a</c><00:59:40.960><c> key</c><00:59:41.200><c> value</c><00:59:41.839><c> map</c><00:59:42.240><c> this</c><00:59:42.559><c> is</c>

00:59:43.190 --> 00:59:43.200 align:start position:0%
the server has a key value map this is
 

00:59:43.200 --> 00:59:46.710 align:start position:0%
the server has a key value map this is
nothing<00:59:43.520><c> else</c><00:59:43.680><c> than</c><00:59:43.839><c> a</c><00:59:44.000><c> regular</c><00:59:44.480><c> go</c><00:59:44.839><c> map</c>

00:59:46.710 --> 00:59:46.720 align:start position:0%
nothing else than a regular go map
 

00:59:46.720 --> 00:59:50.069 align:start position:0%
nothing else than a regular go map
and

00:59:50.069 --> 00:59:50.079 align:start position:0%
 
 

00:59:50.079 --> 00:59:51.750 align:start position:0%
 
let<00:59:50.240><c> me</c><00:59:50.400><c> see</c><00:59:50.640><c> actually</c><00:59:50.960><c> the</c><00:59:51.119><c> key</c><00:59:51.359><c> values</c>

00:59:51.750 --> 00:59:51.760 align:start position:0%
let me see actually the key values
 

00:59:51.760 --> 00:59:55.349 align:start position:0%
let me see actually the key values
trucked

00:59:55.349 --> 00:59:55.359 align:start position:0%
 
 

00:59:55.359 --> 00:59:58.789 align:start position:0%
 
i<00:59:55.520><c> declared</c><00:59:55.920><c> it</c><00:59:56.000><c> somewhere</c>

00:59:58.789 --> 00:59:58.799 align:start position:0%
 
 

00:59:58.799 --> 01:00:01.270 align:start position:0%
 
oh<00:59:59.040><c> sorry</c><00:59:59.359><c> it's</c><00:59:59.599><c> right</c><00:59:59.760><c> above</c><01:00:00.079><c> it</c><01:00:00.720><c> so</c><01:00:01.040><c> there's</c>

01:00:01.270 --> 01:00:01.280 align:start position:0%
oh sorry it's right above it so there's
 

01:00:01.280 --> 01:00:02.630 align:start position:0%
oh sorry it's right above it so there's
a<01:00:01.359><c> structure</c><01:00:01.680><c> called</c><01:00:02.000><c> kv</c>

01:00:02.630 --> 01:00:02.640 align:start position:0%
a structure called kv
 

01:00:02.640 --> 01:00:04.950 align:start position:0%
a structure called kv
that<01:00:02.960><c> actually</c><01:00:03.200><c> has</c><01:00:03.359><c> a</c><01:00:03.440><c> mutex</c><01:00:04.000><c> and</c><01:00:04.400><c> a</c><01:00:04.559><c> map</c><01:00:04.799><c> in</c>

01:00:04.950 --> 01:00:04.960 align:start position:0%
that actually has a mutex and a map in
 

01:00:04.960 --> 01:00:06.630 align:start position:0%
that actually has a mutex and a map in
it<01:00:05.440><c> and</c><01:00:05.599><c> the</c><01:00:05.680><c> map</c><01:00:05.920><c> is</c><01:00:06.160><c> like</c><01:00:06.319><c> where</c><01:00:06.480><c> we're</c><01:00:06.640><c> going</c>

01:00:06.630 --> 01:00:06.640 align:start position:0%
it and the map is like where we're going
 

01:00:06.640 --> 01:00:10.150 align:start position:0%
it and the map is like where we're going
to<01:00:06.720><c> do</c><01:00:06.880><c> the</c><01:00:06.960><c> put</c><01:00:07.119><c> and</c><01:00:07.200><c> get</c><01:00:07.440><c> operations</c><01:00:08.000><c> on</c>

01:00:10.150 --> 01:00:10.160 align:start position:0%
to do the put and get operations on
 

01:00:10.160 --> 01:00:12.309 align:start position:0%
to do the put and get operations on
and<01:00:10.319><c> there's</c><01:00:10.480><c> another</c><01:00:10.880><c> little</c><01:00:11.200><c> preamble</c><01:00:12.160><c> that</c>

01:00:12.309 --> 01:00:12.319 align:start position:0%
and there's another little preamble that
 

01:00:12.319 --> 01:00:14.069 align:start position:0%
and there's another little preamble that
you<01:00:12.480><c> need</c><01:00:12.640><c> to</c><01:00:12.960><c> sort</c><01:00:13.119><c> of</c><01:00:13.280><c> write</c><01:00:13.599><c> you</c><01:00:13.680><c> know</c><01:00:13.839><c> to</c>

01:00:14.069 --> 01:00:14.079 align:start position:0%
you need to sort of write you know to
 

01:00:14.079 --> 01:00:16.230 align:start position:0%
you need to sort of write you know to
sort<01:00:14.240><c> of</c><01:00:14.319><c> set</c><01:00:14.480><c> up</c><01:00:14.640><c> a</c><01:00:14.720><c> server</c><01:00:15.440><c> uh</c><01:00:15.680><c> but</c><01:00:15.839><c> here</c><01:00:16.079><c> it</c>

01:00:16.230 --> 01:00:16.240 align:start position:0%
sort of set up a server uh but here it
 

01:00:16.240 --> 01:00:17.670 align:start position:0%
sort of set up a server uh but here it
is<01:00:16.960><c> uh</c>

01:00:17.670 --> 01:00:17.680 align:start position:0%
is uh
 

01:00:17.680 --> 01:00:20.470 align:start position:0%
is uh
you<01:00:17.839><c> know</c><01:00:18.240><c> you</c><01:00:18.559><c> basically</c><01:00:19.359><c> uh</c><01:00:19.760><c> allocate</c><01:00:20.160><c> a</c><01:00:20.240><c> new</c>

01:00:20.470 --> 01:00:20.480 align:start position:0%
you know you basically uh allocate a new
 

01:00:20.480 --> 01:00:21.030 align:start position:0%
you know you basically uh allocate a new
server

01:00:21.030 --> 01:00:21.040 align:start position:0%
server
 

01:00:21.040 --> 01:00:23.349 align:start position:0%
server
object<01:00:22.000><c> and</c><01:00:22.240><c> then</c><01:00:22.480><c> this</c><01:00:22.640><c> is</c><01:00:22.720><c> sort</c><01:00:22.880><c> of</c><01:00:22.960><c> the</c><01:00:23.040><c> key</c>

01:00:23.349 --> 01:00:23.359 align:start position:0%
object and then this is sort of the key
 

01:00:23.359 --> 01:00:24.309 align:start position:0%
object and then this is sort of the key
operation

01:00:24.309 --> 01:00:24.319 align:start position:0%
operation
 

01:00:24.319 --> 01:00:28.789 align:start position:0%
operation
rpc<01:00:24.880><c> register</c><01:00:25.359><c> kv</c><01:00:26.839><c> will</c><01:00:27.839><c> register</c><01:00:28.319><c> basically</c>

01:00:28.789 --> 01:00:28.799 align:start position:0%
rpc register kv will register basically
 

01:00:28.799 --> 01:00:30.950 align:start position:0%
rpc register kv will register basically
all<01:00:28.960><c> the</c><01:00:29.200><c> methods</c><01:00:29.599><c> that</c><01:00:29.839><c> are</c><01:00:30.079><c> implemented</c><01:00:30.720><c> on</c>

01:00:30.950 --> 01:00:30.960 align:start position:0%
all the methods that are implemented on
 

01:00:30.960 --> 01:00:32.309 align:start position:0%
all the methods that are implemented on
the<01:00:31.200><c> key</c><01:00:31.440><c> fee</c><01:00:31.680><c> struct</c>

01:00:32.309 --> 01:00:32.319 align:start position:0%
the key fee struct
 

01:00:32.319 --> 01:00:36.470 align:start position:0%
the key fee struct
with<01:00:32.480><c> the</c><01:00:32.640><c> rpc</c><01:00:33.119><c> server</c><01:00:34.880><c> with</c><01:00:35.200><c> one</c><01:00:35.440><c> twist</c>

01:00:36.470 --> 01:00:36.480 align:start position:0%
with the rpc server with one twist
 

01:00:36.480 --> 01:00:40.829 align:start position:0%
with the rpc server with one twist
the<01:00:37.119><c> method</c><01:00:37.680><c> only</c><01:00:38.000><c> the</c><01:00:38.240><c> capital</c><01:00:38.799><c> named</c>

01:00:40.829 --> 01:00:40.839 align:start position:0%
the method only the capital named
 

01:00:40.839 --> 01:00:42.710 align:start position:0%
the method only the capital named
uh<01:00:41.920><c> only</c><01:00:42.160><c> the</c>

01:00:42.710 --> 01:00:42.720 align:start position:0%
uh only the
 

01:00:42.720 --> 01:00:44.950 align:start position:0%
uh only the
the<01:00:43.119><c> methods</c><01:00:43.440><c> with</c><01:00:43.599><c> the</c><01:00:43.680><c> capital</c><01:00:44.559><c> uh</c><01:00:44.720><c> will</c>

01:00:44.950 --> 01:00:44.960 align:start position:0%
the methods with the capital uh will
 

01:00:44.960 --> 01:00:45.990 align:start position:0%
the methods with the capital uh will
actually<01:00:45.200><c> be</c><01:00:45.359><c> reported</c>

01:00:45.990 --> 01:00:46.000 align:start position:0%
actually be reported
 

01:00:46.000 --> 01:00:49.030 align:start position:0%
actually be reported
and<01:00:46.160><c> so</c><01:00:46.640><c> basically</c><01:00:47.520><c> go</c><01:00:47.839><c> uses</c><01:00:48.319><c> capital</c><01:00:48.799><c> names</c>

01:00:49.030 --> 01:00:49.040 align:start position:0%
and so basically go uses capital names
 

01:00:49.040 --> 01:00:49.990 align:start position:0%
and so basically go uses capital names
to<01:00:49.280><c> indicate</c>

01:00:49.990 --> 01:00:50.000 align:start position:0%
to indicate
 

01:00:50.000 --> 01:00:53.030 align:start position:0%
to indicate
public<01:00:50.480><c> you</c><01:00:50.559><c> know</c><01:00:50.720><c> methods</c><01:00:51.280><c> and</c><01:00:51.920><c> uh</c><01:00:52.400><c> a</c><01:00:52.640><c> method</c>

01:00:53.030 --> 01:00:53.040 align:start position:0%
public you know methods and uh a method
 

01:00:53.040 --> 01:00:54.630 align:start position:0%
public you know methods and uh a method
with<01:00:53.200><c> a</c><01:00:53.280><c> small</c>

01:00:54.630 --> 01:00:54.640 align:start position:0%
with a small
 

01:00:54.640 --> 01:00:57.910 align:start position:0%
with a small
small<01:00:54.960><c> caps</c><01:00:55.599><c> is</c><01:00:55.760><c> in</c><01:00:55.920><c> private</c><01:00:56.319><c> method</c><01:00:57.119><c> so</c><01:00:57.440><c> only</c>

01:00:57.910 --> 01:00:57.920 align:start position:0%
small caps is in private method so only
 

01:00:57.920 --> 01:00:59.670 align:start position:0%
small caps is in private method so only
you<01:00:58.079><c> know</c><01:00:58.160><c> basically</c><01:00:58.480><c> rpc</c><01:00:58.960><c> register</c>

01:00:59.670 --> 01:00:59.680 align:start position:0%
you know basically rpc register
 

01:00:59.680 --> 01:01:02.630 align:start position:0%
you know basically rpc register
exports<01:01:00.799><c> only</c><01:01:01.200><c> capitalized</c><01:01:01.920><c> methods</c><01:01:02.400><c> so</c><01:01:02.559><c> for</c>

01:01:02.630 --> 01:01:02.640 align:start position:0%
exports only capitalized methods so for
 

01:01:02.640 --> 01:01:04.309 align:start position:0%
exports only capitalized methods so for
example<01:01:02.960><c> here's</c><01:01:03.280><c> a</c><01:01:03.359><c> method</c><01:01:03.599><c> below</c><01:01:03.920><c> here's</c><01:01:04.160><c> our</c>

01:01:04.309 --> 01:01:04.319 align:start position:0%
example here's a method below here's our
 

01:01:04.319 --> 01:01:05.190 align:start position:0%
example here's a method below here's our
get<01:01:04.480><c> method</c>

01:01:05.190 --> 01:01:05.200 align:start position:0%
get method
 

01:01:05.200 --> 01:01:08.069 align:start position:0%
get method
you<01:01:05.359><c> know</c><01:01:05.440><c> it</c><01:01:05.520><c> has</c><01:01:05.760><c> a</c><01:01:05.839><c> capital</c><01:01:06.160><c> letter</c><01:01:06.960><c> and</c><01:01:07.520><c> by</c>

01:01:08.069 --> 01:01:08.079 align:start position:0%
you know it has a capital letter and by
 

01:01:08.079 --> 01:01:09.670 align:start position:0%
you know it has a capital letter and by
calling<01:01:08.400><c> register</c><01:01:08.880><c> that</c><01:01:09.040><c> method</c><01:01:09.359><c> is</c><01:01:09.440><c> now</c>

01:01:09.670 --> 01:01:09.680 align:start position:0%
calling register that method is now
 

01:01:09.680 --> 01:01:11.270 align:start position:0%
calling register that method is now
callable<01:01:10.160><c> by</c><01:01:10.319><c> a</c><01:01:10.480><c> client</c><01:01:10.799><c> that</c><01:01:10.880><c> connects</c><01:01:11.200><c> to</c>

01:01:11.270 --> 01:01:11.280 align:start position:0%
callable by a client that connects to
 

01:01:11.280 --> 01:01:13.910 align:start position:0%
callable by a client that connects to
this<01:01:11.440><c> server</c>

01:01:13.910 --> 01:01:13.920 align:start position:0%
 
 

01:01:13.920 --> 01:01:15.670 align:start position:0%
 
so<01:01:14.079><c> the</c><01:01:14.240><c> server</c><01:01:14.559><c> internally</c><01:01:15.359><c> you</c><01:01:15.520><c> know</c>

01:01:15.670 --> 01:01:15.680 align:start position:0%
so the server internally you know
 

01:01:15.680 --> 01:01:18.630 align:start position:0%
so the server internally you know
basically<01:01:16.319><c> uh</c><01:01:16.720><c> it</c><01:01:16.880><c> creates</c><01:01:17.119><c> a</c><01:01:17.200><c> tcp</c><01:01:17.680><c> connection</c>

01:01:18.630 --> 01:01:18.640 align:start position:0%
basically uh it creates a tcp connection
 

01:01:18.640 --> 01:01:21.589 align:start position:0%
basically uh it creates a tcp connection
uh<01:01:19.200><c> and</c><01:01:19.520><c> waits</c><01:01:19.839><c> on</c><01:01:20.000><c> the</c><01:01:20.079><c> tcp</c><01:01:20.480><c> connection</c><01:01:20.880><c> to</c><01:01:21.440><c> to</c>

01:01:21.589 --> 01:01:21.599 align:start position:0%
uh and waits on the tcp connection to to
 

01:01:21.599 --> 01:01:23.430 align:start position:0%
uh and waits on the tcp connection to to
get<01:01:21.760><c> a</c><01:01:21.920><c> request</c><01:01:22.480><c> or</c><01:01:22.640><c> a</c><01:01:22.799><c> new</c>

01:01:23.430 --> 01:01:23.440 align:start position:0%
get a request or a new
 

01:01:23.440 --> 01:01:24.630 align:start position:0%
get a request or a new
connection<01:01:23.760><c> request</c><01:01:24.079><c> for</c><01:01:24.240><c> the</c><01:01:24.319><c> tcp</c>

01:01:24.630 --> 01:01:24.640 align:start position:0%
connection request for the tcp
 

01:01:24.640 --> 01:01:27.349 align:start position:0%
connection request for the tcp
connection<01:01:25.040><c> and</c><01:01:25.119><c> then</c><01:01:25.359><c> calls</c><01:01:26.240><c> rpc</c>

01:01:27.349 --> 01:01:27.359 align:start position:0%
connection and then calls rpc
 

01:01:27.359 --> 01:01:30.390 align:start position:0%
connection and then calls rpc
servcom<01:01:28.319><c> to</c><01:01:28.480><c> serve</c><01:01:28.720><c> that</c><01:01:28.880><c> tcp</c><01:01:29.359><c> connection</c><01:01:30.240><c> and</c>

01:01:30.390 --> 01:01:30.400 align:start position:0%
servcom to serve that tcp connection and
 

01:01:30.400 --> 01:01:31.270 align:start position:0%
servcom to serve that tcp connection and
basically

01:01:31.270 --> 01:01:31.280 align:start position:0%
basically
 

01:01:31.280 --> 01:01:33.190 align:start position:0%
basically
every<01:01:31.520><c> message</c><01:01:31.839><c> that</c><01:01:32.000><c> comes</c><01:01:32.240><c> in</c><01:01:32.640><c> over</c><01:01:32.960><c> that</c>

01:01:33.190 --> 01:01:33.200 align:start position:0%
every message that comes in over that
 

01:01:33.200 --> 01:01:34.309 align:start position:0%
every message that comes in over that
you<01:01:33.280><c> know</c><01:01:33.440><c> connection</c>

01:01:34.309 --> 01:01:34.319 align:start position:0%
you know connection
 

01:01:34.319 --> 01:01:36.069 align:start position:0%
you know connection
it<01:01:34.480><c> will</c><01:01:34.720><c> automatically</c><01:01:35.440><c> find</c><01:01:35.760><c> the</c><01:01:35.839><c> right</c>

01:01:36.069 --> 01:01:36.079 align:start position:0%
it will automatically find the right
 

01:01:36.079 --> 01:01:37.990 align:start position:0%
it will automatically find the right
method<01:01:36.640><c> you</c><01:01:36.720><c> know</c><01:01:36.880><c> that</c><01:01:37.119><c> is</c><01:01:37.280><c> associated</c><01:01:37.839><c> with</c>

01:01:37.990 --> 01:01:38.000 align:start position:0%
method you know that is associated with
 

01:01:38.000 --> 01:01:38.870 align:start position:0%
method you know that is associated with
the<01:01:38.160><c> message</c>

01:01:38.870 --> 01:01:38.880 align:start position:0%
the message
 

01:01:38.880 --> 01:01:41.030 align:start position:0%
the message
and<01:01:39.520><c> called</c><01:01:39.760><c> that</c><01:01:39.920><c> method</c><01:01:40.240><c> with</c><01:01:40.400><c> the</c>

01:01:41.030 --> 01:01:41.040 align:start position:0%
and called that method with the
 

01:01:41.040 --> 01:01:42.630 align:start position:0%
and called that method with the
unmarshaled<01:01:41.680><c> arguments</c><01:01:42.240><c> and</c>

01:01:42.630 --> 01:01:42.640 align:start position:0%
unmarshaled arguments and
 

01:01:42.640 --> 01:01:46.150 align:start position:0%
unmarshaled arguments and
marshall's<01:01:43.040><c> reply</c><01:01:45.200><c> so</c><01:01:45.359><c> for</c><01:01:45.440><c> example</c><01:01:45.839><c> if</c><01:01:46.000><c> the</c>

01:01:46.150 --> 01:01:46.160 align:start position:0%
marshall's reply so for example if the
 

01:01:46.160 --> 01:01:47.990 align:start position:0%
marshall's reply so for example if the
client<01:01:46.480><c> calls</c><01:01:46.799><c> get</c><01:01:47.040><c> you</c><01:01:47.200><c> know</c><01:01:47.280><c> connects</c><01:01:47.680><c> to</c><01:01:47.839><c> it</c>

01:01:47.990 --> 01:01:48.000 align:start position:0%
client calls get you know connects to it
 

01:01:48.000 --> 01:01:49.430 align:start position:0%
client calls get you know connects to it
double<01:01:48.319><c> call</c>

01:01:49.430 --> 01:01:49.440 align:start position:0%
double call
 

01:01:49.440 --> 01:01:51.589 align:start position:0%
double call
makes<01:01:49.680><c> this</c><01:01:49.839><c> connection</c><01:01:50.319><c> into</c><01:01:50.559><c> existence</c><01:01:51.520><c> and</c>

01:01:51.589 --> 01:01:51.599 align:start position:0%
makes this connection into existence and
 

01:01:51.599 --> 01:01:52.789 align:start position:0%
makes this connection into existence and
then<01:01:51.839><c> if</c><01:01:51.920><c> the</c><01:01:52.079><c> client</c><01:01:52.319><c> calls</c>

01:01:52.789 --> 01:01:52.799 align:start position:0%
then if the client calls
 

01:01:52.799 --> 01:01:55.589 align:start position:0%
then if the client calls
call<01:01:53.440><c> with</c><01:01:53.680><c> a</c><01:01:53.760><c> get</c><01:01:54.480><c> then</c><01:01:54.720><c> this</c><01:01:54.960><c> get</c><01:01:55.280><c> function</c>

01:01:55.589 --> 01:01:55.599 align:start position:0%
call with a get then this get function
 

01:01:55.599 --> 01:01:57.190 align:start position:0%
call with a get then this get function
will<01:01:55.760><c> be</c><01:01:55.920><c> run</c>

01:01:57.190 --> 01:01:57.200 align:start position:0%
will be run
 

01:01:57.200 --> 01:01:58.630 align:start position:0%
will be run
and<01:01:57.440><c> as</c><01:01:57.599><c> you</c><01:01:57.680><c> can</c><01:01:57.760><c> see</c><01:01:57.839><c> in</c><01:01:57.920><c> the</c><01:01:58.079><c> get</c><01:01:58.240><c> function</c>

01:01:58.630 --> 01:01:58.640 align:start position:0%
and as you can see in the get function
 

01:01:58.640 --> 01:02:00.069 align:start position:0%
and as you can see in the get function
first<01:01:58.880><c> thing</c><01:01:59.039><c> it</c><01:01:59.119><c> does</c><01:01:59.359><c> it</c><01:01:59.520><c> actually</c><01:01:59.760><c> takes</c><01:02:00.000><c> a</c>

01:02:00.069 --> 01:02:00.079 align:start position:0%
first thing it does it actually takes a
 

01:02:00.079 --> 01:02:01.829 align:start position:0%
first thing it does it actually takes a
walk<01:02:00.319><c> out</c><01:02:00.559><c> because</c>

01:02:01.829 --> 01:02:01.839 align:start position:0%
walk out because
 

01:02:01.839 --> 01:02:04.309 align:start position:0%
walk out because
multiple<01:02:03.200><c> clients</c><01:02:03.520><c> could</c><01:02:03.680><c> be</c><01:02:03.839><c> calling</c><01:02:04.160><c> the</c>

01:02:04.309 --> 01:02:04.319 align:start position:0%
multiple clients could be calling the
 

01:02:04.319 --> 01:02:05.990 align:start position:0%
multiple clients could be calling the
server<01:02:04.720><c> and</c><01:02:04.799><c> so</c><01:02:04.960><c> there</c><01:02:05.039><c> will</c><01:02:05.280><c> be</c><01:02:05.440><c> multiple</c><01:02:05.839><c> go</c>

01:02:05.990 --> 01:02:06.000 align:start position:0%
server and so there will be multiple go
 

01:02:06.000 --> 01:02:07.990 align:start position:0%
server and so there will be multiple go
routines<01:02:06.480><c> running</c><01:02:06.880><c> at</c><01:02:06.960><c> the</c><01:02:07.039><c> same</c><01:02:07.280><c> time</c>

01:02:07.990 --> 01:02:08.000 align:start position:0%
routines running at the same time
 

01:02:08.000 --> 01:02:10.950 align:start position:0%
routines running at the same time
perhaps<01:02:08.400><c> invoking</c><01:02:08.799><c> get</c><01:02:09.119><c> and</c><01:02:09.359><c> put</c><01:02:10.480><c> and</c><01:02:10.640><c> so</c><01:02:10.799><c> they</c>

01:02:10.950 --> 01:02:10.960 align:start position:0%
perhaps invoking get and put and so they
 

01:02:10.960 --> 01:02:12.470 align:start position:0%
perhaps invoking get and put and so they
will<01:02:11.119><c> manipulating</c><01:02:11.839><c> the</c>

01:02:12.470 --> 01:02:12.480 align:start position:0%
will manipulating the
 

01:02:12.480 --> 01:02:14.549 align:start position:0%
will manipulating the
the<01:02:13.039><c> map</c><01:02:13.440><c> concurrently</c><01:02:14.000><c> and</c><01:02:14.079><c> so</c><01:02:14.240><c> we</c><01:02:14.319><c> need</c><01:02:14.480><c> to</c>

01:02:14.549 --> 01:02:14.559 align:start position:0%
the map concurrently and so we need to
 

01:02:14.559 --> 01:02:15.910 align:start position:0%
the map concurrently and so we need to
make<01:02:14.720><c> sure</c><01:02:14.960><c> that</c><01:02:15.200><c> you</c><01:02:15.280><c> know</c><01:02:15.520><c> those</c>

01:02:15.910 --> 01:02:15.920 align:start position:0%
make sure that you know those
 

01:02:15.920 --> 01:02:19.029 align:start position:0%
make sure that you know those
uh<01:02:16.880><c> that</c><01:02:17.119><c> is</c><01:02:17.200><c> done</c><01:02:17.440><c> in</c><01:02:17.599><c> an</c><01:02:17.760><c> atomic</c><01:02:18.240><c> way</c>

01:02:19.029 --> 01:02:19.039 align:start position:0%
uh that is done in an atomic way
 

01:02:19.039 --> 01:02:22.470 align:start position:0%
uh that is done in an atomic way
and<01:02:19.200><c> so</c><01:02:19.520><c> therefore</c><01:02:19.920><c> use</c><01:02:20.160><c> locks</c><01:02:22.000><c> so</c><01:02:22.160><c> the</c><01:02:22.319><c> get</c>

01:02:22.470 --> 01:02:22.480 align:start position:0%
and so therefore use locks so the get
 

01:02:22.480 --> 01:02:23.190 align:start position:0%
and so therefore use locks so the get
function

01:02:23.190 --> 01:02:23.200 align:start position:0%
function
 

01:02:23.200 --> 01:02:25.990 align:start position:0%
function
looks<01:02:23.440><c> up</c><01:02:23.599><c> the</c><01:02:24.640><c> key</c><01:02:25.039><c> into</c><01:02:25.280><c> the</c><01:02:25.440><c> map</c><01:02:25.680><c> it</c><01:02:25.760><c> looks</c>

01:02:25.990 --> 01:02:26.000 align:start position:0%
looks up the key into the map it looks
 

01:02:26.000 --> 01:02:26.470 align:start position:0%
looks up the key into the map it looks
the<01:02:26.079><c> key</c>

01:02:26.470 --> 01:02:26.480 align:start position:0%
the key
 

01:02:26.480 --> 01:02:27.990 align:start position:0%
the key
looks<01:02:26.720><c> of</c><01:02:26.799><c> the</c><01:02:26.880><c> key</c><01:02:27.039><c> in</c><01:02:27.119><c> the</c><01:02:27.200><c> map</c><01:02:27.440><c> and</c><01:02:27.520><c> returns</c>

01:02:27.990 --> 01:02:28.000 align:start position:0%
looks of the key in the map and returns
 

01:02:28.000 --> 01:02:29.910 align:start position:0%
looks of the key in the map and returns
basically<01:02:28.319><c> the</c><01:02:28.480><c> value</c>

01:02:29.910 --> 01:02:29.920 align:start position:0%
basically the value
 

01:02:29.920 --> 01:02:32.069 align:start position:0%
basically the value
if<01:02:30.079><c> there's</c><01:02:30.319><c> no</c><01:02:30.880><c> entry</c><01:02:31.200><c> in</c><01:02:31.280><c> the</c><01:02:31.359><c> map</c><01:02:31.680><c> it</c><01:02:31.839><c> will</c>

01:02:32.069 --> 01:02:32.079 align:start position:0%
if there's no entry in the map it will
 

01:02:32.079 --> 01:02:33.270 align:start position:0%
if there's no entry in the map it will
return<01:02:32.880><c> error</c>

01:02:33.270 --> 01:02:33.280 align:start position:0%
return error
 

01:02:33.280 --> 01:02:35.589 align:start position:0%
return error
no<01:02:33.520><c> key</c><01:02:33.839><c> otherwise</c><01:02:34.319><c> it</c><01:02:34.400><c> will</c><01:02:34.559><c> return</c><01:02:35.359><c> the</c>

01:02:35.589 --> 01:02:35.599 align:start position:0%
no key otherwise it will return the
 

01:02:35.599 --> 01:02:36.390 align:start position:0%
no key otherwise it will return the
appropriate

01:02:36.390 --> 01:02:36.400 align:start position:0%
appropriate
 

01:02:36.400 --> 01:02:39.670 align:start position:0%
appropriate
value<01:02:37.039><c> and</c><01:02:37.119><c> that's</c><01:02:37.440><c> it</c><01:02:38.480><c> and</c><01:02:38.720><c> so</c><01:02:39.119><c> on</c><01:02:39.280><c> the</c><01:02:39.359><c> server</c>

01:02:39.670 --> 01:02:39.680 align:start position:0%
value and that's it and so on the server
 

01:02:39.680 --> 01:02:41.589 align:start position:0%
value and that's it and so on the server
side<01:02:40.000><c> when</c><01:02:40.160><c> this</c><01:02:40.400><c> get</c><01:02:40.559><c> function</c><01:02:40.960><c> returns</c>

01:02:41.589 --> 01:02:41.599 align:start position:0%
side when this get function returns
 

01:02:41.599 --> 01:02:44.549 align:start position:0%
side when this get function returns
it<01:02:41.760><c> will</c><01:02:42.079><c> marshal</c><01:02:42.720><c> its</c><01:02:43.119><c> response</c><01:02:44.240><c> sends</c>

01:02:44.549 --> 01:02:44.559 align:start position:0%
it will marshal its response sends
 

01:02:44.559 --> 01:02:46.309 align:start position:0%
it will marshal its response sends
response<01:02:45.039><c> back</c><01:02:45.200><c> to</c><01:02:45.280><c> the</c><01:02:45.440><c> client</c><01:02:45.839><c> the</c><01:02:45.920><c> client</c>

01:02:46.309 --> 01:02:46.319 align:start position:0%
response back to the client the client
 

01:02:46.319 --> 01:02:46.870 align:start position:0%
response back to the client the client
will

01:02:46.870 --> 01:02:46.880 align:start position:0%
will
 

01:02:46.880 --> 01:02:48.470 align:start position:0%
will
cite<01:02:47.119><c> of</c><01:02:47.280><c> it</c><01:02:47.359><c> will</c><01:02:47.599><c> unmarshal</c><01:02:48.160><c> it</c><01:02:48.319><c> and</c>

01:02:48.470 --> 01:02:48.480 align:start position:0%
cite of it will unmarshal it and
 

01:02:48.480 --> 01:02:52.789 align:start position:0%
cite of it will unmarshal it and
actually<01:02:48.720><c> return</c><01:02:48.960><c> it</c><01:02:49.039><c> to</c><01:02:49.200><c> the</c><01:02:49.280><c> caller</c>

01:02:52.789 --> 01:02:52.799 align:start position:0%
 
 

01:02:52.799 --> 01:02:54.710 align:start position:0%
 
okay<01:02:53.039><c> since</c><01:02:53.280><c> that</c><01:02:53.760><c> makes</c><01:02:54.000><c> sense</c><01:02:54.400><c> so</c><01:02:54.559><c> that's</c>

01:02:54.710 --> 01:02:54.720 align:start position:0%
okay since that makes sense so that's
 

01:02:54.720 --> 01:02:56.470 align:start position:0%
okay since that makes sense so that's
sort<01:02:54.960><c> of</c><01:02:55.119><c> a</c>

01:02:56.470 --> 01:02:56.480 align:start position:0%
sort of a
 

01:02:56.480 --> 01:03:08.549 align:start position:0%
sort of a
dirt<01:02:56.799><c> simple</c><01:02:58.720><c> key</c><01:02:58.960><c> value</c><01:02:59.280><c> server</c><01:02:59.680><c> in</c><01:03:00.839><c> action</c>

01:03:08.549 --> 01:03:08.559 align:start position:0%
 
 

01:03:08.559 --> 01:03:10.630 align:start position:0%
 
okay<01:03:08.799><c> i</c><01:03:08.960><c> want</c><01:03:09.039><c> to</c><01:03:09.119><c> make</c><01:03:09.440><c> one</c><01:03:09.680><c> more</c><01:03:09.920><c> point</c><01:03:10.480><c> which</c>

01:03:10.630 --> 01:03:10.640 align:start position:0%
okay i want to make one more point which
 

01:03:10.640 --> 01:03:11.829 align:start position:0%
okay i want to make one more point which
is<01:03:10.720><c> an</c><01:03:10.880><c> important</c><01:03:11.200><c> point</c>

01:03:11.829 --> 01:03:11.839 align:start position:0%
is an important point
 

01:03:11.839 --> 01:03:15.589 align:start position:0%
is an important point
and<01:03:13.440><c> in</c><01:03:13.599><c> the</c><01:03:13.760><c> end</c>

01:03:15.589 --> 01:03:15.599 align:start position:0%
and in the end
 

01:03:15.599 --> 01:03:17.109 align:start position:0%
and in the end
what's<01:03:15.920><c> important</c><01:03:16.160><c> to</c><01:03:16.240><c> think</c><01:03:16.400><c> about</c><01:03:16.720><c> is</c><01:03:16.880><c> what</c>

01:03:17.109 --> 01:03:17.119 align:start position:0%
what's important to think about is what
 

01:03:17.119 --> 01:03:18.950 align:start position:0%
what's important to think about is what
the<01:03:17.280><c> rfpc</c><01:03:17.839><c> semantics</c><01:03:18.480><c> are</c>

01:03:18.950 --> 01:03:18.960 align:start position:0%
the rfpc semantics are
 

01:03:18.960 --> 01:03:30.069 align:start position:0%
the rfpc semantics are
under<01:03:28.839><c> failures</c>

01:03:30.069 --> 01:03:30.079 align:start position:0%
under failures
 

01:03:30.079 --> 01:03:32.630 align:start position:0%
under failures
um<01:03:31.359><c> and</c><01:03:31.520><c> so</c><01:03:31.680><c> the</c><01:03:31.839><c> different</c><01:03:32.319><c> types</c><01:03:32.559><c> of</c>

01:03:32.630 --> 01:03:32.640 align:start position:0%
um and so the different types of
 

01:03:32.640 --> 01:03:34.390 align:start position:0%
um and so the different types of
semantics<01:03:33.200><c> possible</c>

01:03:34.390 --> 01:03:34.400 align:start position:0%
semantics possible
 

01:03:34.400 --> 01:03:37.670 align:start position:0%
semantics possible
something<01:03:34.720><c> is</c><01:03:34.799><c> called</c><01:03:35.119><c> at</c><01:03:35.200><c> least</c><01:03:35.520><c> once</c>

01:03:37.670 --> 01:03:37.680 align:start position:0%
something is called at least once
 

01:03:37.680 --> 01:03:39.349 align:start position:0%
something is called at least once
and<01:03:37.760><c> this</c><01:03:38.079><c> all</c><01:03:38.240><c> has</c><01:03:38.400><c> to</c><01:03:38.480><c> do</c><01:03:38.720><c> with</c><01:03:39.039><c> like</c><01:03:39.200><c> what</c>

01:03:39.349 --> 01:03:39.359 align:start position:0%
and this all has to do with like what
 

01:03:39.359 --> 01:03:42.069 align:start position:0%
and this all has to do with like what
does<01:03:39.520><c> the</c><01:03:39.680><c> client</c><01:03:40.079><c> do</c><01:03:40.400><c> if</c><01:03:40.480><c> the</c><01:03:40.640><c> server</c><01:03:41.039><c> fails</c>

01:03:42.069 --> 01:03:42.079 align:start position:0%
does the client do if the server fails
 

01:03:42.079 --> 01:03:43.990 align:start position:0%
does the client do if the server fails
so<01:03:42.799><c> let's</c><01:03:42.960><c> say</c><01:03:43.119><c> the</c><01:03:43.200><c> client</c><01:03:43.440><c> sends</c><01:03:43.760><c> the</c>

01:03:43.990 --> 01:03:44.000 align:start position:0%
so let's say the client sends the
 

01:03:44.000 --> 01:03:46.870 align:start position:0%
so let's say the client sends the
request<01:03:44.880><c> the</c><01:03:45.039><c> server</c><01:03:45.359><c> crashes</c>

01:03:46.870 --> 01:03:46.880 align:start position:0%
request the server crashes
 

01:03:46.880 --> 01:03:50.150 align:start position:0%
request the server crashes
and<01:03:47.920><c> uh</c><01:03:48.799><c> of</c><01:03:48.880><c> course</c><01:03:49.119><c> now</c><01:03:49.599><c> at</c><01:03:49.680><c> some</c><01:03:49.839><c> point</c><01:03:50.079><c> the</c>

01:03:50.150 --> 01:03:50.160 align:start position:0%
and uh of course now at some point the
 

01:03:50.160 --> 01:03:51.109 align:start position:0%
and uh of course now at some point the
client<01:03:50.400><c> will</c><01:03:50.559><c> time</c><01:03:50.799><c> out</c>

01:03:51.109 --> 01:03:51.119 align:start position:0%
client will time out
 

01:03:51.119 --> 01:03:52.549 align:start position:0%
client will time out
and<01:03:51.359><c> just</c><01:03:51.520><c> doesn't</c><01:03:51.920><c> know</c><01:03:52.160><c> whether</c><01:03:52.480><c> the</c>

01:03:52.549 --> 01:03:52.559 align:start position:0%
and just doesn't know whether the
 

01:03:52.559 --> 01:03:53.990 align:start position:0%
and just doesn't know whether the
operation<01:03:53.039><c> actually</c><01:03:53.359><c> happened</c><01:03:53.680><c> or</c><01:03:53.760><c> not</c>

01:03:53.990 --> 01:03:54.000 align:start position:0%
operation actually happened or not
 

01:03:54.000 --> 01:03:55.270 align:start position:0%
operation actually happened or not
happened

01:03:55.270 --> 01:03:55.280 align:start position:0%
happened
 

01:03:55.280 --> 01:03:58.390 align:start position:0%
happened
and<01:03:55.599><c> at</c><01:03:55.760><c> least</c><01:03:56.079><c> once</c><01:03:56.559><c> rpc</c><01:03:56.960><c> semantics</c><01:03:57.680><c> it</c><01:03:58.079><c> means</c>

01:03:58.390 --> 01:03:58.400 align:start position:0%
and at least once rpc semantics it means
 

01:03:58.400 --> 01:04:00.470 align:start position:0%
and at least once rpc semantics it means
that<01:03:58.559><c> the</c><01:03:58.799><c> client</c><01:03:59.119><c> will</c><01:03:59.359><c> automatically</c><01:03:59.920><c> retry</c>

01:04:00.470 --> 01:04:00.480 align:start position:0%
that the client will automatically retry
 

01:04:00.480 --> 01:04:02.470 align:start position:0%
that the client will automatically retry
and<01:04:00.640><c> will</c><01:04:00.799><c> keep</c><01:04:01.039><c> going</c><01:04:01.440><c> until</c><01:04:01.760><c> the</c><01:04:01.920><c> next</c><01:04:02.240><c> has</c>

01:04:02.470 --> 01:04:02.480 align:start position:0%
and will keep going until the next has
 

01:04:02.480 --> 01:04:05.910 align:start position:0%
and will keep going until the next has
executed<01:04:02.880><c> at</c><01:04:03.039><c> least</c><01:04:03.280><c> once</c>

01:04:05.910 --> 01:04:05.920 align:start position:0%
 
 

01:04:05.920 --> 01:04:07.510 align:start position:0%
 
uh<01:04:06.240><c> the</c><01:04:06.400><c> downside</c><01:04:06.799><c> of</c><01:04:06.880><c> course</c><01:04:07.119><c> of</c><01:04:07.200><c> at</c><01:04:07.280><c> least</c>

01:04:07.510 --> 01:04:07.520 align:start position:0%
uh the downside of course of at least
 

01:04:07.520 --> 01:04:09.109 align:start position:0%
uh the downside of course of at least
once<01:04:07.760><c> is</c><01:04:07.839><c> that</c><01:04:08.079><c> you</c><01:04:08.160><c> know</c><01:04:08.319><c> the</c><01:04:08.480><c> same</c><01:04:08.720><c> operation</c>

01:04:09.109 --> 01:04:09.119 align:start position:0%
once is that you know the same operation
 

01:04:09.119 --> 01:04:11.029 align:start position:0%
once is that you know the same operation
might<01:04:09.280><c> be</c><01:04:09.440><c> executed</c><01:04:09.839><c> multiple</c><01:04:10.400><c> times</c><01:04:10.799><c> so</c>

01:04:11.029 --> 01:04:11.039 align:start position:0%
might be executed multiple times so
 

01:04:11.039 --> 01:04:12.789 align:start position:0%
might be executed multiple times so
example<01:04:11.359><c> if</c><01:04:11.520><c> you</c><01:04:11.599><c> do</c><01:04:11.760><c> a</c><01:04:11.839><c> put</c><01:04:12.160><c> you</c><01:04:12.319><c> know</c><01:04:12.480><c> the</c><01:04:12.640><c> put</c>

01:04:12.789 --> 01:04:12.799 align:start position:0%
example if you do a put you know the put
 

01:04:12.799 --> 01:04:14.390 align:start position:0%
example if you do a put you know the put
might<01:04:13.039><c> be</c><01:04:13.200><c> actually</c><01:04:13.520><c> executed</c><01:04:14.000><c> multiple</c>

01:04:14.390 --> 01:04:14.400 align:start position:0%
might be actually executed multiple
 

01:04:14.400 --> 01:04:17.349 align:start position:0%
might be actually executed multiple
times<01:04:14.640><c> in</c><01:04:14.799><c> at</c><01:04:14.880><c> least</c><01:04:15.119><c> one</c><01:04:15.359><c> rpc</c><01:04:15.760><c> system</c>

01:04:17.349 --> 01:04:17.359 align:start position:0%
times in at least one rpc system
 

01:04:17.359 --> 01:04:18.870 align:start position:0%
times in at least one rpc system
so<01:04:17.520><c> that's</c><01:04:17.839><c> not</c><01:04:18.000><c> appropriate</c><01:04:18.480><c> for</c><01:04:18.559><c> many</c>

01:04:18.870 --> 01:04:18.880 align:start position:0%
so that's not appropriate for many
 

01:04:18.880 --> 01:04:21.270 align:start position:0%
so that's not appropriate for many
applications<01:04:20.000><c> so</c><01:04:20.160><c> another</c>

01:04:21.270 --> 01:04:21.280 align:start position:0%
applications so another
 

01:04:21.280 --> 01:04:23.270 align:start position:0%
applications so another
type<01:04:21.520><c> of</c><01:04:21.599><c> semantics</c><01:04:22.079><c> that's</c><01:04:22.319><c> common</c><01:04:22.720><c> in</c><01:04:22.880><c> rpc</c>

01:04:23.270 --> 01:04:23.280 align:start position:0%
type of semantics that's common in rpc
 

01:04:23.280 --> 01:04:27.829 align:start position:0%
type of semantics that's common in rpc
systems<01:04:23.680><c> is</c><01:04:23.839><c> it</c><01:04:24.000><c> most</c><01:04:24.839><c> wants</c>

01:04:27.829 --> 01:04:27.839 align:start position:0%
systems is it most wants
 

01:04:27.839 --> 01:04:30.309 align:start position:0%
systems is it most wants
so<01:04:28.480><c> the</c><01:04:28.960><c> corresponding</c><01:04:29.599><c> survey</c><01:04:29.920><c> request</c>

01:04:30.309 --> 01:04:30.319 align:start position:0%
so the corresponding survey request
 

01:04:30.319 --> 01:04:32.069 align:start position:0%
so the corresponding survey request
actually<01:04:30.720><c> executed</c><01:04:31.200><c> either</c>

01:04:32.069 --> 01:04:32.079 align:start position:0%
actually executed either
 

01:04:32.079 --> 01:04:35.190 align:start position:0%
actually executed either
uh<01:04:33.599><c> zero</c><01:04:33.920><c> times</c><01:04:34.559><c> or</c><01:04:34.720><c> once</c>

01:04:35.190 --> 01:04:35.200 align:start position:0%
uh zero times or once
 

01:04:35.200 --> 01:04:37.910 align:start position:0%
uh zero times or once
but<01:04:35.359><c> no</c><01:04:35.599><c> more</c><01:04:35.839><c> than</c><01:04:36.000><c> once</c><01:04:37.119><c> and</c><01:04:37.359><c> the</c><01:04:37.520><c> way</c><01:04:37.760><c> you</c>

01:04:37.910 --> 01:04:37.920 align:start position:0%
but no more than once and the way you
 

01:04:37.920 --> 01:04:39.510 align:start position:0%
but no more than once and the way you
know<01:04:38.000><c> that</c><01:04:38.240><c> is</c><01:04:38.319><c> typically</c><01:04:38.720><c> implemented</c><01:04:39.200><c> is</c><01:04:39.359><c> by</c>

01:04:39.510 --> 01:04:39.520 align:start position:0%
know that is typically implemented is by
 

01:04:39.520 --> 01:04:40.950 align:start position:0%
know that is typically implemented is by
filtering<01:04:39.920><c> duplicates</c><01:04:40.480><c> and</c><01:04:40.640><c> you</c><01:04:40.799><c> will</c>

01:04:40.950 --> 01:04:40.960 align:start position:0%
filtering duplicates and you will
 

01:04:40.960 --> 01:04:41.990 align:start position:0%
filtering duplicates and you will
actually<01:04:41.200><c> be</c><01:04:41.359><c> doing</c><01:04:41.599><c> that</c>

01:04:41.990 --> 01:04:42.000 align:start position:0%
actually be doing that
 

01:04:42.000 --> 01:04:46.069 align:start position:0%
actually be doing that
in<01:04:42.240><c> uh</c><01:04:44.160><c> in</c><01:04:44.319><c> later</c><01:04:44.720><c> labs</c>

01:04:46.069 --> 01:04:46.079 align:start position:0%
in uh in later labs
 

01:04:46.079 --> 01:04:47.510 align:start position:0%
in uh in later labs
that<01:04:46.400><c> could</c><01:04:46.720><c> could</c><01:04:46.880><c> be</c><01:04:47.039><c> the</c><01:04:47.119><c> case</c><01:04:47.359><c> that</c>

01:04:47.510 --> 01:04:47.520 align:start position:0%
that could could be the case that
 

01:04:47.520 --> 01:04:48.789 align:start position:0%
that could could be the case that
actually<01:04:47.760><c> both</c><01:04:48.000><c> requests</c><01:04:48.400><c> actually</c><01:04:48.640><c> come</c>

01:04:48.789 --> 01:04:48.799 align:start position:0%
actually both requests actually come
 

01:04:48.799 --> 01:04:49.589 align:start position:0%
actually both requests actually come
through

01:04:49.589 --> 01:04:49.599 align:start position:0%
through
 

01:04:49.599 --> 01:04:51.829 align:start position:0%
through
uh<01:04:49.839><c> maybe</c><01:04:50.079><c> the</c><01:04:50.160><c> network</c><01:04:50.559><c> is</c><01:04:50.720><c> like</c><01:04:50.880><c> a</c><01:04:51.359><c> temporary</c>

01:04:51.829 --> 01:04:51.839 align:start position:0%
uh maybe the network is like a temporary
 

01:04:51.839 --> 01:04:53.109 align:start position:0%
uh maybe the network is like a temporary
petition<01:04:52.240><c> then</c><01:04:52.400><c> the</c><01:04:52.480><c> server</c><01:04:52.799><c> actually</c><01:04:52.960><c> gets</c>

01:04:53.109 --> 01:04:53.119 align:start position:0%
petition then the server actually gets
 

01:04:53.119 --> 01:04:54.630 align:start position:0%
petition then the server actually gets
both<01:04:53.359><c> requests</c><01:04:53.760><c> and</c><01:04:53.920><c> the</c><01:04:54.079><c> server</c><01:04:54.400><c> has</c><01:04:54.559><c> to</c>

01:04:54.630 --> 01:04:54.640 align:start position:0%
both requests and the server has to
 

01:04:54.640 --> 01:04:55.510 align:start position:0%
both requests and the server has to
arrange<01:04:55.039><c> that</c>

01:04:55.510 --> 01:04:55.520 align:start position:0%
arrange that
 

01:04:55.520 --> 01:04:58.630 align:start position:0%
arrange that
it<01:04:56.160><c> detects</c><01:04:57.119><c> a</c><01:04:57.440><c> recent</c><01:04:57.839><c> request</c><01:04:58.240><c> and</c><01:04:58.319><c> doesn't</c>

01:04:58.630 --> 01:04:58.640 align:start position:0%
it detects a recent request and doesn't
 

01:04:58.640 --> 01:05:01.349 align:start position:0%
it detects a recent request and doesn't
execute<01:04:59.039><c> it</c><01:04:59.119><c> twice</c>

01:05:01.349 --> 01:05:01.359 align:start position:0%
execute it twice
 

01:05:01.359 --> 01:05:04.069 align:start position:0%
execute it twice
now<01:05:01.520><c> of</c><01:05:01.599><c> course</c><01:05:02.160><c> ideally</c><01:05:03.440><c> you</c><01:05:03.599><c> might</c><01:05:03.839><c> actually</c>

01:05:04.069 --> 01:05:04.079 align:start position:0%
now of course ideally you might actually
 

01:05:04.079 --> 01:05:05.910 align:start position:0%
now of course ideally you might actually
want<01:05:04.319><c> exactly</c><01:05:04.720><c> once</c>

01:05:05.910 --> 01:05:05.920 align:start position:0%
want exactly once
 

01:05:05.920 --> 01:05:07.430 align:start position:0%
want exactly once
because<01:05:06.240><c> that's</c><01:05:06.559><c> actually</c><01:05:06.799><c> what</c><01:05:06.960><c> your</c><01:05:07.119><c> normal</c>

01:05:07.430 --> 01:05:07.440 align:start position:0%
because that's actually what your normal
 

01:05:07.440 --> 01:05:08.950 align:start position:0%
because that's actually what your normal
procedure<01:05:07.920><c> call</c><01:05:08.079><c> would</c><01:05:08.160><c> be</c><01:05:08.319><c> due</c><01:05:08.480><c> right</c><01:05:08.720><c> like</c>

01:05:08.950 --> 01:05:08.960 align:start position:0%
procedure call would be due right like
 

01:05:08.960 --> 01:05:10.470 align:start position:0%
procedure call would be due right like
if<01:05:09.039><c> you</c><01:05:09.200><c> call</c><01:05:09.440><c> a</c><01:05:09.520><c> procedure</c><01:05:10.000><c> in</c><01:05:10.160><c> uh</c>

01:05:10.470 --> 01:05:10.480 align:start position:0%
if you call a procedure in uh
 

01:05:10.480 --> 01:05:12.230 align:start position:0%
if you call a procedure in uh
your<01:05:10.720><c> server</c><01:05:11.280><c> in</c><01:05:11.359><c> a</c><01:05:11.440><c> normal</c><01:05:11.680><c> sequential</c>

01:05:12.230 --> 01:05:12.240 align:start position:0%
your server in a normal sequential
 

01:05:12.240 --> 01:05:13.750 align:start position:0%
your server in a normal sequential
program<01:05:12.480><c> it</c><01:05:12.640><c> actually</c><01:05:13.039><c> executes</c><01:05:13.440><c> exactly</c>

01:05:13.750 --> 01:05:13.760 align:start position:0%
program it actually executes exactly
 

01:05:13.760 --> 01:05:15.510 align:start position:0%
program it actually executes exactly
once<01:05:14.079><c> it's</c><01:05:14.240><c> never</c><01:05:14.480><c> possible</c><01:05:14.880><c> to</c><01:05:15.039><c> be</c><01:05:15.200><c> at</c><01:05:15.280><c> least</c>

01:05:15.510 --> 01:05:15.520 align:start position:0%
once it's never possible to be at least
 

01:05:15.520 --> 01:05:15.910 align:start position:0%
once it's never possible to be at least
once

01:05:15.910 --> 01:05:15.920 align:start position:0%
once
 

01:05:15.920 --> 01:05:17.990 align:start position:0%
once
at<01:05:16.000><c> most</c><01:05:16.240><c> once</c><01:05:17.280><c> this</c><01:05:17.440><c> turns</c><01:05:17.680><c> out</c><01:05:17.839><c> to</c><01:05:17.920><c> be</c>

01:05:17.990 --> 01:05:18.000 align:start position:0%
at most once this turns out to be
 

01:05:18.000 --> 01:05:20.150 align:start position:0%
at most once this turns out to be
actually<01:05:18.240><c> very</c><01:05:18.480><c> hard</c><01:05:18.640><c> to</c><01:05:18.799><c> arrange</c>

01:05:20.150 --> 01:05:20.160 align:start position:0%
actually very hard to arrange
 

01:05:20.160 --> 01:05:22.390 align:start position:0%
actually very hard to arrange
uh<01:05:20.400><c> this</c><01:05:20.640><c> requires</c><01:05:21.200><c> you</c><01:05:21.359><c> know</c><01:05:21.680><c> uh</c><01:05:22.160><c> you</c>

01:05:22.390 --> 01:05:22.400 align:start position:0%
uh this requires you know uh you
 

01:05:22.400 --> 01:05:24.710 align:start position:0%
uh this requires you know uh you
basically<01:05:22.799><c> have</c><01:05:22.960><c> to</c><01:05:23.039><c> maintain</c><01:05:23.440><c> state</c><01:05:23.760><c> on</c><01:05:23.839><c> disk</c>

01:05:24.710 --> 01:05:24.720 align:start position:0%
basically have to maintain state on disk
 

01:05:24.720 --> 01:05:27.349 align:start position:0%
basically have to maintain state on disk
uh<01:05:25.200><c> and</c><01:05:25.440><c> so</c><01:05:25.599><c> the</c><01:05:25.839><c> tent</c><01:05:26.079><c> tends</c><01:05:26.319><c> to</c><01:05:26.400><c> be</c><01:05:26.720><c> expensive</c>

01:05:27.349 --> 01:05:27.359 align:start position:0%
uh and so the tent tends to be expensive
 

01:05:27.359 --> 01:05:29.029 align:start position:0%
uh and so the tent tends to be expensive
and<01:05:27.599><c> in</c><01:05:27.760><c> fact</c><01:05:28.000><c> you</c><01:05:28.079><c> know</c><01:05:28.240><c> in</c><01:05:28.319><c> practice</c><01:05:28.799><c> very</c>

01:05:29.029 --> 01:05:29.039 align:start position:0%
and in fact you know in practice very
 

01:05:29.039 --> 01:05:31.430 align:start position:0%
and in fact you know in practice very
few<01:05:29.200><c> rpc</c><01:05:29.680><c> systems</c><01:05:30.079><c> are</c><01:05:30.319><c> exactly</c><01:05:30.720><c> once</c>

01:05:31.430 --> 01:05:31.440 align:start position:0%
few rpc systems are exactly once
 

01:05:31.440 --> 01:05:32.789 align:start position:0%
few rpc systems are exactly once
although<01:05:31.920><c> in</c><01:05:32.000><c> the</c><01:05:32.160><c> labs</c><01:05:32.480><c> you're</c><01:05:32.640><c> going</c><01:05:32.720><c> to</c>

01:05:32.789 --> 01:05:32.799 align:start position:0%
although in the labs you're going to
 

01:05:32.799 --> 01:05:34.549 align:start position:0%
although in the labs you're going to
build<01:05:33.039><c> actually</c><01:05:33.359><c> one</c><01:05:33.599><c> in</c><01:05:33.760><c> lab</c><01:05:34.000><c> three</c>

01:05:34.549 --> 01:05:34.559 align:start position:0%
build actually one in lab three
 

01:05:34.559 --> 01:05:35.990 align:start position:0%
build actually one in lab three
you're<01:05:34.799><c> gonna</c><01:05:34.960><c> actually</c><01:05:35.200><c> build</c><01:05:35.440><c> an</c><01:05:35.599><c> rpc</c>

01:05:35.990 --> 01:05:36.000 align:start position:0%
you're gonna actually build an rpc
 

01:05:36.000 --> 01:05:38.950 align:start position:0%
you're gonna actually build an rpc
system<01:05:36.319><c> that's</c><01:05:36.559><c> basically</c><01:05:37.039><c> exactly</c><01:05:37.440><c> once</c>

01:05:38.950 --> 01:05:38.960 align:start position:0%
system that's basically exactly once
 

01:05:38.960 --> 01:05:41.990 align:start position:0%
system that's basically exactly once
okay<01:05:40.640><c> in</c><01:05:40.880><c> practice</c>

01:05:41.990 --> 01:05:42.000 align:start position:0%
okay in practice
 

01:05:42.000 --> 01:05:45.910 align:start position:0%
okay in practice
goes<01:05:42.960><c> rpc</c><01:05:43.680><c> system</c><01:05:44.160><c> is</c><01:05:44.799><c> at</c><01:05:44.880><c> most</c><01:05:45.200><c> wants</c><01:05:45.599><c> so</c><01:05:45.760><c> if</c>

01:05:45.910 --> 01:05:45.920 align:start position:0%
goes rpc system is at most wants so if
 

01:05:45.920 --> 01:05:46.950 align:start position:0%
goes rpc system is at most wants so if
you<01:05:46.000><c> do</c><01:05:46.160><c> a</c><01:05:46.319><c> call</c>

01:05:46.950 --> 01:05:46.960 align:start position:0%
you do a call
 

01:05:46.960 --> 01:05:48.549 align:start position:0%
you do a call
and<01:05:47.119><c> you</c><01:05:47.200><c> do</c><01:05:47.359><c> the</c><01:05:47.440><c> call</c><01:05:47.680><c> across</c><01:05:48.000><c> the</c><01:05:48.079><c> tcp</c>

01:05:48.549 --> 01:05:48.559 align:start position:0%
and you do the call across the tcp
 

01:05:48.559 --> 01:05:50.309 align:start position:0%
and you do the call across the tcp
channel<01:05:48.880><c> the</c><01:05:48.960><c> tcp</c><01:05:49.520><c> channel</c><01:05:49.760><c> will</c><01:05:49.920><c> make</c><01:05:50.079><c> sure</c>

01:05:50.309 --> 01:05:50.319 align:start position:0%
channel the tcp channel will make sure
 

01:05:50.319 --> 01:05:51.990 align:start position:0%
channel the tcp channel will make sure
that<01:05:50.400><c> there</c><01:05:50.640><c> are</c><01:05:50.720><c> no</c><01:05:50.880><c> duplicates</c>

01:05:51.990 --> 01:05:52.000 align:start position:0%
that there are no duplicates
 

01:05:52.000 --> 01:05:55.270 align:start position:0%
that there are no duplicates
uh<01:05:52.480><c> and</c><01:05:52.720><c> so</c><01:05:53.119><c> and</c><01:05:54.160><c> the</c><01:05:54.240><c> rfpc</c><01:05:54.799><c> system</c>

01:05:55.270 --> 01:05:55.280 align:start position:0%
uh and so and the rfpc system
 

01:05:55.280 --> 01:05:57.990 align:start position:0%
uh and so and the rfpc system
uh<01:05:55.520><c> will</c><01:05:55.760><c> either</c><01:05:56.000><c> execute</c><01:05:56.400><c> once</c><01:05:57.119><c> or</c><01:05:57.599><c> none</c><01:05:57.839><c> at</c>

01:05:57.990 --> 01:05:58.000 align:start position:0%
uh will either execute once or none at
 

01:05:58.000 --> 01:05:58.309 align:start position:0%
uh will either execute once or none at
all

01:05:58.309 --> 01:05:58.319 align:start position:0%
all
 

01:05:58.319 --> 01:06:01.510 align:start position:0%
all
and<01:05:58.480><c> then</c><01:05:58.720><c> in</c><01:05:58.799><c> the</c><01:05:58.880><c> case</c><01:05:59.200><c> and</c><01:05:59.680><c> return</c><01:06:00.000><c> an</c><01:06:00.240><c> error</c>

01:06:01.510 --> 01:06:01.520 align:start position:0%
and then in the case and return an error
 

01:06:01.520 --> 01:06:02.950 align:start position:0%
and then in the case and return an error
uh<01:06:01.920><c> and</c><01:06:02.079><c> then</c><01:06:02.240><c> of</c><01:06:02.319><c> course</c><01:06:02.480><c> the</c><01:06:02.640><c> application</c>

01:06:02.950 --> 01:06:02.960 align:start position:0%
uh and then of course the application
 

01:06:02.960 --> 01:06:04.870 align:start position:0%
uh and then of course the application
may<01:06:03.200><c> retry</c><01:06:03.839><c> but</c><01:06:04.000><c> now</c><01:06:04.160><c> it's</c><01:06:04.319><c> the</c><01:06:04.400><c> application's</c>

01:06:04.870 --> 01:06:04.880 align:start position:0%
may retry but now it's the application's
 

01:06:04.880 --> 01:06:05.990 align:start position:0%
may retry but now it's the application's
responsibility<01:06:05.599><c> to</c>

01:06:05.990 --> 01:06:06.000 align:start position:0%
responsibility to
 

01:06:06.000 --> 01:06:07.109 align:start position:0%
responsibility to
uh<01:06:06.319><c> deal</c><01:06:06.480><c> with</c><01:06:06.640><c> the</c><01:06:06.799><c> problems</c><01:06:07.039><c> with</c>

01:06:07.109 --> 01:06:07.119 align:start position:0%
uh deal with the problems with
 

01:06:07.119 --> 01:06:10.549 align:start position:0%
uh deal with the problems with
duplication<01:06:07.760><c> and</c><01:06:07.920><c> failed</c><01:06:08.160><c> messages</c>

01:06:10.549 --> 01:06:10.559 align:start position:0%
duplication and failed messages
 

01:06:10.559 --> 01:06:12.789 align:start position:0%
duplication and failed messages
okay<01:06:10.799><c> so</c><01:06:11.039><c> here's</c><01:06:11.359><c> the</c><01:06:11.599><c> sort</c><01:06:11.760><c> of</c><01:06:11.839><c> the</c><01:06:12.240><c> key</c><01:06:12.480><c> point</c>

01:06:12.789 --> 01:06:12.799 align:start position:0%
okay so here's the sort of the key point
 

01:06:12.799 --> 01:06:15.430 align:start position:0%
okay so here's the sort of the key point
correct<01:06:13.520><c> the</c><01:06:13.680><c> fact</c><01:06:13.920><c> that</c><01:06:14.000><c> there</c><01:06:14.160><c> are</c><01:06:14.240><c> failures</c>

01:06:15.430 --> 01:06:15.440 align:start position:0%
correct the fact that there are failures
 

01:06:15.440 --> 01:06:18.870 align:start position:0%
correct the fact that there are failures
basically<01:06:15.839><c> makes</c><01:06:16.160><c> you</c><01:06:16.240><c> know</c><01:06:16.839><c> rpcs</c>

01:06:18.870 --> 01:06:18.880 align:start position:0%
basically makes you know rpcs
 

01:06:18.880 --> 01:06:21.349 align:start position:0%
basically makes you know rpcs
not<01:06:19.119><c> identical</c><01:06:19.599><c> to</c><01:06:19.760><c> procedure</c><01:06:20.240><c> calls</c><01:06:20.960><c> so</c><01:06:21.200><c> even</c>

01:06:21.349 --> 01:06:21.359 align:start position:0%
not identical to procedure calls so even
 

01:06:21.359 --> 01:06:22.950 align:start position:0%
not identical to procedure calls so even
though<01:06:21.680><c> the</c><01:06:21.760><c> goal</c><01:06:22.079><c> is</c><01:06:22.160><c> to</c><01:06:22.319><c> make</c><01:06:22.480><c> them</c><01:06:22.640><c> look</c><01:06:22.880><c> as</c>

01:06:22.950 --> 01:06:22.960 align:start position:0%
though the goal is to make them look as
 

01:06:22.960 --> 01:06:24.069 align:start position:0%
though the goal is to make them look as
similar<01:06:23.359><c> as</c><01:06:23.440><c> possible</c>

01:06:24.069 --> 01:06:24.079 align:start position:0%
similar as possible
 

01:06:24.079 --> 01:06:25.910 align:start position:0%
similar as possible
they're<01:06:24.240><c> actually</c><01:06:24.480><c> not</c><01:06:24.720><c> identical</c><01:06:25.359><c> and</c>

01:06:25.910 --> 01:06:25.920 align:start position:0%
they're actually not identical and
 

01:06:25.920 --> 01:06:27.510 align:start position:0%
they're actually not identical and
really<01:06:26.240><c> the</c><01:06:26.400><c> thing</c><01:06:26.559><c> that</c><01:06:26.799><c> exposes</c><01:06:27.359><c> the</c>

01:06:27.510 --> 01:06:27.520 align:start position:0%
really the thing that exposes the
 

01:06:27.520 --> 01:06:28.470 align:start position:0%
really the thing that exposes the
differences

01:06:28.470 --> 01:06:28.480 align:start position:0%
differences
 

01:06:28.480 --> 01:06:31.430 align:start position:0%
differences
is<01:06:28.640><c> the</c><01:06:29.760><c> the</c><01:06:29.920><c> failures</c><01:06:30.799><c> or</c><01:06:30.960><c> the</c><01:06:31.119><c> survey</c>

01:06:31.430 --> 01:06:31.440 align:start position:0%
is the the failures or the survey
 

01:06:31.440 --> 01:06:35.430 align:start position:0%
is the the failures or the survey
crashing

01:06:35.430 --> 01:06:35.440 align:start position:0%
 
 

01:06:35.440 --> 01:06:37.750 align:start position:0%
 
any<01:06:36.240><c> quick</c><01:06:36.880><c> questions</c><01:06:37.200><c> about</c><01:06:37.359><c> this</c><01:06:37.520><c> quick</c>

01:06:37.750 --> 01:06:37.760 align:start position:0%
any quick questions about this quick
 

01:06:37.760 --> 01:06:46.950 align:start position:0%
any quick questions about this quick
intro<01:06:38.160><c> for</c><01:06:44.839><c> rpc</c>

01:06:46.950 --> 01:06:46.960 align:start position:0%
intro for rpc
 

01:06:46.960 --> 01:06:48.950 align:start position:0%
intro for rpc
okay<01:06:47.440><c> if</c><01:06:47.680><c> not</c><01:06:47.920><c> then</c><01:06:48.160><c> i'm</c><01:06:48.400><c> going</c><01:06:48.559><c> to</c><01:06:48.640><c> stop</c><01:06:48.799><c> the</c>

01:06:48.950 --> 01:06:48.960 align:start position:0%
okay if not then i'm going to stop the
 

01:06:48.960 --> 01:06:50.710 align:start position:0%
okay if not then i'm going to stop the
lecture<01:06:49.280><c> here</c><01:06:49.599><c> so</c><01:06:49.760><c> that</c><01:06:49.920><c> people</c><01:06:50.160><c> that</c><01:06:50.400><c> need</c><01:06:50.559><c> to</c>

01:06:50.710 --> 01:06:50.720 align:start position:0%
lecture here so that people that need to
 

01:06:50.720 --> 01:06:51.990 align:start position:0%
lecture here so that people that need to
go<01:06:50.880><c> or</c><01:06:51.039><c> students</c><01:06:51.280><c> that</c><01:06:51.440><c> need</c><01:06:51.599><c> to</c><01:06:51.680><c> go</c><01:06:51.760><c> to</c><01:06:51.920><c> the</c>

01:06:51.990 --> 01:06:52.000 align:start position:0%
go or students that need to go to the
 

01:06:52.000 --> 01:06:53.589 align:start position:0%
go or students that need to go to the
next<01:06:52.240><c> class</c><01:06:52.480><c> they</c><01:06:52.640><c> can</c><01:06:52.720><c> go</c><01:06:52.880><c> to</c><01:06:52.960><c> the</c><01:06:53.039><c> next</c><01:06:53.200><c> class</c>

01:06:53.589 --> 01:06:53.599 align:start position:0%
next class they can go to the next class
 

01:06:53.599 --> 01:06:55.349 align:start position:0%
next class they can go to the next class
i'll<01:06:53.760><c> be</c><01:06:53.920><c> hanging</c><01:06:54.240><c> around</c><01:06:54.640><c> so</c><01:06:54.799><c> if</c><01:06:54.880><c> there's</c><01:06:55.119><c> any</c>

01:06:55.349 --> 01:06:55.359 align:start position:0%
i'll be hanging around so if there's any
 

01:06:55.359 --> 01:06:58.870 align:start position:0%
i'll be hanging around so if there's any
more<01:06:55.599><c> questions</c><01:06:56.000><c> i'll</c><01:06:56.160><c> be</c><01:06:56.400><c> happy</c><01:06:56.720><c> to</c><01:06:57.039><c> uh</c>

01:06:58.870 --> 01:06:58.880 align:start position:0%
more questions i'll be happy to uh
 

01:06:58.880 --> 01:07:00.789 align:start position:0%
more questions i'll be happy to uh
to<01:06:59.119><c> answer</c><01:06:59.359><c> them</c><01:06:59.839><c> and</c><01:07:00.079><c> i'll</c><01:07:00.240><c> stick</c><01:07:00.400><c> around</c><01:07:00.640><c> for</c>

01:07:00.789 --> 01:07:00.799 align:start position:0%
to answer them and i'll stick around for
 

01:07:00.799 --> 01:07:03.109 align:start position:0%
to answer them and i'll stick around for
a little<01:07:01.039><c> while</c>

01:07:03.109 --> 01:07:03.119 align:start position:0%
a little while
 

01:07:03.119 --> 01:07:05.109 align:start position:0%
a little while
in<01:07:03.200><c> the</c><01:07:03.200><c> meantime</c><01:07:03.839><c> enjoy</c><01:07:04.240><c> lab</c><01:07:04.480><c> one</c><01:07:04.799><c> and</c><01:07:04.960><c> good</c>

01:07:05.109 --> 01:07:05.119 align:start position:0%
in the meantime enjoy lab one and good
 

01:07:05.119 --> 01:07:08.640 align:start position:0%
in the meantime enjoy lab one and good
luck<01:07:05.359><c> with</c><01:07:05.640><c> it</c>

