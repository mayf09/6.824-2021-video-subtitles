1
00:00:00,530 --> 00:00:01,970
0,330 330,510 510,840 840,930 930,1440
So the topic for today
所以今天的主题是RAFT复制[]协议，

2
00:00:02,510 --> 00:00:07,340
0,510 510,1350 1380,2220
is raft {}

3
00:00:07,340 --> 00:00:09,410
0,420 420,690 690,1380 1500,1770 1770,2070
replication [] protocol,| {} we'll
|我们将详细讨论这个问题，

4
00:00:09,410 --> 00:00:10,190
0,360 360,420 420,600 600,630 630,780
discuss it quite a bit

5
00:00:10,190 --> 00:00:11,780
0,60 60,660 720,1110 1110,1230 1230,1590
of detail,| {} in fact
|事实上，我们将用多节课来讲解它

6
00:00:11,780 --> 00:00:12,980
0,390 390,600 600,660 660,870 870,1200
we're going to spend multiple

7
00:00:12,980 --> 00:00:15,140
0,330 330,510 510,720 1620,1860 1860,2160
lectures on it| and one
|其一是因为它是分布式复制协议示例的核心元素之一。

8
00:00:15,140 --> 00:00:16,010
0,270 270,390 390,660 660,750 750,870
because it's one of the

9
00:00:16,010 --> 00:00:18,980
0,480 480,1110 1140,1440 1440,2130 2130,2970
core elements of {} examples

10
00:00:18,980 --> 00:00:22,430
0,210 690,1830 1830,2400 2400,2940 2940,3450
of {} distributed replication protocol.|
|

11
00:00:22,900 --> 00:00:25,000
0,570 600,960 960,1620 1650,1950 1950,2100
So, {} today {} been
所以，今天我们主要关注实验2a和2b所需的材料，

12
00:00:25,000 --> 00:00:27,850
0,420 420,1290 1710,2490 2610,2760 2760,2850
mostly focusing on you know

13
00:00:27,850 --> 00:00:29,410
0,90 90,660 660,840 840,990 990,1560
the material that is necessary

14
00:00:29,410 --> 00:00:30,520
0,120 120,510 510,780 780,990 990,1110
for labs {2a -} and

15
00:00:30,520 --> 00:00:31,700
0,180 180,600
{2b -},|
|

16
00:00:32,590 --> 00:00:34,030
0,330 330,510 510,720 720,1260 1260,1440
{} so the election of
因此，领导人的选举以及你知道的推波助澜

17
00:00:34,030 --> 00:00:35,200
0,150 150,570 570,720 720,990 990,1170
the leader as well as

18
00:00:35,200 --> 00:00:36,220
0,120 120,210 210,540 540,660 660,1020
you know pushing the logs

19
00:00:36,220 --> 00:00:38,530
0,480 900,1080 1080,1440 1440,1800 1800,2310
around| and then next week,
|下周，我们将更多地关注2c和2d，主要是快照和日志同情

20
00:00:38,650 --> 00:00:40,300
0,660
{}

21
00:00:42,710 --> 00:00:44,390
0,330 330,720 720,1140 1140,1440 1440,1680
we're focusing more on {2c

22
00:00:44,390 --> 00:00:46,040
0,390 390,570 570,690 690,1170 1170,1650
-} and {2d -}, mainly

23
00:00:46,040 --> 00:00:47,640
0,180 180,1080
the snapshots

24
00:00:47,790 --> 00:00:50,370
0,570 570,810 810,1410 1410,2100 2100,2580
{} and log compassion| and
|并让我们有机会了解木筏的任何其他方面。

25
00:00:50,370 --> 00:00:51,690
0,180 180,300 300,960 960,1140 1140,1320
give us opportunity to just

26
00:00:51,690 --> 00:00:53,280
0,180 180,390 390,810 810,960 960,1590
any other aspect of raft.|
|

27
00:00:53,430 --> 00:00:54,660
0,150 150,630 660,810 810,1020 1020,1230
In fact we'll talk about
事实上，我们会在接下来的一周再谈一次浮筏，

28
00:00:54,660 --> 00:00:56,160
0,210 210,420 420,630 630,1110 1290,1500
raft one more time {}

29
00:00:56,160 --> 00:00:58,160
0,150 150,240 240,480 480,1110
in the week after,|
|

30
00:00:58,250 --> 00:00:59,930
0,690 690,990 990,1380 1380,1590 1590,1680
we'll have a {Q&A -}
我们会有一堂关于2a和2b的问答课

31
00:00:59,930 --> 00:01:01,360
0,120 120,660
{} lecture

32
00:01:03,150 --> 00:01:05,190
0,690 690,1260 1440,1620 1620,1800 1800,2040
on {} you know {2a

33
00:01:05,190 --> 00:01:06,120
0,180 180,270 270,390 390,780 780,930
-} and {2b -}| and
|来谈谈实验室2a和2b的实际解决方案。

34
00:01:06,120 --> 00:01:07,830
0,540 690,990 990,1230 1230,1440 1440,1710
so talk about the actual

35
00:01:07,830 --> 00:01:09,480
0,480 480,600 600,720 720,1320 1500,1650
solutions to the labs 2a

36
00:01:09,480 --> 00:01:10,600
0,540
2b.|
|

37
00:01:10,600 --> 00:01:13,540
0,630 990,1290 1290,1350 1350,1830 2220,2940
Okay?| That's the plan {}|
好吧?|这就是我们的计划|

38
00:01:13,540 --> 00:01:14,380
0,450 450,540 540,630 630,750 750,840
and so I'm going to
因此，我将从今天的起点开始深入讨论。

39
00:01:14,380 --> 00:01:16,750
0,300 300,570 570,900 930,1890 1950,2370
just dive in {} with

40
00:01:16,750 --> 00:01:18,250
0,540 570,870 870,990 990,1320 1320,1500
{} with a starting point

41
00:01:18,250 --> 00:01:19,280
0,120 120,510
for today.|
|

42
00:01:19,530 --> 00:01:22,410
0,570 1050,1320 1320,1650 1650,2160 2520,2880
The place probably start is
可能开始的地方是观察

43
00:01:22,410 --> 00:01:24,600
0,90 90,660 690,1020 1020,1980 2010,2190
to observe that| in some
|在先前对复制系统的一些案例研究中，

44
00:01:24,600 --> 00:01:26,760
0,150 150,390 390,1140 1620,1860 1860,2160
of the previous case studies

45
00:01:26,760 --> 00:01:28,440
0,150 150,600 600,1140 1200,1410 1410,1680
of replicated systems,| we've seen
|我们已经看到了一种模式，

46
00:01:28,440 --> 00:01:29,370
0,60 60,210 210,270 270,360 360,930
as sort of {} pattern,|
|

47
00:01:32,180 --> 00:01:33,800
0,420 420,540 540,870 870,1020 1020,1620
{} {you,know} look at GFS,
你知道，看看GFS、MapReduce、虚拟金融时报，

48
00:01:33,800 --> 00:01:36,920
0,210 210,900 900,1770 2310,2610 2610,3120
{mapreduce -}, {} virtual {}

49
00:01:36,980 --> 00:01:39,650
0,1050 1380,1680 1680,1860 1860,2160 2160,2670
FT,| {} they all have
|它们都有一个单点故障，

50
00:01:39,650 --> 00:01:41,240
0,690 690,930 930,1110 1110,1170 1170,1590
a single point of failure,|
|

51
00:01:41,240 --> 00:01:43,430
0,150 150,420 420,1080 1170,1740 1740,2190
so even though they're replicated
因此，即使它们是复制的系统，

52
00:01:43,430 --> 00:01:44,660
0,780
systems,|
|

53
00:01:44,810 --> 00:01:46,190
0,330 330,510 510,690 690,1230 1230,1380
and they do replication for
他们进行复制以实现容错，

54
00:01:46,190 --> 00:01:47,640
0,210 210,900
fault tolerance,|
|

55
00:01:47,780 --> 00:01:48,890
0,420 420,630 630,720 720,840 840,1110
{} all of them actually
它们实际上都有一个单点故障，

56
00:01:48,890 --> 00:01:50,390
0,420 420,810 840,1230 1230,1440 1440,1500
have a single point of

57
00:01:50,390 --> 00:01:51,440
0,510
failure,|
|

58
00:01:51,780 --> 00:01:53,670
0,210 210,750 750,870 870,1770 1770,1890
{you,know} {in,case} of {} and
你知道，在地图还原是协调员的情况下，

59
00:01:53,670 --> 00:01:55,260
0,120 120,540 540,690 690,750 750,1590
{mapreduce -} was the coordinator,|
|

60
00:01:58,520 --> 00:01:59,510
0,300 300,480 480,540 540,870 870,990
{} in the case of
在GFS的案例中，你知道主人，

61
00:01:59,510 --> 00:02:01,250
0,750 750,840 840,930 930,1050 1050,1740
GFS, you know the master,|
|

62
00:02:02,670 --> 00:02:03,960
0,300 300,600 600,750 750,840 840,1290
that hands out the leases
例如，它发放了租约

63
00:02:03,960 --> 00:02:06,090
0,120 120,780 1260,1890 1890,2040 2040,2130
for example| and you know
|你知道，在虚拟金融时报的案例中，

64
00:02:06,090 --> 00:02:07,780
0,330 330,900
in the

65
00:02:08,090 --> 00:02:11,000
0,840 1110,2070 2070,2490 2490,2550 2550,2910
VM FT case,| the storage
|存储服务器实际上是测试和设置服务器。

66
00:02:11,000 --> 00:02:12,890
0,510 510,810 810,1200 1200,1410 1410,1890
server really {the,test-and-set -} server.|
|

67
00:02:15,470 --> 00:02:19,130
0,660 1140,1410 1410,1710 1710,2340 2610,3660
And {} the reason why
以及我们在上一节课中讨论的原因，

68
00:02:19,160 --> 00:02:20,360
0,420 420,570 570,660 660,780 780,1200
{} as we be discussed

69
00:02:20,360 --> 00:02:21,110
0,120 120,180 180,450 450,660 660,750
in the previous lecture,| the
|实际存在的原因是您知道单个计算机而不是复制的计算机

70
00:02:21,110 --> 00:02:22,700
0,330 330,510 510,840 840,1140 1140,1590
reasons that actually there are

71
00:02:22,730 --> 00:02:23,810
0,120 120,390 390,750 750,990 990,1080
{you,know} single machines instead of

72
00:02:23,810 --> 00:02:26,000
0,480 480,990 1230,1470 1470,1560 1560,2190
replicated machines| is to avoid
|就是为了避免你知道的大脑分裂综合症。

73
00:02:26,030 --> 00:02:27,830
0,180 180,270 270,720 720,1260 1260,1800
you know {split-brain -} syndrome.|
|

74
00:02:28,710 --> 00:02:30,680
0,660 960,1500

75
00:02:36,850 --> 00:02:38,050
0,540 540,660 660,750 750,840 840,1200
And you know for many
你知道，对于许多系统来说，在某种程度上，在这种[失败者]中，

76
00:02:38,050 --> 00:02:39,580
0,600 600,690 690,990 990,1080 1080,1530
systems, in sort of {

77
00:02:39,640 --> 00:02:40,450
0,300 300,480 480,630 630,690 690,810
-} one way in this

78
00:02:40,450 --> 00:02:41,500
0,150 150,210 210,300 300,810 840,1050
sort of {} [bummer],| we're
|我们正在构建一个高性能，构建一个非常容错的系统

79
00:02:41,500 --> 00:02:43,240
0,270 270,300 300,480 480,960 1110,1740
building a high performance, building

80
00:02:43,240 --> 00:02:45,190
0,360 390,840 840,990 990,1320 1320,1950
a very fault tolerant systems|
|

81
00:02:45,490 --> 00:02:47,290
0,540 540,840 840,1170 1170,1320 1320,1800
and and all these designs
实际上，所有这些设计，

82
00:02:47,290 --> 00:02:48,400
0,300 300,450 450,630 630,870 870,1110
actually,| we do actually still
|我们实际上仍然有一个单点故障，

83
00:02:48,400 --> 00:02:49,720
0,420 420,810 810,1080 1080,1260 1260,1320
have a single point of

84
00:02:49,720 --> 00:02:51,340
0,360 360,600 600,870 870,1080 1080,1620
failure,| even though where replication
|即使复制用于系统设计的许多其他方面

85
00:02:51,340 --> 00:02:52,300
0,90 90,360 360,480 480,690 690,960
is used for many other

86
00:02:52,300 --> 00:02:53,800
0,360 360,450 450,540 540,870 870,1500
aspects of the system designs|
|

87
00:02:54,370 --> 00:02:55,450
0,450 450,630 630,900 900,990 990,1080
and for many of the
对于我们到目前为止所讨论的许多系统，

88
00:02:55,450 --> 00:02:56,950
0,330 330,450 450,930 960,1380 1380,1500
systems that we talked so

89
00:02:56,950 --> 00:02:58,540
0,210 210,660 870,990 990,1110 1110,1590
far about,| you know this
|你知道这一点是为了避免大脑分裂中心综合征

90
00:02:59,340 --> 00:03:01,800
0,660 750,1230 1230,1650 1650,2070 2070,2460
{} {to,avoid} this split-brain center

91
00:03:01,800 --> 00:03:03,270
0,240 240,630 630,720 720,930 930,1470
{} syndrome| and actually introduce
|并且实际上引入了单点故障

92
00:03:03,270 --> 00:03:04,320
0,90 90,360 360,600 600,660 660,1050
a single point of failure|
|

93
00:03:04,320 --> 00:03:05,430
0,90 90,540 540,570 570,840 840,1110
or maintain a single point
或维护单点故障，

94
00:03:05,430 --> 00:03:06,990
0,60 60,600 630,870 870,1140 1200,1560
of failure,| those are perfectly
|在许多情况下，这些都是完全可以接受的，

95
00:03:06,990 --> 00:03:08,880
0,540 540,600 600,810 810,1470
acceptable in many cases,|
|

96
00:03:09,270 --> 00:03:10,170
0,390 390,450 450,660 660,720 720,900
because in many of these
因为在许多这样的情况下，比如商店服务器，

97
00:03:10,170 --> 00:03:13,440
0,360 360,990 1320,2370 2400,2730 2730,3270
cases like the store server,|
|

98
00:03:13,440 --> 00:03:14,640
0,270 270,420 420,540 540,750 750,1200
or you know the master
或者你知道主人倒下了，

99
00:03:14,640 --> 00:03:16,440
0,180 180,720 870,990 990,1110 1110,1800
goes down,| you know hopefully
|希望它只是一台机器，

100
00:03:16,440 --> 00:03:18,510
0,450 450,1560 1560,1770 1770,1830 1830,2070
{} it's only a single

101
00:03:18,510 --> 00:03:19,500
0,360 360,480 480,570 570,870 870,990
machine,| so the chance of
|因此，降低到比区块服务器中的任何服务器都小的机会

102
00:03:19,500 --> 00:03:20,940
0,240 240,480 480,540 540,990 990,1440
going down to smaller than

103
00:03:20,940 --> 00:03:22,050
0,390 390,540 540,630 630,870 870,1110
any out of the chunk

104
00:03:22,050 --> 00:03:24,300
0,540 870,1680 1770,2070 2070,2160 2160,2250
servers| and {} you know
|你知道，也许你认识的某个人已经准备好被打败了，

105
00:03:24,300 --> 00:03:26,010
0,420 420,780 780,1170 1170,1620 1620,1710
probably there's somebody ready you

106
00:03:26,010 --> 00:03:26,910
0,90 90,240 240,360 360,600 600,900
know to be [beat] up,|
|

107
00:03:26,910 --> 00:03:27,780
0,90 90,210 210,690 690,810 810,870
you know indicates that the
你知道，这预示着主人会倒下，

108
00:03:27,780 --> 00:03:29,100
0,300 300,480 480,900 900,1080 1080,1320
master goes down,| comes back
|重新启动，我们将确保只有一个主机在线。

109
00:03:29,100 --> 00:03:30,060
0,210 210,300 300,570 570,750 750,960
up and we'll make sure

110
00:03:30,060 --> 00:03:31,440
0,150 150,360 360,600 600,1050 1050,1380
there's only one master online.|
|

111
00:03:32,240 --> 00:03:33,920
0,390 390,780 960,1470 1470,1560 1560,1680
{} So, {} you know
所以，你知道很多很多情况下都是非常好的，

112
00:03:33,920 --> 00:03:35,600
0,270 270,540 540,1200 1200,1320 1320,1680
many many circumstances is perfectly

113
00:03:35,600 --> 00:03:36,770
0,360 390,510 510,720 720,900 900,1170
fine,| you know will lead
|你知道，这可能会导致很短的停机时间。

114
00:03:36,770 --> 00:03:37,940
0,270 270,480 480,690 690,900 900,1170
maybe to a very short

115
00:03:37,940 --> 00:03:39,180
0,690
downtime.|
|

116
00:03:39,240 --> 00:03:40,860
0,540 540,630 630,750 750,930 930,1620
But you know some systems
但你知道，有些系统真的很好，

117
00:03:40,860 --> 00:03:42,270
0,300 300,720 720,1140 1140,1260 1260,1410
it's really nice,| it would
|如果真的这样，那就太好了，

118
00:03:42,270 --> 00:03:43,500
0,90 90,360 360,720 720,1050 1050,1230
be really nice actually, if

119
00:03:43,500 --> 00:03:44,910
0,480 780,900 900,1050 1050,1230 1230,1410
this {},| we didn't even
|我们甚至不需要有单点故障，

120
00:03:44,910 --> 00:03:45,840
0,210 210,300 300,570 570,660 660,930
have to have the single

121
00:03:45,840 --> 00:03:46,920
0,240 240,300 300,690 720,870 870,1080
points of failure,| that maybe
|也许我们可以进一步减少停机时间，增加住宅区。

122
00:03:46,920 --> 00:03:48,360
0,210 210,360 360,750 750,1230 1230,1440
we could reduce downtime even

123
00:03:48,360 --> 00:03:52,230
0,540 780,1260 1260,1890 2040,2580 2970,3870
further {} and { -}

124
00:03:52,230 --> 00:03:54,240
0,870 870,1320
increase uptown.|
|

125
00:03:54,490 --> 00:03:56,140
0,180 180,600 810,1320 1320,1470 1470,1650
And so, {} and that's
所以，这真的是你知道协议的时候，

126
00:03:56,140 --> 00:03:58,030
0,240 240,960 990,1650 1650,1800 1800,1890
really were {} you know

127
00:03:58,030 --> 00:03:59,020
0,120 120,630 630,720 720,840 840,990
the protocols,| so just kind
|所以，只是某种你知道适合的协议开始发挥作用。

128
00:03:59,020 --> 00:04:00,310
0,60 60,540 540,810 810,1230 1230,1290
of protocols that raft you

129
00:04:00,310 --> 00:04:01,960
0,90 90,360 360,750 750,1440 1470,1650
know fits into {} come

130
00:04:01,960 --> 00:04:04,570
0,210 210,600 840,1620 1620,1800 1800,2610
into play.| But just before
|但就在深入讨论协议中的关键概念之前，

131
00:04:04,660 --> 00:04:06,220
0,600 600,900 900,1080 1080,1380 1380,1560
diving into {} talking about

132
00:04:06,220 --> 00:04:07,000
0,120 120,180 180,240 240,450 450,780
sort of the key ideas

133
00:04:07,000 --> 00:04:09,370
0,180 180,750 900,1320 1320,1710 1710,2370
into protocol,| let's remind ourselves
|让我们提醒自己为什么这种单点故障会导致，

134
00:04:09,430 --> 00:04:11,170
0,930 960,1260 1260,1410 1410,1470 1470,1740
why the sort of single

135
00:04:11,170 --> 00:04:14,680
0,240 240,300 300,1050 1080,1980 2010,3510
point of failure leads,| why
|为什么实际上复制像测试和设置服务器这样的关键单点故障会导致这种大脑分裂的问题。

136
00:04:14,680 --> 00:04:17,110
0,270 270,1110 1200,1620 1620,2250 2250,2430
actually replicating {} the sort

137
00:04:17,110 --> 00:04:18,040
0,60 60,390 390,660 660,870 870,930
of crucial single point of

138
00:04:18,040 --> 00:04:19,090
0,360 360,480 480,750 750,840 840,1050
failures like {test-and-set - -}

139
00:04:19,090 --> 00:04:20,650
0,540 570,900 900,1260 1260,1410 1410,1560
server can lead you to

140
00:04:20,650 --> 00:04:22,960
0,300 300,840 840,1380 1410,1770 1770,2310
this {split-brain -} {} problem.|
|

141
00:04:23,680 --> 00:04:24,760
0,330 330,540 540,720 720,870 870,1080
{} And so you might
所以你可能会想，

142
00:04:24,760 --> 00:04:27,280
0,360 360,1260 1260,1410 1440,2190 2190,2520
think,| why just replicate a
|为什么还要复制单点故障呢？

143
00:04:27,280 --> 00:04:28,450
0,270 270,450 450,510 510,840 840,1170
single point of failure too.|
|

144
00:04:29,020 --> 00:04:30,640
0,660 780,1170 1170,1350 1350,1470 1470,1620
So let's try to do
所以让我们试着这样做

145
00:04:30,640 --> 00:04:32,170
0,450 450,630 630,930 930,1200 1200,1530
that| and then we'll quickly
|然后我们很快就会看到问题出在哪里，

146
00:04:32,170 --> 00:04:33,910
0,240 240,540 540,1020 1140,1620 1620,1740
see what the problem is,|
|

147
00:04:33,910 --> 00:04:35,260
0,300 300,540 540,990 990,1080 1080,1350
so let's replicate the testing
因此，让我们复制测试服务器。

148
00:04:35,260 --> 00:04:37,120
0,930
server.|
|

149
00:04:48,140 --> 00:04:50,180
0,570 570,930 930,1380
{} And so,
所以，让我们来做一个简单明了的案例，

150
00:04:50,180 --> 00:04:51,920
0,150 150,540 540,750 750,1080 1080,1740
so let's do a simple

151
00:04:52,670 --> 00:04:54,950
0,660 660,1050 1050,1410 1410,1740 1740,2280
straightforward case,| we'll just have
|我们将只复制一个，一个测试服务器S1，

152
00:04:54,980 --> 00:04:58,070
0,390 390,1530 1680,2040 2040,2430 2430,3090
one replicated, one test server

153
00:04:58,190 --> 00:05:00,020
0,180 180,690 810,1260 1260,1710 1710,1830
{S1 -},| and here we
|这里我们有S2，另一台复制的测试和设置服务器，

154
00:05:00,020 --> 00:05:01,190
0,150 150,300 300,690 870,990 990,1170
have {S2 -}, the other

155
00:05:01,190 --> 00:05:03,200
0,420 420,840 870,1320 1320,1530 1530,2010
replicated {test-and-set - -} server,|
|

156
00:05:03,380 --> 00:05:05,060
0,540 540,750 750,1110 1110,1440 1440,1680
and user remind correct like
并且用户提醒正确如测试和设置，

157
00:05:05,060 --> 00:05:06,340
0,270 270,360 360,840
{test-and-set - -},|
|

158
00:05:07,080 --> 00:05:08,280
0,210 210,450 450,510 510,1170 1170,1200
it takes an argument {}
它接受新参数并返回旧值。

159
00:05:08,310 --> 00:05:10,110
0,960 960,1110 1110,1500 1500,1590 1590,1800
new and returns the old

160
00:05:10,110 --> 00:05:11,120
0,420
value.|
|

161
00:05:12,750 --> 00:05:13,860
0,210 210,270 270,630 630,780 780,1110
And the goal is {that,if}
目标是如果两个客户端同时呼叫测试和赛斯，

162
00:05:13,860 --> 00:05:15,030
0,180 180,720 720,810 810,900 900,1170
two clients at the same

163
00:05:15,030 --> 00:05:16,980
0,390 390,1110 1110,1470 1500,1680 1680,1950
time {call,test-and-seth -},| {you,know} one
|你知道一个人赢了，你知道得到的基本上是回落到原来的价值

164
00:05:16,980 --> 00:05:18,570
0,480 480,600 600,870 870,960 960,1590
wins, {you,know} get so basically

165
00:05:18,780 --> 00:05:20,340
0,690 690,1050 1050,1320 1320,1470 1470,1560
{} falls back as the

166
00:05:20,340 --> 00:05:21,180
0,150 150,540 540,630 630,690 690,840
old value| and the other
|而另一个人会输，

167
00:05:21,180 --> 00:05:22,140
0,240 240,330 330,630 630,870 870,960
one will lose,| because it
|因为它会像旧的价值一样重新回到现实中来。

168
00:05:22,140 --> 00:05:23,670
0,150 150,330 330,630 630,930 930,1530
will get true back as

169
00:05:24,120 --> 00:05:25,590
0,570 570,750 750,900 900,1050 1050,1470
{} is the old value.|
|

170
00:05:26,140 --> 00:05:27,580
0,300 300,810 810,1140 1140,1260 1260,1440
So let's see how this
所以让我们看看这可能会如何发挥作用，

171
00:05:27,580 --> 00:05:28,630
0,210 210,360 360,570 570,840 840,1050
might work play out,| so
|因此，我们有一个具有测试和设置调用的客户端

172
00:05:28,630 --> 00:05:30,010
0,120 120,240 240,330 330,870 1050,1380
we have a client with

173
00:05:30,010 --> 00:05:33,460
0,510 510,990 1350,2160 2490,3300 3300,3450
{calls,test-and-set -}| and communicates with
|并与第一服务器通信，与第二服务器通信，

174
00:05:33,460 --> 00:05:38,380
0,60 60,330 330,870 2520,4920 4920,4920
the first {server -}, {communicates,to,the}

175
00:05:38,380 --> 00:05:40,600
0,480 480,1020 1020,1350
second server, {}|
|

176
00:05:42,500 --> 00:05:44,330
0,690 930,1230 1230,1410 1410,1590 1590,1830
and we don't really know,
我们真的不知道，实际上没有收到第二台服务器的响应，

177
00:05:44,330 --> 00:05:45,230
0,270 270,540 540,750 750,870 870,900
{} actually doesn't get a

178
00:05:45,230 --> 00:05:46,580
0,450 450,570 570,660 660,930 930,1350
response for the second server,|
|

179
00:05:48,300 --> 00:05:48,990
0,180 180,330 330,450 450,510 510,690
so there's sort of two
所以现在有两个案例，

180
00:05:48,990 --> 00:05:50,460
0,450 450,720 750,1020 1020,1380 1380,1470
cases now right,| where you
|你知道为什么，如果S2没有反应，

181
00:05:50,460 --> 00:05:52,950
0,180 180,810 1170,1770 1770,1980 1980,2490
know why, {} if {S2,doesn't}

182
00:05:52,950 --> 00:05:54,060
0,570 570,660 660,750 750,990 990,1110
response,| you know there's two
|你知道，有两个可能的原因会出现这种情况。

183
00:05:54,060 --> 00:05:55,320
0,450 450,750 750,930 930,1110 1110,1260
possible reasons why that could

184
00:05:55,320 --> 00:05:56,520
0,90 90,150 150,750
be the case.|
|

185
00:05:56,520 --> 00:05:58,410
0,180 180,690 960,1320 1320,1470 1470,1890
So one case could be
所以有一种情况可能是S2没有反应，因为S2失败了。

186
00:05:58,710 --> 00:06:00,960
0,840 840,1140 1140,1470 1470,1950 1950,2250
{S2 -} didn't respond, because

187
00:06:00,960 --> 00:06:02,360
0,180 180,330 330,900
{S2 -} failed.|
|

188
00:06:06,260 --> 00:06:08,060
0,150 150,210 210,390 390,870 990,1800
And in some cases that's
在某些情况下，这确实是我们想要做的事情，

189
00:06:08,060 --> 00:06:08,990
0,240 240,390 390,570 570,810 810,930
really what we'd like to

190
00:06:08,990 --> 00:06:10,160
0,390 390,720 720,900 900,1080 1080,1170
be doing is that,| at
|在这一点上，基本上c1只是宣布胜利，

191
00:06:10,160 --> 00:06:12,140
0,210 210,630 780,1470 1470,1710 1710,1980
that point basically {C1 -}

192
00:06:12,140 --> 00:06:14,660
0,180 180,540 540,1020 1500,2010 2010,2520
just declares victory,| since nobody
|由于没有其他人能够实际看到观察值S2，

193
00:06:14,660 --> 00:06:16,790
0,330 330,450 450,750 750,1260 1290,2130
else can actually see observe

194
00:06:16,820 --> 00:06:19,430
0,750 750,1230 1230,1740 1950,2520 2520,2610
value {S2 -},| {} you
|你知道我们应该做完了，我们可以继续。

195
00:06:19,430 --> 00:06:20,240
0,210 210,390 390,510 510,570 570,810
know we should be done,

196
00:06:20,240 --> 00:06:21,680
0,120 120,420 420,990
we could proceed.|
|

197
00:06:21,680 --> 00:06:22,820
0,600

198
00:06:22,820 --> 00:06:23,900
0,240 240,330 330,600 600,720 720,1080
But the problem is that,
但问题是，还有第二个案例，

199
00:06:23,930 --> 00:06:25,780
0,270 270,360 360,690 690,1230
there's the second case,|
|

200
00:06:25,780 --> 00:06:26,770
0,180 180,240 240,510 510,840 840,990
in the second case is
在第二种情况下，

201
00:06:26,770 --> 00:06:29,080
0,450 780,1350 1350,1560 1560,1770 1770,2310
that,| {} there's no repetition,|
|没有重复，|

202
00:06:31,780 --> 00:06:33,340
0,240 240,300 300,570 570,930 930,1560
there's a network partition between
在C1、C和S2之间有一个网络分区。

203
00:06:33,340 --> 00:06:36,490
0,270 270,930 1350,2040 2460,2940 2940,3150
{C1 -} and C and

204
00:06:36,490 --> 00:06:37,660
0,150 150,510
{S2 -}.|
|

205
00:06:38,100 --> 00:06:39,390
0,150 150,210 210,420 420,810 810,1290
So in that case really
所以在这种情况下，C1真的不能继续进行，

206
00:06:39,390 --> 00:06:42,240
0,750 750,960 960,1410 1410,1980 2190,2850
{C1 -} cannot proceed,| because
|因为可能还有另一个你认识的客户C2

207
00:06:42,240 --> 00:06:43,710
0,90 90,270 270,630 630,930 930,1470
there could be another client

208
00:06:43,740 --> 00:06:45,630
0,150 150,240 240,960 1380,1590 1590,1890
you know C2| and actually
|并且实际上与S2进行通信，

209
00:06:45,630 --> 00:06:47,660
0,690 690,900 900,1140 1140,1410
communicating with {S2 -},|
|

210
00:06:48,350 --> 00:06:50,660
0,720 720,1410 1410,1920 1920,2130 2130,2310
and {} it would be
这将是可怕的，正确的，

211
00:06:50,660 --> 00:06:52,490
0,480 480,930 930,1410 1410,1770 1770,1830
terrible, correct,| C1 proceeds in
|在这种情况下，c1继续进行，

212
00:06:52,490 --> 00:06:53,990
0,150 150,630 780,1290 1290,1410 1410,1500
this case,| because you know
|因为你知道它可能会更新S1，

213
00:06:53,990 --> 00:06:55,490
0,180 180,480 480,900 900,1050 1050,1500
it might {update,S1 - -},|
|

214
00:06:55,790 --> 00:06:57,980
0,960 960,1140 1140,1530 1530,1740 1740,2190
get {} basically the false
基本上得到了错误的值，认为它成功了，

215
00:06:57,980 --> 00:06:59,750
0,480 480,750 750,840 840,1500 1620,1770
value, think it succeeds,| at
|同时，S2与S2进行通信，

216
00:06:59,750 --> 00:07:01,040
0,90 90,390 390,660 660,900 900,1290
the same time, {S2 -}

217
00:07:01,040 --> 00:07:02,930
0,1050 1050,1140 1140,1350 1350,1620 1740,1890
communicates with {S2 -},| and
|并且在测试和设置期间也成功

218
00:07:02,930 --> 00:07:04,190
0,270 270,720 720,930 930,1020 1020,1260
also succeeds during the {test-and-set

219
00:07:04,190 --> 00:07:05,180
0,90 90,420 420,540 540,660 660,990
- -}| and so now
|因此，现在我们违反了测试和设置的合同。

220
00:07:05,180 --> 00:07:07,040
0,150 150,930 930,1260 1260,1770 1770,1860
we're violating our contract with

221
00:07:07,040 --> 00:07:08,640
0,90 90,750 750,1140
the {test-and-set -}.|
|

222
00:07:09,240 --> 00:07:10,110
0,210 210,360 360,450 450,600 600,870
So this is this issue
所以这就是大脑分裂的问题，

223
00:07:10,110 --> 00:07:11,580
0,90 90,240 240,600 600,870 870,1470
of this {split-brain -},| when
|当存在网络分区时，

224
00:07:11,580 --> 00:07:13,200
0,210 210,240 240,480 480,1260 1350,1620
there's a network partition,| we
|我们最终可能会遇到两台服务器都在运行的情况

225
00:07:13,200 --> 00:07:13,860
0,150 150,330 330,510 510,600 600,660
can end up in a

226
00:07:13,860 --> 00:07:15,840
0,660 660,1470
situation where

227
00:07:15,960 --> 00:07:17,940
0,690 960,1470 1470,1770 1770,1860 1860,1980
{} both servers are up

228
00:07:17,970 --> 00:07:19,200
0,390 390,510 510,780 780,840 840,1230
running| and serve {} different
|并为不同的客户端子集提供服务

229
00:07:19,200 --> 00:07:20,490
0,330 330,450 450,900 900,990 990,1290
subset of clients| and thereby
|从而违反了与我们正在构建的系统的规范签订的合同。

230
00:07:20,490 --> 00:07:21,840
0,600 600,690 690,1170 1170,1260 1260,1350
violating the contract with the

231
00:07:21,840 --> 00:07:23,490
0,690 690,810 810,1170 1230,1560 1560,1650
specification of the system that

232
00:07:23,490 --> 00:07:25,320
0,120 120,540 1170,1320 1320,1410 1410,1830
we're building.| And the real
|真正具有挑战性的部分是，

233
00:07:25,470 --> 00:07:27,000
0,600 600,930 930,1260 1260,1380 1380,1530
challenging part here is that,|
|

234
00:07:27,000 --> 00:07:28,530
0,240 240,660 660,840 840,1260 1260,1530
{C1 -} just cannot tell
C1无法区分这两种情况，

235
00:07:28,530 --> 00:07:29,700
0,90 90,420 420,780 780,990 990,1170
the difference between these two

236
00:07:29,700 --> 00:07:31,020
0,750
situations,|
|

237
00:07:31,420 --> 00:07:34,120
0,690 780,1410 1410,2010
{} {it,doesn't} know,
它不知道它到底在哪里，

238
00:07:36,120 --> 00:07:38,460
0,360 360,480 480,1020 1020,1530
where it actually is,|
|

239
00:07:38,520 --> 00:07:39,390
0,150 150,300 300,510 510,780 780,870
you know {S2 -} is
你知道S2是不可达的，

240
00:07:39,390 --> 00:07:40,890
0,390 390,750 750,1020 1020,1140 1140,1500
not reachable,| because it failed
|因为它失败或因为网络分区，

241
00:07:40,890 --> 00:07:41,760
0,180 180,420 420,510 510,600 600,870
or because of the network

242
00:07:41,760 --> 00:07:42,800
0,420
partition,|
|

243
00:07:42,920 --> 00:07:43,940
0,450 450,600 600,690 690,870 870,1020
{} and so that's sort
所以这就是一个难题

244
00:07:43,940 --> 00:07:45,800
0,90 90,540 690,1140 1140,1500 1500,1860
of the conundrum| and {}
|你知道，这一切背后都是以前的系统

245
00:07:45,800 --> 00:07:48,350
0,540 540,1470 1470,1800 1890,2190 2190,2550
{} that that you know,

246
00:07:48,620 --> 00:07:50,720
0,300 300,660 660,870 870,1170 1170,2100
that's behind all this {}

247
00:07:50,720 --> 00:07:52,220
0,300 330,750 750,1080 1080,1170 1170,1500
the previous systems| and why
|以及为什么他们使用一首单曲，

248
00:07:52,220 --> 00:07:54,680
0,480 510,930 930,990 990,1680 2010,2460
they used a single,| why
|为什么他们不复制这些至关重要的服务，

249
00:07:54,680 --> 00:07:56,150
0,120 120,720 720,1290 1290,1350 1350,1470
they don't replicate you know

250
00:07:56,150 --> 00:07:58,100
0,180 180,510 510,1260 1320,1800 1800,1950
these crucial services,| {} that
|这是需要避免的，以避免分裂脑综合征。

251
00:07:58,100 --> 00:07:59,060
0,150 150,240 240,330 330,690 690,960
need to be up to

252
00:07:59,060 --> 00:08:00,780
0,540 540,1260
avoid, {}

253
00:08:01,560 --> 00:08:03,720
0,120 120,990 1050,1620 1620,1920 1920,2160
to avoid {} {split-brain -}

254
00:08:03,720 --> 00:08:04,780
0,510
syndrome.|
|

255
00:08:04,880 --> 00:08:07,880
0,630 1920,2610 2610,2730 2730,2820 2820,3000
So what can be done
那么，我们能做些什么呢？

256
00:08:07,880 --> 00:08:09,290
0,240 240,540 540,870 870,1110 1110,1410
about this| and really the
|这里真正的关键问题是，

257
00:08:09,290 --> 00:08:10,970
0,300 300,750 750,1140 1140,1260 1260,1680
key problem here,| what do
|我们应该如何处理网络分区，

258
00:08:10,970 --> 00:08:12,620
0,360 360,480 480,690 690,960 960,1650
we do about network partition,|
|

259
00:08:13,140 --> 00:08:14,310
0,330 330,510 510,630 630,870 870,1170
how could we handle them,|
我们怎么能处理他们呢，|

260
00:08:14,700 --> 00:08:15,780
0,240 240,330 330,510 510,660 660,1080
and so there's a key
所以有一个关键的想法

261
00:08:15,780 --> 00:08:19,260
0,690 990,1530 2460,2760 2760,2880 2880,3480
idea| that sits in raft
|它位于木筏上，并在许多其他协议中作为基础，

262
00:08:19,260 --> 00:08:21,240
0,150 150,240 240,510 510,1290 1290,1980
and in many other protocols

263
00:08:21,600 --> 00:08:24,640
0,1110 1230,2370
that underlies,|
|

264
00:08:25,170 --> 00:08:27,780
0,510 510,600 600,1200 1230,1770 1860,2610
basically the solution or why
基本上，解决方案或为什么这些协议实际上可能成功

265
00:08:27,780 --> 00:08:29,100
0,240 240,630 630,1020 1020,1110 1110,1320
those protocols, actually {} might

266
00:08:29,100 --> 00:08:30,660
0,510 780,1050 1050,1260 1260,1440 1440,1560
succeed| and really what it
|简而言之，这就是你所知道的，

267
00:08:30,660 --> 00:08:31,800
0,480 510,630 630,900 900,1080 1080,1140
is you know sort of

268
00:08:31,800 --> 00:08:33,060
0,90 90,120 120,810 870,1140 1140,1260
in a nutshell,| it is
|这就是多数原则。

269
00:08:33,060 --> 00:08:34,720
0,150 150,720 720,1050
this majority rule.|
|

270
00:08:37,820 --> 00:08:39,110
0,270 270,540 540,690 690,750 750,1290
And you give the example
在您的服务器上进行测试和设置的情况下给出了示例，

271
00:08:39,110 --> 00:08:40,100
0,60 60,120 120,510 510,570 570,990
in the context of {test-and-set

272
00:08:40,100 --> 00:08:41,720
0,300 300,360 360,510 510,1080 1200,1620
-} on your server, {}|
|

273
00:08:41,720 --> 00:08:43,100
0,420 420,510 510,780 780,1260 1290,1380
instead of actually running the
而不是像我很方便地那样，使用两个副本实际运行服务器，

274
00:08:43,100 --> 00:08:45,320
0,540 540,810 810,1200 1200,1770 1770,2220
server with two replicas which

275
00:08:45,590 --> 00:08:47,600
0,90 90,600 600,960 1230,1710 1710,2010
I conveniently did,| I'm gonna
|我会用三个人来运行它，

276
00:08:47,600 --> 00:08:49,040
0,240 240,300 300,510 510,900
run it with three,|
|

277
00:08:49,370 --> 00:08:50,270
0,180 180,270 270,450 450,720 720,900
so I'm gonna have {S1
所以我会得到s1，s2，s3。

278
00:08:50,270 --> 00:08:52,820
0,570 810,1110 1110,1740 1860,2190 2190,2550
-} {S2 -} {S3 -}.|
|

279
00:08:54,600 --> 00:08:55,260
0,150 150,240 240,450 450,570 570,660
And the rule that was
规则将会是类似的

280
00:08:55,260 --> 00:08:56,310
0,120 120,180 180,420 420,720 750,1050
going to be the like|
|

281
00:08:56,310 --> 00:08:58,350
0,120 120,780 780,1350 1350,1770 1770,2040
{} server, a client can
服务器上，客户端可以认为操作成功，

282
00:08:58,860 --> 00:09:01,290
0,510 510,600 600,1080 1080,1950 2040,2430
consider an operation succeeded,| if
|如果至少可以更新大多数服务器的话。

283
00:09:01,290 --> 00:09:02,190
0,150 150,450 450,540 540,840 840,900
at least can update a

284
00:09:02,190 --> 00:09:04,000
0,510 510,600 600,690 690,1320
majority of the servers.|
|

285
00:09:04,250 --> 00:09:05,360
0,330 330,570 570,660 660,810 810,1110
{} So in this case,|
所以在这种情况下，|

286
00:09:05,360 --> 00:09:06,110
0,90 90,210 210,330 330,450 450,750
you know we can send
你知道我们可以向S1发送你知道的消息，

287
00:09:06,110 --> 00:09:07,550
0,210 210,840 840,1080 1080,1170 1170,1440
{you,know} {message,to} S1,| for doing
|为了进行测试和设置，我们向S2发送消息，进行测试和设置，

288
00:09:07,550 --> 00:09:08,390
0,210 210,300 300,540 540,630 630,840
{test-and-set - -}, we send

289
00:09:08,390 --> 00:09:09,830
0,600 600,810 810,900 900,1140 1140,1440
message {to,S2}, for doing {test-and-set

290
00:09:09,830 --> 00:09:11,060
0,90 90,450 660,960 960,1080 1080,1230
- -},| now we get
|现在我们得到了他们两个人的积极回应，

291
00:09:11,060 --> 00:09:13,550
0,390 390,870 870,1590 1830,2220 2220,2490
back positive responses for both

292
00:09:13,550 --> 00:09:15,080
0,90 90,480 600,1080 1080,1170 1170,1530
of them,| like a false
|在这两种情况下都像是假的，

293
00:09:15,080 --> 00:09:16,430
0,60 60,360 360,720 780,1170 1170,1350
in both cases,| then will
|然后将向实际应用程序返回FALSE

294
00:09:16,430 --> 00:09:18,530
0,630 750,1050 1050,1380 1380,1710 1710,2100
return a false to actually

295
00:09:18,530 --> 00:09:20,720
0,570 570,690 690,1230 1260,1800 1800,2190
application| and application considered {the,test-and-set
|应用程序认为测试集是成功的。

296
00:09:20,720 --> 00:09:21,940
0,150 150,780
-} succeeded.|
|

297
00:09:23,000 --> 00:09:23,600
0,150 150,210 210,390 390,510 510,600
And of course we do
当然，我们对第三个也是这样做的，

298
00:09:23,600 --> 00:09:24,350
0,90 90,330 330,420 420,510 510,750
it also to the third

299
00:09:24,350 --> 00:09:25,130
0,210 210,330 330,390 390,630 630,780
one,| but the third one
|但第三个可能实际上，你知道消息实际上可能不会到达，或者服务器可能停机，

300
00:09:25,130 --> 00:09:26,330
0,210 210,660 660,750 750,1050 1080,1200
may actually, you know the

301
00:09:26,330 --> 00:09:27,800
0,300 300,600 600,840 840,990 990,1470
message actually might not arrive

302
00:09:27,800 --> 00:09:28,670
0,180 180,270 270,570 570,780 780,870
or the server might be

303
00:09:28,670 --> 00:09:29,930
0,390 390,480 480,630 630,810 810,1260
down,| we don't really know,
|我们真的不知道，实际上我们并不真的在乎，

304
00:09:30,020 --> 00:09:32,020
0,480 480,630 630,840 840,1380
actually {we,don't} really care,|
|

305
00:09:32,080 --> 00:09:33,610
0,240 240,480 630,1080 1080,1440 1440,1530
which is because consider the
这是因为考虑以下情况，场景，

306
00:09:33,610 --> 00:09:35,740
0,330 330,990 1230,1710 1710,1980 1980,2130
following situation, scenario,| where we
|我们有第二个客户端也在尝试进行测试和设置，

307
00:09:35,740 --> 00:09:37,780
0,510 540,690 690,990 990,1530 1920,2040
have the second client are

308
00:09:37,780 --> 00:09:38,530
0,210 210,450 450,540 540,690 690,750
also trying to do {}

309
00:09:38,530 --> 00:09:39,780
0,240 240,330 330,720
{test-and-set - -},|
|

310
00:09:39,960 --> 00:09:40,980
0,510 540,630 630,720 720,900 900,1020
well, to be able to
嗯，为了能够成功，

311
00:09:40,980 --> 00:09:42,240
0,420 420,540 540,900 900,1020 1020,1260
succeed,| it has to talk
|它必须与大多数服务器通信，

312
00:09:42,240 --> 00:09:44,640
0,660 690,840 840,1590 1620,1830 1830,2400
to the majority of the

313
00:09:44,670 --> 00:09:45,780
0,630
servers,|
|

314
00:09:45,870 --> 00:09:47,580
0,480 600,1080 1080,1530 1530,1590 1590,1710
so, whatever majority is going
所以，无论多数派要和谁对话，

315
00:09:47,580 --> 00:09:48,870
0,60 60,390 390,780 930,1110 1110,1290
to talk to,| it is
|它将包括S1或S2，

316
00:09:48,870 --> 00:09:49,920
0,120 120,180 180,660 660,930 930,1050
going to include either {S1

317
00:09:49,920 --> 00:09:51,400
0,240 240,390 390,540 540,930
-} or {S2 -},|
|

318
00:09:51,620 --> 00:09:52,820
0,510 510,720 720,780 780,990 990,1200
and for {S1 -} and
并且对于S1和S2，这两个操作实际上都已由S1成功，

319
00:09:52,820 --> 00:09:54,140
0,240 240,540 540,600 600,750 750,1320
S2 both of these operations

320
00:09:54,140 --> 00:09:55,550
0,270 270,450 450,960 960,1170 1170,1410
actually have succeeded by S

321
00:09:55,550 --> 00:09:56,700
0,570
C1,|
|

322
00:09:56,780 --> 00:09:59,060
0,690 720,960 960,1440 1590,1980 1980,2280
so {S2 -} proceed to
因此S2继续始终观察C1运算的结果，

323
00:09:59,060 --> 00:10:01,700
0,630 630,1440 1500,1980 1980,2130 2130,2640
always observe {} the result

324
00:10:01,700 --> 00:10:04,160
0,180 180,660 660,930 1200,2100 2130,2460
of {C1's -} operation,| because
|因为有一种重叠。

325
00:10:04,160 --> 00:10:05,420
0,120 120,270 270,330 330,420 420,1260
there's sort of an overlap.|
|

326
00:10:21,980 --> 00:10:22,940
0,240 240,480 480,660 660,810 810,960
Yeah, and you'll see this
是的，你会看到这个基本上是木筏，

327
00:10:22,940 --> 00:10:25,130
0,450 450,450 1020,1620 1770,2100 2100,2190
basically {} raft,| this is
|这和现在发生的事情完全一样，对吧，

328
00:10:25,130 --> 00:10:26,240
0,420 420,480 480,720 720,840 840,1110
exactly the same thing as

329
00:10:26,240 --> 00:10:27,500
0,330 330,480 480,720 720,1050 1050,1260
roughly what's going on, right,|
|

330
00:10:27,500 --> 00:10:29,750
0,180 180,360 360,450 450,1050 1080,2250
like when a leader accepts
就像当一位领导者在大多数追随者中接受或参与操作时，

331
00:10:29,930 --> 00:10:32,840
0,660 660,1200 1200,1200 1800,2400 2460,2910
or { -} enters {}

332
00:10:32,840 --> 00:10:35,510
0,510 540,1200 1200,1380 1380,2340 2340,2670
the operation in a lot

333
00:10:35,510 --> 00:10:36,380
0,90 90,180 180,690 690,780 780,870
of the majority of the

334
00:10:36,380 --> 00:10:38,150
0,600 900,1260 1260,1320 1320,1590 1590,1770
followers,| then it means that
|那么这就意味着下一届任期将会有一位继任的领导人，

335
00:10:38,150 --> 00:10:39,290
0,30 30,600 600,840 840,1020 1020,1140
a subsequent leader that's going

336
00:10:39,290 --> 00:10:39,890
0,60 60,240 240,450 450,540 540,600
to come out in the

337
00:10:39,890 --> 00:10:41,810
0,270 270,660 930,1080 1080,1620 1620,1920
next term,| {you,know} will also
|你知道，也会努力获得多数席位，以便被选为领导人

338
00:10:41,810 --> 00:10:43,190
0,210 210,270 270,750 750,810 810,1380
try to acquire {} majority

339
00:10:43,190 --> 00:10:45,410
0,210 210,510 510,1260 1260,1590 1620,2220
to get voted as leader|
|

340
00:10:45,500 --> 00:10:46,400
0,330 330,510 510,690 690,750 750,900
and as part of that
作为投票的一部分，

341
00:10:46,400 --> 00:10:47,750
0,570 630,1050 1050,1170 1170,1230 1230,1350
voting,| there's going to be
|将会有一个服务器或一个追随者实际看到了最后一次操作，

342
00:10:47,750 --> 00:10:49,670
0,480 480,930 930,1020 1020,1230 1230,1920
one server or one follower

343
00:10:49,700 --> 00:10:50,900
0,240 240,480 480,630 630,1110 1110,1200
that actually has seen the

344
00:10:50,900 --> 00:10:53,390
0,360 360,1080 1260,1830 1860,2370 2370,2490
last operation,| {} performed by
|由上一任领导人执行。

345
00:10:53,390 --> 00:10:55,320
0,150 150,780 810,1650
the last leader.|
|

346
00:10:55,890 --> 00:10:56,670
0,180 180,390 390,480 480,600 600,780
So that is going to
因此，这将基本上能够为我们建立容错服务奠定基础，

347
00:10:56,670 --> 00:10:57,750
0,360 360,450 450,570 570,660 660,1080
basically be able to building

348
00:10:57,750 --> 00:11:00,240
0,570 570,1020 1140,1980 1980,2160 2160,2490
stone on {} on which

349
00:11:00,240 --> 00:11:02,340
0,180 180,300 300,660 660,1410 1440,2100
we can build the fault

350
00:11:02,340 --> 00:11:04,290
0,420 420,1110 1170,1470 1470,1590 1590,1950
tolerance services,| that can handle
|可以处理网络分区的

351
00:11:04,290 --> 00:11:08,010
0,330 330,1020 1170,1890 2040,2880 2880,3720
network partitions in| {} and
|和服务器故障，同时仍然实现了很强的一致性。

352
00:11:08,160 --> 00:11:10,040
0,690 690,750 750,1260
failures of servers

353
00:11:10,040 --> 00:11:12,020
0,270 270,600 600,1080 1080,1380 1380,1980
while still achieving strong consistency.|
|

354
00:11:13,130 --> 00:11:15,080
0,450 630,1080 1080,1230 1230,1770 1770,1950
{} Another way to think
另一种方式来考虑这个主要的业务是，

355
00:11:15,080 --> 00:11:17,030
0,210 210,330 330,840 840,1410 1500,1950
about this majority business is

356
00:11:17,030 --> 00:11:18,860
0,480 750,1170 1170,1410 1410,1500 1500,1830
that,| {} if the network
|如果网络分区，

357
00:11:18,860 --> 00:11:20,180
0,750
partitions,|
|

358
00:11:20,330 --> 00:11:22,340
0,810 930,1230 1230,1380 1380,1680 1680,2010
{} there can be only
只能有一个拥有多数的分区，

359
00:11:22,340 --> 00:11:24,440
0,810 990,1410 1410,1770 1770,1890 1890,2100
one {} partition that has

360
00:11:24,440 --> 00:11:25,850
0,30 30,600 870,1170 1170,1320 1320,1410
{} majority,| there can be
|不能有其他分区具有多数

361
00:11:25,850 --> 00:11:27,080
0,330 330,600 600,930 930,1050 1050,1230
no other partition that has

362
00:11:27,080 --> 00:11:29,330
0,30 30,600 1050,1290 1290,1890 1980,2250
{} majority| and so {}
|因此，只有实际拥有多数的分区才能实际进行。

363
00:11:29,330 --> 00:11:30,680
0,480 480,600 600,960 960,1110 1110,1350
only the partition that actually

364
00:11:30,680 --> 00:11:32,450
0,390 390,480 480,1200 1260,1530 1530,1770
has the majority {} can

365
00:11:32,450 --> 00:11:33,760
0,240 240,870
actually proceed.|
|

366
00:11:35,070 --> 00:11:36,360
0,540 540,690 690,750 750,1020 1020,1290
Another way of saying that,|
换一种说法是，|

367
00:11:36,360 --> 00:11:38,880
0,1410 1440,1740 1740,2190 2190,2280 2280,2520
in another implication of that
另一种含义是，

368
00:11:38,880 --> 00:11:39,930
0,210 420,570 570,720 720,960 960,1050
is,| it could also be
|也有可能是这样的，

369
00:11:39,930 --> 00:11:42,300
0,90 90,420 420,990 990,1890 1920,2370
the case,| there's {} multiple
|有多个分区，任何地方都没有多数

370
00:11:42,300 --> 00:11:44,070
0,540 600,780 780,930 930,1080 1080,1770
partitions and there's no majority

371
00:11:44,070 --> 00:11:45,720
0,630 690,1050 1050,1140 1140,1290 1290,1650
anywhere| and in that particular
|在那个特殊的案例中，

372
00:11:45,720 --> 00:11:46,980
0,390 390,480 480,600 600,690 690,1260
case,| you know the system
|你知道，系统不能继续运行，客户与此对话，

373
00:11:47,130 --> 00:11:49,470
0,360 360,540 540,750 750,1320 1530,2340
can just not proceed and

374
00:11:49,500 --> 00:11:52,170
0,1200 1200,1740 1740,2160 2160,2400 2400,2670
{} {the,clients} talking to this,|
|

375
00:11:52,170 --> 00:11:53,910
0,180 180,330 330,450 450,900 930,1740
we have to wait until
我们必须等到网络完全修复后，

376
00:11:53,910 --> 00:11:55,110
0,180 180,510 510,600 600,870 870,1200
the network is healed enough,|
|

377
00:11:55,110 --> 00:11:56,400
0,150 150,300 300,570 570,720 720,1290
that at least there's one,
至少有一个，至少会有一个分区，包含大多数服务。

378
00:11:56,580 --> 00:11:57,300
0,300 300,420 420,480 480,600 600,720
there's going to be at

379
00:11:57,300 --> 00:11:58,890
0,180 180,420 420,960 1080,1410 1410,1590
least one partition {} with

380
00:11:58,890 --> 00:12:00,400
0,60 60,480 480,570 570,1200
{} majority of services.|
|

381
00:12:02,360 --> 00:12:03,580
0,660

382
00:12:04,010 --> 00:12:05,810
0,600 840,1170 1170,1320 1320,1470 1470,1800
The another sort of a
另一种简单的观察是，

383
00:12:05,840 --> 00:12:07,490
0,270 270,810 810,1080 1080,1290 1290,1650
quick observation here is that,|
|

384
00:12:07,790 --> 00:12:08,690
0,420 420,480 480,690 690,750 750,900
{} of course you may
当然，您可能想要使用这个特定的方案，

385
00:12:08,690 --> 00:12:10,040
0,180 180,300 300,660 720,1020 1020,1350
want to use this particular

386
00:12:10,040 --> 00:12:11,420
0,390 390,540 540,660 660,810 810,1380
scheme,| that I just described
|我刚才描述了三台服务器，

387
00:12:11,420 --> 00:12:13,190
0,120 120,510 510,720 720,1170 1170,1770
three servers,| only tolerate one
|只能容忍一台服务器宕机，对吗，

388
00:12:13,340 --> 00:12:14,720
0,540 540,720 720,1020 1020,1230 1230,1380
server going down, correct,| the
|两台服务器停机，没有人能真正获得多数

389
00:12:14,720 --> 00:12:16,070
0,150 150,480 480,690 690,1020 1020,1350
two servers going down, nobody

390
00:12:16,070 --> 00:12:18,110
0,120 120,660 900,1380 1380,1440 1440,2040
can actually obtain {} majority|
|

391
00:12:18,110 --> 00:12:19,220
0,90 90,210 210,570 570,990 990,1110
and so therefore nobody can
因此，没有人可以或没有客户可以真正完成操作，

392
00:12:19,220 --> 00:12:20,540
0,480 480,570 570,750 750,1200 1200,1320
actually or no client can

393
00:12:20,540 --> 00:12:22,730
0,480 750,1200 1200,1320 1320,1740 1740,2190
actually get the operation through,|
|

394
00:12:23,630 --> 00:12:24,890
0,420 420,570 570,810 810,900 900,1260
clearly it's easy to extend
显然，这个想法很容易推广，

395
00:12:24,890 --> 00:12:26,960
0,180 180,690 750,1260 1260,1680 1680,2070
this idea,| by what's typically
|通过通常被称为2f+1复制的方式。

396
00:12:26,960 --> 00:12:28,790
0,390 390,1050 1140,1440 1440,1680 1680,1830
called into {2f+1 - -

397
00:12:28,790 --> 00:12:30,300
0,390 390,1140
-} replication.|
|

398
00:12:30,500 --> 00:12:31,310
0,390 390,510 510,600 600,720 720,810
So if you want to
所以如果你想容忍f个错误而不是1个错误，

399
00:12:31,310 --> 00:12:33,440
0,630 960,1290 1290,1710 1710,2070 2070,2130
tolerate f faults instead of

400
00:12:33,440 --> 00:12:35,060
0,480 720,1110 1110,1230 1230,1440 1440,1620
one,| {} you need two
|你需要二加一加服务器或服务器，

401
00:12:35,060 --> 00:12:36,320
0,210 210,390 390,600 600,810 810,1260
plus f one plus server

402
00:12:36,320 --> 00:12:37,250
0,120 120,510 510,690 690,870 870,930
or server,| so that at
|因此，如果f失败，至少你总是占多数。

403
00:12:37,250 --> 00:12:38,060
0,240 240,360 360,480 480,750 750,810
least you have always a

404
00:12:38,060 --> 00:12:41,040
0,720 750,1620 1620,1980 1980,2550
majority majority if {f,fails}.|
|

405
00:12:41,380 --> 00:12:42,430
0,180 180,300 300,420 420,930 930,1050
And so in case {you,know}
所以，如果你们知道这里f是1

406
00:12:42,430 --> 00:12:43,990
0,450 450,900 900,1350 1350,1440 1440,1560
here {f,is,1 -}| and so
|所以我们运行的是3台服务器，

407
00:12:43,990 --> 00:12:45,190
0,120 120,360 360,450 450,630 630,1200
we're running the 3 servers,|
|

408
00:12:45,460 --> 00:12:46,270
0,240 240,420 420,570 570,660 660,810
{you,know} want f to be
你知道f是2，你有5台服务器，等等，

409
00:12:46,270 --> 00:12:47,740
0,510 540,660 660,780 780,990 990,1470
2, you have 5 servers,

410
00:12:47,740 --> 00:12:49,210
0,330 330,810 930,1170 1170,1320 1320,1470
etc etc,| you want f
|您希望f为3，那么您有7台服务器。

411
00:12:49,210 --> 00:12:49,900
0,90 90,210 210,510 510,570 570,690
to be 3, you have

412
00:12:49,900 --> 00:12:51,160
0,270 270,810
7 servers.|
|

413
00:12:51,700 --> 00:12:52,940
0,720
Okay?|
好吧?|

414
00:12:53,090 --> 00:12:55,400
0,270 270,660 660,1200 1470,2190 2190,2310
{} One other thing, this
还有一件事，这一点可能需要指出

415
00:12:55,400 --> 00:12:56,690
0,180 180,270 270,630 630,1020 1050,1290
may be important to point

416
00:12:56,690 --> 00:12:57,320
0,150 150,240 240,300 300,510 510,630
out| and I came up
|我在问题中提到了很多

417
00:12:57,320 --> 00:12:58,310
0,60 60,270 270,360 360,420 420,990
a lot in the questions|
|

418
00:12:58,490 --> 00:12:59,600
0,120 120,510 510,720 720,1020 1020,1110
and what is actually the
而实际上大多数人

419
00:12:59,600 --> 00:13:02,930
0,570 1050,1950 1950,2190 2190,2940 2940,3330
majority| and the majority is
|大多数是所有服务中的大多数，

420
00:13:03,050 --> 00:13:04,460
0,390 390,840 840,990 1020,1320 1320,1410
the majority of all the

421
00:13:04,460 --> 00:13:06,860
0,780 810,1110 1110,1230 1230,1620 1650,2400
services that are there,| both
|无论是向上还是向下。

422
00:13:06,860 --> 00:13:09,200
0,930 930,1200 1200,1950
upwards and downwards.|
|

423
00:13:09,260 --> 00:13:10,040
0,240 240,390 390,540 540,660 660,780
And so when you take
因此，当你获得多数席位时，

424
00:13:10,040 --> 00:13:11,060
0,30 30,600 600,720 720,900 900,1020
{} majority,| you don't take
|你没有拿到2个人中的大多数，

425
00:13:11,060 --> 00:13:12,050
0,60 60,450 450,540 540,630 630,990
the majority of the 2,|
|

426
00:13:12,050 --> 00:13:12,680
0,120 120,210 210,270 270,450 450,630
if there are only 2
如果只有两个人活着，

427
00:13:12,680 --> 00:13:13,310
0,30 30,330 330,450 450,570 570,630
{alive -},| you take the
|您可以使用系统中的大多数服务器。

428
00:13:13,310 --> 00:13:14,690
0,450 450,660 660,930 930,990 990,1380
majority of all the servers

429
00:13:14,690 --> 00:13:15,780
0,120 120,180 180,540
in the system.|
|

430
00:13:20,060 --> 00:13:21,980
0,210 210,900 1200,1650 1650,1770 1770,1920
Any questions about this sort
任何关于这类关键想法的问题或。

431
00:13:21,980 --> 00:13:24,110
0,120 120,510 510,1230 1260,1830 1980,2130
of key idea or.| Could
|会有偶数个服务器吗，

432
00:13:24,110 --> 00:13:26,030
0,240 240,930 990,1200 1200,1560 1560,1920
there be an even number

433
00:13:26,030 --> 00:13:27,110
0,120 120,690 690,840 840,990 990,1080
of servers,| like if you
|例如，如果您有4台服务器，且占多数，那么就是3台。

434
00:13:27,110 --> 00:13:28,430
0,180 180,450 450,1080 1080,1230 1230,1320
have 4 servers with the

435
00:13:28,430 --> 00:13:31,460
0,480 480,660 660,870 1050,1590 1830,3030
majority, then be three.| If
|如果你会在几个案例中看到这一点，正确的，在图表中，

436
00:13:31,490 --> 00:13:32,090
0,60 60,240 240,360 360,510 510,600
you will see that in

437
00:13:32,090 --> 00:13:33,230
0,60 60,240 240,570 570,900 900,1140
a couple cases, correct, in

438
00:13:33,230 --> 00:13:36,230
0,2040 2070,2490 2490,2700 2700,2790 2790,3000
the graph,| that you know
|你知道，如果你知道服务器的数量从七台减少到六台，其中一台停机了

439
00:13:36,230 --> 00:13:37,130
0,390 390,510 510,600 600,720 720,900
if you know the number

440
00:13:37,130 --> 00:13:38,270
0,60 60,480 480,570 570,990 990,1140
of servers is reduced from

441
00:13:38,270 --> 00:13:39,650
0,300 300,420 420,840 840,1080 1080,1380
seven to six and one

442
00:13:39,650 --> 00:13:40,580
0,90 90,570 570,660 660,720 720,930
is down| and you still
|而你仍然想继续，

443
00:13:40,580 --> 00:13:41,680
0,120 120,180 180,660
want to proceed,|
|

444
00:13:41,680 --> 00:13:42,670
0,90 90,270 270,330 330,810 810,990
you need a majority which
你需要多数，但你仍然需要足够的4台服务器才能真正继续。

445
00:13:42,670 --> 00:13:44,080
0,120 120,420 420,780 810,1110 1110,1410
you still need enough 4

446
00:13:44,080 --> 00:13:45,880
0,360 360,780 780,1230
server {to,actually} proceed.|
|

447
00:13:47,010 --> 00:13:47,760
0,270 270,330 330,420 420,510 510,750
But if you can get
但如果您可以拥有4台服务器，

448
00:13:47,760 --> 00:13:48,840
0,180 180,600 600,750 750,840 840,1080
4 servers,| then you can
|然后你就可以继续前进了。

449
00:13:48,840 --> 00:13:50,040
0,180 180,570
keep going.|
|

450
00:13:54,660 --> 00:13:56,640
0,510 750,1440
Okay. {}|
好吧。|

451
00:13:57,710 --> 00:13:58,970
0,240 240,420 420,750 750,1020 1020,1260
So I also have a
所以我也有一个关于大多数人的问题，

452
00:13:58,970 --> 00:14:00,650
0,300 300,540 540,600 600,1380 1440,1680
question about the majority,| so
|那么，大多数人是否认为服务器本身，

453
00:14:00,650 --> 00:14:02,720
0,210 210,330 330,1260 1260,1920 1920,2070
does the majority consider the

454
00:14:02,720 --> 00:14:05,150
0,360 360,1020 1080,1320 1320,1860 1860,2430
server itself,| so supposing raft
|因此，假设考虑到这一点，RAFT确实喜欢服务器本身。

455
00:14:05,180 --> 00:14:06,710
0,390 390,720 720,870 870,1140 1140,1530
does like the server itself

456
00:14:06,710 --> 00:14:09,080
0,630 630,1020 1260,1860 1860,2190 2190,2370
considering this.| Yeah, it's part
|是的，这是其中的一部分，

457
00:14:09,080 --> 00:14:09,920
0,90 90,210 210,480 480,750 750,840
of it,| so like you
|就像我们经常看到的木筏，对吧，

458
00:14:09,920 --> 00:14:11,240
0,510 510,840 840,930 930,1110 1110,1320
know often as we've seen

459
00:14:11,240 --> 00:14:12,470
0,390 390,540 540,750 750,990 990,1230
raft, correct,| the leader vote
|领导人立即投票给自己，

460
00:14:12,470 --> 00:14:14,640
0,330 330,720 900,1080 1080,1650
immediately vote for itself,|
|

461
00:14:14,670 --> 00:14:15,900
0,330 330,480 480,540 540,1020 1020,1230
{} or the candidate vote
或者候选人为自己投票

462
00:14:15,900 --> 00:14:17,370
0,150 150,690 690,1140 1140,1320 1320,1470
for itself| and in the
|而在领导者中，当它取决于你自己的日志时，

463
00:14:17,370 --> 00:14:18,570
0,300 300,480 480,570 570,1110 1110,1200
leader when it depends you

464
00:14:18,570 --> 00:14:19,500
0,60 60,330 330,480 480,810 810,930
know its own log,| it
|它被算作一个，

465
00:14:19,500 --> 00:14:21,160
0,390 390,630 630,990
counts as one,|
|

466
00:14:21,280 --> 00:14:22,540
0,450 480,720 720,930 930,990 990,1260
so it's part of it.|
所以这是其中的一部分。|

467
00:14:28,820 --> 00:14:30,940
0,750 900,1590
Okay, {}
好吧，所以，有相当多的协议使用这个想法，有时这些想法被称为法定协议或法定协议，

468
00:14:31,140 --> 00:14:32,420
0,750
so,

469
00:14:32,420 --> 00:14:33,230
0,210 210,450 450,480 480,720 720,810
there's quite a number of

470
00:14:33,230 --> 00:14:34,740
0,930
protocols

471
00:14:35,720 --> 00:14:37,140
0,840
using

472
00:14:37,850 --> 00:14:39,440
0,300 300,990
this idea,

473
00:14:39,840 --> 00:14:41,970
0,150 150,510 510,780 780,1440 1440,2130
and sometimes these ideas referred

474
00:14:41,970 --> 00:14:43,500
0,90 90,240 240,720 930,1170 1170,1530
to as quorum or quorum

475
00:14:43,500 --> 00:14:45,040
0,780
protocols,|
|

476
00:14:48,400 --> 00:14:49,840
0,750

477
00:14:50,120 --> 00:14:52,280
0,150 150,360 360,720 720,1260 1380,2160
{} pretty obvious reason, {}
很明显的原因，大概有两个，

478
00:14:52,550 --> 00:14:54,170
0,390 390,480 480,750 750,900 900,1620
and there sort of two,|
|

479
00:14:54,980 --> 00:14:55,880
0,330 330,390 390,750 750,840 840,900
{the,state} of [yard] for a
直到90年代初或80年代末的很长一段时间里，

480
00:14:55,880 --> 00:14:57,380
0,210 210,570 570,930 930,1110 1110,1500
long time until the early

481
00:14:57,380 --> 00:14:59,480
0,570 570,780 780,1080 1080,1620 1740,2100
90s or late 80s,| was
|基本上没有协议，

482
00:14:59,480 --> 00:15:01,250
0,120 120,540 540,720 720,1320 1590,1770
there's basically no protocol,| so
|因此，基本上我们总是处于这种单点故障的情况下。

483
00:15:01,250 --> 00:15:02,510
0,270 270,540 540,1020 1020,1170 1170,1260
basically we're always in the

484
00:15:02,510 --> 00:15:04,520
0,570 570,990 1020,1410 1440,1770 1770,2010
situation of this single point

485
00:15:04,520 --> 00:15:05,560
0,60 60,540
of failure.|
|

486
00:15:05,650 --> 00:15:06,610
0,330 330,510 510,660 660,900 900,960
{} And then in the
然后在90年代初，

487
00:15:06,610 --> 00:15:07,600
0,240 240,600 600,690 690,810 810,990
early 90s,| there were two
|有两个协议来了，

488
00:15:07,600 --> 00:15:10,260
0,600 600,990 990,1800
protocols came came,|
|

489
00:15:10,350 --> 00:15:11,460
0,330 330,720 720,990 990,1050 1050,1110
were invented roughly at the
几乎在同一时间被发明，

490
00:15:11,460 --> 00:15:12,840
0,240 240,750 780,1080 1080,1200 1200,1380
same time,| one is called
|一种叫帕克斯裤，

491
00:15:12,840 --> 00:15:13,950
0,390 390,600 600,690 690,1020 1020,1110
paxos,| which is mentioned in
|这一点在论文中提到了很多，

492
00:15:13,950 --> 00:15:14,910
0,60 60,360 360,600 600,630 630,960
the paper quite a bit,|
|

493
00:15:15,060 --> 00:15:16,140
0,420 420,540 540,600 600,780 780,1080
{} and the other one
另一种称为视图戳记复制，

494
00:15:16,140 --> 00:15:18,630
0,180 180,450 450,630 630,1230 1470,2490
is called {View-Stamped -} replication,|
|

495
00:15:23,840 --> 00:15:25,940
0,360 360,570 570,1170 1650,1920 1920,2100
sometimes called VR| and these
有时称为VR|这些都是在1990年左右再次运行的。

496
00:15:25,940 --> 00:15:27,260
0,150 150,330 330,570 570,930 930,1320
were these were again run

497
00:15:27,260 --> 00:15:29,180
0,390 390,1050
around 1990.|
|

498
00:15:29,580 --> 00:15:31,350
0,600 810,1050 1050,1230 1230,1590 1590,1770
{} They didn't actually get
在那个时间点上，他们实际上并没有得到太多关注，

499
00:15:31,350 --> 00:15:33,240
0,210 210,780 900,1590 1590,1710 1710,1890
much attention {} at that

500
00:15:33,240 --> 00:15:34,800
0,180 180,240 240,690 870,1290 1290,1560
point in time,| because people
|因为人们并没有迫切需要展示一种完全自动化和容错的系统。

501
00:15:34,800 --> 00:15:36,510
0,270 270,510 510,960 960,1410 1410,1710
didn't really have pressing need

502
00:15:36,510 --> 00:15:37,560
0,180 180,510 510,630 630,870 870,1050
to reveal to sort of

503
00:15:37,950 --> 00:15:40,110
0,780 780,1440 1440,1620 1620,1800 1800,2160
completely automatic and fault tolerant

504
00:15:40,110 --> 00:15:41,240
0,630
systems.|
|

505
00:15:41,240 --> 00:15:42,290
0,330 330,450 450,600 600,960 960,1050
{} But that changed in
但在过去的15年里，情况发生了变化，

506
00:15:42,290 --> 00:15:44,030
0,60 60,630 660,1230 1230,1560 1560,1740
the last 15 years,| over
|在过去的15年里，大量使用这些协议。

507
00:15:44,030 --> 00:15:45,650
0,120 120,480 480,960 960,1440 1470,1620
the last 15 years with

508
00:15:45,650 --> 00:15:47,210
0,270 270,630 630,690 690,870 870,1560
much use of these protocols.|
|

509
00:15:56,690 --> 00:15:58,820
0,390 390,930 1140,1620 1620,1860 1860,2130
{} And {} in fact
事实上，观察起来很有趣，对吗，

510
00:15:58,820 --> 00:16:00,440
0,720 720,780 780,1110 1110,1440 1440,1620
interesting to observe, correct,| that
|在过去的15年里。

511
00:16:00,440 --> 00:16:02,660
0,990 990,1380 1380,1560 1590,1890 1890,2220
{} in the last 15

512
00:16:02,660 --> 00:16:05,020
0,540
years.|
|

513
00:16:05,800 --> 00:16:06,820
0,120 120,300 300,720 720,870 870,1020
And that's basically {} sort
这基本上是在这些协议发明15年后，

514
00:16:06,820 --> 00:16:08,050
0,90 90,450 450,690 690,1080 1080,1230
of 15 years after these

515
00:16:08,050 --> 00:16:09,850
0,420 420,720 720,1200 1380,1620 1620,1800
protocols were invented,| {you,know} so
|你知道，基本上他们坐在桌子上或搁置在架子上15年

516
00:16:09,850 --> 00:16:11,020
0,450 450,690 690,930 930,1080 1080,1170
basically they sat on the

517
00:16:11,020 --> 00:16:11,980
0,360 360,570 570,750 750,870 870,960
table or sit on the

518
00:16:11,980 --> 00:16:13,600
0,420 420,570 570,900 900,1170 1170,1620
shelf for 15 years| until
|直到人们真正有了真正的用例。

519
00:16:13,630 --> 00:16:14,590
0,390 390,570 570,690 690,750 750,960
people actually have a real

520
00:16:14,590 --> 00:16:16,020
0,180 180,390 390,510 510,660
use case for that.|
|

521
00:16:16,020 --> 00:16:18,300
0,540 1050,1710
{} The
我们将主要在实验室中实施的协议

522
00:16:18,330 --> 00:16:19,200
0,420 420,570 570,660 660,780 780,870
protocol that we're going to

523
00:16:19,200 --> 00:16:21,180
0,390 390,1050 1080,1620 1620,1860 1860,1980
be {} mostly we're gonna

524
00:16:21,180 --> 00:16:22,140
0,90 90,510 510,600 600,660 660,960
be implementing in the lab|
|

525
00:16:22,140 --> 00:16:22,830
0,90 90,150 150,270 270,330 330,690
and we're going to discuss
我们将在讲座中讨论

526
00:16:22,830 --> 00:16:23,940
0,120 120,210 210,690 690,900 900,1110
in the lecture| and which
|而本文的主题就是这个称为RAFT的[]协议。

527
00:16:23,940 --> 00:16:25,020
0,90 90,390 390,480 480,570 570,1080
the topic of the paper

528
00:16:25,140 --> 00:16:27,420
0,510 510,780 780,870 870,1170 1680,2280
is falls in this []

529
00:16:27,450 --> 00:16:29,370
0,870 870,990 990,1110 1110,1320 1320,1920
protocol in this called raft.|
|

530
00:16:30,940 --> 00:16:32,140
0,390 390,540 540,600 600,900 960,1200
{} And it was {}
我认为这就是2014年产生或写下的2014年的论文，

531
00:16:32,140 --> 00:16:33,820
0,0 0,300 300,720 750,1050 1050,1680
I think which came about

532
00:16:33,850 --> 00:16:34,840
0,330 330,480 480,720 720,900 900,990
or was written up in

533
00:16:34,840 --> 00:16:38,380
0,1260 1260,1560 1560,1650 1650,3390 3390,3540
{2014,the} papers from 2014,| {and,this}
|这是更完整的描述之一，

534
00:16:38,380 --> 00:16:39,490
0,90 90,270 270,360 360,450 450,1110
is one of the more

535
00:16:39,490 --> 00:16:41,410
0,420 420,1110 1350,1710 1710,1860 1860,1920
complete descriptions,| {you,know,it,touches} on a
|你知道它涉及到很多不同的方面

536
00:16:41,410 --> 00:16:42,460
0,180 180,270 270,540 540,960 960,1050
lot of different aspects| that
|你将能够完成复制状态机

537
00:16:42,460 --> 00:16:43,000
0,120 120,270 270,360 360,480 480,540
you're gonna be able to

538
00:16:43,000 --> 00:16:45,430
0,420 420,870 870,1110 1110,1590 1980,2430
complete replicated state machine {}|
|

539
00:16:45,430 --> 00:16:47,350
0,450 450,840 840,1230 1230,1680 1680,1920
and explains those clearly that's
并清楚地解释了这些，这是原因之一

540
00:16:47,350 --> 00:16:48,340
0,330 330,450 450,510 510,870 870,990
one of the reasons| why
|为什么我们要把它用于实验室

541
00:16:48,340 --> 00:16:49,690
0,420 420,720 720,870 870,1260 1260,1350
we're using it for the

542
00:16:49,690 --> 00:16:50,920
0,450 450,780 780,900 900,1110 1110,1230
labs| and you know for
|你知道，对于这场特别的演讲。

543
00:16:50,920 --> 00:16:52,300
0,180 180,570 570,960
this particular lecture.|
|

544
00:16:55,940 --> 00:16:58,550
0,480 480,780 780,990 990,2190 2190,2610
Any questions about the history
如果有任何关于协议历史的问题，

545
00:16:58,550 --> 00:17:00,900
0,300 300,840 870,1860
here around protocols,|
|

546
00:17:03,210 --> 00:17:04,740
0,510 510,570 570,870 870,1080 1080,1530
before I dive into raft.|
在我跳进木筏之前。|

547
00:17:11,350 --> 00:17:12,420
0,510
Okay,
好的，所以在真正跳入木筏之前，

548
00:17:14,820 --> 00:17:17,610
0,660 660,1560 1560,2130 2160,2460 2460,2790
so before actually {} diving

549
00:17:17,610 --> 00:17:18,810
0,270 270,570 570,720 720,840 840,1200
into raft,| let me first
|首先，让我简单介绍一下如何使用RAFT构建复制状态机，

550
00:17:18,810 --> 00:17:19,740
0,300 300,360 360,540 540,660 660,930
talk a little bit about

551
00:17:19,740 --> 00:17:21,570
0,480 480,720 720,1050 1050,1260 1260,1830
how you one would use

552
00:17:21,570 --> 00:17:22,680
0,330 330,420 420,630 630,690 690,1110
raft to build a replicated

553
00:17:22,680 --> 00:17:23,800
0,240 240,570
state machine,|
|

554
00:17:24,320 --> 00:17:25,550
0,510 510,720 720,810 810,930 930,1230
because that's at the ends
因为这是我们最终的目标。

555
00:17:25,550 --> 00:17:27,360
0,150 150,300 300,840
our end goal.|
|

556
00:17:27,540 --> 00:17:29,490
0,300 300,360 360,510 510,1140 1170,1950
And it will help {}
这将有助于我们思考这应该为我们做些什么。

557
00:17:29,520 --> 00:17:31,560
0,510 510,1080 1110,1500 1500,1770 1770,2040
reasoning about what raft that

558
00:17:31,560 --> 00:17:32,850
0,150 150,240 240,630 720,960 960,1290
should be doing for us.|
|

559
00:17:33,510 --> 00:17:35,520
0,300 300,660 780,1260 1260,1740 1740,2010
And so the basic way
所以你使用木筏的基本方法是

560
00:17:35,520 --> 00:17:36,840
0,150 150,360 360,720 720,1200 1200,1320
you would use raft| and
|我们实际上会在实验3中做这件事。

561
00:17:36,840 --> 00:17:37,680
0,300 300,390 390,540 540,750 750,840
we'll actually do this in

562
00:17:37,680 --> 00:17:40,410
0,330 330,780 1110,1860 2010,2520 2520,2730
lab 3.| {} Let's say
|假设您有一台服务器，

563
00:17:40,410 --> 00:17:42,240
0,150 150,270 270,600 600,1290
you have a server,|
|

564
00:17:43,680 --> 00:17:45,450
0,540 570,1050 1050,1170 1170,1530 1530,1770
and raft is basically nothing
而木筏基本上就是一个图书馆

565
00:17:45,450 --> 00:17:47,280
0,180 180,270 270,540 540,1080 1530,1830
else than a library| and
|因此，在我们的设置中，将会打包

566
00:17:47,280 --> 00:17:49,260
0,390 390,870 870,1650 1650,1890 1890,1980
so in our setting is

567
00:17:49,260 --> 00:17:50,910
0,150 150,330 330,570 570,1140 1140,1650
going to Go package| and
|您知道，您可以通过基本上导入该包来编写复制状态机，

568
00:17:50,910 --> 00:17:51,750
0,60 60,240 240,390 390,570 570,840
you know you can write

569
00:17:51,750 --> 00:17:53,550
0,360 450,1020 1020,1260 1260,1650 1650,1800
a replicated state machine by

570
00:17:53,550 --> 00:17:55,800
0,540 540,1080 1080,1230 1230,1770 1800,2250
basically importing that package,| so
|所以这就是我们得到的，

571
00:17:56,130 --> 00:17:57,690
0,300 300,420 420,870 1050,1170 1170,1560
here's we got,| you know
|你知道在底部有一只木筏，

572
00:17:58,290 --> 00:17:59,730
0,360 360,630 630,1290 1290,1380 1380,1440
here's a raft at the

573
00:17:59,730 --> 00:18:00,840
0,570
bottom,|
|

574
00:18:02,860 --> 00:18:04,990
0,630 630,780 780,870 870,1440 1470,2130
and you know you build
您知道您使用RAFT构建了一台服务器

575
00:18:04,990 --> 00:18:07,570
0,330 600,1290 1290,1800 1800,2310 2460,2580
a server using raft| and
|例如，在实验3中，我们将使用RAFT构建一个密钥值服务器，

576
00:18:07,570 --> 00:18:09,280
0,120 120,210 210,660 660,1080 1080,1710
so for example in {}

577
00:18:09,310 --> 00:18:10,060
0,300 300,480 480,570 570,690 690,750
lab 3, we're going to

578
00:18:10,060 --> 00:18:11,120
0,270 270,510
build a

579
00:18:11,180 --> 00:18:12,950
0,330 330,660 660,1020 1020,1290 1290,1770
{key-value -} server using raft,|
|

580
00:18:14,520 --> 00:18:16,460
0,540 570,1350
and clients
和你知道的客户与Key-Value服务器交谈，

581
00:18:16,850 --> 00:18:18,740
0,480 480,990 990,1050 1050,1140 1140,1890
{you,know} talk you know to

582
00:18:18,800 --> 00:18:21,720
0,330 360,510 510,840 840,1410
the {key-value -} server,|
|

583
00:18:23,760 --> 00:18:25,020
0,660 660,720 720,840 840,960 960,1260
and {you,know} it's a bit
你知道，这有点像你知道的放和取操作，

584
00:18:25,200 --> 00:18:26,880
0,210 210,660 660,780 780,990 990,1680
{you,know} put and get operations,|
|

585
00:18:29,180 --> 00:18:30,980
0,570 720,930 930,1110 1110,1410 1410,1800
and the {key-value -} servers
以及当其接收到这些PUT和GET操作之一时的键值服务器，

586
00:18:30,980 --> 00:18:32,450
0,210 210,330 330,1020 1050,1380 1380,1470
when it receives one of

587
00:18:32,450 --> 00:18:33,830
0,180 180,330 330,420 420,570 570,1380
these put and get operations,|
|

588
00:18:34,130 --> 00:18:35,180
0,120 120,480 480,720 720,840 840,1050
it basically hands it off
它基本上把它交给了RAFT，

589
00:18:35,180 --> 00:18:36,360
0,90 90,660
to raft,|
|

590
00:18:36,840 --> 00:18:39,060
0,450 450,780 780,960 960,1590 1980,2220
and so it basically puts
所以它基本上把木筏放在

591
00:18:39,060 --> 00:18:40,350
0,150 150,540 540,720 720,990 990,1290
the raft| and actually sticks
|实际上，我们会看到更多的细节，

592
00:18:40,350 --> 00:18:41,640
0,90 90,240 240,570 600,870 870,1290
it in a, what we'll

593
00:18:41,640 --> 00:18:43,740
0,300 300,720 720,840 840,1470 1650,2100
see much more detail, {}|
|

594
00:18:43,740 --> 00:18:44,310
0,180 180,270 270,420 420,510 510,570
it will put it in
它会把它记入日志，

595
00:18:44,310 --> 00:18:45,480
0,90 90,630
the log,|
|

596
00:18:46,050 --> 00:18:48,240
0,360 360,720 720,1050 1050,1620
actually {draw,this} slightly differently,|
实际上画的略有不同，|

597
00:18:48,930 --> 00:18:52,260
0,870 1080,2040 2040,2160 2160,2520 2550,3330
so {appends,it} to the log,|
因此将其附加到日志中，|

598
00:18:54,750 --> 00:18:56,280
0,450 450,870 870,960 960,1080 1080,1530
it appends to the end
它附加到日志的末尾，

599
00:18:56,340 --> 00:18:57,700
0,180 180,270 270,810
of the log,|
|

600
00:18:57,790 --> 00:18:59,320
0,480 480,810 810,1110 1110,1470 1470,1530
and then raft internally is
然后RAFT INTERNAL将与其他服务器进行对话

601
00:18:59,320 --> 00:19:00,190
0,120 120,210 210,510 510,600 600,870
going to talk to other

602
00:19:00,190 --> 00:19:01,840
0,480 480,600 600,990 990,1470 1470,1650
servers| to basically replicate that
|基本上复制该日志。

603
00:19:01,840 --> 00:19:02,840
0,420
log.|
|

604
00:19:03,060 --> 00:19:03,990
0,210 210,360 360,630 630,780 780,930
And so here are some
这里有一些其他的服务器，

605
00:19:03,990 --> 00:19:06,780
0,540 600,1440 1860,2070 2070,2400 2400,2790
other servers,| they basically structured
|它们的结构基本上是完全一样的，

606
00:19:06,780 --> 00:19:08,070
0,60 60,540 540,600 600,900 900,1290
to exactly the same way,|
|

607
00:19:08,070 --> 00:19:09,420
0,300 300,540 540,630 630,960 960,1350
they have a raft library
他们有一个木筏图书馆组件，

608
00:19:09,420 --> 00:19:11,180
0,660
component,|
|

609
00:19:11,180 --> 00:19:12,530
0,150 150,210 210,360 360,690 690,1350
and the {key-value -} server,|
和密钥值服务器，|

610
00:19:13,370 --> 00:19:14,750
0,360 360,600 600,780 780,1200 1200,1380
like many other replicated state
就像我们见过的许多其他复制状态机一样，

611
00:19:14,750 --> 00:19:16,420
0,330 330,450 450,540 540,1080
machines we've ever seen,|
|

612
00:19:16,640 --> 00:19:18,860
0,210 210,840 840,1650
{you,know} they're identical
您知道它们是相同的密钥值服务器

613
00:19:19,570 --> 00:19:21,400
0,210 210,300 300,690 690,1230 1560,1830
{key-value - -} server| and
|我们要玩同样的游戏，

614
00:19:21,400 --> 00:19:22,300
0,90 90,240 240,450 450,570 570,900
we're gonna play the same

615
00:19:22,300 --> 00:19:23,470
0,420 420,570 570,600 600,870 870,1170
game,| as I know, the
|据我所知，其他以前复制的状态机基本上都以相同的顺序向各地的键值服务器提供操作

616
00:19:23,470 --> 00:19:25,030
0,300 300,630 630,1020 1020,1230 1230,1560
other previous replicated state machines

617
00:19:25,030 --> 00:19:27,220
0,390 390,630 630,960 960,1470 1470,2190
machine were basically feeding operations

618
00:19:27,220 --> 00:19:28,450
0,150 150,210 210,420 420,720 720,1230
to the {key-value -} servers

619
00:19:28,450 --> 00:19:30,640
0,150 150,210 210,600 600,1140 1440,2190
in the same order {}

620
00:19:30,730 --> 00:19:32,620
0,840 1050,1350 1350,1440 1440,1470 1470,1890
everywhere| and as a result
|因此，您知道这些键以完全相同的顺序复制所有应用的操作，

621
00:19:32,620 --> 00:19:34,300
0,450 450,540 540,870 870,1440 1440,1680
{you,know} the keys replicates all

622
00:19:34,300 --> 00:19:35,890
0,510 510,990 990,1110 1110,1500 1500,1590
applied operations in exactly the

623
00:19:35,890 --> 00:19:37,660
0,330 330,810 840,1230 1230,1380 1380,1770
same order,| we should see
|我们应该会看到同样的Key-Value商店正在建设，对吧，

624
00:19:37,660 --> 00:19:40,480
0,120 120,780 1560,2070 2070,2400 2400,2820
the same {key-value -} stores

625
00:19:40,480 --> 00:19:41,920
0,240 240,660 720,1050 1050,1290 1290,1440
being built, right,| so we
|所以我们在这里有一个键值存储，

626
00:19:41,920 --> 00:19:43,720
0,240 240,450 510,930 930,1410 1410,1800
have a {key-value -} store

627
00:19:43,720 --> 00:19:45,670
0,390 390,720 720,960 960,1590 1680,1950
here,| whatever key 20 has
|无论密钥20有什么价值，

628
00:19:45,670 --> 00:19:47,800
0,90 90,840 990,1260 1260,1710 1710,2130
some value,| we're applying updates
|我们正在以完全相同的顺序和所有副本对此表进行更新，

629
00:19:47,800 --> 00:19:48,790
0,90 90,360 360,510 510,600 600,990
to this in a table

630
00:19:48,790 --> 00:19:50,200
0,420 420,810 810,900 900,1140 1140,1410
{} exactly the same order

631
00:19:50,200 --> 00:19:52,570
0,480 480,1110 1290,1710 1710,1830 1830,2370
{and,all} replicas,| things should be
|事情应该是好的，

632
00:19:52,600 --> 00:19:53,710
0,210 210,270 270,570 600,960 960,1110
should be good,| we're gonna
|我们会有一模一样的复制品。

633
00:19:53,710 --> 00:19:55,240
0,270 300,720 720,1230
have identical replicas.|
|

634
00:19:56,070 --> 00:19:57,750
0,420 450,570 570,1140 1140,1260 1260,1680
So the way you raft
所以你所指示的方式是其中一个复制品是领头羊，

635
00:19:57,750 --> 00:19:58,890
0,510 510,630 630,750 750,1050 1050,1140
instructed is that one of

636
00:19:58,890 --> 00:20:00,180
0,90 90,600 600,750 750,870 870,1290
the replica is the leader,|
|

637
00:20:00,210 --> 00:20:01,890
0,360 390,780 780,1050 1050,1380 1530,1680
so let me this for
所以为了方便起见，让我这么说吧，

638
00:20:01,890 --> 00:20:03,150
0,690 690,780 780,930 930,1140 1140,1260
convenience,| you know that's going
|你知道这将是这一边的第一个

639
00:20:03,150 --> 00:20:03,840
0,60 60,150 150,270 270,480 480,690
to be the first one

640
00:20:03,840 --> 00:20:05,820
0,360 360,540 540,930 1170,1530 1530,1980
on this side| and actually
|实际上，客户确实会与领导者交谈，

641
00:20:05,820 --> 00:20:06,930
0,480 480,600 600,930 930,1020 1020,1110
{the,clients} do talk to the

642
00:20:06,930 --> 00:20:07,880
0,450
leader,|
|

643
00:20:08,100 --> 00:20:11,160
0,660 660,930 930,1470 1770,2490
{} and then, {}
然后，接下来发生的是，

644
00:20:11,160 --> 00:20:12,630
0,330 330,630 630,930 930,1140 1140,1470
what happens next is that,|
|

645
00:20:12,630 --> 00:20:15,750
0,840 1290,2010 2190,2820 2820,2910 2910,3120
the client talks to one
客户与其中一位领导交谈，

646
00:20:15,750 --> 00:20:16,890
0,120 120,450 450,750 750,900 900,1140
of the leader,| the leader
|领军KV服务器KV服务器，

647
00:20:16,890 --> 00:20:18,660
0,210 210,690 690,960 960,1380 1380,1770
{kv,server -} {kv,server - -},|
|

648
00:20:18,840 --> 00:20:20,370
0,390 390,480 480,990 990,1140 1140,1530
{} {appends -} a log
将日志条目附加到领导者的RAFT日志

649
00:20:20,370 --> 00:20:23,040
0,600 840,1380 1380,1770 1800,2250 2250,2670
entry to the raft log

650
00:20:23,070 --> 00:20:24,660
0,210 210,330 330,810 930,1140 1140,1590
of the leader| and then
|然后你知道，基本上可以与其他的RAFT库进行交流，

651
00:20:24,660 --> 00:20:26,850
0,90 90,180 180,570 570,1470 1770,2190
you know basically communicates with

652
00:20:26,850 --> 00:20:27,960
0,120 120,600
the other

653
00:20:27,990 --> 00:20:30,600
0,660 690,1440 1860,2100 2100,2370 2370,2610
raft libraries,| and there's raft
|还有一些RAFT图书馆也做同样的事情，

654
00:20:30,600 --> 00:20:31,680
0,270 270,390 390,780 780,840 840,1080
libraries do exactly the same

655
00:20:31,680 --> 00:20:33,240
0,180 180,540 540,780 780,1200 1260,1560
thing,| basically they {append,you,know} the
|基本上，他们将操作附加到日志中，添加到他们的日志中，

656
00:20:33,240 --> 00:20:35,640
0,750 1050,1200 1200,1320 1320,1860
operation to the log,

657
00:20:36,340 --> 00:20:37,960
0,120 120,390 390,1140
to their logs,|
|

658
00:20:39,840 --> 00:20:41,520
0,720 720,990 990,1170 1170,1230 1230,1680
and {} send a response
把你知道的回复给领导。

659
00:20:41,520 --> 00:20:42,750
0,390 390,480 480,600 600,870 870,1230
back you know to the

660
00:20:43,730 --> 00:20:44,900
0,630
leader.|
|

661
00:20:46,030 --> 00:20:47,470
0,540 540,1140 1140,1230 1230,1320 1320,1440
{} And you know of
你知道，当然你知道，所有这些状态都是存储的，你知道日志

662
00:20:47,470 --> 00:20:48,790
0,270 270,360 360,840 840,1020 1020,1320
course you know all these

663
00:20:48,970 --> 00:20:51,640
0,600 600,1320 1680,2370 2400,2520 2520,2670
state {is,stored,you,know,the} log| and some
|以及存储在盘上的一些其他状态，

664
00:20:51,640 --> 00:20:53,080
0,180 180,450 450,780 780,1050 1050,1440
other state stored on disk,|
|

665
00:20:53,080 --> 00:20:54,250
0,180 180,390 390,750 750,960 960,1170
so that if any one
所以如果其中任何一个失败了，

666
00:20:54,250 --> 00:20:56,050
0,90 90,240 240,900 1200,1560 1560,1800
of them fails,| {} they
|他们至少有最后一部分的原木，

667
00:20:56,050 --> 00:20:57,700
0,120 120,360 360,660 660,1020 1230,1650
at least have the last

668
00:20:57,700 --> 00:20:59,230
0,210 210,300 300,450 450,1050 1050,1530
part of their log,| still
|仍然可用，并可以从那里进行构建。

669
00:20:59,230 --> 00:21:01,600
0,840 960,1530 1740,2070 2070,2250 2250,2370
available and can build from

670
00:21:01,600 --> 00:21:02,380
0,360
there.|
|

671
00:21:02,930 --> 00:21:05,660
0,480 510,1110 1230,2220 2220,2580 2580,2730
So once basically and we'll
所以这一次，我们会更详细地讨论一下，

672
00:21:05,660 --> 00:21:06,320
0,120 120,180 180,330 330,450 450,660
talk a little bit more

673
00:21:06,320 --> 00:21:08,300
0,90 90,390 390,600 750,1260 1260,1980
in detail,| but once the
|但是一旦其中日志条目在3个服务器上复制的条目，

674
00:21:08,330 --> 00:21:09,770
0,540 540,810 810,900 900,1140 1140,1440
entry where the log entries

675
00:21:09,770 --> 00:21:12,380
0,570 570,1080 1290,1530 1530,2040 2130,2610
replicated on 3 servers,| then
|然后，它们实际上可以被按顺序传送到键值服务器。

676
00:21:12,380 --> 00:21:13,670
0,120 120,270 270,600 600,690 690,1290
they can actually be delivered

677
00:21:13,730 --> 00:21:15,530
0,300 300,900 1200,1560 1560,1620 1620,1800
in order to the {key-value

678
00:21:15,530 --> 00:21:16,740
0,330 330,780
-} server.|
|

679
00:21:18,280 --> 00:21:20,980
0,750 1080,1560 1560,1860 1860,2430 2430,2700
So every committed operation, there
因此，每个提交的操作、每个日志都有一个索引，

680
00:21:20,980 --> 00:21:22,150
0,240 240,540 540,660 660,720 720,1170
every log is an index,|
|

681
00:21:22,150 --> 00:21:24,160
0,360 360,1170 1170,1500 1500,1860 1860,2010
wherever operation index 0 or
操作索引为0或实际为1 2 3 4的任何位置

682
00:21:24,160 --> 00:21:26,320
0,270 270,750 1080,1500 1500,1860 1860,2160
actually 1 2 3 4

683
00:21:26,320 --> 00:21:27,640
0,510 540,720 720,1110 1110,1230 1230,1320
whatever in order| and they're
|它们将被传送到Key-Value服务器，

684
00:21:27,640 --> 00:21:28,600
0,120 120,180 180,270 270,750 750,960
going to be delivered in

685
00:21:28,600 --> 00:21:29,950
0,300 300,450 450,720 720,990 990,1350
order to {key-value -} servers,|
|

686
00:21:29,950 --> 00:21:31,540
0,330 330,420 420,840 840,960 960,1590
once an operation commited,| it's
一旦行动开始，|它将被传送到密钥值服务器，

687
00:21:31,540 --> 00:21:32,740
0,120 120,180 180,330 330,870 990,1200
going to be delivered to

688
00:21:32,740 --> 00:21:33,940
0,90 90,240 240,540 540,1080 1110,1200
the {key-value -} server,| the
|密钥值服务器执行该操作，

689
00:21:33,940 --> 00:21:35,320
0,150 150,420 420,870 870,1260 1260,1380
{key-value -} server performs the

690
00:21:35,320 --> 00:21:37,780
0,750 810,1140 1140,1740 1740,1860 1860,2460
operation,| maybe updates you know
|可能会更新您知道的键值表

691
00:21:37,960 --> 00:21:40,330
0,780 780,990 990,1440 1440,2100 2220,2370
the {key-value -} table| and
|然后，因为实际上只有领导者向客户发回响应。

692
00:21:40,330 --> 00:21:41,590
0,210 210,450 450,810 810,960 960,1260
then since actually the leader

693
00:21:41,590 --> 00:21:42,880
0,330 330,510 510,570 570,1020 1020,1290
alone sends a response back

694
00:21:42,880 --> 00:21:44,100
0,150 150,390 390,870
to the client.|
|

695
00:21:44,790 --> 00:21:45,840
0,270 270,420 420,570 570,660 660,1050
So that's sort of roughly
所以这大概是一系列事件发生的顺序，

696
00:21:45,840 --> 00:21:47,760
0,120 120,540 540,630 630,1260 1530,1920
the sequence of events that

697
00:21:47,760 --> 00:21:49,260
0,420 420,810 900,1290 1290,1470 1470,1500
happens,| so client sends {}
|因此客户端向领导者发送请求，

698
00:21:49,260 --> 00:21:50,880
0,390 390,480 480,570 570,1050 1080,1620
request to the leader,| leader
|领队放在[][]筏上，

699
00:21:50,880 --> 00:21:52,680
0,180 180,450 450,810 810,1350 1350,1800
{put,in} [] [] raft,| raft
|你知道，RAFT和其他服务器聊天，

700
00:21:52,680 --> 00:21:53,580
0,60 60,270 270,480 480,750 750,900
you know chit chats with

701
00:21:53,580 --> 00:21:55,950
0,90 90,570 570,810 810,1350 1860,2370
the other {} servers, {}|
|

702
00:21:55,950 --> 00:21:58,770
0,420 420,990 990,1320 1320,1860 1860,2820
once {you,know,it's -} replicated enough
一旦你知道它复制了足够多的机器，

703
00:21:58,770 --> 00:22:00,960
0,660 780,1500 1500,1590 1590,1770 1770,2190
machines,| then you know the
|那么你就知道这件事被认为是

704
00:22:00,960 --> 00:22:02,280
0,270 270,630 630,690 690,810 810,1320
it's considered to be committed|
|

705
00:22:02,550 --> 00:22:03,570
0,420 420,570 570,780 780,810 810,1020
and we'll talk a little
我们将更准确地讨论承诺的含义

706
00:22:03,570 --> 00:22:05,280
0,150 150,480 480,990 990,1140 1140,1710
bit more precisely what commit

707
00:22:05,280 --> 00:22:07,560
0,510 690,990 990,1410 1410,1770 1770,2280
means| and then {} {an,committed}
|然后将提交的操作传递给键值服务器，

708
00:22:07,560 --> 00:22:08,610
0,450 450,510 510,900 900,960 960,1050
operation is delivered to the

709
00:22:08,610 --> 00:22:10,620
0,180 180,510 510,990 1350,1560 1560,2010
{key-value -} servers,| and then
|然后他们执行操作并响应客户端

710
00:22:10,620 --> 00:22:12,840
0,0 990,1320 1320,1650 1650,1740 1740,2220
{} they execute the operation

711
00:22:12,840 --> 00:22:13,890
0,150 150,480 480,570 570,660 660,1050
and respond to the client|
|

712
00:22:13,890 --> 00:22:14,670
0,120 120,150 150,390 390,720 720,780
{ -} leader response to
领导对客户的回应。

713
00:22:14,670 --> 00:22:15,460
0,90 90,510
the client.|
|

714
00:22:17,390 --> 00:22:18,920
0,570 810,1020 1020,1320 1320,1410 1410,1530
So what happens on the
那么，失败后会发生什么，

715
00:22:18,920 --> 00:22:20,400
0,660
failure,|
|

716
00:22:24,300 --> 00:22:25,760
0,300 300,930
{} failure,
如果失败，新领导人就会当选，

717
00:22:25,910 --> 00:22:29,390
0,960 1320,2550 2550,2850 2850,2940 2940,3480
the new leader is elected,|
|

718
00:22:31,470 --> 00:22:32,370
0,180 180,270 270,390 390,600 600,900
and it will take over
它将接替旧领导人的角色

719
00:22:32,370 --> 00:22:33,180
0,90 90,420 420,510 510,600 600,810
the role of the old

720
00:22:33,180 --> 00:22:34,800
0,330 870,1080 1080,1230 1230,1290 1290,1620
leader| and so for example
|例如，就像在这张特定的图片中，

721
00:22:34,800 --> 00:22:35,880
0,210 210,300 300,450 450,780 780,1080
like in this particular picture,|
|

722
00:22:35,880 --> 00:22:36,690
0,300 300,420 420,630 630,720 720,810
{you,know} it might be the
你知道情况可能是这样的，

723
00:22:36,690 --> 00:22:39,120
0,330 330,660 960,1830 2220,2310 2310,2430
case that,| {} you know
|你知道这个领袖坠毁了，

724
00:22:39,120 --> 00:22:40,860
0,210 210,480 480,1140
this leader crashes,|
|

725
00:22:41,130 --> 00:22:42,570
0,420 420,1020 1020,1110 1110,1230 1230,1440
{} and you know this
你知道，这将成为下一届的新领导人，

726
00:22:42,570 --> 00:22:44,100
0,510 510,600 600,810 810,1320 1350,1530
becomes the new leader in

727
00:22:44,100 --> 00:22:45,300
0,60 60,360 360,840 840,930 930,1200
the next term,| we'll see
|我们会明白这到底是什么意思，

728
00:22:45,300 --> 00:22:46,980
0,360 360,450 450,570 570,1080 1410,1680
exactly what that means,| and
|然后客户端基本上会发生故障转移，

729
00:22:46,980 --> 00:22:48,330
0,120 120,180 180,540 540,870 870,1350
then the clients basically fail

730
00:22:48,330 --> 00:22:49,440
0,480 510,600 600,690 690,870 870,1110
over,| you know they will
|你知道他们会看到的，他们得不到回应，

731
00:22:49,440 --> 00:22:50,400
0,360 360,510 510,780 780,900 900,960
see, they don't get a

732
00:22:50,400 --> 00:22:51,600
0,540 540,660 660,750 750,870 870,1200
response,| so they will time
|所以他们会超时

733
00:22:51,600 --> 00:22:53,280
0,390 750,930 930,1020 1020,1320 1320,1680
out| and they fail over
|他们把权力转移给了第二个领导人，新的领导人

734
00:22:53,280 --> 00:22:55,140
0,330 330,990 1020,1230 1230,1560 1560,1860
to {} the second leader,

735
00:22:55,140 --> 00:22:56,670
0,90 90,300 300,810 930,1200 1200,1530
the new leader| and basically
|基本上重试他们的行动。

736
00:22:56,670 --> 00:22:58,220
0,390 390,570 570,1050
retry their operation.|
|

737
00:22:58,440 --> 00:22:59,760
0,240 240,360 360,630 630,1230 1230,1320
And so they insert you
所以他们插入了你知道的新领导人将接管他们的行动

738
00:22:59,760 --> 00:23:00,810
0,60 60,240 240,420 420,780 780,1050
know that new leader will

739
00:23:00,810 --> 00:23:02,670
0,240 240,420 420,1170 1170,1560 1560,1860
take their operation| {insert,it} back
|把它插回木筏里，

740
00:23:02,670 --> 00:23:04,140
0,330 330,900 900,960 960,1170 1170,1470
into raft,| you know the
|你知道和以前一样的事情发生了，

741
00:23:04,170 --> 00:23:05,940
0,360 360,540 540,960 960,1110 1110,1770
same thing happens as before,|
|

742
00:23:06,120 --> 00:23:07,260
0,300 300,690 690,840 840,1020 1020,1140
and maybe this time we
也许这一次我们会走运

743
00:23:07,260 --> 00:23:08,340
0,150 150,540 540,690 690,810 810,1080
get lucky| and we actually
|我们实际上成功地完成了手术，没有任何失败。

744
00:23:08,340 --> 00:23:09,660
0,150 150,240 240,810 810,1170 1170,1320
get the operation without any

745
00:23:09,660 --> 00:23:10,700
0,600
failures.|
|

746
00:23:11,640 --> 00:23:12,300
0,330 330,390 390,480 480,600 600,660
{} If you think a
如果你仔细想想这件事，

747
00:23:12,300 --> 00:23:13,380
0,180 180,300 300,630 630,870 870,1080
little bit careful about this,|
|

748
00:23:13,380 --> 00:23:15,510
0,450 450,930 930,1410 1680,1800 1800,2130
{that,does} mean that a client
这确实意味着客户端操作可能会在日志中结束两次，对吧，

749
00:23:15,510 --> 00:23:17,370
0,570 570,1020 1020,1140 1140,1440 1440,1860
operation might end up twice

750
00:23:17,370 --> 00:23:18,720
0,120 120,210 210,600 630,900 900,1350
in the log, right,| because
|因为实际上可能是在它第一次成功的时候，

751
00:23:18,750 --> 00:23:19,710
0,360 360,480 480,630 630,720 720,960
actually may be the case

752
00:23:19,710 --> 00:23:20,340
0,90 90,180 180,420 420,540 540,630
that the first time it

753
00:23:20,340 --> 00:23:21,570
0,510 510,660 660,840 840,1080 1080,1230
succeeded,| but just didn't get
|但就是没有得到回应

754
00:23:21,570 --> 00:23:23,280
0,90 90,840 1140,1410 1410,1620 1620,1710
the response| and so it
|所以它并不知道自己成功了，

755
00:23:23,280 --> 00:23:24,450
0,240 240,450 450,630 630,720 720,1170
doesn't know that it succeeded,|
|

756
00:23:24,450 --> 00:23:25,950
0,180 180,750 750,930 930,1080 1080,1500
{it,will} retry,| you know this
它将重试，|你知道这个新的领导者会把日志，新的重试操作也放在日志中

757
00:23:25,980 --> 00:23:27,900
0,450 450,930 930,1410 1590,1830 1830,1920
new leader will put the

758
00:23:27,900 --> 00:23:30,300
0,660 660,930 930,1320 1770,2160 2160,2400
log, the new {} retry

759
00:23:30,300 --> 00:23:31,650
0,420 420,690 690,780 780,870 870,1350
operation also in the log|
|

760
00:23:31,710 --> 00:23:32,670
0,150 150,210 210,360 360,630 630,960
and it will pop out
它将在KV Key-Value服务器上的某个时刻出现

761
00:23:32,730 --> 00:23:34,440
0,270 270,450 450,810 810,990 990,1710
at some point in {}

762
00:23:34,440 --> 00:23:36,840
0,930 930,1650 1650,1950 1950,2280 2280,2400
at kv key-value servers| and
|实际上是复制品

763
00:23:36,840 --> 00:23:39,720
0,600 600,870 1080,1530 1740,2280 2280,2880
actually {} be a duplicate|
|

764
00:23:39,810 --> 00:23:40,900
0,240 240,720
and so
正如你们将在实验3后面看到的，

765
00:23:40,900 --> 00:23:41,770
0,210 210,360 360,450 450,570 570,870
{} as you will see

766
00:23:41,770 --> 00:23:45,490
0,450 450,810 810,1500 1920,2550 2760,3720
later in the {} {lab,3},|
|

767
00:23:45,550 --> 00:23:46,900
0,450 450,570 570,810 810,1080 1080,1350
actually it turns out that
实际上，你知道吗，

768
00:23:46,900 --> 00:23:48,820
0,570 600,750 750,1050 1260,1740 1770,1920
the you know what,| you
|你需要做复制，检测复制。

769
00:23:48,820 --> 00:23:51,970
0,120 120,180 180,510 510,1830 2730,3150
need to do duplication, detect

770
00:23:51,970 --> 00:23:53,340
0,570
duplicates.|
|

771
00:24:01,060 --> 00:24:01,930
0,120 120,300 300,600 600,660 660,870
But that's mostly an issue
但这主要是三号实验室的问题，

772
00:24:01,930 --> 00:24:03,130
0,120 120,600 660,900 900,1050 1050,1200
for {lab,3},| so it's not
|所以这不会是目前的主要问题，

773
00:24:03,130 --> 00:24:04,330
0,120 120,180 180,420 420,930 930,1200
going to be a main

774
00:24:04,330 --> 00:24:05,260
0,240 240,360 360,630 630,750 750,930
issue for now,| but it's
|但重要的是要知道你知道这是一种普通的风格

775
00:24:05,260 --> 00:24:06,730
0,360 360,420 420,930 960,1260 1260,1470
important to know {you,know} that

776
00:24:06,730 --> 00:24:07,780
0,390 390,510 510,750 750,930 930,1050
this is the sort of

777
00:24:07,780 --> 00:24:10,210
0,390 390,1110 1290,1800 1800,2310 2310,2430
general style| in which you
|你知道人们实际上会使用RAFT来构建一个复制的状态机。

778
00:24:10,210 --> 00:24:11,830
0,270 270,570 570,780 780,1170 1170,1620
know one would actually use

779
00:24:11,830 --> 00:24:13,060
0,30 60,690 690,750 750,1140 1140,1230
{} raft to build a

780
00:24:13,060 --> 00:24:15,700
0,390 390,600 600,930
replicated state machine.|
|

781
00:24:18,940 --> 00:24:21,670
0,360 360,1170 1320,1890 1890,2160 2160,2730
Any questions about sort of
关于如何将RAFT用于复制状态机，有什么问题吗？

782
00:24:21,970 --> 00:24:22,990
0,270 270,360 360,600 600,870 870,1020
how to use raft for

783
00:24:22,990 --> 00:24:24,560
0,390 390,600 600,1080
replicated state machines?|
|

784
00:24:25,090 --> 00:24:25,600
0,90 90,180 180,210 210,450 450,510
We have a question in
我们在聊天中有一个问题。

785
00:24:25,600 --> 00:24:27,480
0,90 90,450 720,1410
the chat.| Yeah.|
|嗯。|

786
00:24:28,230 --> 00:24:29,100
0,330 330,450 450,510 510,570 570,870
{} What is {} typical
联系领导的客户通常有多少？

787
00:24:29,100 --> 00:24:31,440
0,360 360,570 570,1170 1170,1770 1770,2340
number of clients contacting the

788
00:24:31,440 --> 00:24:33,560
0,540 870,1530
leader? {}|
|

789
00:24:34,380 --> 00:24:36,060
0,1020 1140,1380 1380,1470 1470,1590 1590,1680
{} Well, there could be
嗯，可能会有很多，

790
00:24:36,060 --> 00:24:37,470
0,330 330,510 510,720 720,930 930,1410
many,| there's no real limit
|它没有真正的限制，

791
00:24:37,830 --> 00:24:40,260
0,1020 1020,1350 1350,1650 1650,1890 1890,2430
{} on it,| {} what
|你会看到，你知道这可能是一台机器可以[意味着]的情况，

792
00:24:40,260 --> 00:24:41,190
0,180 180,600 600,690 690,810 810,930
you'll see you know it

793
00:24:41,190 --> 00:24:41,820
0,120 120,180 180,270 270,510 510,630
could be the case that

794
00:24:41,820 --> 00:24:43,440
0,90 90,660 660,1140 1140,1410 1410,1620
a single machine can [mean],|
|

795
00:24:43,440 --> 00:24:44,490
0,240 240,390 390,840 840,990 990,1050
maybe that's implicitly, but the
也许这是含蓄的，但问题是，

796
00:24:44,490 --> 00:24:45,870
0,330 330,510 690,1110 1110,1260 1260,1380
question is,| {} it could
|这可能是一个领导者无法容忍的情况，他们没有能力处理这么多客户

797
00:24:45,870 --> 00:24:46,410
0,90 90,150 150,360 360,480 480,540
be the case that a

798
00:24:46,410 --> 00:24:48,510
0,360 360,960 960,1140 1140,1560 1560,2100
single leader can not tolerate,

799
00:24:48,510 --> 00:24:51,390
0,570 1470,1590 1590,1950 2070,2790 2790,2880
the is not capable of

800
00:24:51,390 --> 00:24:52,770
0,390 390,570 570,750 750,1230 1230,1380
handling that many clients| and
|因此，接下来会发生的是

801
00:24:52,770 --> 00:24:55,080
0,450 630,1140 1140,1650 1650,1980 1980,2310
so, {} what happens then

802
00:24:55,080 --> 00:24:56,520
0,240 240,360 360,840 840,1050 1050,1440
is that| basically the servers
|基本上，服务器会被分片，

803
00:24:56,520 --> 00:24:58,710
0,180 180,570 600,930 930,1320 1320,2190
gets sharded,| {you,know} shard {key-value
|您知道多个RAFT组中的碎片Key-Value服务器，

804
00:24:58,710 --> 00:25:00,690
0,270 270,690 690,870 870,1560 1560,1980
-} servers in multiple raft

805
00:25:00,690 --> 00:25:03,030
0,480 1110,1320 1320,1710 1710,2010 2010,2340
groups,| so {for,example} shard one
|例如，碎片1将是一个浮筏实例，

806
00:25:03,030 --> 00:25:04,500
0,180 180,240 240,510 510,840 840,1470
would be one raft instance,|
|

807
00:25:04,530 --> 00:25:06,630
0,420 420,660 660,1170 1170,1740 1770,2100
shard two {is,one,raft} instance,| shard
碎片2是一个木筏实例，|碎片3是一个浮筏实例

808
00:25:06,630 --> 00:25:08,070
0,480 480,810 810,1260 1260,1380 1380,1440
{three,is,one} raft instance| and the
|以及客户端与适当的碎片进行对话以应用其操作

809
00:25:08,070 --> 00:25:09,270
0,360 360,540 540,840 840,960 960,1200
clients to talk to the

810
00:25:09,300 --> 00:25:13,500
0,750 1050,1920 1950,2700 2700,3960 3990,4200
appropriate {} shard to to

811
00:25:13,500 --> 00:25:14,940
0,270 270,450 450,1020 1020,1140 1140,1440
apply their operations| and {in,that}
|通过这种方式，我们可以将服务器扩展到许多客户端

812
00:25:14,940 --> 00:25:17,070
0,330 330,720 750,870 870,1620 1830,2130
way we can scale {}

813
00:25:17,070 --> 00:25:18,390
0,150 150,600 600,720 720,930 930,1320
the server to many clients|
|

814
00:25:18,390 --> 00:25:18,960
0,90 90,150 150,360 360,480 480,570
and in fact that is
事实上，这就是实验室4所做的。

815
00:25:18,960 --> 00:25:20,380
0,180 180,450 450,750 750,1170
what lab 4 does.|
|

816
00:25:22,760 --> 00:25:23,930
0,240 240,390 390,540 540,660 660,1170
{} How does the client
客户如何知道在旧领导失败后如何与新领导沟通？

817
00:25:23,930 --> 00:25:25,280
0,390 390,600 600,690 690,1200 1200,1350
know how to communicate with

818
00:25:25,280 --> 00:25:26,210
0,90 90,300 300,630 630,870 870,930
the new leader after the

819
00:25:26,210 --> 00:25:28,160
0,180 180,390 390,1050 1200,1560 1560,1950
old leader fails?| {} {The,client}
|客户端基本上具有系统中所有服务器的列表，

820
00:25:28,160 --> 00:25:29,360
0,300 300,510 510,570 570,1020 1050,1200
basically has a list of

821
00:25:29,360 --> 00:25:30,740
0,240 240,390 390,1020 1020,1200 1200,1380
all the servers that are

822
00:25:30,740 --> 00:25:32,360
0,120 120,240 240,600 1020,1440 1440,1620
in the system,| so in
|所以在这种情况下，

823
00:25:32,360 --> 00:25:33,290
0,150 150,450 450,570 570,780 780,930
this case,| we're running with
|我们运行的是三台服务器，

824
00:25:33,290 --> 00:25:34,760
0,120 120,720 720,1050 1050,1350 1350,1470
three servers,| everybody agrees there
|每个人都同意世界上只有三台服务器，

825
00:25:34,760 --> 00:25:36,050
0,210 210,660 660,750 750,840 840,1290
only {three,servers} in the world,|
|

826
00:25:36,200 --> 00:25:37,160
0,390 390,510 510,720 720,810 810,960
clients know about the three
客户端了解这三台服务器

827
00:25:37,160 --> 00:25:39,500
0,570 840,1560 1560,1980 1980,2190 2190,2340
servers| and {} did they
|他们是不是随机试了一次，

828
00:25:39,500 --> 00:25:42,320
0,270 270,570 570,1230 1470,2010 2010,2820
try one randomly,| {} if
|如果这不是客户端，它将重定向，这不是领导者，

829
00:25:42,320 --> 00:25:43,220
0,240 240,300 300,480 480,540 540,900
that is not the client,

830
00:25:43,220 --> 00:25:44,750
0,150 150,300 300,1140 1140,1380 1380,1530
it will redirect, that's not

831
00:25:44,750 --> 00:25:46,130
0,90 90,660 660,810 810,990 990,1380
the leader,| it will redirect
|它会将客户端重定向到适当的人，即实际的领导者。

832
00:25:46,130 --> 00:25:47,600
0,60 60,450 450,540 540,840 840,1470
the client to the appropriate

833
00:25:47,600 --> 00:25:49,040
0,240 240,390 390,780 780,1110
one, the actual leader.|
|

834
00:25:51,040 --> 00:25:52,060
0,360 390,480 480,690 690,810 810,1020
Yeah the answer is quite
是的，答案很清楚。

835
00:25:52,060 --> 00:25:53,300
0,660
clear.|
|

836
00:25:53,890 --> 00:25:54,970
0,390 390,480 480,660 660,1020 1020,1080
But do we assume the
但我们是否认为这些服务器在地理位置上是相近的，

837
00:25:54,970 --> 00:25:56,740
0,360 360,540 540,750 750,1200
servers are like in

838
00:25:56,860 --> 00:25:58,840
0,120 120,750 750,1320 1320,1650 1650,1980
{} geographically close,| like close
|就像彼此很亲近，或者他们很亲近。

839
00:25:58,840 --> 00:26:00,190
0,90 90,180 180,450 450,750 780,1350
to each other or they

840
00:26:00,280 --> 00:26:01,660
0,180 180,450 450,750 750,900 900,1380
are.| They could in principle
|原则上他们可能相距甚远，

841
00:26:01,660 --> 00:26:03,310
0,150 150,420 420,960 1050,1470 1470,1650
be far apart,| {} there's
|在那一边没有真正的限制，

842
00:26:03,310 --> 00:26:05,320
0,270 270,1200 1200,1710 1710,1800 1800,2010
no real restriction on that

843
00:26:05,320 --> 00:26:06,970
0,420 690,930 930,1050 1050,1410 1410,1650
side,| {} the only issue
|当然，唯一的问题是，如果它服务于世界各地的公平传播，

844
00:26:06,970 --> 00:26:08,710
0,60 60,330 330,1080 1110,1440 1440,1740
of course if it serves

845
00:26:08,710 --> 00:26:09,880
0,90 90,330 330,690 690,1050 1050,1170
a fair spread around the

846
00:26:09,880 --> 00:26:11,740
0,480 690,870 870,1020 1020,1650 1650,1860
world,| {} the delays to
|实际进入日志记录的延迟是附加的，

847
00:26:11,740 --> 00:26:14,050
0,600 600,840 840,1200 1410,1890 1890,2310
actually get in a log

848
00:26:14,080 --> 00:26:15,730
0,600 600,1080 1080,1230 1230,1500 1500,1650
record append,| {you,know} will take
|你知道，这需要一段时间，

849
00:26:15,730 --> 00:26:16,780
0,60 60,240 240,630
a little while,|
|

850
00:26:16,840 --> 00:26:18,010
0,240 240,450 450,570 570,990 990,1170
and so the delays will
因此，延误将是很长的。

851
00:26:18,010 --> 00:26:19,000
0,90 90,420
be long.|
|

852
00:26:22,750 --> 00:26:24,220
0,420 420,630 630,780 780,1080 1080,1470
What is the log entry
KV存储中正在执行的日志条目是什么？

853
00:26:24,220 --> 00:26:26,260
0,330 330,1110 1110,1470 1470,1590 1590,2040
being executed in the kv

854
00:26:26,260 --> 00:26:27,520
0,750
storage?|
|

855
00:26:27,690 --> 00:26:30,480
0,750 750,1290 1320,1860 1860,2070 2070,2790
When, {} once it's committed
一旦它被木筏放进去，

856
00:26:31,080 --> 00:26:32,760
0,270 270,570 570,840 840,1380 1410,1680
{} in by raft,| so
|因此，一旦RAFT确定他们都在那里，复制者就收到了它

857
00:26:32,760 --> 00:26:34,230
0,210 210,510 510,690 690,1290 1290,1470
once raft has decided that

858
00:26:34,230 --> 00:26:35,640
0,240 240,600 600,750 750,990 990,1410
they're all there enough replicates

859
00:26:35,640 --> 00:26:36,990
0,150 150,630 630,810 810,1140 1140,1350
have received it| and it's
|现在，人们不可能不得不退出这一行动，

860
00:26:36,990 --> 00:26:38,400
0,120 120,630 630,840 840,1260 1260,1410
now no way possible that

861
00:26:38,400 --> 00:26:39,390
0,240 240,420 420,510 510,780 780,990
one has to back out

862
00:26:39,390 --> 00:26:41,790
0,90 90,330 330,900 1050,1950 1980,2400
of that operation,| then, {}
|然后，它被送往键值服务器。

863
00:26:41,790 --> 00:26:43,350
0,210 210,930 930,1050 1050,1260 1260,1560
it's headed to the key-value

864
00:26:43,350 --> 00:26:44,240
0,420
server.|
|

865
00:26:45,560 --> 00:26:46,550
0,150 150,300 300,420 420,780 780,990
{} So the leader will
所以领导者会首先执行这个命令

866
00:26:46,550 --> 00:26:49,010
0,570 600,1170 1170,1770 1770,1980 1980,2460
first like execute this command|
|

867
00:26:49,010 --> 00:26:50,570
0,210 210,450 510,990 990,1140 1140,1560
and the leader will tell
首领会告诉追随者这个命令已经完成

868
00:26:50,570 --> 00:26:51,950
0,150 150,660 660,870 870,1050 1050,1380
the followers that this command

869
00:26:51,950 --> 00:26:53,090
0,120 120,660 660,870 870,1050 1050,1140
is committed| and then the
|然后这位追随者打来电话。

870
00:26:53,090 --> 00:26:56,780
0,480 870,1350 1350,2070 2070,3480 3480,3690
follower called.| {The,leader,knows}, {well,as,soon,as} the
|一旦行动开始，领导就知道了

871
00:26:56,780 --> 00:26:58,340
0,420 420,810 810,1140 1140,1290 1290,1560
operations committed| actually get handed
|实际上是从键值服务器获得的。

872
00:26:58,340 --> 00:26:59,690
0,150 150,240 240,630 630,960 960,1350
off the {key-value -} server.|
|

873
00:26:59,720 --> 00:27:01,070
0,210 210,480 480,1050 1050,1200 1200,1350
Let me, let's talk about
让我，我们现在谈一谈，

874
00:27:01,070 --> 00:27:02,750
0,60 60,240 240,450 840,1230 1230,1680
it right now,| {} I'll
|我将在我们进行的过程中更详细地介绍，

875
00:27:02,750 --> 00:27:03,680
0,180 180,240 240,390 390,810 810,930
go in more detail as

876
00:27:03,680 --> 00:27:06,050
0,90 90,420 870,1470 1470,1920 2070,2370
we go,| {} so like
|因此，我想更多地了解协议的概况。

877
00:27:06,050 --> 00:27:06,980
0,330 330,420 420,510 510,840 840,930
more of an overview of

878
00:27:06,980 --> 00:27:09,380
0,90 90,630 630,1050 1320,2010 2010,2400
the protocol.| So previous board
|上一篇文章概述了如何使用RAFT构建复制状态机，

879
00:27:09,380 --> 00:27:10,370
0,120 120,270 270,360 360,450 450,990
was sort of an overview

880
00:27:10,370 --> 00:27:12,290
0,420 450,900 900,1200 1200,1410 1410,1920
of how you use raft

881
00:27:12,440 --> 00:27:13,850
0,120 120,480 480,780 780,1170 1170,1410
to build a replicated state

882
00:27:13,850 --> 00:27:15,230
0,540 660,900 900,1110 1110,1290 1290,1380
machine,| now let's look at
|现在让我们更详细地看看木筏本身。

883
00:27:15,230 --> 00:27:17,090
0,600 630,960 960,1560 1590,1710 1710,1860
the raft itself a little

884
00:27:17,090 --> 00:27:18,620
0,180 180,360 360,750 750,1050 1170,1530
bit more detail.| So we
|所以我们这里有一些时间表，有一个领导者，我们有两个追随者。

885
00:27:18,620 --> 00:27:20,240
0,270 270,450 450,1200 1290,1560 1560,1620
here some timelines, got a

886
00:27:20,240 --> 00:27:21,140
0,600
leader,

887
00:27:21,510 --> 00:27:23,400
0,240 240,480 480,600 600,1350
we got two followers.|
|

888
00:27:24,670 --> 00:27:25,930
0,240 240,360 360,630 630,720 720,1260
So we're running {} three,
所以我们运行了三个，客户与领导交谈，

889
00:27:26,260 --> 00:27:27,970
0,570 570,1110 1110,1320 1320,1590 1590,1710
{} {the,client} to talk to

890
00:27:27,970 --> 00:27:29,380
0,120 120,720
the leader,|
|

891
00:27:29,380 --> 00:27:31,520
0,750 900,1530
{} the
领队有一根木头，

892
00:27:32,510 --> 00:27:33,860
0,390 390,570 570,660 660,1230 1260,1350
leader has a log,| you
|你知道所有的放和取操作，

893
00:27:33,860 --> 00:27:35,780
0,270 270,1020
know {all,the}

894
00:27:35,870 --> 00:27:37,430
0,360 360,600 600,1380 1380,1470 1470,1560
{put,and} get operations,| you know
|你知道，当它换了新的，

895
00:27:37,430 --> 00:27:38,000
0,120 120,180 180,360 360,420 420,570
when it gets a new

896
00:27:38,000 --> 00:27:39,320
0,480 510,630 630,750 750,1020 1020,1320
one,| you know appends it
|你知道，把它附加到日志的末尾，

897
00:27:39,320 --> 00:27:39,950
0,90 90,150 150,390 390,540 540,630
you know {to,the} end of

898
00:27:39,950 --> 00:27:41,160
0,90 90,660
the log,|
|

899
00:27:41,890 --> 00:27:43,840
0,600 660,870 870,1230 1230,1560 1560,1950
then it actually sends it,|
然后它真的会发送信息，|

900
00:27:43,990 --> 00:27:44,890
0,150 150,300 300,540 540,630 630,900
you know sends the log
您知道，将日志条目发送到新的日志条目，然后将新日志条目发送给追随者。

901
00:27:44,890 --> 00:27:46,920
0,570 720,1440
entries to

902
00:27:47,640 --> 00:27:48,660
0,150 150,330 330,600 600,840 840,1020
the new log {entries -

903
00:27:48,660 --> 00:27:50,440
0,240 240,420 420,510 510,1140
-} to the followers.|
|

904
00:27:56,000 --> 00:27:57,290
0,570 570,690 690,780 780,990 990,1290
And you know let's say
比方说你知道追随者2，

905
00:27:57,290 --> 00:27:58,490
0,120 120,270 270,480 480,900 900,1200
you know that follower 2,|
|

906
00:27:58,490 --> 00:27:59,960
0,180 180,540 540,870 870,1050 1050,1470
here follower 1, here follower
这里是追随者1，这里是追随者2，

907
00:27:59,960 --> 00:28:01,820
0,240 240,540 540,840 840,1410 1410,1860
2,| follower 1 actually received
|跟随者1实际上接收到该日志条目，

908
00:28:01,820 --> 00:28:03,020
0,120 120,360 360,810 810,1080 1080,1200
this log entry,| everything is
|一切都很好，

909
00:28:03,020 --> 00:28:04,070
0,390 390,600 600,900 900,960 960,1050
okay,| {appends -} at the
|附加在日志的末尾，

910
00:28:04,070 --> 00:28:05,450
0,120 120,210 210,300 300,840 1170,1380
end of the log, {}|
|

911
00:28:05,450 --> 00:28:06,980
0,210 210,570 570,1080 1080,1200 1200,1530
it sends basically an act
它基本上是发回一个动作，说是的，你知道我附加了它。

912
00:28:06,980 --> 00:28:08,120
0,270 270,480 480,900 900,1020 1020,1140
back, saying yes you know

913
00:28:08,120 --> 00:28:09,500
0,240 240,540 540,900
I appended it.|
|

914
00:28:09,500 --> 00:28:10,940
0,150 150,210 210,390 390,900 1140,1440
And at this point in
在RAFT中的这一点上，世界上的两个服务器实际上有日志条目

915
00:28:10,940 --> 00:28:16,280
0,3090 3090,3600 3630,3900 3900,4650 4680,5340
{the,raft,the} world {} two {}

916
00:28:16,280 --> 00:28:17,930
0,330 330,390 390,660 660,1290 1320,1650
{servers -} actually have the

917
00:28:17,930 --> 00:28:20,510
0,300 300,780 1260,1740 1740,2190 2190,2580
log entry| and so raft
|因此，实际上领导者可以实际提交日志条目

918
00:28:20,510 --> 00:28:21,800
0,570 570,720 720,960 960,1080 1080,1290
actually the leader can actually

919
00:28:21,800 --> 00:28:24,710
0,480 510,900 900,1200 2040,2400 2400,2910
commit {the,log} entry| and so
|因此，在这一点上，你知道领导实际上可以移交刚刚收到的请求，

920
00:28:24,860 --> 00:28:26,000
0,270 270,420 420,930 930,1020 1020,1140
at this point you know

921
00:28:26,000 --> 00:28:29,120
0,450 690,1530 2070,2700
the {} the

922
00:28:29,500 --> 00:28:31,330
0,660 690,1200 1200,1320 1320,1590 1590,1830
the leader can actually hand

923
00:28:31,330 --> 00:28:32,800
0,240 240,420 420,1020 1020,1290 1290,1470
off that request just {}

924
00:28:32,800 --> 00:28:33,880
0,450 450,570 570,690 690,960 960,1080
received,| that can actually hand
|这实际上可以将其移交给KV服务器。

925
00:28:33,880 --> 00:28:34,750
0,90 90,360 360,450 450,540 540,870
it off to the {kv

926
00:28:34,750 --> 00:28:35,960
0,270 270,630
-} server.|
|

927
00:28:36,800 --> 00:28:37,880
0,360 360,450 450,690 690,990 990,1080
And the way actually the
实验室实际执行此操作的方式或此实验基础架构执行此操作的方式是

928
00:28:37,880 --> 00:28:39,080
0,300 300,510 510,750 750,840 840,1200
lab does this or this

929
00:28:39,110 --> 00:28:40,610
0,450 450,960 960,1200 1200,1410 1410,1500
lab infrastructure does this is|
|

930
00:28:40,610 --> 00:28:42,350
0,150 150,690 750,1080 1080,1440 1440,1740
that basically we have a
基本上我们有一个频道GO频道，

931
00:28:42,350 --> 00:28:44,960
0,570 570,870 870,1470 1710,2280 2280,2610
channel Go channel,| {} one
|一个单一的GO频道基本上是RAFT Goroutines

932
00:28:44,960 --> 00:28:47,540
0,270 270,450 450,990 1200,1860 1860,2580
single Go channel were basically

933
00:28:47,570 --> 00:28:49,850
0,840 840,1020 1020,1740 1920,2220 2220,2280
Raft {Goroutines -}| and the
|而救生艇Goroutine实际上决定了一个特定的行动已经完成，

934
00:28:49,850 --> 00:28:51,260
0,270 270,390 390,690 690,990 990,1410
Raft {Goroutine -} actually decide

935
00:28:51,260 --> 00:28:53,090
0,150 150,180 180,900 900,1740 1740,1830
that a particular operation is

936
00:28:53,090 --> 00:28:54,830
0,480 630,780 780,1230 1230,1500 1500,1740
committed,| it just sends that
|它只是在应用通道上发送操作，

937
00:28:54,830 --> 00:28:57,230
0,570 570,930 930,1530 1620,2040 2040,2400
operation on the {} apply

938
00:28:57,230 --> 00:28:58,460
0,540 630,810 810,990 990,1080 1080,1230
channel,| so that the {key-value
|以便键值服务器可以实际应用它。

939
00:28:58,460 --> 00:28:59,750
0,300 300,630 630,900 900,990 990,1290
-} server {can,actually -} apply

940
00:28:59,750 --> 00:29:00,420
0,300
it.|
|

941
00:29:01,610 --> 00:29:03,320
0,210 210,360 360,510 510,1080 1110,1710
{You,know} some point later, so
你知道以后的某一点，所以注意这一点，

942
00:29:03,350 --> 00:29:05,630
0,480 480,540 540,720 720,1230 1350,2280
notice at this point,| the
|领导人基本上已经承诺了行动，

943
00:29:05,870 --> 00:29:08,060
0,840 870,1110 1110,1470 1470,1860 1860,2190
leader {basically -} has committed

944
00:29:08,060 --> 00:29:10,190
0,120 120,810 1080,1650 1650,2010 2010,2130
the operation,| {} and it's
|头目进行这次行动是绝对安全的，

945
00:29:10,190 --> 00:29:11,480
0,300 300,750 750,900 900,990 990,1290
perfectly safe for the leader

946
00:29:11,480 --> 00:29:13,310
0,390 390,720 720,1020 1020,1140 1140,1830
to {} commit this operation,|
|

947
00:29:13,490 --> 00:29:15,440
0,510 510,570 570,1200 1200,1500 1500,1950
because the majority of the
因为大多数服务器，实际上大多数对等点都已经收到了操作，对吗，

948
00:29:15,470 --> 00:29:17,030
0,540 540,990 990,1410 1410,1500 1500,1560
servers, actually majority of the

949
00:29:17,030 --> 00:29:18,380
0,390 390,480 480,720 720,870 870,1350
{peers -} actually have received

950
00:29:18,380 --> 00:29:19,910
0,120 120,600 600,810 810,1140 1140,1530
the operation, correct,| {so,there} even
|所以即使有一次失败

951
00:29:19,910 --> 00:29:21,110
0,150 150,270 270,480 480,570 570,1200
if there was a failure|
|

952
00:29:21,500 --> 00:29:22,460
0,300 300,420 420,720 720,750 750,960
and we elect a new
我们选举一位新的领导人，

953
00:29:22,460 --> 00:29:24,290
0,540 780,990 990,1290 1290,1380 1380,1830
leader,| {} that's the case
|在这种情况下，领导者是其中一个服务器，

954
00:29:24,290 --> 00:29:25,640
0,180 180,390 390,900 900,1050 1050,1350
that that leader are one

955
00:29:25,640 --> 00:29:26,420
0,90 90,180 180,540 540,690 690,780
of the servers,| that is
|那就是剩下的实际上是最后一次操作，

956
00:29:26,420 --> 00:29:28,220
0,600 660,1020 1020,1380 1380,1470 1470,1800
remaining actually has the last

957
00:29:28,220 --> 00:29:31,310
0,750 840,1320 1320,2460 2520,3000 3000,3090
operation,| that was appended to
|这是由前领导人附加到日志中的。

958
00:29:31,310 --> 00:29:32,600
0,90 90,450 450,690 690,930 930,1290
the log by the previous

959
00:29:32,600 --> 00:29:33,280
0,330
leader.|
|

960
00:29:33,730 --> 00:29:35,620
0,270 270,570 570,660 660,1050 1380,1890
So everything is good,| of
所以一切都很好，|当然，最后一个人，第一个追随者也会在某个时候做出回应，你知道的，同意了。

961
00:29:35,620 --> 00:29:37,090
0,270 270,390 390,690 690,1110 1140,1470
course the last guy, the

962
00:29:37,090 --> 00:29:38,560
0,240 240,840 840,1260 1260,1350 1350,1470
first follower also at some

963
00:29:38,560 --> 00:29:40,900
0,360 450,570 570,1200 1320,1800 2100,2340
point {} respond and {you,know}

964
00:29:40,900 --> 00:29:42,160
0,240 240,780
said yes.|
|

965
00:29:42,720 --> 00:29:45,120
0,180 180,360 360,930 1170,2010 2130,2400
So this point, basically from
所以这一点，基本上从领导者的角度来讲，

966
00:29:45,120 --> 00:29:45,810
0,90 90,300 300,390 390,600 600,690
the point of view of

967
00:29:45,810 --> 00:29:47,400
0,90 90,450 450,540 540,1050 1050,1590
the leader,| the operations committed,
|所做的行动，只是追随者还不知道，

968
00:29:47,580 --> 00:29:49,050
0,630 630,720 720,1110 1110,1290 1290,1470
except the followers don't really

969
00:29:49,050 --> 00:29:50,220
0,210 210,330 330,690
know it yet,|
|

970
00:29:50,220 --> 00:29:51,360
0,330 330,390 390,870 870,960 960,1140
because the followers you know,
因为你知道的追随者，他们只知道他们得到了它

971
00:29:51,360 --> 00:29:53,160
0,660 660,900 900,1140 1140,1410 1410,1800
they only know that they

972
00:29:53,160 --> 00:29:54,600
0,270 270,540 810,1200 1200,1350 1350,1440
got it| and that the
|领导者很可能拥有这种能力，

973
00:29:54,600 --> 00:29:56,610
0,330 330,600 600,840 840,1080 1410,2010
leader probably has it, {}|
|

974
00:29:56,850 --> 00:29:58,230
0,240 240,600 600,720 720,870 870,1380
but they you know they
但他们你知道他们并不真正了解，

975
00:29:58,230 --> 00:29:59,460
0,180 180,420 420,840 990,1140 1140,1230
don't really know,| and so
|所以实际发生的情况是，

976
00:29:59,460 --> 00:30:00,990
0,240 240,540 540,960 960,1140 1140,1530
what actually happens is that,|
|

977
00:30:01,020 --> 00:30:03,390
0,270 270,450 450,1080 1080,1770 2010,2370
{} the subsequent operation, when
随后的操作，当另一个客户端请求进入时，

978
00:30:03,390 --> 00:30:05,130
0,510 510,840 840,1170 1170,1380 1380,1740
another client request comes in,|
|

979
00:30:05,430 --> 00:30:06,570
0,270 270,420 420,690 690,900 900,1140
{} the leader will append
领导者将追加另一个日志条目

980
00:30:06,570 --> 00:30:08,880
0,300 300,570 570,1080 1290,1800 1860,2310
another log entry| and basically
|基本上向关注者发送一个新的操作或新的附加条目

981
00:30:08,880 --> 00:30:10,350
0,570 570,690 690,750 750,1080 1080,1470
sends you know a new

982
00:30:10,350 --> 00:30:12,930
0,750 750,960 960,1230 1230,1950 2280,2580
operation or new {append,entry} to

983
00:30:12,930 --> 00:30:14,760
0,150 150,780 1050,1230 1230,1500 1500,1830
the followers| and that append
|这个附加条目基本上做了两件事，

984
00:30:14,760 --> 00:30:17,340
0,600 780,1440 1440,1830 1830,2040 2040,2580
entry, does basically two things,|
|

985
00:30:17,400 --> 00:30:19,290
0,450 450,870 870,960 960,1200 1380,1890
{} it you know provides
它为新操作提供新的日志条目，

986
00:30:19,290 --> 00:30:20,580
0,90 90,390 390,720 720,1050 1050,1290
the new log entry for

987
00:30:20,580 --> 00:30:21,900
0,60 60,240 240,840 960,1230 1230,1320
the new operation,| but it
|但它也证实了之前所有的操作顺序

988
00:30:21,900 --> 00:30:23,100
0,300 300,810 810,960 960,1110 1110,1200
also confirms that all the

989
00:30:23,100 --> 00:30:26,070
0,930 930,2130 2130,2400 2460,2880 2880,2970
preceding operations order| tells us
|告诉我们到目前为止实际实施了哪些行动。

990
00:30:26,070 --> 00:30:27,480
0,240 240,690 690,930 930,1050 1050,1410
which operations actually have committed

991
00:30:27,480 --> 00:30:28,380
0,180 180,600
so far.|
|

992
00:30:28,680 --> 00:30:29,730
0,120 120,240 240,450 450,810 810,1050
And so when F1 {and,F2
所以当F1和F2收到这个操作，这个RPC，

993
00:30:29,730 --> 00:30:31,780
0,210 210,780 810,1020 1020,1560
-} receive {you,know} this

994
00:30:32,010 --> 00:30:34,320
0,240 240,930 1170,1530 1530,1710 1710,2310
this operation, this {RPC -},|
|

995
00:30:34,380 --> 00:30:35,610
0,270 270,420 420,840 840,1050 1050,1230
{} they know that the
他们知道这次行动是头目干的

996
00:30:35,610 --> 00:30:37,500
0,510 510,660 660,810 810,1410 1440,1890
operation has been committed by

997
00:30:37,500 --> 00:30:39,090
0,120 120,630 840,1050 1050,1500 1500,1590
the leader| and therefore at
|因此，在这一点上，他们也可以将其传递给他们的键值实例，

998
00:30:39,090 --> 00:30:40,560
0,180 180,510 540,720 720,870 870,1470
that point, they can also

999
00:30:40,620 --> 00:30:42,570
0,660 660,1080 1080,1260 1260,1740 1770,1950
deliver it to their {key-value

1000
00:30:42,570 --> 00:30:43,960
0,390 390,960
-} instance,|
|

1001
00:30:44,240 --> 00:30:45,350
0,210 210,420 420,570 570,690 690,1110
and know that this operation
并且知道这次行动已经完成。

1002
00:30:45,350 --> 00:30:46,440
0,90 90,510
is committed.|
|

1003
00:30:50,460 --> 00:30:53,310
0,360 810,1410 1410,1710 1710,2220 2220,2850
{} I I {had,a,quick,question},| so,
我有一个简短的问题，|因此，当领导者发送操作并得到服务器响应时，

1004
00:30:53,460 --> 00:30:54,660
0,630
{}

1005
00:30:55,060 --> 00:30:57,880
0,600 720,1770 1800,1980 1980,2250 2250,2820
so when the leader sends

1006
00:30:57,880 --> 00:31:00,820
0,120 120,870 1050,1920 1950,2460 2460,2940
an operation over {} and

1007
00:31:00,820 --> 00:31:03,580
0,120 120,840 990,2040 2250,2580 2580,2760
{} server replies,| {} does
|这是不是意味着，这意味着它在日志中，对吧，

1008
00:31:03,580 --> 00:31:05,110
0,150 150,540 570,990 990,1290 1290,1530
that mean, that means it's

1009
00:31:05,110 --> 00:31:07,810
0,90 90,180 180,390 390,990 2130,2700
in the log, right,| but
|但如果你获得了像轻微多数这样的多数会发生什么呢？

1010
00:31:07,930 --> 00:31:09,250
0,270 270,750 750,930 930,1140 1140,1320
what happens if you get

1011
00:31:09,250 --> 00:31:10,960
0,30 30,600 630,900 1020,1320 1320,1710
a majority like a slight

1012
00:31:10,960 --> 00:31:12,400
0,690 720,1020 1020,1140 1140,1380 1380,1440
majority| and then one of
|然后其中一个日志，比如其中一个服务器崩溃，

1013
00:31:12,400 --> 00:31:13,540
0,240 240,690 690,870 870,1080 1080,1140
those logs like one of

1014
00:31:13,540 --> 00:31:15,280
0,150 150,480 480,1260 1440,1650 1650,1740
those servers crash,| like our
|像我们的日志一样，日志必须存储在存储中，就像在磁盘中一样。

1015
00:31:15,280 --> 00:31:16,870
0,720 780,1230 1230,1380 1380,1500 1500,1590
logs, {the,logs} have to be

1016
00:31:16,870 --> 00:31:18,400
0,90 90,750 750,900 900,1020 1020,1530
in storage, like in disk.|
|

1017
00:31:18,550 --> 00:31:20,020
0,450 570,960 960,1140 1140,1260 1260,1470
Yep, so that's a very
是的，这是一个非常好的问题，对吧，

1018
00:31:20,020 --> 00:31:22,120
0,120 120,480 480,840 840,1680 1710,2100
good question, correct,| the every
|日志的每一次更改，

1019
00:31:22,120 --> 00:31:23,800
0,450 450,570 570,690 690,1200 1440,1680
change to the log,| so
|所以你仔细看看这张木筏纸，

1020
00:31:23,800 --> 00:31:24,970
0,570 570,750 750,840 840,930 930,1170
you look at the Raft

1021
00:31:24,970 --> 00:31:27,640
0,240 240,330 330,780 1080,1890 2070,2670
paper in detail,| the some
|有些状态是必须稳定的，

1022
00:31:27,640 --> 00:31:29,800
0,630 630,990 990,1650 1740,2070 2070,2160
state is {} must be

1023
00:31:29,800 --> 00:31:30,640
0,480
stable,|
|

1024
00:31:30,890 --> 00:31:31,850
0,360 360,420 420,690 690,780 780,960
and the log is one
日志是那些信息之一，它必须是稳定的，

1025
00:31:31,850 --> 00:31:32,900
0,60 60,270 270,540 540,630 630,1050
of those pieces of information,

1026
00:31:32,900 --> 00:31:33,980
0,120 120,330 330,420 420,930 930,1080
that must be stable,| as
|以及术语编号和一大堆其他东西。

1027
00:31:33,980 --> 00:31:35,330
0,210 210,330 330,420 420,720 720,1350
well as the term number

1028
00:31:35,330 --> 00:31:36,170
0,330 330,390 390,600 600,660 660,840
and a bunch of other

1029
00:31:36,170 --> 00:31:37,120
0,450
things.|
|

1030
00:31:37,180 --> 00:31:38,530
0,270 270,690 750,990 990,1050 1050,1350
And so if a server
因此，如果服务器崩溃，

1031
00:31:38,530 --> 00:31:41,440
0,660 1020,1680 1710,1860 1860,2190 2220,2910
crashes,| {} no big, no
|不是什么大事，真的不是什么大事，

1032
00:31:41,440 --> 00:31:42,850
0,180 180,450 450,870 870,1320 1320,1410
big deal really,| because you
|因为您知道大多数服务器的磁盘上都有该条目，

1033
00:31:42,850 --> 00:31:43,810
0,180 180,300 300,810 810,870 870,960
know the majority of the

1034
00:31:43,810 --> 00:31:45,640
0,390 390,690 690,990 990,1500 1500,1830
servers does have that entry

1035
00:31:45,640 --> 00:31:46,860
0,210 210,360 360,780
on their disk,|
|

1036
00:31:47,650 --> 00:31:48,760
0,300 300,570 570,750 750,900 900,1110
and when they come back
当他们回来的时候，他们会找到的。

1037
00:31:48,760 --> 00:31:50,180
0,210 210,450 450,660 660,870
up, they'll find it.|
|

1038
00:31:53,160 --> 00:31:54,990
0,330 330,510 510,510 510,1290 1440,1830
I have a question?| Yeah.|
我有个问题吗？|嗯。|

1039
00:31:55,110 --> 00:31:57,540
0,690 690,1350 1350,2040 2040,2370 2370,2430
So what happens if for
那么，如果跟随者1回答是并随后提交，会发生什么情况，

1040
00:31:57,540 --> 00:32:00,120
0,840 870,1200 1200,1680 1680,2040 2040,2580
example {} follower one replies

1041
00:32:00,120 --> 00:32:02,070
0,180 180,630 660,1080 1080,1380 1380,1950
with yes and later commits,|
|

1042
00:32:03,240 --> 00:32:05,340
0,660 750,1080 1080,1410 1410,1530 1530,2100
{} just before it sends
就在它向其余追随者发送下一个命令以提交之前，它崩溃了，

1043
00:32:05,400 --> 00:32:07,470
0,420 450,1140 1350,1920 1920,2010 2010,2070
the next command to the

1044
00:32:07,470 --> 00:32:09,570
0,360 360,900 900,1200 1200,1500 1500,2100
remaining followers to also commit,

1045
00:32:09,570 --> 00:32:11,670
0,600 870,1680 1680,1830 1830,1860 1860,2100
{it,crashes},| now there are many
|现在有很多追随者不知道他们需要承诺，

1046
00:32:11,670 --> 00:32:13,020
0,450 450,750 750,930 930,1230 1230,1350
followers don't know that they

1047
00:32:13,020 --> 00:32:13,950
0,210 210,270 270,570 570,840 840,930
need to commit,| because the
|因为领袖已经坠毁了，

1048
00:32:13,950 --> 00:32:15,380
0,210 210,420 420,960
leader has crashed,|
|

1049
00:32:15,880 --> 00:32:18,160
0,900 930,1230 1230,1380 1380,1680 1680,2280
so wouldn't this cause problems?|
那么，这不会带来问题吗？|

1050
00:32:18,490 --> 00:32:20,230
0,270 270,420 420,930 960,1500 1500,1740
They will commit,| because one
他们会承诺，|因为一个关注者会把它记在日志里

1051
00:32:20,230 --> 00:32:21,430
0,510 510,720 720,990 990,1110 1110,1200
follower will have it in

1052
00:32:21,430 --> 00:32:23,020
0,180 180,630 900,1350 1350,1470 1470,1590
its log| and as we'll
|正如我们将在领导人选举规则中看到的那样，

1053
00:32:23,020 --> 00:32:24,100
0,180 180,240 240,360 360,660 660,1080
see in the leader election

1054
00:32:24,100 --> 00:32:25,330
0,510 510,660 660,810 810,1110 1110,1230
rules,| it will become the
|它将成为领头羊，

1055
00:32:25,330 --> 00:32:26,300
0,480
leader,|
|

1056
00:32:26,480 --> 00:32:29,150
0,840 840,1560 1560,2040 2040,2190 2190,2670
and {} it will propagate
它会将您知道的附加条目传播到其他服务器

1057
00:32:29,150 --> 00:32:30,230
0,180 180,420 420,870 870,960 960,1080
that append entry you know

1058
00:32:30,230 --> 00:32:31,730
0,240 240,360 360,810 810,1320 1320,1500
to the other servers| and
|然后他们也会申请。

1059
00:32:31,730 --> 00:32:32,810
0,180 180,360 360,510 510,840 840,1080
then they will apply too.|
|

1060
00:32:34,010 --> 00:32:35,690
0,240 240,330 330,660 840,1200 1320,1680
Okay, I see, okay, thanks.|
好的，我明白了，好的，谢谢。|

1061
00:32:37,090 --> 00:32:37,870
0,240 240,330 330,450 450,660 660,780
OK, so that brings me
好的，这给我带来了一个很好的下一个话题的片段，

1062
00:32:37,870 --> 00:32:39,070
0,360 360,780 780,840 840,930 930,1200
maybe this is a good

1063
00:32:39,730 --> 00:32:41,050
0,450 450,540 540,630 630,870 870,1320
segue to the next topic,|
|

1064
00:32:41,050 --> 00:32:43,600
0,420 420,1050 1260,1920
why logs, {}
为什么日志，最后三个问题都是关于这个的。

1065
00:32:44,620 --> 00:32:46,840
0,630 690,1230 1230,1530 1710,1950 1950,2220
{last,three} questions are all about

1066
00:32:46,840 --> 00:32:49,030
0,330 510,780 780,1290 1380,1950 1950,2190
that.| Yeah.| I actually as
|嗯。|实际上，作为最后一个问题的后续问题，

1067
00:32:49,030 --> 00:32:49,990
0,60 60,420 420,510 510,630 630,960
a follow-up to the last

1068
00:32:49,990 --> 00:32:52,300
0,600 780,1230 1260,1740 1770,1950 1950,2310
question,| {} so the server
|因此，服务器在发生共识崩溃后崩溃，

1069
00:32:52,300 --> 00:32:54,370
0,840 900,1470 1470,1560 1560,1920 1920,2070
crashing after it has like

1070
00:32:54,370 --> 00:32:55,660
0,780
consensus

1071
00:32:55,660 --> 00:32:57,240
0,990
crashing,|
|

1072
00:32:57,300 --> 00:32:59,400
0,540 540,780 780,990 990,1380 1380,2100
right, like right before committing,|
对，就像在承诺之前，|

1073
00:32:59,990 --> 00:33:02,930
0,240 240,600 600,1200 1350,1920 2250,2940
it could delay committing, right?|
这可能会推迟承诺，对吗？|

1074
00:33:02,930 --> 00:33:03,740
0,360 360,420 420,540 540,720 720,810
What do you mean with
你说承诺是什么意思？

1075
00:33:03,740 --> 00:33:07,020
0,540 930,1350 1380,2010 2160,2730
committed?| So so, {}
|所以，就像在它获得多数之后，就改变达成共识之后，

1076
00:33:07,230 --> 00:33:09,000
0,510 510,870 870,990 990,1200 1200,1770
like after it has consensus

1077
00:33:09,000 --> 00:33:10,080
0,60 60,150 150,480 480,660 660,1080
on a change right after

1078
00:33:10,080 --> 00:33:12,360
0,60 60,180 180,270 270,960 1680,2280
it has a majority, {}|
|

1079
00:33:13,180 --> 00:33:15,640
0,330 630,960 990,1710 1710,2160 2280,2460
and it can like the
它可以像报纸上说的那样，你[]你基本上告诉其他人，像其他服务器一样，

1080
00:33:15,640 --> 00:33:17,140
0,360 360,780 810,1050 1050,1320 1320,1500
paper said, you {[] -}

1081
00:33:17,140 --> 00:33:19,330
0,390 390,990 990,1260 1260,1710 1710,2190
you essentially tell other ones,

1082
00:33:19,570 --> 00:33:21,070
0,360 360,630 630,1170 1170,1320 1320,1500
like other servers,| you tell
|你告诉他们好了，一切都准备好了，

1083
00:33:21,070 --> 00:33:22,180
0,240 240,480 480,630 630,750 750,1110
them okay, this is ready

1084
00:33:22,180 --> 00:33:24,190
0,360 840,1170 1170,1470 1470,1590 1590,2010
for,| or sorry it's committed
|或者很抱歉它被提交了，它已经准备好了，就像直接在状态机中执行一样。

1085
00:33:24,190 --> 00:33:25,680
0,180 180,420 420,660 660,990
it's ready for like,

1086
00:33:25,680 --> 00:33:28,320
0,330 480,1170 1410,2220 2220,2460 2460,2640
{} like execution right into

1087
00:33:28,320 --> 00:33:30,740
0,90 90,390 390,780
the state machine.|
|

1088
00:33:30,860 --> 00:33:32,420
0,270 270,630 630,720 720,1110 1110,1560
So if it crashes before
因此，如果它在通知所有服务器它已准备好执行之前崩溃，

1089
00:33:32,420 --> 00:33:33,500
0,150 150,450 450,540 540,660 660,1080
it tells all the servers

1090
00:33:33,500 --> 00:33:35,120
0,120 120,330 330,600 600,780 780,1620
that it's ready for execution,|
|

1091
00:33:35,780 --> 00:33:37,760
0,180 180,360 360,630 630,1320 1380,1980
it could delay execution, right.|
这可能会推迟执行死刑，对吧。|

1092
00:33:38,370 --> 00:33:40,470
0,210 210,330 330,660 660,1380 1470,2100
It could delay execution,| okay,
它可能会推迟执行死刑，|好的，首先，如果领导者在这一点上失败了，什么都不会发生，对吧，

1093
00:33:40,500 --> 00:33:41,100
0,180 180,270 270,390 390,510 510,600
first of all, if the

1094
00:33:41,100 --> 00:33:42,990
0,240 240,780 1200,1350 1350,1500 1500,1890
leader fails at that point,

1095
00:33:42,990 --> 00:33:44,400
0,240 240,660 660,840 840,1140 1140,1410
nothing happens, right,| at least
|至少客户端不能继续进行任何其他更多操作

1096
00:33:44,400 --> 00:33:45,720
0,150 150,480 480,870 870,990 990,1320
the clients can't {} proceed

1097
00:33:45,720 --> 00:33:47,190
0,180 180,330 330,510 510,750 750,1470
with any other more operations|
|

1098
00:33:47,580 --> 00:33:48,810
0,240 240,390 390,810 810,900 900,1230
and so basically the if
所以基本上，如果你想考虑的话，在这一点上，浮筏重新配置自己，

1099
00:33:48,810 --> 00:33:49,800
0,120 120,240 240,480 480,630 630,990
you want to think about,

1100
00:33:49,800 --> 00:33:51,390
0,120 120,270 270,570 600,1080 1080,1590
at that point raft reconfigure

1101
00:33:51,390 --> 00:33:52,340
0,540
itself,|
|

1102
00:33:52,370 --> 00:33:53,980
0,300 300,360 360,570 570,1050
elects a new leader,|
选举新的领导人，|

1103
00:33:54,010 --> 00:33:55,510
0,660 660,1080 1080,1200 1200,1260 1260,1500
and that's going to be
那就是你知道的F1或F2，

1104
00:33:55,510 --> 00:33:56,410
0,90 90,420 420,600 600,810 810,900
you know {F1 -} or

1105
00:33:56,410 --> 00:33:57,460
0,120 120,540 630,900 900,960 960,1050
{F2 -},| one of the
|这两人中的一人将成为新的领导人

1106
00:33:57,460 --> 00:33:58,030
0,150 150,240 240,360 360,450 450,570
two is going to be

1107
00:33:58,030 --> 00:33:58,750
0,90 90,270 270,570 570,660 660,720
the new leader| and the
|另一个人将成为追随者，对吗？

1108
00:33:58,750 --> 00:33:59,260
0,120 120,240 240,330 330,450 450,510
other one is going to

1109
00:33:59,260 --> 00:34:01,210
0,90 90,150 150,600 630,960 1470,1950
be the follower, right| and
|两个人中的一个实际上已经收到了追加条目，

1110
00:34:01,210 --> 00:34:02,050
0,210 210,300 300,390 390,600 600,840
one of the two actually

1111
00:34:02,050 --> 00:34:03,580
0,180 180,900 930,1020 1020,1230 1230,1530
has received you know the

1112
00:34:03,580 --> 00:34:05,860
0,330 330,690 690,1020 1020,1560 1830,2280
append entry,| that the leader
|领导人可能已经承诺了，

1113
00:34:05,860 --> 00:34:07,030
0,210 210,480 480,570 570,1020 1050,1170
might already have committed,| in
|事实上，它可能已经被KV处决了，

1114
00:34:07,030 --> 00:34:08,620
0,300 300,1020 1020,1200 1200,1500 1500,1590
fact {it's,kv} might already have

1115
00:34:08,620 --> 00:34:09,660
0,600
executed,|
|

1116
00:34:09,690 --> 00:34:10,980
0,180 180,660 660,960 960,1110 1110,1290
no problem correct, because one
没有问题是正确的，因为他们中的一个有问题，

1117
00:34:10,980 --> 00:34:12,720
0,90 90,240 240,540 540,810 1230,1740
of them has it,| that
|这一人将成为领导人，我们将在后面的领导人选举规则中看到，

1118
00:34:12,720 --> 00:34:14,070
0,300 300,570 570,840 840,930 930,1350
one will become the leader

1119
00:34:14,070 --> 00:34:15,000
0,150 150,270 270,480 480,780 780,930
as we'll see later with

1120
00:34:15,000 --> 00:34:16,860
0,240 240,480 480,780 780,1380
the leader election rules,|
|

1121
00:34:16,860 --> 00:34:18,780
0,150 150,390 390,690 690,1110 1470,1920
and that one will submit
该服务器将提交到其KV服务器

1122
00:34:18,780 --> 00:34:20,040
0,90 90,300 300,720 720,930 930,1260
to its kv {server -}|
|

1123
00:34:20,070 --> 00:34:21,720
0,450 450,600 600,1050 1050,1530 1530,1650
and will replicate it to
并将其复制给其他跟随者

1124
00:34:21,720 --> 00:34:23,190
0,120 120,510 510,1110 1140,1260 1260,1470
the other follower| and then
|然后它将应用于每台KV服务器，

1125
00:34:23,190 --> 00:34:24,300
0,240 240,420 420,720 720,930 930,1110
it will apply to each

1126
00:34:24,300 --> 00:34:25,770
0,300 300,780 930,1080 1080,1200 1200,1470
kv server,| in the end
|最后，所有操作都将以相同的顺序应用所有操作。

1127
00:34:25,770 --> 00:34:27,030
0,390 390,540 540,930 930,1140 1140,1260
all will apply all the

1128
00:34:27,030 --> 00:34:28,320
0,540 540,600 600,660 660,960 960,1290
operations in the same order.|
|

1129
00:34:28,780 --> 00:34:30,250
0,150 150,690 690,1050 1050,1260 1260,1470
I I I agree, like
我同意，总有一天会发生的，

1130
00:34:30,250 --> 00:34:31,630
0,540 540,720 720,1110 1110,1290 1290,1380
eventually it'll happen,| but it
|但它可能会被推迟，对吗？

1131
00:34:31,630 --> 00:34:35,420
0,240 240,390 390,990
could be {delayed,right}?|
|

1132
00:34:39,620 --> 00:34:40,850
0,450 450,660 660,720 720,1020 1020,1230
{Yeah,could,be,delayed,absolutely},| [] a complete lot
是啊，完全有可能被推迟，|[]对所有追随者来说，这是一个完整的东西，

1133
00:34:40,850 --> 00:34:42,950
0,90 90,210 210,270 270,900 1140,2100
to all the followers, {}|
|

1134
00:34:42,950 --> 00:34:44,780
0,210 210,660 660,750 750,1110 1110,1830
it will you stay {},
它会让你留下来，它的运作方式实际上是，

1135
00:34:45,050 --> 00:34:45,890
0,180 180,330 330,450 450,750 750,840
the way it works is

1136
00:34:45,890 --> 00:34:47,120
0,420 420,690 690,900 900,1020 1020,1230
actually,| {} it will try
|它将尝试发送他的日志的结尾，

1137
00:34:47,120 --> 00:34:47,810
0,120 120,300 300,420 420,600 600,690
to send the end of

1138
00:34:47,810 --> 00:34:49,640
0,180 180,660 930,1230 1230,1560 1560,1830
his log,| {} if one
|如果其中一个关注者没有识别出日志的结尾，请退后

1139
00:34:49,640 --> 00:34:51,170
0,90 90,210 210,780 780,1110 1110,1530
of the followers doesn't recognize

1140
00:34:51,170 --> 00:34:51,860
0,90 90,210 210,300 300,390 390,690
the end of the log,

1141
00:34:51,860 --> 00:34:53,360
0,120 120,390 390,780 810,1350 1380,1500
go back off| and you
|你知道，发送越来越多你知道的更早的条目，

1142
00:34:53,360 --> 00:34:54,410
0,90 90,300 300,480 480,570 570,1050
know send more and more

1143
00:34:54,410 --> 00:34:56,180
0,90 90,480 480,960 960,1470 1500,1770
you know earlier entries,| we'll
|我们以后再谈这件事。

1144
00:34:56,180 --> 00:34:57,720
0,180 180,360 360,480 480,780
talk about it later.|
|

1145
00:34:57,980 --> 00:34:59,270
0,510 750,930 930,1020 1020,1200 1200,1290
But, in the end it
但是，最终情况可能是这样的

1146
00:34:59,270 --> 00:35:00,170
0,180 180,240 240,330 330,660 660,900
could be the case| that
|领导者将向其中一名追随者重播其完整的日志，

1147
00:35:00,170 --> 00:35:01,580
0,210 210,540 540,840 840,1260 1260,1410
the leader will replay its

1148
00:35:01,580 --> 00:35:02,960
0,540 540,990 990,1080 1080,1320 1320,1380
complete log to one of

1149
00:35:02,960 --> 00:35:04,130
0,90 90,630 750,990 990,1110 1110,1170
the followers,| if one of
|如果其中一个关注者错过了所有日志条目。

1150
00:35:04,130 --> 00:35:05,450
0,90 90,480 480,630 630,900 930,1320
the followers has missed all

1151
00:35:05,450 --> 00:35:06,820
0,90 90,360 360,900
the log entries.|
|

1152
00:35:07,800 --> 00:35:08,670
0,120 120,300 300,390 390,630 630,870
I gotta get me back
我得回原木去了。

1153
00:35:08,670 --> 00:35:11,970
0,120 120,690 1770,2370 2610,3030 3060,3300
to logs.| {} So one
|所以你可能想知道为什么你会有原木

1154
00:35:11,970 --> 00:35:14,190
0,240 240,300 300,450 450,960 990,2220
reason you might wonder why

1155
00:35:14,220 --> 00:35:15,450
0,330 330,660 660,900 900,990 990,1230
you have logs at all|
|

1156
00:35:15,450 --> 00:35:17,340
0,210 210,480 480,900 930,1380 1380,1890
is because like kv server,
是因为和KV服务器一样，它也有一个数据库，

1157
00:35:17,370 --> 00:35:18,480
0,210 210,360 360,420 420,810 810,1110
it has a database too,|
|

1158
00:35:18,810 --> 00:35:19,890
0,150 150,360 360,570 570,660 660,1080
you know have some table
你知道，有一张桌子，里面有所有的信息

1159
00:35:19,890 --> 00:35:21,690
0,180 180,390 390,480 480,1080 1380,1800
with all the information {}|
|

1160
00:35:21,690 --> 00:35:22,440
0,180 180,300 300,510 510,630 630,750
and so why do we
那么为什么我们实际上需要这样的信息两次，

1161
00:35:22,440 --> 00:35:23,640
0,210 210,780 780,900 900,1020 1020,1200
need actually you know sort

1162
00:35:23,640 --> 00:35:25,020
0,90 90,270 270,690 690,1140 1140,1380
of this information twice,| once
|一次在日志中，一次在KV表中。

1163
00:35:25,020 --> 00:35:26,010
0,90 90,180 180,630 630,750 750,990
in the logs and ones

1164
00:35:26,010 --> 00:35:29,160
0,150 150,570 1110,2280 2280,2790 2940,3150
in the kv table.| And
|因此，有几个原因，

1165
00:35:29,160 --> 00:35:29,910
0,90 90,150 150,390 390,630 630,750
so a couple reasons for

1166
00:35:29,910 --> 00:35:30,680
0,330
that,|
|

1167
00:35:30,680 --> 00:35:33,500
0,660 840,1380 1380,1710 2250,2550 2550,2820
{} one, {} a couple
一个，几个基本上已经在问题中出现了，

1168
00:35:33,500 --> 00:35:34,370
0,120 120,420 420,630 630,810 810,870
that already came up in

1169
00:35:34,370 --> 00:35:36,170
0,60 60,510 510,1080 1110,1650 1650,1800
the questions basically,| one for
|一个用于重传，

1170
00:35:36,170 --> 00:35:37,480
0,750
retransmission,|
|

1171
00:35:44,090 --> 00:35:46,610
0,300 300,810 810,1260 1290,1980 2190,2520
so when the leader sends
因此，当领导者向其中一个追随者发送这些附加条目时，该消息可能会丢失

1172
00:35:46,610 --> 00:35:47,870
0,150 150,240 240,450 450,1170 1170,1260
one of these {append,entries} you

1173
00:35:47,870 --> 00:35:48,650
0,90 90,360 360,600 600,690 690,780
know to one of the

1174
00:35:48,650 --> 00:35:49,910
0,510 510,630 630,900 900,1080 1080,1260
followers that message might get

1175
00:35:49,910 --> 00:35:51,800
0,510 720,870 870,1440 1530,1680 1680,1890
lost| and so the leader
|因此，领导者必须能够重新传输，

1176
00:35:51,800 --> 00:35:52,520
0,180 180,270 270,450 450,570 570,720
must be able to {retransmit

1177
00:35:52,520 --> 00:35:53,510
0,540 540,660 660,750 750,930 930,990
-},| so we need to
|因此，我们需要保留所有日志条目的记录，

1178
00:35:53,510 --> 00:35:54,620
0,210 210,270 270,720 750,900 900,1110
keep a record of all

1179
00:35:54,620 --> 00:35:56,930
0,780 810,1110 1110,1440 1440,1860 1860,2310
the log entries,| that, {}
|那，那就像是在飞行。

1180
00:35:57,380 --> 00:35:58,190
0,270 270,510 510,600 600,750 750,810
{} that are sort of

1181
00:35:58,190 --> 00:35:59,600
0,210 210,510 510,960
being in flight.|
|

1182
00:35:59,950 --> 00:36:02,050
0,540 660,1020 1020,1530 1530,1860 1860,2100
{} Second reason that's probably
第二个原因可能是最主要的原因，

1183
00:36:02,050 --> 00:36:03,070
0,60 60,330 330,630 630,900 900,1020
the prime reason,| first is
|首先，我们需要秩序，

1184
00:36:03,070 --> 00:36:04,000
0,180 180,270 270,360 360,420 420,930
like we need {} order,|
|

1185
00:36:04,790 --> 00:36:06,400
0,360 360,990
and every
并且每个追加操作或每个命令都必须以相同的顺序在相同的和所有的复制品上传送

1186
00:36:06,580 --> 00:36:08,200
0,480 480,600 600,870 870,1470 1470,1620
{} {append -} operation or

1187
00:36:08,200 --> 00:36:09,940
0,510 510,810 810,1290 1290,1560 1560,1740
every {} commands must be

1188
00:36:09,940 --> 00:36:11,440
0,390 390,480 480,540 540,840 840,1500
delivered in the same order

1189
00:36:11,440 --> 00:36:13,450
0,180 180,270 270,810 1290,1800 1800,2010
at the same and all

1190
00:36:13,450 --> 00:36:15,190
0,90 90,600 990,1380 1380,1470 1470,1740
the replicas| and the log
|对于我们来说，日志是一种非常方便的方式来实际维护这种秩序，

1191
00:36:15,190 --> 00:36:16,300
0,120 120,150 150,360 360,810 810,1110
is a very convenient way

1192
00:36:16,300 --> 00:36:17,380
0,180 180,330 330,450 450,720 720,1080
for us to actually maintain

1193
00:36:17,380 --> 00:36:20,470
0,150 150,630 960,1650 1650,1950 1950,3090
that order,| {so,the} {second,reason} retransmission.|
|所以第二个原因是重播。|

1194
00:36:20,710 --> 00:36:22,030
0,540 540,660 660,900 900,1140 1140,1320
{} The third reason is
第三个原因是我们需要坚持不懈，

1195
00:36:22,030 --> 00:36:23,860
0,180 180,480 480,660 660,1440
we need {} persistence,|
|

1196
00:36:25,350 --> 00:36:26,580
0,240 240,480 480,600 600,810 810,1230
{you,know} one of the followers
你知道其中一个追随者可能会崩溃

1197
00:36:26,580 --> 00:36:29,190
0,210 210,900 1440,2160 2160,2400 2400,2610
might crash| {} or actually
|否则它们实际上都可能会崩溃

1198
00:36:29,190 --> 00:36:30,180
0,180 180,270 270,390 390,570 570,990
all of them might crash|
|

1199
00:36:30,180 --> 00:36:31,170
0,210 210,360 360,480 480,690 690,990
and then they come up
然后他们又出现了

1200
00:36:31,200 --> 00:36:32,700
0,510 510,780 780,1140 1140,1350 1350,1500
again| and we still need
|我们仍然需要这样一个位置，即我们基本上可以重新传输日志条目，使每个人都了解最新情况

1201
00:36:32,700 --> 00:36:33,570
0,90 90,240 240,330 330,390 390,870
to be in a position

1202
00:36:33,570 --> 00:36:34,770
0,120 120,210 210,330 330,720 720,1200
that we can basically retransmit

1203
00:36:34,770 --> 00:36:36,810
0,300 300,810 900,1380 1380,1620 1620,2040
log entries to bring everybody

1204
00:36:36,810 --> 00:36:38,850
0,120 120,210 210,540 570,1140 1500,2040
up to date| and {}
|因此，日志也必须是持久的。

1205
00:36:38,850 --> 00:36:40,560
0,450 480,930 930,1110 1110,1350 1350,1710
so log must also be

1206
00:36:40,560 --> 00:36:41,560
0,600
persistent.|
|

1207
00:36:42,110 --> 00:36:43,850
0,480 570,810 810,1260 1260,1470 1470,1740
{} And finally we need
最后，我们需要一些空间来进行试探性的操作或试探性地发出命令，

1208
00:36:43,850 --> 00:36:46,340
0,150 150,960 1050,1560 1560,1980 1980,2490
{sort,of} space for tentative operations

1209
00:36:46,340 --> 00:36:49,490
0,150 150,690 690,1350 1860,2490 2490,3150
or tentatively commits tentative commands,|
|

1210
00:36:50,390 --> 00:36:52,580
0,600 870,1380 1380,1800 1800,1920 1920,2190
{} so as we noted
所以，就像我们之前提到的，

1211
00:36:52,580 --> 00:36:53,540
0,510 510,600 600,690 690,840 840,960
earlier,| if it came up
|如果它出现在前面的问题中，

1212
00:36:53,540 --> 00:36:55,370
0,60 60,420 420,720 720,1110 1110,1830
in the earlier questions,| when
|当领导者向追随者发送操作时，

1213
00:36:55,640 --> 00:36:58,040
0,780 870,1650 1650,1890 1890,1950 1950,2400
the leader sent an operation

1214
00:36:58,040 --> 00:36:59,570
0,150 150,210 210,930 1020,1140 1140,1530
to a follower,| the follower
|在这一点上，追随者并不真正知道该操作将被提交，

1215
00:36:59,570 --> 00:37:00,590
0,240 240,420 420,810 810,870 870,1020
doesn't really know at that

1216
00:37:00,590 --> 00:37:01,670
0,210 210,390 390,570 570,930 930,1080
point where that operation will

1217
00:37:01,670 --> 00:37:03,140
0,90 90,480 480,840 840,1230 1230,1470
be committed,| so just stick
|所以你就在这待一会儿吧

1218
00:37:03,140 --> 00:37:04,280
0,270 270,390 390,420 420,630 630,1140
around for a little while|
|

1219
00:37:04,400 --> 00:37:06,650
0,570 570,900 900,1410 1410,1740 1740,2250
until {it,actually} learns that operation
直到它实际了解到操作已提交

1220
00:37:06,830 --> 00:37:07,730
0,120 120,510 510,660 660,810 810,900
is committed| and so we
|因此我们需要一些空间来进行[]操作

1221
00:37:07,730 --> 00:37:09,080
0,150 150,270 270,690 690,810 810,1350
need some space for []

1222
00:37:09,080 --> 00:37:10,160
0,540 540,630 630,720 720,990 990,1080
operations| {} the log is
|日志是真正做到这一点的方便的地方。

1223
00:37:10,160 --> 00:37:11,270
0,60 60,480 480,720 720,870 870,1110
{} convenient place to actually

1224
00:37:11,270 --> 00:37:12,080
0,120 120,360
do that.|
|

1225
00:37:13,100 --> 00:37:14,960
0,810 990,1170 1170,1320 1320,1710 1740,1860
{} In the end, you
最后，您知道正确的情况是所有服务器上的日志都是相同的，

1226
00:37:14,960 --> 00:37:16,400
0,150 150,630 630,780 780,1170 1170,1440
know what will happen correct

1227
00:37:16,400 --> 00:37:17,870
0,180 180,600 810,960 960,1320 1320,1470
is that the logs are

1228
00:37:17,870 --> 00:37:19,340
0,780
identical

1229
00:37:22,140 --> 00:37:23,540
0,840
{on,all}

1230
00:37:23,660 --> 00:37:25,260
0,780
servers,|
|

1231
00:37:28,500 --> 00:37:29,490
0,480 480,570 570,660 660,780 780,990
{} you know there may
你知道在一段时间内可能会有不同步的情况，

1232
00:37:29,490 --> 00:37:31,740
0,600 1200,1380 1380,1470 1470,2010 2010,2250
be out of sync during

1233
00:37:31,740 --> 00:37:33,330
0,300 300,360 360,870 870,1530 1530,1590
periods of time,| {} you
|你知道，一个日志可能比其他日志有更多的条目，

1234
00:37:33,330 --> 00:37:34,380
0,90 90,390 390,690 690,840 840,1050
know, one might have more

1235
00:37:34,380 --> 00:37:36,420
0,330 330,450 450,1140 1140,1650 1770,2040
entries than other logs,| but
|但如果你继续运行这个系统，

1236
00:37:36,420 --> 00:37:37,590
0,150 150,420 450,570 570,810 840,1170
like if you keep running

1237
00:37:37,590 --> 00:37:38,610
0,60 60,480 480,570 570,660 660,1020
the system,| and then stop
|然后阻止客户，

1238
00:37:38,610 --> 00:37:40,200
0,90 90,780 960,1320 1320,1440 1440,1590
the clients,| then at some
|然后在某个时间点，

1239
00:37:40,200 --> 00:37:41,940
0,270 270,360 360,900 1080,1470 1470,1740
point in time,| {} all
|所有的日志将是完全相同的，

1240
00:37:41,940 --> 00:37:43,680
0,90 90,630 630,720 720,1170 1170,1740
the {logs,will} be completely identical,|
|

1241
00:37:44,040 --> 00:37:45,210
0,150 150,270 270,600 600,780 780,1170
and that means that basically
这意味着基本上那些因为它们都有相同的顺序，

1242
00:37:45,210 --> 00:37:46,890
0,450 780,1050 1050,1170 1170,1470 1470,1680
those since they all have

1243
00:37:46,890 --> 00:37:47,730
0,60 60,360 360,660 660,750 750,840
the same order,| all the
|所有操作所有操作将适合以相同的顺序拒绝KV服务器

1244
00:37:47,730 --> 00:37:49,230
0,630 630,810 810,900 900,1380 1380,1500
operations all the operations will

1245
00:37:49,230 --> 00:37:51,060
0,120 120,510 720,840 840,1500 1680,1830
be fit to decline the

1246
00:37:51,060 --> 00:37:52,380
0,390 390,810 810,930 930,990 990,1320
kv servers in the same

1247
00:37:52,380 --> 00:37:53,940
0,480 480,660 660,870 870,1260 1260,1560
order| and then kv server
|然后KV服务器也会以相同的状态结束。

1248
00:37:53,940 --> 00:37:54,930
0,420 420,630 630,810 810,900 900,990
well end up in the

1249
00:37:54,930 --> 00:37:55,920
0,210 210,660
same state.|
|

1250
00:37:57,340 --> 00:37:58,540
0,690
Okay?|
好吧?|

1251
00:38:03,690 --> 00:38:04,290
0,210 210,360 360,420 420,540 540,600
Okay, let me talk a
好的，让我来简单介绍一下单个日志条目。

1252
00:38:04,290 --> 00:38:05,880
0,210 210,330 330,810 810,1110 1110,1590
little bit about an individual

1253
00:38:05,880 --> 00:38:07,140
0,240 240,690
log entry.|
|

1254
00:38:08,090 --> 00:38:09,260
0,690

1255
00:38:17,150 --> 00:38:19,040
0,390 390,690 690,810 810,1410 1710,1890
So really, yeah whatever, we're
所以真的，不管怎么说，我们会画很多这样的画，

1256
00:38:19,040 --> 00:38:20,120
0,150 150,390 390,660 660,960 960,1080
gonna draw many pictures like

1257
00:38:20,120 --> 00:38:21,380
0,270 270,660 660,1050 1050,1080 1080,1260
this,| where there's a bunch
|在那里有一堆日志条目，

1258
00:38:21,380 --> 00:38:23,120
0,90 90,630 660,1080 1080,1560 1560,1740
of log log entries,| you're
|你要开始胡说八道了，

1259
00:38:23,120 --> 00:38:25,790
0,300 300,960 1080,1410 1410,1860 1860,2670
starting 0 1 2 blah

1260
00:38:25,790 --> 00:38:27,260
0,570 750,990 990,1170 1170,1320 1320,1470
blah,| {} and if we
|如果我们查看其中一个日志条目，

1261
00:38:27,260 --> 00:38:28,160
0,210 210,630 630,690 690,840 840,900
look inside of one of

1262
00:38:28,160 --> 00:38:29,930
0,150 150,390 390,1080 1260,1620 1620,1770
these log entries,| there's gonna
|会有一个命令，

1263
00:38:29,930 --> 00:38:31,200
0,120 120,210 210,810
be a command,|
|

1264
00:38:32,740 --> 00:38:33,760
0,180 180,540 540,660 660,870 870,1020
{which,we're} mostly going to sort
我们基本上忽略了这一点，

1265
00:38:33,760 --> 00:38:34,720
0,60 60,480 480,570 570,780 780,960
of ignore,| we're gonna really
|我们真的要好好考虑一下，

1266
00:38:34,720 --> 00:38:35,650
0,180 180,390 390,570 570,840 840,930
think about much about it

1267
00:38:35,650 --> 00:38:36,640
0,120 120,510 540,720 720,900 900,990
at all,| and that's the
|而这就是实际上正在交付给应用程序的东西，

1268
00:38:36,640 --> 00:38:37,840
0,210 210,330 330,630 630,810 810,1200
thing that's actually being delivered

1269
00:38:37,840 --> 00:38:38,890
0,60 60,180 180,720 720,900 900,1050
to the application,| so that's
|这是一个带参数的PUT或GET操作的例子。

1270
00:38:38,890 --> 00:38:39,610
0,60 60,390 390,450 450,630 630,720
an example to put {or

1271
00:38:39,610 --> 00:38:41,280
0,180 180,240 240,450 450,1050
- -} get operation

1272
00:38:41,280 --> 00:38:42,900
0,330 330,450 450,1080
with its arguments.|
|

1273
00:38:43,020 --> 00:38:44,430
0,240 240,960 960,1020 1020,1260 1260,1410
And then the second thing
第二件事就是术语，

1274
00:38:44,430 --> 00:38:45,150
0,180 180,300 300,570 570,660 660,720
that's in there is {}

1275
00:38:45,150 --> 00:38:46,240
0,450
term,|
|

1276
00:38:48,460 --> 00:38:50,410
0,780 780,930 930,1050 1050,1710 1740,1950
and this is basically the
这基本上是领导人的任期，

1277
00:38:50,410 --> 00:38:52,960
0,390 390,930
leader's term,|
|

1278
00:38:55,340 --> 00:38:56,390
0,210 210,300 300,720 720,780 780,1050
so the term in which
因此，该特定命令实际附加到日志中的术语，

1279
00:38:56,390 --> 00:38:58,010
0,270 270,660 660,1080 1080,1410 1410,1620
this particular command actually was

1280
00:38:58,010 --> 00:38:59,860
0,660 660,780 780,900 900,1350
appended to the log,|
|

1281
00:39:00,200 --> 00:39:01,790
0,480 870,1110 1110,1320 1320,1470 1470,1590
{ -} one way you
你可以考虑的一种方式是

1282
00:39:01,790 --> 00:39:02,690
0,90 90,270 270,510 510,720 720,900
can think about this is

1283
00:39:02,690 --> 00:39:05,480
0,390 480,1230 1230,1350 1350,1860 1890,2790
that| basically the term identifies
|基本上该术语唯一地标识将操作附加到日志的领导者，

1284
00:39:05,480 --> 00:39:07,250
0,540 540,690 690,1020 1020,1170 1170,1770
uniquely the leader that appended

1285
00:39:07,340 --> 00:39:09,530
0,930 930,1410 1410,1680 1680,1800 1800,2190
the operation to the log,|
|

1286
00:39:09,950 --> 00:39:11,570
0,450 450,690 690,1140 1170,1380 1380,1620
during every term, there's only
在每一届任期内，只有一个领导人，

1287
00:39:11,570 --> 00:39:13,140
0,300 300,660 660,1050
one single leader,|
|

1288
00:39:13,230 --> 00:39:14,850
0,660 720,930 930,1050 1050,1290 1290,1620
and so the term id
因此，术语id实际上隐含地表示该日志条目实际附加到了谁的领导。

1289
00:39:14,850 --> 00:39:17,880
0,120 120,420 450,1410 1560,2400 2400,3030
{} really basically implicitly {}

1290
00:39:18,120 --> 00:39:20,610
0,360 360,870 870,1890 1920,2220 2220,2490
{} signals who leader was

1291
00:39:20,610 --> 00:39:23,490
0,300 390,690 690,1110 1110,1890 2340,2880
actually {} appended to {}

1292
00:39:23,880 --> 00:39:25,860
0,180 180,870 870,1110 1110,1470
to that log entry.|
|

1293
00:39:26,220 --> 00:39:28,200
0,630 840,1440 1440,1560 1560,1710 1710,1980
The number that goes along
这里出现的数字，

1294
00:39:28,200 --> 00:39:29,010
0,210 210,300 300,510 510,690 690,810
here,| so if this is
|所以如果这是n或者像我一样在这里用i，

1295
00:39:29,010 --> 00:39:30,450
0,390 420,660 660,960 960,1110 1110,1440
n or maybe like me

1296
00:39:30,480 --> 00:39:32,080
0,240 240,480 480,960
use i here,|
|

1297
00:39:32,080 --> 00:39:33,850
0,660 750,1080 1080,1350 1350,1470 1470,1770
{} {you,know} that's the log
你知道这是原木索引，

1298
00:39:33,850 --> 00:39:35,260
0,660
index,|
|

1299
00:39:39,000 --> 00:39:40,230
0,330 330,600 600,1080 1080,1170 1170,1230
so the combination of the
因此，日志索引的组合是一个术语号，

1300
00:39:40,230 --> 00:39:41,730
0,300 300,750 750,1170 1170,1230 1230,1500
log index was a term

1301
00:39:41,730 --> 00:39:43,680
0,300 300,720 720,1230 1230,1860 1860,1950
number,| basically uniquely identifies the
|基本上唯一地标识该特定条目的内容，

1302
00:39:43,680 --> 00:39:45,450
0,510 510,810 810,1020 1020,1380 1380,1770
content of that particular entry,|
|

1303
00:39:45,450 --> 00:39:47,550
0,180 180,390 390,510 510,1080 1440,2100
there could be no {}
不可能有两个日志条目具有相同的索引、相同的术语和不同的命令，

1304
00:39:47,670 --> 00:39:48,810
0,330 330,630 630,900 900,1020 1020,1140
two log entries that have

1305
00:39:48,810 --> 00:39:49,950
0,90 90,390 390,810 810,870 870,1140
the same index, the same

1306
00:39:49,950 --> 00:39:51,780
0,540 570,810 810,930 930,1200 1200,1830
term and have different commands,|
|

1307
00:39:52,050 --> 00:39:54,210
0,690 690,1140 1140,1350 1350,1680 1680,2160
because only a single leader
因为在那个特定的任期内，只有一个你认识的领导人可能会掌权

1308
00:39:54,210 --> 00:39:54,960
0,90 90,270 270,450 450,570 570,750
you know could have been

1309
00:39:54,960 --> 00:39:56,400
0,90 90,690 720,900 900,1110 1110,1440
in charge, in that particular

1310
00:39:56,400 --> 00:39:59,580
0,510 630,1380 1410,1980 1980,2460 2520,3180
term| and {} leader commits
|和Leader提交附加操作，

1311
00:39:59,580 --> 00:40:01,220
0,210 210,510 510,1260
{appends -} operations,|
|

1312
00:40:03,460 --> 00:40:05,410
0,630 690,1320 1320,1530 1530,1590 1590,1950
{} will uncommit {} {log,entries}
将取消提交日志条目将被覆盖，

1313
00:40:05,410 --> 00:40:06,520
0,210 210,300 300,750 750,1020 1020,1110
will be overwritten,| yeah they
|是的，它们可能会被覆盖，

1314
00:40:06,520 --> 00:40:07,810
0,210 210,360 360,930 930,1110 1110,1290
might get overwritten,| we'll talk
|我们以后再谈，

1315
00:40:07,810 --> 00:40:09,580
0,180 180,240 240,630 810,1560 1560,1770
about it later,| but that's
|但这当然是有可能的。

1316
00:40:09,580 --> 00:40:11,000
0,360 360,870
certainly possible.|
|

1317
00:40:12,540 --> 00:40:14,320
0,1170
Okay,
好的，如果我们看这张照片，

1318
00:40:14,540 --> 00:40:15,560
0,420 420,750 750,810 810,960 960,1020
so if we look at

1319
00:40:15,560 --> 00:40:16,700
0,180 210,690 690,840 840,1050 1050,1140
this picture,| so there are
|所以在这一部分中有两件事，

1320
00:40:16,700 --> 00:40:18,500
0,240 240,570 570,960 960,1560 1560,1800
two things that {} in

1321
00:40:18,500 --> 00:40:19,310
0,210 210,390 390,510 510,690 690,810
this part of it,| I
|我想我对这个问题的回答

1322
00:40:19,310 --> 00:40:19,940
0,150 150,240 240,420 420,510 510,630
guess my answer to this

1323
00:40:19,940 --> 00:40:21,410
0,360 360,690 690,1020 1170,1320 1320,1470
question| and there are two
|有两件事需要发生，

1324
00:40:21,410 --> 00:40:22,280
0,180 180,300 300,420 420,480 480,870
things that need to happen,|
|

1325
00:40:22,490 --> 00:40:24,140
0,390 390,540 540,600 600,1020 1020,1650
we need to elect leader
我们需要选出特定任期的领导人，

1326
00:40:26,180 --> 00:40:27,980
0,210 210,270 270,660 660,1380
for a particular term,|
|

1327
00:40:29,080 --> 00:40:30,940
0,630 630,1260 1260,1440 1440,1590 1590,1860
and we need to actually
我们需要切实确保，

1328
00:40:30,940 --> 00:40:32,540
0,360 360,540 540,900
ensure that the,|
|

1329
00:40:34,440 --> 00:40:35,940
0,150 150,330 330,660 660,900 900,1500
{ensure -} logs become identical,|
确保日志变得相同，|

1330
00:40:39,060 --> 00:40:40,830
0,330 330,450 450,510 510,960 1290,1770
and we have failures and
我们失败了，我们更换了领导人，

1331
00:40:40,830 --> 00:40:43,060
0,180 180,450 450,750 750,1320
we have leader changes,|
|

1332
00:40:44,480 --> 00:40:45,110
0,210 210,330 330,450 450,570 570,630
and so we're going to
所以我们要讨论这两个话题，

1333
00:40:45,110 --> 00:40:45,830
0,150 150,330 330,510 510,570 570,720
talk about both of these

1334
00:40:45,830 --> 00:40:48,620
0,630 690,1620 1620,2040 2040,2190 2190,2790
topics,| {} and we're gonna
|我们将从领导人选举开始

1335
00:40:48,800 --> 00:40:50,390
0,390 390,540 540,810 810,1320 1380,1590
start with leader election| and
|然后稍后再讨论如何使日志完全相同。

1336
00:40:50,390 --> 00:40:53,240
0,660 690,930 930,1200 1200,1650 2370,2850
then talk about the making

1337
00:40:53,240 --> 00:40:55,820
0,660 660,1350 1350,1740 1740,2070
logs identical {a,little,bit} later.|
|

1338
00:40:57,020 --> 00:41:00,240
0,420 420,930
Okay, election,|
好的，选举，|

1339
00:41:03,010 --> 00:41:04,150
0,390 390,450 450,690 690,810 810,1140
election is really the topic
选举确实是实验2a的主题，

1340
00:41:04,150 --> 00:41:06,250
0,150 150,630 630,780 780,1200 1680,2100
of lab {2a -}, {}|
|

1341
00:41:06,250 --> 00:41:07,480
0,270 270,360 360,510 510,900 900,1230
and you know {really,the} story
你知道，这个故事真的很简单，

1342
00:41:07,480 --> 00:41:09,190
0,180 180,690 690,1410 1410,1560 1560,1710
is {some,way} straightforward,| you know
|你知道，我们有你知道，

1343
00:41:09,190 --> 00:41:10,420
0,120 120,720
we have

1344
00:41:10,510 --> 00:41:11,470
0,120 120,240 240,540 540,840 840,960
you know,| say here we
|假设我们是具有三个条目的系统，

1345
00:41:11,470 --> 00:41:12,820
0,180 180,540 540,840 840,960 960,1350
are, {} system with three

1346
00:41:12,820 --> 00:41:15,460
0,600 600,750 750,1140 1140,1800 1950,2640
entries,| we have a leader
|我们有一个领导者，你知道，第10学期，

1347
00:41:15,670 --> 00:41:18,010
0,540 570,810 810,1110 1110,1620 2070,2340
in {you,know} term 10, {}|
|

1348
00:41:18,010 --> 00:41:19,090
0,120 120,210 210,300 300,780 780,1080
we have the following term
我们有下面的第10个学期，

1349
00:41:19,090 --> 00:41:19,870
0,240 240,420 420,510 510,690 690,780
10,| so we're sort of
|所以我们的情况是稳定的，

1350
00:41:19,870 --> 00:41:22,390
0,330 330,1050 1410,1770 1770,2070 2070,2520
stable situation,| {} another following
|接下来的第10学期

1351
00:41:22,390 --> 00:41:24,460
0,210 210,690 1080,1620 1620,1800 1800,2070
term 10| and let's say
|假设领导者崩溃或从网络获得分区，

1352
00:41:24,460 --> 00:41:27,520
0,480 510,1200 1230,2100 2130,2670 2670,3060
the leader crashes or gets

1353
00:41:27,520 --> 00:41:29,020
0,600 600,720 720,810 810,1020 1020,1500
partitions you know from network,|
|

1354
00:41:29,020 --> 00:41:30,790
0,330 360,630 690,900 900,1140 1140,1770
so {you,know} can't talk anymore,|
所以你知道不能再说话了，|

1355
00:41:31,090 --> 00:41:32,710
0,480 480,810 810,930 930,1290 1290,1620
{} what will happen is
接下来会发生的是，

1356
00:41:32,710 --> 00:41:34,660
0,450 750,1020 1020,1320 1320,1740 1740,1950
that,| {} the followers will
|追随者将开始选举。

1357
00:41:34,660 --> 00:41:35,820
0,240 240,330 330,780
start an election.|
|

1358
00:41:36,200 --> 00:41:37,880
0,510 600,810 810,1020 1020,1140 1140,1680
And the reason they start
而他们之所以开始选举，是因为，

1359
00:41:37,880 --> 00:41:38,960
0,300 300,660 660,750 750,960 960,1080
an election is because,| they're
|他们错过了领袖的心跳，

1360
00:41:38,960 --> 00:41:40,280
0,240 240,690 690,840 840,900 900,1320
missing heartbeats from the leader,|
|

1361
00:41:47,200 --> 00:41:48,340
0,120 120,180 180,630 660,1080 1080,1140
you know the job of
你知道领导者的工作就是定期地，

1362
00:41:48,340 --> 00:41:50,440
0,120 120,540 540,990 990,1230 1230,2100
the leader is to periodically,|
|

1363
00:41:50,530 --> 00:41:51,700
0,480 480,750 750,870 870,930 930,1170
{} it's sort of fixed
这是一种固定间隔向关注者发送附加条目，

1364
00:41:51,700 --> 00:41:55,570
0,660 780,1680 2400,3210 3210,3480 3480,3870
interval send {append -} entry

1365
00:41:55,570 --> 00:41:57,200
0,390 390,510 510,1110
to the followers,|
|

1366
00:41:57,230 --> 00:41:58,820
0,570 570,720 720,780 780,1470 1470,1590
{} you know normally you
你知道，通常情况下，你知道这可能会发生，

1367
00:41:58,820 --> 00:41:59,810
0,90 90,240 240,420 420,570 570,990
know that might be happen,|
|

1368
00:42:00,110 --> 00:42:01,520
0,450 450,600 600,1020 1020,1110 1110,1410
because a lot of clients
因为很多客户端都处于活动状态

1369
00:42:01,520 --> 00:42:02,810
0,150 150,600 600,720 720,930 930,1290
are active| and so the
|因此，追随者不断地获得附加条目，

1370
00:42:03,380 --> 00:42:05,420
0,420 420,930 930,1140 1140,1440 1440,2040
followers continuously get append entries,|
|

1371
00:42:05,600 --> 00:42:07,070
0,450 450,750 750,1020 1020,1230 1230,1470
{} but if the leader
但如果领导者没有从客户那里收到任何命令，

1372
00:42:07,070 --> 00:42:08,690
0,330 330,720 720,960 960,1350 1350,1620
doesn't receive any commands from

1373
00:42:08,690 --> 00:42:11,810
0,630 690,1770 1890,2490 2730,3000 3000,3120
the {} clients,| then it's
|那么它实际上应该周期性地发送心跳

1374
00:42:11,810 --> 00:42:13,220
0,240 240,690 690,780 780,1080 1080,1410
actually supposed to send in

1375
00:42:13,220 --> 00:42:15,560
0,240 240,780 1050,1860 1860,1950 1950,2340
{} heartbeat periodically| and telling
|并告诉基本上通知实际上仍然是领导者的追随者，

1376
00:42:15,560 --> 00:42:17,810
0,540 570,990 990,1140 1140,1800 1800,2250
the basically to inform the

1377
00:42:17,960 --> 00:42:19,850
0,570 570,750 750,1170 1170,1770 1770,1890
followers that actually still the

1378
00:42:19,850 --> 00:42:20,700
0,420
leader,|
|

1379
00:42:21,010 --> 00:42:22,210
0,150 150,240 240,540 540,870 870,1200
and the heartbeat basically takes
除了没有新的日志条目外，心跳基本上采取正常附加条目的形式，

1380
00:42:22,210 --> 00:42:24,340
0,540 600,990 990,1140 1140,1500 1530,2130
{} form of {} {normal,append}

1381
00:42:24,340 --> 00:42:26,260
0,720 780,1290 1290,1440 1440,1650 1650,1920
entry except no new log

1382
00:42:26,260 --> 00:42:27,340
0,540
entries,|
|

1383
00:42:27,460 --> 00:42:28,780
0,570 570,810 810,930 930,1020 1020,1320
{} and so the leader
所以领导者让领导者在心跳中告诉他们，

1384
00:42:28,780 --> 00:42:30,490
0,660 660,1200 1200,1350 1350,1650 1650,1710
tells leader to tells in

1385
00:42:30,490 --> 00:42:31,540
0,60 60,240 240,450 450,840 840,1050
the {heartbeat -},| like my
|就像我的日志是，你知道有这么长，

1386
00:42:31,540 --> 00:42:33,160
0,300 300,450 450,750 750,960 1170,1620
log is you know this

1387
00:42:33,160 --> 00:42:35,320
0,540 660,1230 1230,1800 1830,1980 1980,2160
long,| { - -} this
|这是我最后一次参赛，

1388
00:42:35,320 --> 00:42:37,090
0,60 60,180 180,510 510,1110 1260,1770
is my last entry, {}|
|

1389
00:42:37,090 --> 00:42:38,740
0,570 570,720 720,810 810,1140 1140,1650
if you know those match
如果你知道这些是匹配的，那么一切都很好。

1390
00:42:38,740 --> 00:42:40,240
0,270 270,870 870,1110 1110,1200 1200,1500
and then everything is good.|
|

1391
00:42:41,190 --> 00:42:42,990
0,390 570,1140 1170,1440 1440,1530 1530,1800
{} So if the leader
因此，如果领导者失败了，

1392
00:42:42,990 --> 00:42:44,460
0,630 750,1020 1020,1200 1200,1260 1260,1470
fails,| then after a couple
|在几次心跳之后

1393
00:42:44,460 --> 00:42:46,380
0,60 60,810 900,1440 1440,1770 1770,1920
of heartbeats| and we'll talk
|我们会更详细地谈到这一点，

1394
00:42:46,380 --> 00:42:46,920
0,30 30,180 180,330 330,480 480,540
a little bit more in

1395
00:42:46,920 --> 00:42:48,990
0,300 300,540 540,840 1020,1920 1920,2070
detail about {this -},| there
|将会有一个选举暂停时间。

1396
00:42:48,990 --> 00:42:50,070
0,270 270,390 390,450 450,810 810,1080
will be an election time

1397
00:42:50,070 --> 00:42:51,100
0,300
out.|
|

1398
00:42:52,270 --> 00:42:54,430
0,210 210,330 330,990 1230,1830 1830,2160
So the followers have a
所以追随者有一个计时器在运行，

1399
00:42:54,430 --> 00:42:55,900
0,390 390,840
timer running,|
|

1400
00:42:56,250 --> 00:42:58,620
0,990 990,1440 1440,1950 1950,2280 2280,2370
{} and they reset the
每当收到心跳或附加条目时，它们就会重新设置计时器，

1401
00:42:58,620 --> 00:42:59,790
0,360 360,510 510,750 750,870 870,1170
timer every time they get

1402
00:42:59,790 --> 00:43:01,650
0,360 360,810 810,960 960,1530 1530,1860
a heartbeat or {append,entry -},|
|

1403
00:43:01,950 --> 00:43:03,180
0,390 390,630 630,780 780,930 930,1230
{} but if they don't
但如果它们没有收到任何心跳信号或附加条目，

1404
00:43:03,180 --> 00:43:05,550
0,600 630,1380 1380,1860 1860,2070 2070,2370
receive any heartbeats or append

1405
00:43:05,550 --> 00:43:06,870
0,480 540,840 840,900 900,1110 1110,1320
entries,| then at some point
|然后在某个时间点，在这个选举超时之后，计时器开始计时，

1406
00:43:06,870 --> 00:43:08,040
0,60 60,420 420,690 690,840 840,1170
of time, after this election

1407
00:43:08,040 --> 00:43:10,410
0,690 990,1380 1410,1710 1710,1920 1920,2370
timeout, the timer goes off,|
|

1408
00:43:10,710 --> 00:43:11,940
0,180 180,270 270,450 450,900 900,1230
and at that point {}
在这一点上，追随者开始选举

1409
00:43:11,940 --> 00:43:13,620
0,420 420,690 690,780 780,1260 1410,1680
follower starts an election| and
|让我们假设第一个追随者首先到达那个点

1410
00:43:13,620 --> 00:43:14,610
0,330 330,570 570,810 810,900 900,990
just let's assume that the

1411
00:43:14,610 --> 00:43:17,070
0,240 240,1050 1110,2010 2010,2190 2190,2460
first follower reaches that point

1412
00:43:17,070 --> 00:43:18,360
0,420 690,840 840,1020 1020,1140 1140,1290
first| and what it will
|它会做什么，它会发送，它会增加它的任期号，

1413
00:43:18,360 --> 00:43:20,010
0,300 300,510 510,1050 1050,1380 1470,1650
do, it will send, it

1414
00:43:20,010 --> 00:43:21,270
0,120 120,510 510,660 660,930 930,1260
will increase its term number,|
|

1415
00:43:21,270 --> 00:43:22,110
0,210 210,360 360,570 570,630 630,840
so we'll set the term
因此，我们将术语编号设置为11，

1416
00:43:22,110 --> 00:43:23,380
0,240 240,330 330,870
number to 11,|
|

1417
00:43:24,440 --> 00:43:26,060
0,450 450,840 840,1200 1200,1320 1320,1620
{} it will, you know
你知道，如果你愿意，它会自言自语

1418
00:43:26,480 --> 00:43:27,410
0,270 270,330 330,720 720,780 780,930
talk to itself, if you

1419
00:43:27,410 --> 00:43:29,990
0,450 480,1560 1590,2100 2100,2430 2430,2580
will| and be part of
|成为世界的一部分，并将为自己投票

1420
00:43:29,990 --> 00:43:31,880
0,360 1080,1350 1350,1500 1500,1740 1740,1890
the and will vote for

1421
00:43:31,880 --> 00:43:33,620
0,630 840,1020 1020,1440 1440,1590 1590,1740
itself| and then you know
|然后你知道我们会联系你知道其他追随者也试图联系领袖，

1422
00:43:33,620 --> 00:43:35,060
0,480 540,1110 1110,1200 1200,1320 1320,1440
we'll contact you know the

1423
00:43:35,060 --> 00:43:36,950
0,570 570,720 720,1440 1440,1740 1740,1890
other {} follower also tried

1424
00:43:36,950 --> 00:43:38,300
0,60 60,420 420,510 510,870 870,1350
to contact the leader,| presumably
|假设是领队，假设领队倒下了，

1425
00:43:38,300 --> 00:43:40,010
0,180 180,960 1230,1440 1440,1560 1560,1710
the leader, let's say the

1426
00:43:40,010 --> 00:43:40,940
0,270 270,570 570,660 660,750 750,930
{leader,is} down,| so the leader
|所以领导者不会回应，但第二个追随者会回应，

1427
00:43:40,940 --> 00:43:42,530
0,270 270,780 990,1290 1290,1350 1350,1590
doesn't respond, but the second

1428
00:43:42,530 --> 00:43:44,020
0,300 300,540 540,1080
follower does respond,|
|

1429
00:43:44,440 --> 00:43:45,160
0,180 180,270 270,330 330,480 480,720
and so at that point,
因此，在这一点上，它获得了两票，

1430
00:43:45,160 --> 00:43:46,420
0,60 60,240 240,420 420,930 930,1260
it gets two votes,| one
|一个是自己的，一个是追随者的

1431
00:43:46,420 --> 00:43:47,590
0,120 120,570 570,750 750,990 990,1170
for himself and one from

1432
00:43:47,590 --> 00:43:48,910
0,90 90,690 900,1080 1080,1140 1140,1320
the follower| and at that
|在这一点上，它实际上成为了新的领导者，

1433
00:43:48,910 --> 00:43:50,140
0,270 270,630 630,780 780,1140 1140,1230
point, actually it becomes the

1434
00:43:50,140 --> 00:43:51,190
0,150 150,510 510,660 660,930 930,1050
new leader,| it becomes the
|它成为第11届任期的领头羊，

1435
00:43:51,190 --> 00:43:53,080
0,420 420,690 690,960 960,1320
leader for term 11,|
|

1436
00:43:56,240 --> 00:43:57,470
0,210 210,510 510,720 720,960 960,1230
and then {you,know} start doing
然后你知道，开始做基本的客户就会落到那个领导者的头上

1437
00:43:57,470 --> 00:43:58,790
0,270 270,630 630,870 870,1200 1200,1320
basic clients fall over to

1438
00:43:58,790 --> 00:44:00,260
0,240 240,750 780,1200 1200,1290 1290,1470
that leader| and you know
|你知道你会像以前一样继续做的事情。

1439
00:44:00,260 --> 00:44:01,190
0,120 120,390 390,450 450,600 600,930
the things you just proceed

1440
00:44:01,190 --> 00:44:02,380
0,120 120,630
as before.|
|

1441
00:44:03,370 --> 00:44:06,610
0,630 810,1410 1410,2220 2700,3060 3060,3240
Okay?| Now {} maybe it's
好吧?|现在可能有点小问题，你可能会担心，

1442
00:44:06,610 --> 00:44:08,320
0,720 720,870 870,900 900,1170 1170,1710
slightly there's a couple problems

1443
00:44:08,320 --> 00:44:09,280
0,180 180,270 270,450 450,690 690,960
and you might worry about,|
|

1444
00:44:09,280 --> 00:44:10,780
0,450 450,540 540,720 720,1110 1110,1500
one of them could be
其中之一可能是以下情况，

1445
00:44:10,930 --> 00:44:13,120
0,210 210,510 510,1050 1050,2010 2070,2190
the following situation,| we it
|我们发现在Leader 10之间有一个网络分区，

1446
00:44:13,120 --> 00:44:13,690
0,210 210,330 330,420 420,540 540,570
turns out there was a

1447
00:44:13,690 --> 00:44:15,550
0,300 300,690 690,1140 1140,1410 1410,1860
network partition between leader 10,|
|

1448
00:44:15,580 --> 00:44:16,930
0,300 300,420 420,690 690,1050 1050,1350
where the leader {for,term} 10
其中第10届的领导者和第10届的追随者。

1449
00:44:16,930 --> 00:44:18,310
0,210 210,300 300,720 720,1050 1050,1380
and the followers {for,term} 10.|
|

1450
00:44:18,840 --> 00:44:19,950
0,150 150,630 660,750 750,870 870,1110
And so at some point
因此，在某一时刻，你知道的网络分区会修复

1451
00:44:19,950 --> 00:44:21,360
0,150 150,600 600,720 720,810 810,1410
that network you know partition

1452
00:44:21,390 --> 00:44:23,640
0,660 930,1440 1440,1680 1680,2100 2100,2250
heals| and so maybe the
|因此，可能申请的请求仍然是第10届领导人的请求，

1453
00:44:23,640 --> 00:44:25,710
0,420 420,990 1080,1500 1500,1740 1740,2070
applied request came in still

1454
00:44:25,710 --> 00:44:28,710
0,270 270,1170 1320,2220 2220,2610 2610,3000
to {} leader, for leader

1455
00:44:28,710 --> 00:44:31,260
0,300 300,630 630,1080 1410,2070 2190,2550
{for,term} {} 10,| and now
|当然，现在看起来很糟糕，我们实际上可能有两位领导人

1456
00:44:31,260 --> 00:44:32,280
0,150 150,420 420,750 750,840 840,1020
of course, now it looks

1457
00:44:32,280 --> 00:44:33,750
0,270 270,690 690,900 900,1170 1170,1470
like oops, we might have

1458
00:44:33,750 --> 00:44:36,660
0,330 330,930 1020,2310 2310,2730 2730,2910
actually two leaders| and we're
|我们又回到了分裂综合症的问题上，

1459
00:44:36,660 --> 00:44:38,370
0,330 330,570 570,720 720,1170 1170,1710
back into the split syndrome

1460
00:44:38,550 --> 00:44:40,230
0,270 270,690 1020,1350 1350,1560 1560,1680
{} problem,| that turns out
|事实证明并非如此，

1461
00:44:40,230 --> 00:44:41,340
0,240 240,330 330,420 420,510 510,1110
not to be the case,|
|

1462
00:44:41,610 --> 00:44:43,650
0,600 600,900 900,990 990,1560 1590,2040
because when the leader tries
因为当领导者试图向跟随者发送附加条目时，

1463
00:44:43,650 --> 00:44:44,680
0,120 120,660
to actually

1464
00:44:44,950 --> 00:44:46,300
0,270 270,510 510,660 660,1200 1200,1350
{you,know} send append entries to

1465
00:44:46,300 --> 00:44:48,370
0,90 90,810 1200,1530 1530,1710 1710,2070
the followers,| {} to followers
|现在是第11学期的追随者们，

1466
00:44:48,370 --> 00:44:49,960
0,150 150,240 240,810
that are now

1467
00:44:50,050 --> 00:44:51,940
0,330 330,720 720,1290 1380,1740 1740,1890
in term 11,| they will
|他们只会拒绝那些附加的条目

1468
00:44:51,940 --> 00:44:54,700
0,180 180,810 900,1560 1560,2010 2010,2760
just reject those append entries|
|

1469
00:44:54,970 --> 00:44:56,020
0,270 270,420 420,570 570,900 900,1050
and they will tell the
他们会告诉老领袖，

1470
00:44:56,020 --> 00:44:57,160
0,210 210,510 510,810 810,930 930,1140
old leader,| that you know
|你知道你知道他不再是领袖太可惜了，

1471
00:44:57,160 --> 00:44:59,740
0,150 150,630 660,1080 1380,2220 2250,2580
too bad you know he's

1472
00:44:59,740 --> 00:45:01,330
0,180 180,240 240,510 510,1050 1260,1590
not the leader anymore, {}|
|

1473
00:45:01,330 --> 00:45:02,020
0,120 120,330 330,510 510,660 660,690
in fact they'll send a
事实上，他们会发回一条消息说，不，我不能做附加，

1474
00:45:02,020 --> 00:45:04,510
0,300 300,720 750,1350 1350,2040 2070,2490
message back saying, {} no

1475
00:45:04,510 --> 00:45:05,920
0,150 150,570 570,690 690,840 840,1410
I cannot do the append,|
|

1476
00:45:06,470 --> 00:45:08,840
0,750 960,1470 1470,1590 1590,1830 1830,2370
and here is my current
这是我目前的第11个学期，

1477
00:45:08,870 --> 00:45:12,200
0,870 1200,1470 1470,1740 1740,2280 2880,3330
{} term number 11, {}|
|

1478
00:45:12,200 --> 00:45:13,940
0,330 330,690 690,1110 1110,1470 1470,1740
the leader receives that sees
领头人收到的看到11号字号大于10号字号

1479
00:45:13,940 --> 00:45:15,230
0,210 210,540 540,780 780,1140 1140,1290
the term number 11 is

1480
00:45:15,230 --> 00:45:16,250
0,240 240,390 390,540 540,780 780,1020
bigger than this term number

1481
00:45:16,250 --> 00:45:18,410
0,480 540,810 810,1410 1440,1860 1860,2160
10| and basically steps down
|基本上就是从领导者的位置上退下来，变成一个追随者。

1482
00:45:18,410 --> 00:45:19,280
0,150 150,420 420,540 540,810 810,870
as leader and becomes a

1483
00:45:19,280 --> 00:45:20,240
0,480
follower.|
|

1484
00:45:20,620 --> 00:45:21,610
0,180 180,360 360,600 600,720 720,990
And they take up another
他们又参加了另一次选举，

1485
00:45:21,610 --> 00:45:24,160
0,630 750,1350 1350,2040 2040,2190 2190,2550
election,| {} or to basically
|或者基本上成为这三个词的一部分，

1486
00:45:24,160 --> 00:45:26,110
0,660 660,1170 1200,1410 1410,1680 1710,1950
become part of {} term

1487
00:45:26,110 --> 00:45:26,800
0,90 90,300 300,420 420,600 600,690
that has all three of

1488
00:45:26,800 --> 00:45:28,870
0,330 540,960 960,1470 1470,1740 1740,2070
them,| but basically there's no
|但基本上不会出现大脑分裂的问题，

1489
00:45:28,870 --> 00:45:30,940
0,390 390,600 600,1230 1230,1530 1530,2070
chance of split brain problem,|
|

1490
00:45:31,090 --> 00:45:32,920
0,960 960,1050 1050,1260 1260,1590 1590,1830
because you just can't actually
因为你实际上不能做任何手术，

1491
00:45:32,920 --> 00:45:34,620
0,180 180,360 360,870 870,1230
get any operations through,|
|

1492
00:45:35,740 --> 00:45:38,040
0,330 360,840 840,1140 1140,1800
so no split brain.|
所以没有分裂的大脑。|

1493
00:45:42,890 --> 00:45:43,520
0,120 120,180 180,390 390,510 510,630
And the reason that we
我们避免大脑分裂的原因是，

1494
00:45:43,520 --> 00:45:44,720
0,270 270,600 600,900 900,960 960,1200
avoid split brain is,| because
|因为这个多数规则以及这些术语数字。

1495
00:45:44,720 --> 00:45:46,190
0,90 90,240 240,750 750,1230 1260,1470
of this majority rule as

1496
00:45:46,190 --> 00:45:47,540
0,240 240,390 390,570 570,840 840,1350
well as these term numbers.|
|

1497
00:45:51,400 --> 00:45:52,450
0,450 450,630 630,720 720,900 900,1050
Okay, that's of course not
好吧，这当然不是唯一的问题，

1498
00:45:52,450 --> 00:45:55,060
0,120 120,690 720,1530 1560,2490 2490,2610
the only problem,| that we
|我们可能面临的另一个挑战是，

1499
00:45:55,060 --> 00:45:58,520
0,270 270,690 1170,2250 2250,2970
might have another challenge

1500
00:45:59,400 --> 00:46:01,360
0,480 480,750
{} is,|
|

1501
00:46:01,730 --> 00:46:03,420
0,240 240,450 450,600 600,1140
we might end up
我们可能会以分裂投票告终。

1502
00:46:03,940 --> 00:46:05,480
0,300 300,480 480,990
with split vote.|
|

1503
00:46:09,160 --> 00:46:09,940
0,300 300,450 450,540 540,690 690,780
So like it was a
所以就像这是一张特别的照片，

1504
00:46:09,940 --> 00:46:11,470
0,420 420,1110 1110,1260 1260,1440 1440,1530
particular picture,| we had a
|我们有一位领袖，

1505
00:46:11,470 --> 00:46:13,390
0,540 540,1170 1230,1500 1500,1650 1650,1920
leader,| maybe here was leader
|也许这是10年来的领头羊，

1506
00:46:13,390 --> 00:46:15,190
0,90 90,630 1140,1350 1350,1710 1710,1800
in 10,| is partition of
|是网络的分区，

1507
00:46:15,190 --> 00:46:16,480
0,60 60,720
the network,|
|

1508
00:46:16,480 --> 00:46:19,480
0,390 390,690 690,1080 1080,1800 2130,3000
{} here are two followers
以下是10年中的两位追随者，

1509
00:46:19,480 --> 00:46:21,280
0,180 180,840
in 10,|
|

1510
00:46:22,540 --> 00:46:24,430
0,600 1050,1470 1470,1650 1650,1740 1740,1890
and {} if we're not
如果我们一不小心，

1511
00:46:24,430 --> 00:46:25,900
0,600 600,690 690,870 870,1290 1290,1470
careful,| you know, maybe they
|你知道，也许他们真的会开始你知道，你知道，选举非常接近，

1512
00:46:25,900 --> 00:46:27,070
0,180 180,420 420,960 960,1050 1050,1170
will actually start you know

1513
00:46:27,070 --> 00:46:28,240
0,420 420,690 690,960 960,1050 1050,1170
elections very close to each

1514
00:46:28,240 --> 00:46:29,080
0,330
other,|
|

1515
00:46:29,640 --> 00:46:31,260
0,270 270,690 810,960 960,1230 1230,1620
and so you {F10 -}
所以你F10，你知道，投票给自己，

1516
00:46:31,260 --> 00:46:33,630
0,120 120,450 450,570 570,1200 1530,2370
{you,know} vote for itself, {}|
|

1517
00:46:33,900 --> 00:46:35,610
0,330 330,600 600,1110 1110,1320 1320,1710
first leader follower votes itself,|
第一个领袖追随者自己投票，|

1518
00:46:35,610 --> 00:46:37,530
0,60 60,390 390,1200 1350,1650 1650,1920
the second leader, second follower
第二位领袖，选票的第二位追随者，

1519
00:46:37,530 --> 00:46:39,300
0,60 60,300 300,930 990,1680 1680,1770
of votes itself,| then you
|然后你就知道他们互相发出了投票请求

1520
00:46:39,300 --> 00:46:42,120
0,210 210,360 360,870 870,1290 2070,2820
know they sent {you,know} {}

1521
00:46:42,150 --> 00:46:43,860
0,330 330,750 750,1050 1050,1230 1230,1710
vote request with each other|
|

1522
00:46:44,070 --> 00:46:46,680
0,870 870,1590 1620,2070 2070,2310 2310,2610
and the rule is that
规则是，你知道你可以投票，每学期一票。

1523
00:46:46,680 --> 00:46:47,640
0,90 90,180 180,360 360,480 480,960
you know you can vote,

1524
00:46:48,340 --> 00:46:50,880
0,360 360,1170
one vote

1525
00:46:50,910 --> 00:46:52,340
0,150 150,630
per term.|
|

1526
00:46:53,080 --> 00:46:53,920
0,60

1527
00:46:54,860 --> 00:46:55,880
0,180 180,690 720,810 810,900 900,1020
So when you know the
所以当你知道第一批追随者投票给自己

1528
00:46:55,880 --> 00:46:57,680
0,390 390,870 870,1170 1170,1260 1260,1800
first followers voted for itself|
|

1529
00:46:57,680 --> 00:46:58,430
0,120 120,210 210,360 360,630 630,750
and it has voted for
而且它已经为自己投票了，

1530
00:46:58,430 --> 00:46:59,810
0,570 570,810 810,930 930,1320 1320,1380
itself,| when it receives a
|当它收到第二个投票请求时，它实际上不能投票给该请求，因为它已经投票给了自己，

1531
00:46:59,810 --> 00:47:04,540
0,240 240,450 450,3780
second vote {request,,it,actually,cannot,vote,for,that,request,,because,it,already,voted,for,itself},|
|

1532
00:47:05,080 --> 00:47:05,980
0,390 390,570 570,690 690,750 750,900
{} and so at this
因此，在这一点上，我们将进行分散投票，

1533
00:47:05,980 --> 00:47:07,180
0,390 390,570 570,720 720,870 870,1200
point, we're gonna have split

1534
00:47:07,180 --> 00:47:08,080
0,360 360,510 510,660 660,840 840,900
votes,| like this guy is
|就像这个人会有一票

1535
00:47:08,080 --> 00:47:09,130
0,120 120,180 180,330 330,540 540,1050
going to have one vote|
|

1536
00:47:09,130 --> 00:47:09,910
0,210 210,360 360,570 570,660 660,780
and this guy is going
而这个人将有一票，

1537
00:47:09,910 --> 00:47:11,240
0,90 90,240 240,450 450,720
to have one vote,|
|

1538
00:47:11,480 --> 00:47:13,460
0,180 180,420 420,570 570,1140 1440,1980
it won't do anything, {}|
它什么也做不了，|

1539
00:47:13,460 --> 00:47:14,300
0,300 300,450 450,540 540,660 660,840
in but at some point
但在后来的某个时候，

1540
00:47:14,300 --> 00:47:16,700
0,510 510,1140 1380,1890 1980,2280 2280,2400
again later,| there will be
|会有暂停，

1541
00:47:16,700 --> 00:47:17,840
0,60 60,630
{} timeout,|
|

1542
00:47:18,260 --> 00:47:19,910
0,480 480,840 840,1110 1110,1350 1350,1650
{} and then this process
然后这个过程又开始了，

1543
00:47:19,910 --> 00:47:21,080
0,210 210,300 300,600
starts {again -},|
|

1544
00:47:21,440 --> 00:47:22,550
0,420 420,540 540,750 750,840 840,1110
and of course you know
当然，你知道这个过程的一部分，

1545
00:47:22,700 --> 00:47:23,690
0,210 210,270 270,390 390,870 870,990
part of that process,| you
|你知道这是11号选举，11号选举的结果，

1546
00:47:23,690 --> 00:47:25,310
0,150 150,450 450,690 870,1230 1230,1620
know this is election 11,

1547
00:47:25,310 --> 00:47:27,350
0,990 1020,1200 1200,1860 1860,1980 1980,2040
11 {result,in} 12,| if you
|如果你想参加第12号选举，

1548
00:47:27,350 --> 00:47:28,160
0,180 180,270 270,420 420,510 510,810
want to go to election

1549
00:47:28,160 --> 00:47:29,780
0,150 150,1140
number 12,|
|

1550
00:47:29,900 --> 00:47:31,460
0,480 480,660 660,930 930,1170 1170,1560
and you start trying to
然后你开始尝试再次尝试这样做，

1551
00:47:31,490 --> 00:47:32,480
0,300 300,390 390,510 510,660 660,990
trying to do this again,|
|

1552
00:47:33,590 --> 00:47:34,610
0,390 390,510 510,630 630,840 840,1020
now {if,you} not care for
现在如果你不在意正确的，

1553
00:47:34,610 --> 00:47:36,560
0,360 840,1170 1170,1470 1470,1650 1650,1950
correct,| this could just happen
|这可能会一次又一次无休止地发生。

1554
00:47:36,560 --> 00:47:38,210
0,540 540,1020 1020,1140 1140,1410 1410,1650
over over and over {endlessly

1555
00:47:38,210 --> 00:47:39,080
0,360
-}.|
|

1556
00:47:39,110 --> 00:47:40,820
0,570 570,780 780,1260 1260,1350 1350,1710
Basically every time you know
基本上每次你知道这两个追随者大致同时开始这次选举

1557
00:47:40,850 --> 00:47:42,530
0,120 120,750 780,1230 1230,1620 1620,1680
the two followers roughly at

1558
00:47:42,530 --> 00:47:43,460
0,90 90,300 300,570 570,840 840,930
the same time start this

1559
00:47:43,460 --> 00:47:44,870
0,450 450,900 900,1110 1110,1290 1290,1410
election| and we're not going
|我们不会取得任何进展。

1560
00:47:44,870 --> 00:47:46,640
0,210 210,480 480,750 750,1260
to make forward progress.|
|

1561
00:47:46,840 --> 00:47:47,410
0,150 150,270 270,390 390,510 510,570
And so we need to
因此，我们需要避免的问题是，选举计时器是随机的。

1562
00:47:47,410 --> 00:47:49,450
0,270 270,420 420,1020 1200,1530 1530,2040
avoid this problem {} is

1563
00:47:49,450 --> 00:47:51,280
0,390 390,660 660,1200 1200,1410 1410,1830
that the election {timers -}

1564
00:47:51,310 --> 00:47:52,780
0,300 300,990
are randomized.|
|

1565
00:48:08,340 --> 00:48:11,220
0,540 540,720 720,1020 1020,1770 1920,2880
{} And so when {}
所以当你认识的追随者在报纸上设定选举计时器时，

1566
00:48:11,250 --> 00:48:12,990
0,750 780,1350 1350,1440 1440,1500 1500,1740
the followers you know set

1567
00:48:12,990 --> 00:48:14,850
0,60 60,420 420,720 720,1080 1170,1860
the election {timer -} {}

1568
00:48:14,850 --> 00:48:17,100
0,600 900,960 960,1500 1500,2010 2040,2250
in the paper,| they talk
|他们谈到选择150毫秒到300毫秒之间的值，

1569
00:48:17,100 --> 00:48:18,930
0,480 600,930 930,1050 1050,1500 1500,1830
about picking a value between

1570
00:48:18,930 --> 00:48:20,820
0,570 570,1470
150 milliseconds

1571
00:48:20,970 --> 00:48:23,120
0,450 450,1650
and {300,milliseconds},|
|

1572
00:48:23,440 --> 00:48:25,120
0,690 690,960 960,1020 1020,1200 1200,1680
random number in that interval,|
该区间内的随机数，|

1573
00:48:25,720 --> 00:48:26,860
0,120 120,330 330,960 960,1020 1020,1140
and every time you know
每次你知道这些追随者基本上重置了他们的选举超时，

1574
00:48:26,860 --> 00:48:29,620
0,540 750,1230 1230,1830 1830,2370 2370,2760
these {} followers basically reset

1575
00:48:29,620 --> 00:48:31,330
0,270 270,570 570,1170 1290,1530 1530,1710
their election timeout,| they pick
|他们选择了一个新的数字，其中的随机数字

1576
00:48:31,330 --> 00:48:32,440
0,90 90,360 360,750 750,810 810,1110
a new number, {} random

1577
00:48:32,440 --> 00:48:34,360
0,300 300,390 390,540 540,1320 1440,1920
number in that involved| and
|只有当计时器计时结束时，他们才会进行选举，

1578
00:48:34,360 --> 00:48:35,980
0,240 240,390 390,930 930,1410 1410,1620
only when that timer goes

1579
00:48:35,980 --> 00:48:37,450
0,240 240,360 360,810 840,1020 1020,1470
off, they run the election,|
|

1580
00:48:38,130 --> 00:48:40,140
0,630 780,1080 1080,1380 1380,1890 1890,2010
and, {} if basically you
而且，如果你基本上知道，

1581
00:48:40,140 --> 00:48:42,120
0,630 840,1410 1440,1590 1590,1890 1890,1980
know,| if this interval is
|如果该间隔足够宽，

1582
00:48:42,120 --> 00:48:44,580
0,270 270,780 990,1530 1530,1710 1710,2460
wide enough,| that it's unlikely
|这不太可能是第一个人或第一个追随者真正得到，

1583
00:48:44,580 --> 00:48:45,840
0,240 240,450 450,510 510,840 840,1260
that's like the first person

1584
00:48:45,840 --> 00:48:46,920
0,120 120,210 210,450 450,900 900,1080
or the first follower that

1585
00:48:46,920 --> 00:48:48,750
0,300 300,570 570,960 1380,1560 1560,1830
actually gets the,| the first
|选举计时器超时的第一个追随者，

1586
00:48:48,780 --> 00:48:51,330
0,750 750,1500 1590,2040 2040,2310 2310,2550
follower whose election timer runs

1587
00:48:51,330 --> 00:48:54,120
0,420 1440,1710 1710,2040 2040,2520 2520,2790
out,| you know the interval
|你知道，间隔足够宽，你知道，

1588
00:48:54,120 --> 00:48:55,080
0,90 90,330 330,660 660,840 840,960
is wide enough that you

1589
00:48:55,080 --> 00:48:56,640
0,330 330,960 990,1320 1320,1380 1380,1560
know,| {} there's a good
|很有可能真正成功完成，完全的选举，

1590
00:48:56,640 --> 00:48:58,650
0,420 420,630 630,960 960,1680 1680,2010
chance that actual succeed complete,

1591
00:48:58,650 --> 00:49:00,750
0,480 480,990 1050,1500 1500,1590 1590,2100
complete election,| before the second
|在第二个定时器长大之前，

1592
00:49:01,020 --> 00:49:02,160
0,720
{}

1593
00:49:02,190 --> 00:49:03,870
0,450 450,660 660,930 1080,1380 1380,1680
timer grows up,| before {}
|之前有另一个追随者，

1594
00:49:03,870 --> 00:49:05,490
0,120 120,390 390,870 1170,1470 1470,1620
had another follower,| so this
|这就避免了无休止的分裂投票，

1595
00:49:05,490 --> 00:49:06,780
0,600 600,690 690,810 810,1050 1050,1290
avoids you know the sort

1596
00:49:06,780 --> 00:49:08,730
0,180 330,810 810,1050 1050,1530 1650,1950
of endless split votes,| {you,know}
|你知道我们可能会倒霉

1597
00:49:08,730 --> 00:49:09,870
0,90 90,270 270,420 420,960 960,1140
we might get unlucky| and
|我们可能会得到一到两张分裂票，

1598
00:49:09,870 --> 00:49:10,620
0,120 120,240 240,450 450,690 690,750
we get maybe one or

1599
00:49:10,620 --> 00:49:12,450
0,210 210,480 480,960 1080,1590 1590,1830
two split votes,| but over
|但随着时间的推移，你知道情况肯定是这样的，我们最终会成功。

1600
00:49:12,450 --> 00:49:13,440
0,540 540,630 630,720 720,840 840,990
time you know that has

1601
00:49:13,440 --> 00:49:14,340
0,90 90,180 180,240 240,600 600,900
to be the case, that

1602
00:49:14,610 --> 00:49:16,050
0,690 690,1140 1140,1230 1230,1380 1380,1440
{} in the end we

1603
00:49:16,050 --> 00:49:17,080
0,90 90,600
will succeed.|
|

1604
00:49:20,380 --> 00:49:21,100
0,180 180,210 210,240 240,540 540,720
There are a couple sort
有几种，

1605
00:49:21,100 --> 00:49:22,360
0,270 330,660 660,810 810,900 900,1260
of,| {} this is important
|这对实验2来说可能很重要，

1606
00:49:22,360 --> 00:49:23,410
0,210 210,300 300,390 390,630 630,1050
maybe for the lab 2,|
|

1607
00:49:23,590 --> 00:49:25,330
0,330 330,540 540,720 720,990 990,1740
{} there's a couple pressures
这些选举超时有几个压力，

1608
00:49:25,720 --> 00:49:27,850
0,810 810,990 990,1410 1410,1710 1710,2130
on these election time outs,|
|

1609
00:49:32,840 --> 00:49:35,060
0,690 1380,1530 1530,1650 1650,1800 1800,2220
{} you don't want to
你不想让选举超时时间太短，对吧，

1610
00:49:35,390 --> 00:49:36,680
0,210 210,270 270,600 600,1110 1110,1290
make an election timeout is

1611
00:49:36,680 --> 00:49:39,800
0,840 2010,2610
too short,

1612
00:49:40,080 --> 00:49:40,920
0,210 210,450 450,570 570,720 720,840
right,| because if it's too
|因为如果它太短

1613
00:49:40,920 --> 00:49:43,230
0,540 540,1080 1320,1560 1560,1920 1920,2310
short| and for example short
|例如，比心跳还短，

1614
00:49:43,230 --> 00:49:45,390
0,180 180,870 900,1590 1590,1770 1770,2160
than {} heartbeat,| you know
|你知道你可能会丢失一条消息

1615
00:49:45,390 --> 00:49:46,560
0,120 120,300 300,540 540,720 720,1170
you might lose one message|
|

1616
00:49:46,560 --> 00:49:47,910
0,180 180,570 570,690 690,990 990,1350
and immediately you start running
一旦你开始竞选，

1617
00:49:47,910 --> 00:49:50,070
0,210 210,630 1170,1440 1470,1800 1800,2160
an election,| and nothing bad
|没有什么不好的事情发生，

1618
00:49:50,070 --> 00:49:52,230
0,600 630,1440 1440,1560 1560,1920 1920,2160
happens,| because you know we'll
|因为你知道我们会选出一位新领袖，

1619
00:49:52,230 --> 00:49:53,220
0,240 240,270 270,420 420,900 900,990
elect a new leader,| you
|你会经历一个新的学期，诸如此类的事情，

1620
00:49:53,220 --> 00:49:53,850
0,90 90,240 240,360 360,420 420,630
will go through a new

1621
00:49:53,850 --> 00:49:54,660
0,390 390,480 480,570 570,690 690,810
term and all that kind

1622
00:49:54,660 --> 00:49:56,400
0,60 60,450 750,1260 1260,1650 1650,1740
of stuff,| but basically you
|但基本上你知道，在这次选举中，

1623
00:49:56,400 --> 00:49:58,530
0,330 330,690 690,930 930,1110 1110,2130
know during this an election,|
|

1624
00:49:58,530 --> 00:49:59,910
0,180 180,480 480,600 600,960 960,1380
this system is actually not
这个系统实际上是不可用的，客户端实际上被阻止了。

1625
00:49:59,940 --> 00:50:01,800
0,1020 1020,1110 1110,1470 1470,1620 1620,1860
usable, the clients are actually

1626
00:50:01,800 --> 00:50:02,660
0,480
blocked.|
|

1627
00:50:02,680 --> 00:50:04,480
0,270 270,360 360,480 480,1260
So you don't want
所以你不想不必要地导致选举，

1628
00:50:04,480 --> 00:50:07,690
0,1020 1020,1350 1350,1680 1680,2310 2670,3210
unnecessarily {} cause elections, {}|
|

1629
00:50:07,690 --> 00:50:08,320
0,150 150,270 270,450 450,540 540,630
and so one of the
所以你实际上想吐出的东西之一可能至少比几次暂停，几次心跳更有价值，

1630
00:50:08,320 --> 00:50:09,220
0,180 180,270 270,390 390,570 570,900
things you want to actually

1631
00:50:09,220 --> 00:50:12,490
0,420 420,780 780,1140 1260,1830 1830,3270
basically probably spit take {}

1632
00:50:12,640 --> 00:50:14,740
0,930 930,1170 1170,1650 1650,2010 2010,2100
value at least bigger than

1633
00:50:14,740 --> 00:50:15,880
0,90 90,300 300,600 600,960 960,1140
a few time out, a

1634
00:50:15,880 --> 00:50:17,920
0,270 270,960
few heartbeats,|
|

1635
00:50:22,240 --> 00:50:24,340
0,660 660,840 840,1500 1530,1980 1980,2100
perhaps in a, maybe a
也许在一个，也许一个数据中心需要几毫秒的时间来进行RPC

1636
00:50:24,340 --> 00:50:25,360
0,240 240,720 720,810 810,960 960,1020
data center will take a

1637
00:50:25,360 --> 00:50:27,220
0,240 270,990 990,1410 1470,1800 1800,1860
few milliseconds to do an

1638
00:50:27,220 --> 00:50:28,990
0,840 1050,1260 1260,1410 1410,1590 1590,1770
rpc| and we may want
|我们可能想要等待至少你知道，所以可能三四次RPC左右[好]次，

1639
00:50:28,990 --> 00:50:30,130
0,300 300,570 570,690 690,1080 1080,1140
to wait at least you

1640
00:50:30,130 --> 00:50:31,330
0,120 120,270 270,540 540,870 870,1200
know so maybe three four

1641
00:50:31,330 --> 00:50:32,590
0,450 450,720 720,870 870,1170 1170,1260
rpc around [good] times,| so
|以便我们有机会重试RPC，

1642
00:50:32,590 --> 00:50:33,460
0,120 120,210 210,330 330,390 390,870
that we get a chance

1643
00:50:33,460 --> 00:50:35,650
0,450 690,1440 1470,1890 1890,1980 1980,2190
to a retry {rpc -

1644
00:50:35,650 --> 00:50:38,530
0,60 60,540 750,1470 2190,2640 2640,2880
- -},| {} without actually
|在没有真正触发选举计时器的情况下，

1645
00:50:38,530 --> 00:50:40,000
0,210 210,570 570,930 930,1080 1080,1470
having election timer go off,|
|

1646
00:50:40,000 --> 00:50:41,050
0,150 150,360 360,480 480,810 810,1050
so we can cover from
这样我们就可以从临时网络故障中恢复过来。

1647
00:50:41,050 --> 00:50:42,760
0,510 510,840 840,1410
temporary network fails.|
|

1648
00:50:44,390 --> 00:50:45,590
0,600 660,810 810,930 930,1050 1050,1200
Then you know we want
那么你知道我们想要假定地增加一些随机的值，

1649
00:50:45,590 --> 00:50:47,000
0,60 60,300 300,450 450,1080 1080,1410
to {presumely -} add some

1650
00:50:47,000 --> 00:50:51,230
0,270 270,840 1230,1710 2640,3360 3840,4230
random value to that,| random
|随机值，以避免你知道的分裂投票，

1651
00:50:51,230 --> 00:50:52,730
0,300 300,510 510,1140 1170,1350 1350,1500
value to avoid you know

1652
00:50:52,730 --> 00:50:54,360
0,300 300,600 600,1140
the split votes,|
|

1653
00:50:54,450 --> 00:50:56,250
0,330 330,540 540,1020 1020,1410 1410,1800
and so one hand we
所以一方面我们想让随机值尽可能大，

1654
00:50:56,250 --> 00:50:56,880
0,120 120,180 180,300 300,420 420,630
want to make the random

1655
00:50:56,880 --> 00:50:58,740
0,390 390,660 660,780 780,1380 1410,1860
values big as possible,| because
|因为我们把它做大了，

1656
00:50:58,740 --> 00:50:59,970
0,150 150,300 300,390 390,750 750,1230
we make it big,| then
|那么，我们实际上遇到分裂投票问题的可能性很小。

1657
00:51:00,120 --> 00:51:01,260
0,210 210,420 420,630 630,960 960,1140
a very little chance that

1658
00:51:01,260 --> 00:51:03,510
0,330 330,750 750,1080 1080,1440 1440,2250
actually we run into a

1659
00:51:03,540 --> 00:51:04,890
0,330 330,540 540,660 660,930 930,1350
split {vote -} {} problem.|
|

1660
00:51:05,740 --> 00:51:07,150
0,330 330,390 390,570 570,1020 1200,1410
But the other hand {}
但另一方面，如果我们这么做了，

1661
00:51:07,150 --> 00:51:08,020
0,210 210,330 330,480 480,750 750,870
if we do that,| then
|那么你就有可能知道系统可能会停机更长一段时间，

1662
00:51:08,020 --> 00:51:09,010
0,150 150,240 240,690 690,900 900,990
there's a chance that you

1663
00:51:09,010 --> 00:51:10,300
0,120 120,240 240,720 720,1020 1020,1290
know the system may be

1664
00:51:10,300 --> 00:51:11,200
0,270 270,390 390,420 420,690 690,900
down for a longer period

1665
00:51:11,200 --> 00:51:12,040
0,60 60,360 360,450 450,690 690,840
of time,| we might take
|我们可能会把选举超时的时间定得很高，

1666
00:51:12,040 --> 00:51:13,420
0,60 60,390 390,750 750,990 990,1380
a big value for the

1667
00:51:13,420 --> 00:51:14,950
0,360 360,660 660,1020 1260,1410 1410,1530
election time out,| and that
|从客户的角度来看，这意味着停机时间，

1668
00:51:14,950 --> 00:51:16,390
0,300 300,510 510,810 810,1170 1170,1440
means {} down time from

1669
00:51:16,390 --> 00:51:17,170
0,240 270,510 510,570 570,720 720,780
the point of view of

1670
00:51:17,170 --> 00:51:18,340
0,60 60,690
the clients,|
|

1671
00:51:18,400 --> 00:51:20,590
0,510 600,1200 1710,1980 1980,2130 2130,2190
{} so we want to
所以我们想要保持足够短的时间，

1672
00:51:20,590 --> 00:51:22,800
0,180 180,720 720,1020 1020,1680
keep this short enough,|
|

1673
00:51:27,040 --> 00:51:28,300
0,180 180,510 510,750 750,810 810,1260
the down time is short,|
停机时间很短，|

1674
00:51:36,030 --> 00:51:37,170
0,150 150,210 210,540 540,660 660,1140
in the paper in []
在[]选举的论文中，做了相当多的工作来验证，

1675
00:51:37,170 --> 00:51:38,100
0,240 240,510 510,690 690,900 900,930
{election -} does quite a

1676
00:51:38,100 --> 00:51:39,510
0,120 120,210 210,600 630,1290 1290,1410
bit of work on sort

1677
00:51:39,510 --> 00:51:40,620
0,60 60,600 600,720 720,990 990,1110
of validating,| in order for
|以便为其特定设置设置合理的值

1678
00:51:40,620 --> 00:51:42,840
0,360 360,960 1560,1710 1710,1890 1890,2220
reasonable values for their particular

1679
00:51:42,840 --> 00:51:43,740
0,300 300,420 420,600 600,750 750,900
setting| and then that's how
|这就是为什么他们有250到300毫秒的时间，

1680
00:51:43,740 --> 00:51:45,300
0,150 150,360 360,1110 1110,1380 1380,1560
they got 250 to {300,milliseconds

1681
00:51:45,300 --> 00:51:47,310
0,960 1350,1590 1590,1650 1650,1950 1950,2010
-},| in the lab, we're
|在实验室里，我们将变得独具匠心，

1682
00:51:47,310 --> 00:51:48,450
0,120 120,180 180,300 300,600 600,1140
going to be original generous,|
|

1683
00:51:48,450 --> 00:51:51,060
0,0 1110,1800 1800,1950 1950,2070 2070,2610
{} basically if you recover
基本上，如果你在一秒钟内恢复，

1684
00:51:51,060 --> 00:51:52,620
0,240 240,300 300,840 900,1380 1380,1560
within a second,| {} you're
|你或多或少会做得很好，

1685
00:51:52,620 --> 00:51:53,340
0,300 300,360 360,540 540,660 660,720
more or less going to

1686
00:51:53,340 --> 00:51:54,140
0,60 60,360
be good,|
|

1687
00:51:54,320 --> 00:51:57,800
0,780 1110,2400 2550,2760 2760,3000 3000,3480
{} {with,for} our test cases.|
作为我们的测试用例。|

1688
00:52:02,520 --> 00:52:03,750
0,240 240,420 420,600 600,840 840,1230
Okay, {I,want} to make one
好的，我想再提一点关于选举的问题，

1689
00:52:03,750 --> 00:52:07,200
0,600 630,1200 1200,1410 1410,2310 2760,3450
more point about the, {

1690
00:52:08,440 --> 00:52:11,110
0,750 750,960 960,1020 1020,1560 1980,2670
-} about the elections, {}|
|

1691
00:52:11,590 --> 00:52:13,810
0,450 450,1440 1470,1980 1980,2130 2130,2220
so another scenario that is
因此，另一个需要考虑的重要场景是

1692
00:52:13,810 --> 00:52:15,760
0,480 480,540 540,900 900,1380 1410,1950
important to consider is {}|
|

1693
00:52:15,760 --> 00:52:16,360
0,90 90,210 210,330 330,510 510,600
you know we have a
你知道我们有一个追随者

1694
00:52:16,360 --> 00:52:18,370
0,630 660,870 870,990 990,1590 1620,2010
follower，| {we,have} the leader,| leader
|我们有头目，|领袖倒下，

1695
00:52:18,370 --> 00:52:19,990
0,240 240,870 1170,1350 1350,1470 1470,1620
goes down,| so this is
|所以这是10，这是10，这是追随者10。

1696
00:52:19,990 --> 00:52:21,730
0,660 660,810 810,930 930,1470 1500,1740
10, this is 10, here's

1697
00:52:21,730 --> 00:52:23,100
0,360 360,900
follower 10.|
|

1698
00:52:23,740 --> 00:52:25,060
0,750

1699
00:52:25,150 --> 00:52:26,290
0,240 240,570 570,780 780,1020 1020,1140
And we already talked a
我们已经谈过了，

1700
00:52:26,290 --> 00:52:27,760
0,210 210,330 330,600 600,780 1110,1470
little bit about it, {}|
|

1701
00:52:27,760 --> 00:52:29,440
0,750 900,1200 1200,1350 1350,1500 1500,1680
when let's say this guy
当我们说这个人先走的时候，为自己投票，

1702
00:52:29,440 --> 00:52:31,180
0,180 180,810 1110,1290 1290,1590 1590,1740
goes first, {} vote for

1703
00:52:31,180 --> 00:52:32,440
0,690
itself,|
|

1704
00:52:33,200 --> 00:52:35,300
0,630 960,1470 1470,1530 1530,1650 1650,2100
{} and you know we
你知道我们的协议记录了不稳定的存储，为什么我们投票给了谁，

1705
00:52:35,300 --> 00:52:37,760
0,450 480,960 960,1620 1620,1710 1710,2460
the protocol records you know

1706
00:52:37,760 --> 00:52:40,340
0,630 630,1320 1500,2160 2160,2340 2340,2580
unstable storage, why who we

1707
00:52:40,340 --> 00:52:41,560
0,330 330,690
voted for,|
|

1708
00:52:41,850 --> 00:52:43,740
0,270 270,420 420,1050 1080,1680 1680,1890
so the record records on
所以这个跟随者一，这个跟随者二上的记录，会记录在第十一届的投票结果，

1709
00:52:43,740 --> 00:52:46,680
0,780 990,1290 1290,1800 1800,2280 2640,2940
the this follower one, this

1710
00:52:46,680 --> 00:52:48,210
0,240 240,360 360,720 720,960 960,1530
{follower -} two, will record

1711
00:52:48,270 --> 00:52:50,700
0,510 510,1050 1050,1500 1500,1860 1860,2430
{} voted for {in,term} 11,|
|

1712
00:52:51,000 --> 00:52:52,740
0,210 210,390 390,960 960,1260 1260,1740
you know for follower one,
你知道，对于追随者1，为什么它被记录在稳定的存储器上，

1713
00:52:55,070 --> 00:52:56,600
0,450 450,570 570,720 720,1320 1350,1530
why is it recorded on

1714
00:52:56,600 --> 00:52:58,080
0,300 300,990
stable storage,|
|

1715
00:52:59,180 --> 00:53:00,350
0,150 150,360 360,720 720,900 900,1170
and why does {you,know} follower
为什么你知道追随者需要记住这一点，

1716
00:53:00,350 --> 00:53:01,840
0,150 150,240 240,930
need to remember

1717
00:53:01,870 --> 00:53:03,880
0,690 720,1440
that, {}|
|

1718
00:53:05,670 --> 00:53:06,780
0,300 300,360 360,690 690,900 900,1110
that is voted in term
这是在第11届任期内投票决定的。

1719
00:53:06,780 --> 00:53:08,240
0,300 300,450 450,960
11 for itself.|
|

1720
00:53:14,040 --> 00:53:15,690
0,600 630,870 870,1050 1050,1350 1350,1650
{} This way doesn't vote
如果失败，这种方式不会投票两次。

1721
00:53:15,690 --> 00:53:18,180
0,450 450,570 570,810 990,1890
twice, if it fails.|
|

1722
00:53:18,380 --> 00:53:20,540
0,600 600,900 900,1110 1110,1560 1560,2160
Yeah, it might crash, right
是的，它可能会崩溃，就在这里，然后来支援，

1723
00:53:20,540 --> 00:53:21,640
0,480
here,

1724
00:53:21,900 --> 00:53:25,950
0,780 780,1590 1620,2160 2220,2940 3330,4050
{} and {} {come,backup}, {}|
|

1725
00:53:25,950 --> 00:53:27,600
0,450 450,630 630,840 840,1230 1230,1650
and it should remember that
它应该记住这一点，有些事情可能会是，

1726
00:53:27,600 --> 00:53:28,920
0,390 390,720 720,930 930,1140 1140,1320
and something might have been,|
|

1727
00:53:28,920 --> 00:53:29,910
0,180 180,330 330,450 450,720 720,990
let's say it was actually
假设它实际上是推荐了这里的一个人，追随者无论是3个，

1728
00:53:29,910 --> 00:53:31,320
0,420 420,630 630,930 930,1110 1110,1410
referred one guy in here,

1729
00:53:32,160 --> 00:53:34,530
0,540 540,900 900,1410 1680,2040 2040,2370
follower whatever 3,| {} and
|并且已经投票给了追随者3，

1730
00:53:34,530 --> 00:53:36,360
0,300 300,690 690,870 870,1350 1350,1830
already voted for follower 3,|
|

1731
00:53:36,630 --> 00:53:38,550
0,690 720,1260 1260,1530 1530,1710 1710,1920
{} then, {} it can
那么它其实心里是不会变的，对吧，

1732
00:53:38,550 --> 00:53:40,220
0,240 240,450 450,720 720,1260
actually not change {in,mind},

1733
00:53:40,840 --> 00:53:43,000
0,420 930,1350 1350,1560 1560,1860 1860,2160
right,| {} and so because
|因为到了最后，我们在学期末，

1734
00:53:43,000 --> 00:53:43,900
0,90 90,180 180,450 450,720 720,900
in the end, we at

1735
00:53:43,900 --> 00:53:44,560
0,120 120,240 240,300 300,360 360,660
the end of the term,|
|

1736
00:53:44,560 --> 00:53:46,300
0,90 90,270 270,330 330,900 1500,1740
we need to have have
我们需要有一个位置，

1737
00:53:46,300 --> 00:53:47,080
0,90 90,180 180,240 240,300 300,780
to be in a position,|
|

1738
00:53:47,290 --> 00:53:48,700
0,330 330,510 510,960 990,1170 1170,1410
that per term there's only
每届任期只有一个领导人，永远不会有两个，

1739
00:53:48,700 --> 00:53:50,650
0,660 660,1020 1020,1290 1290,1680 1680,1950
one leader and never never

1740
00:53:50,650 --> 00:53:51,460
0,270
two,|
|

1741
00:53:51,730 --> 00:53:53,890
0,180 180,660 810,1140 1140,1500 1500,2160
and so to ensure that
因此，为了确保每个追随者都必须记住投票给了哪位候选人，并且永远不会改变主意。

1742
00:53:53,890 --> 00:53:56,830
0,690 780,1560 1770,2370 2370,2820 2820,2940
every follower must remember for

1743
00:53:56,830 --> 00:53:58,630
0,210 210,750 750,1230 1290,1470 1470,1800
which candidate voted and never

1744
00:53:58,630 --> 00:53:59,980
0,270 270,390 390,840
change its mind.|
|

1745
00:54:07,920 --> 00:54:09,450
0,480 510,660 660,900 900,1080 1080,1530
Okay, I guess all discussion
好吧，我想聊天室里所有关于暂停次数的讨论都和实验室有关，

1746
00:54:09,450 --> 00:54:11,700
0,150 150,510 510,720 720,1080 1080,2250
in the chat about a

1747
00:54:12,150 --> 00:54:14,430
0,660 660,1050 1500,1890 1890,2190 2190,2280
timeout numbers in relation to

1748
00:54:14,430 --> 00:54:16,590
0,90 90,600 780,1350 1590,2070 2070,2160
the lab,| so people can
|所以人们可以看到他们对此感到困惑，

1749
00:54:16,590 --> 00:54:17,820
0,150 150,540 570,960 960,1230 1230,1230
look {there -} {} are

1750
00:54:17,820 --> 00:54:19,800
0,660 660,840 840,1020 1020,1650 1650,1980
confused about this,| otherwise {}
|否则我们可以更多地谈论选举，

1751
00:54:20,850 --> 00:54:22,260
0,210 210,330 330,570 570,930 930,1410
we can talk about elections

1752
00:54:22,260 --> 00:54:23,070
0,90 90,240 240,420 420,660 660,810
a bit more,| because this
|因为这是我最不想说的关于选举的事情。

1753
00:54:23,070 --> 00:54:24,030
0,150 240,510 510,780 780,900 900,960
is the last thing I

1754
00:54:24,030 --> 00:54:25,500
0,120 120,180 180,360 360,660 690,1470
want to say about {}

1755
00:54:25,500 --> 00:54:26,880
0,420
elections.|
|

1756
00:54:28,320 --> 00:54:29,910
0,270 270,660 660,900 900,960 960,1590
Any questions about the elections?|
对选举有什么问题吗？|

1757
00:54:36,780 --> 00:54:38,640
0,270 270,750 1050,1320 1320,1530 1530,1860
Have a bit more general
有一个更笼统的问题，

1758
00:54:38,640 --> 00:54:40,380
0,570 600,1080
question,| so,
|所以，就像实验室的图2一样，

1759
00:54:40,380 --> 00:54:41,640
0,210 210,540 540,750 750,1110 1110,1260
in like the figure two

1760
00:54:41,640 --> 00:54:42,570
0,90 90,180 180,480 480,630 630,930
of the lab,| that says
|也就是说，对于存储类似当前术语的每个服务器，然后投票给谁，

1761
00:54:42,570 --> 00:54:44,740
0,390 390,570 570,1080 1110,1590
that for each {}

1762
00:54:44,770 --> 00:54:47,050
0,960 960,1440 1440,1620 1620,1890 1920,2280
server storing like the current

1763
00:54:47,050 --> 00:54:48,370
0,450 450,600 600,690 690,930 930,1320
term and then who voted

1764
00:54:48,370 --> 00:54:50,920
0,420 1260,1740 1740,2130 2130,2250 2250,2550
for,| but not the like
|但不是像它的候选人或追随者或领导者那样的服务器的类似当前状态。

1765
00:54:50,920 --> 00:54:52,630
0,360 360,900 930,1170 1170,1320 1320,1710
current state of the server

1766
00:54:52,630 --> 00:54:54,100
0,180 180,270 270,420 420,1020 1020,1470
like if its candidate or

1767
00:54:54,400 --> 00:54:57,200
0,630 720,1500 1620,1920 1920,2430
{} follower or leader.|
|

1768
00:54:57,630 --> 00:54:58,650
0,180 180,240 240,480 480,750 750,1020
So I'm wondering how they
所以我想知道他们喜欢什么，

1769
00:54:58,650 --> 00:55:00,220
0,990
like,|
|

1770
00:55:00,250 --> 00:55:01,750
0,120 120,300 300,870 870,1320 1350,1500
is that implied or is
这是暗示的，还是有其他方法来解决这个问题，

1771
00:55:01,750 --> 00:55:02,590
0,150 150,390 390,510 510,600 600,840
there another way to figure

1772
00:55:02,590 --> 00:55:04,870
0,150 150,450 840,1110 1110,1560 1590,2280
that out,| {} I guess
|我想当你回来的时候

1773
00:55:04,870 --> 00:55:05,860
0,270 270,540 540,630 630,720 720,990
{} when you come back

1774
00:55:05,860 --> 00:55:07,030
0,390 420,690 690,810 810,930 930,1170
up| and you come back
|然后你以追随者的身份回来，

1775
00:55:07,030 --> 00:55:08,420
0,120 120,240 240,300 300,870
up as a follower,|
|

1776
00:55:09,100 --> 00:55:10,930
0,840 840,1200 1200,1440 1440,1500 1500,1830
and you're starting an election,|
你要开始一场选举，|

1777
00:55:12,620 --> 00:55:14,600
0,690 690,1230 1230,1530 1530,1740 1740,1980
{} and then that will
最终，在选举结束时，

1778
00:55:14,600 --> 00:55:15,440
0,90 90,180 180,450 540,750 750,840
in the end, at the

1779
00:55:15,440 --> 00:55:16,040
0,90 90,150 150,210 210,480 480,600
end of the election,| you
|你知道你是什么，

1780
00:55:16,040 --> 00:55:17,340
0,90 90,270 270,390 390,750
know what you are,|
|

1781
00:55:18,300 --> 00:55:19,800
0,240 240,720 720,840 840,1290 1290,1500
you either a follower or
你要么是追随者，要么是领导者。

1782
00:55:19,800 --> 00:55:20,940
0,90 90,540
the leader.|
|

1783
00:55:24,090 --> 00:55:25,410
0,180 180,480 480,840 870,1080 1080,1320
I see, okay, thank you.|
我明白了，好的，谢谢你。|

1784
00:55:25,650 --> 00:55:28,320
0,240 240,360 360,630 1530,2280 2280,2670
That makes sense?| One warning
这事儿可以理解?|关于数字二的一个警告大多是积极的

1785
00:55:28,320 --> 00:55:31,470
0,420 420,1170 1500,1860 1860,2130 2130,3150
about {} figure two {}

1786
00:55:31,500 --> 00:55:32,910
0,540 540,990 990,1080 1080,1200 1200,1410
mostly positive| and then there's
|然后可能会有负面的说法。

1787
00:55:32,910 --> 00:55:35,280
0,240 240,540 540,990
maybe negative statement.|
|

1788
00:55:35,620 --> 00:55:36,580
0,420 420,510 510,570 570,810 810,960
Anywhere in the figure two
在图2中的任何地方，当它说你知道你应该这样做时，

1789
00:55:36,580 --> 00:55:37,570
0,210 210,300 300,630 630,900 900,990
when it says like you

1790
00:55:37,570 --> 00:55:38,860
0,330 330,540 540,690 690,840 840,1290
know you should do this,|
|

1791
00:55:39,190 --> 00:55:40,240
0,210 210,390 390,660 660,810 810,1050
you should really do it,|
你真的应该这么做，|

1792
00:55:40,420 --> 00:55:42,280
0,570 570,810 810,990 990,1470 1470,1860
{} so you cannot admit
所以你不能承认图2中的任何细节，

1793
00:55:42,280 --> 00:55:43,480
0,180 180,630 630,810 810,1080 1080,1200
any detail that actually is

1794
00:55:43,480 --> 00:55:44,560
0,60 60,330 330,480 480,990 990,1080
in figure two,| if you
|如果你这么做了，

1795
00:55:44,560 --> 00:55:45,970
0,120 120,420 420,660 690,1290 1290,1410
do that,| then undoubtedly going
|那么毫无疑问，一些测试用例会失败，

1796
00:55:45,970 --> 00:55:46,660
0,60 60,300 300,510 510,600 600,690
to fail some of the

1797
00:55:46,660 --> 00:55:49,420
0,210 210,720 1290,1770 1950,2460 2460,2760
test cases,| {} unfortunately {figure,two}
|不幸的是，图2并不完整，

1798
00:55:49,420 --> 00:55:50,760
0,90 90,330 330,930
is not complete,|
|

1799
00:55:50,820 --> 00:55:52,200
0,450 450,660 660,840 840,1230 1230,1380
and so you still have
所以你还是得做点什么，

1800
00:55:52,200 --> 00:55:54,270
0,60 60,150 150,780 1200,1410 1410,2070
to do something,| so particularly
|因此，尤其是图2并没有很好地说明如何处理回复，

1801
00:55:54,270 --> 00:55:55,530
0,360 360,630 630,810 810,990 990,1260
{figure,two} doesn't really say not

1802
00:55:55,530 --> 00:55:57,060
0,210 210,660 660,930 930,1050 1050,1530
much about how the replies

1803
00:55:57,060 --> 00:55:59,460
0,90 90,570 810,1230 1290,1770 1770,2400
are handled,| the vote rpc
|投票RPC和附加RPC

1804
00:55:59,460 --> 00:56:00,870
0,270 270,420 420,840 840,960 960,1410
{and,append} {rpc -}| and so,
|因此，你必须做一些事情来填补缺失的细节，

1805
00:56:01,140 --> 00:56:01,890
0,270 270,420 420,540 540,690 690,750
{} you will have to

1806
00:56:01,890 --> 00:56:03,600
0,90 90,690 690,1410 1440,1620 1620,1710
do something to fill in

1807
00:56:03,600 --> 00:56:06,360
0,90 90,390 390,1080 1410,2580 2580,2760
the missing details,| {} and
|所以，这里有两点，如图2所示，

1808
00:56:06,360 --> 00:56:07,920
0,390 600,1020 1020,1200 1200,1380 1380,1560
so, {} so there's two

1809
00:56:07,920 --> 00:56:09,360
0,270 270,600 600,780 780,990 990,1440
points here like figure two,|
|

1810
00:56:10,000 --> 00:56:11,320
0,330 330,480 480,570 570,1050 1200,1320
anything that's in there you
不管里面有什么，你最好处理好它

1811
00:56:11,320 --> 00:56:13,000
0,210 210,450 450,600 600,810 1200,1680
better deal with it| and
|但仍有可能会遗漏一些东西，你必须自己解决，x

1812
00:56:13,000 --> 00:56:13,990
0,360 360,450 450,660 660,870 870,990
but there still might be

1813
00:56:13,990 --> 00:56:15,010
0,240 240,600 600,750 750,900 900,1020
things missing that you will

1814
00:56:15,010 --> 00:56:16,480
0,240 240,510 510,840 840,930 930,1470
have to resolve for yourself,x|
|

1815
00:56:20,450 --> 00:56:21,500
0,360 360,540 540,660 660,930 930,1050
{} you'll be looking at
你会经常看到第二幅图。

1816
00:56:21,500 --> 00:56:23,480
0,210 210,480 480,570 570,1050 1260,1980
figure two a lot. {}|
|

1817
00:56:24,660 --> 00:56:25,600
0,540

1818
00:56:26,240 --> 00:56:27,470
0,300 300,600 600,690 690,1140 1140,1230
So from the description of
那么从选举过程的描述来看，

1819
00:56:27,470 --> 00:56:29,180
0,60 60,750 810,1260 1260,1410 1410,1710
the election process,| there seems
|即使是只处理选举的实验室2a，似乎也有这样的情况，

1820
00:56:29,180 --> 00:56:31,160
0,120 120,510 510,1110 1440,1830 1830,1980
to be, {} even for

1821
00:56:31,160 --> 00:56:32,180
0,240 240,360 360,540 540,750 750,1020
lab {2a -}, which deals

1822
00:56:32,180 --> 00:56:33,350
0,240 240,360 360,750 750,930 930,1170
only with election,| there seems
|似乎有一种状态需要我们储存在毅力上，

1823
00:56:33,350 --> 00:56:34,160
0,60 60,150 150,330 330,630 630,810
to be some state that

1824
00:56:34,160 --> 00:56:35,330
0,90 90,270 270,480 480,900 900,1170
we need to store on

1825
00:56:35,330 --> 00:56:38,120
0,690 1560,2070 2070,2190 2190,2490 2490,2790
persistence,| look for example like
|例如，看看你投给了谁和术语编号。

1826
00:56:38,120 --> 00:56:39,560
0,240 240,330 330,660 660,1050 1050,1440
who you voted for and

1827
00:56:39,560 --> 00:56:41,810
0,540 570,750 750,1140 1320,1710 1920,2250
the term number.| Yeah.| But,
|嗯。|但是，当你看一下实验2的代码时，

1828
00:56:41,840 --> 00:56:42,560
0,270 270,390 390,570 570,660 660,720
when you look at the

1829
00:56:42,560 --> 00:56:43,910
0,240 240,330 330,570 570,990 990,1350
code of lab 2, {}|
|

1830
00:56:43,970 --> 00:56:44,660
0,240 240,330 330,390 390,570 570,690
all of the code that
所有与保存持久状态有关的代码，

1831
00:56:44,660 --> 00:56:45,890
0,180 180,270 270,570 600,870 870,1230
has to do with saving

1832
00:56:45,890 --> 00:56:47,360
0,120 120,690 690,1020 1020,1140 1140,1470
the persistent state,| it says
|上面写着实验室2c，

1833
00:56:47,390 --> 00:56:48,650
0,300 300,450 450,720 720,840 840,1260
above it lab {2c -},|
|

1834
00:56:48,980 --> 00:56:50,390
0,600 600,630 630,1050 1050,1170 1170,1410
so {} is it that
那么它是不是并不那么关键，

1835
00:56:50,390 --> 00:56:52,130
0,330 330,570 570,780 780,1380 1380,1740
it's not that crucial,| maybe
|也许为了关心持久存储，

1836
00:56:52,130 --> 00:56:53,960
0,150 150,360 360,570 570,1260 1290,1830
to care about persistent storage,|
|

1837
00:56:53,960 --> 00:56:55,600
0,210 210,330 330,420 420,1290
or should we absolutely
或者我们绝对应该开始[]。

1838
00:56:55,730 --> 00:56:58,670
0,630 630,1140 1350,1710 2010,2790 2790,2940
start [].| {} Yeah, I
|是的，我认为在最初的几次测试中，我们实际上并没有使机器崩溃，

1839
00:56:58,670 --> 00:57:00,140
0,300 300,840 870,1110 1110,1260 1260,1470
think the first couple tests,

1840
00:57:00,140 --> 00:57:01,610
0,120 120,300 300,510 510,870 870,1470
we don't actually crash machines,|
|

1841
00:57:02,570 --> 00:57:03,770
0,540 540,660 660,930 930,1020 1020,1200
and so therefore it's not
因此，这并不重要

1842
00:57:03,770 --> 00:57:05,780
0,630 720,1230 1230,1560 1560,1860 1860,2010
important| and {in,2c -} were
|在公元2世纪，绝对是崩溃的机器。

1843
00:57:05,780 --> 00:57:07,540
0,330 330,660 660,1260
definitely crashing machines.|
|

1844
00:57:08,120 --> 00:57:09,700
0,330 360,660 660,840 840,1050
Okay, awesome, thank you.|
好的，太棒了，谢谢。|

1845
00:57:13,440 --> 00:57:15,680
0,750 1230,1890
Okay, {}
好了，各位乘客，你们好吗？

1846
00:57:16,310 --> 00:57:17,580
0,180 180,210 210,270 270,660
how are you doing,

1847
00:57:17,580 --> 00:57:19,900
0,450 450,930 1110,1770
everybody on board?|
|

1848
00:57:25,260 --> 00:57:27,210
0,330 330,450 450,540 540,930 1320,1950
Okay, here we go, {next,step}.|
好了，开始吧，下一步。|

1849
00:57:28,000 --> 00:57:30,360
0,360 360,840 990,1620
Okay, so {}
好的，所以有一件重要的事要意识到

1850
00:57:30,630 --> 00:57:32,370
0,330 330,870 900,1230 1230,1320 1320,1740
one important thing to realize|
|

1851
00:57:32,370 --> 00:57:33,480
0,240 240,480 480,660 660,780 780,1110
and this came up earlier
这一点在前面的问题中也有提到

1852
00:57:33,480 --> 00:57:34,770
0,90 90,150 150,570 570,1080 1080,1290
in the questions| and when
|当我猛烈抨击这个话题的时候

1853
00:57:34,770 --> 00:57:35,520
0,30 30,180 180,360 360,570 570,750
I hit that now that

1854
00:57:35,520 --> 00:57:37,080
0,240 240,660 870,1170 1170,1290 1290,1560
topic hard| is that logs
|就是原木可以发散发散。

1855
00:57:37,080 --> 00:57:39,920
0,120 120,810 840,1950
may diverge diverge.|
|

1856
00:57:48,080 --> 00:57:49,490
0,720 840,990 990,1080 1080,1230 1230,1410
And now they can be
现在它们可以非常戏剧性地出现，

1857
00:57:49,490 --> 00:57:50,780
0,270 270,720 720,870 870,1020 1020,1290
quite dramatic,| but just let's
|但为了基本理解，让我们深入了解一下

1858
00:57:50,780 --> 00:57:52,700
0,300 300,600 600,840 900,1380 1380,1920
get into it, {} for

1859
00:57:52,760 --> 00:57:57,230
0,450 450,1140 1380,1650 1650,3960 4140,4470
basic understanding| and then discuss
|然后更详细地讨论，

1860
00:57:57,230 --> 00:57:58,400
0,90 90,210 210,600 600,870 900,1170
in more detail,| so let's
|让我们举几个简单的例子，

1861
00:57:58,400 --> 00:57:59,750
0,90 90,150 150,360 360,630 630,1350
do a couple simple examples,|
|

1862
00:57:59,930 --> 00:58:00,950
0,480 480,630 630,690 690,810 810,1020
{} so I'm going to
所以我要写一些东西，并使用下面的符号，

1863
00:58:00,950 --> 00:58:02,270
0,330 330,750 750,1050 1050,1230 1230,1320
write things and using the

1864
00:58:02,270 --> 00:58:03,500
0,270 270,870 870,1050 1050,1170 1170,1230
following notation,| we're going to
|我们将像以前一样拥有三台服务器，

1865
00:58:03,500 --> 00:58:04,940
0,150 150,300 300,1020
have three servers

1866
00:58:05,960 --> 00:58:07,490
0,210 210,930 1110,1350 1350,1410 1410,1530
as before,| but I'm going
|但我要删掉所有的时间线事务

1867
00:58:07,490 --> 00:58:08,750
0,270 300,570 570,690 690,810 810,1260
to cut all the timeline

1868
00:58:08,750 --> 00:58:10,640
0,600 750,960 960,1200 1200,1530 1530,1890
business| and just like draw
|就像画木头一样。

1869
00:58:10,640 --> 00:58:11,940
0,150 150,750
the logs.|
|

1870
00:58:15,600 --> 00:58:17,160
0,480 480,570 570,690 690,930 930,1560
And you know we have
你知道我们有索引，

1871
00:58:18,560 --> 00:58:20,480
0,240 240,1140 1260,1530 1530,1710 1710,1920
{} indexes,| so let's say
|让我们假设这些是索引，你知道它的前面部分，

1872
00:58:20,480 --> 00:58:22,040
0,270 270,390 390,900 900,1170 1170,1560
these are indexes {you,know} there's

1873
00:58:22,460 --> 00:58:23,690
0,450 450,690 690,960 960,1110 1110,1230
preceding part {to,it},| when we're
|当我们谈论101112的时候，

1874
00:58:23,690 --> 00:58:25,670
0,240 240,510 510,840 840,1320 1320,1980
talking about 10 11 12,|
|

1875
00:58:27,460 --> 00:58:28,840
0,150 150,600 600,690 690,810 810,1380
and so you know there
所以你知道每一本书里都有一个词条，

1876
00:58:28,840 --> 00:58:30,610
0,450 480,810 840,1140 1140,1620 1620,1770
is an term entry in

1877
00:58:30,610 --> 00:58:31,870
0,120 120,360 360,450 450,810 1020,1260
each one of them,| so
|因此，让我们假设所有三个服务器都提交了项3中的操作或将其附加到索引10，

1878
00:58:31,870 --> 00:58:33,580
0,150 150,450 450,810 810,990 990,1710
let's say all three servers

1879
00:58:33,910 --> 00:58:35,710
0,300 300,870 870,1230 1260,1620 1620,1800
{} committed or appended an

1880
00:58:35,710 --> 00:58:37,990
0,570 570,1170 1410,1620 1620,1980 1980,2280
operation in {} term 3

1881
00:58:37,990 --> 00:58:40,400
0,360 360,1080 1110,1860
to index 10,|
|

1882
00:58:41,710 --> 00:58:44,530
0,720 1170,1470 1470,2160 2160,2610 2610,2820
and {you,know} {} and same
你知道，同样的事情也发生在11的指数中，

1883
00:58:44,530 --> 00:58:46,340
0,90 90,510 510,1200
thing happens in

1884
00:58:46,600 --> 00:58:47,860
0,660
{}

1885
00:58:49,120 --> 00:58:50,620
0,270 270,660 660,840 840,1350 1350,1500
with index for 11,| so
|因此，一种思考方式，一种你可以正确处理的方式，

1886
00:58:50,620 --> 00:58:51,550
0,180 180,300 300,450 450,660 660,930
one way to think, one

1887
00:58:51,550 --> 00:58:52,300
0,150 150,270 270,360 360,570 570,750
way you could get this

1888
00:58:52,300 --> 00:58:53,590
0,390 390,540 540,840 840,1140 1140,1290
correct,| that server one would
|那个服务器一号会是领头羊，

1889
00:58:53,590 --> 00:58:55,120
0,120 120,240 240,780 900,1290 1290,1530
be the leader,| server one
|附加到其自己的日志的服务器1，

1890
00:58:55,120 --> 00:58:56,680
0,390 390,480 480,630 630,1050 1050,1560
appended to its own log,|
|

1891
00:58:56,680 --> 00:58:58,210
0,420 420,960 960,1080 1080,1380 1380,1530
then replicates it to {S2
然后将其复制到S2和S3，

1892
00:58:58,210 --> 00:58:59,680
0,210 210,330 330,450 450,930 1170,1470
-} and {S3 -},| same
|同样的事情也发生在索引11上，

1893
00:58:59,680 --> 00:59:01,150
0,120 120,420 420,570 570,900 900,1470
thing happens for index 11,|
|

1894
00:59:01,210 --> 00:59:03,250
0,330 330,390 390,810 870,1380 1380,2040
then the next 12, maybe
然后接下来的12个，也许也是成功的附加，

1895
00:59:03,250 --> 00:59:06,550
0,300 300,930 930,1560 1830,2460 2460,3300
also successful appends,| one operation
|在该索引中为每个术语执行一次操作，

1896
00:59:06,850 --> 00:59:08,260
0,300 300,510 510,1110 1110,1320 1320,1410
in that index for each

1897
00:59:08,260 --> 00:59:09,820
0,360 360,540 540,810 810,1080 1080,1560
term,| so that's term 3,|
|这就是第三学期，|

1898
00:59:09,850 --> 00:59:11,240
0,180 180,360 360,450 450,1020
but then it crashes.|
但随后它就崩溃了。|

1899
00:59:11,980 --> 00:59:13,000
0,330 330,540 540,780 780,930 930,1020
Okay, so now we're in
好的，现在我们遇到了这样的情况，

1900
00:59:13,000 --> 00:59:15,610
0,60 60,570 570,1230 1350,1860 1890,2610
a situation,| where {} one
|其中一台服务器的日志中实际上有一个额外的日志条目

1901
00:59:15,970 --> 00:59:17,890
0,750 840,1320 1320,1620 1620,1800 1800,1920
{} server actually has an

1902
00:59:17,890 --> 00:59:19,480
0,420 420,750 750,1200 1200,1380 1380,1590
extra log entry in its

1903
00:59:19,480 --> 00:59:20,800
0,390 390,600 600,660 660,840 840,1320
log| and the other ones
|其他的没有，或者可能其中一个有两个，

1904
00:59:20,950 --> 00:59:22,360
0,420 450,660 660,870 870,990 990,1410
don't or maybe that one

1905
00:59:22,360 --> 00:59:23,560
0,90 90,240 240,540 540,810 810,1200
of them has two,| but
|但它们肯定不是完全相同的。

1906
00:59:23,650 --> 00:59:25,480
0,570 570,750 750,1140 1140,1320 1320,1830
they are definitely not identical.|
|

1907
00:59:26,520 --> 00:59:27,570
0,120 120,300 300,360 360,690 690,1050
But that's a simple case
但这是一个正确的简单案例，

1908
00:59:27,570 --> 00:59:29,550
0,450 450,870 870,1140 1140,1710 1710,1980
correctly,| not merely particular step
|不仅仅是我们正在进行的具体步骤，

1909
00:59:29,550 --> 00:59:30,720
0,90 90,300 300,600 750,990 990,1170
we're going on,| but there's
|但还有更多有趣的案件在进行中。

1910
00:59:30,720 --> 00:59:32,370
0,210 210,360 360,660 660,1200 1230,1650
much more interesting cases going

1911
00:59:32,370 --> 00:59:33,660
0,240 240,750
on.| So,
|所以，另一种情况可能是一台服务器，同样是S1，我们开始了，

1912
00:59:33,720 --> 00:59:36,450
0,330 330,600 600,750 750,1200 2280,2730
another case could be one

1913
00:59:36,450 --> 00:59:38,610
0,600 630,1140 1140,1260 1260,1740 1860,2160
server, again {S1 -} here

1914
00:59:38,610 --> 00:59:40,320
0,90 90,420 420,750 750,1560 1560,1710
we go,| same scenarios {S2,S3
|相同的场景S2和S3。

1915
00:59:40,320 --> 00:59:42,420
0,540 630,960 960,1500
- - -}.|
|

1916
00:59:42,820 --> 00:59:45,280
0,660 1050,1470 1470,1950 1950,2280 2280,2460
And, {} let's say we
假设我们有以下日志，

1917
00:59:45,280 --> 00:59:47,220
0,120 120,240 240,780 780,1410
have the following logs,|
|

1918
00:59:54,550 --> 00:59:56,230
0,180 180,360 360,480 480,600 600,1680
so this is the situation
这就是我们在索引10中的情况，

1919
00:59:56,230 --> 00:59:58,920
0,210 210,450 450,1020 1200,2190
we have in index

1920
00:59:58,920 --> 00:59:59,960
0,480
10,|
|

1921
00:59:59,960 --> 01:00:01,460
0,240 240,420 420,660 660,1320 1320,1500
{} we have entries and
我们有第三期的条目和所有服务器，

1922
01:00:01,460 --> 01:00:03,080
0,150 150,720 750,1110 1110,1290 1290,1620
all servers {} for term

1923
01:00:03,080 --> 01:00:05,690
0,480 720,1230 1230,2070 2070,2490 2490,2610
3,| {} index 11, the
|索引11，第一服务器没有条目，

1924
01:00:05,690 --> 01:00:07,130
0,210 210,450 450,630 630,930 930,1440
first server has no entry,|
|

1925
01:00:07,400 --> 01:00:09,560
0,600 600,1020 1020,1320 1320,1500 1500,2160
{} the other two have
另外两个有一个第三学期的条目

1926
01:00:09,560 --> 01:00:10,850
0,120 120,420 420,540 540,810 810,1290
an entry for term 3|
|

1927
01:00:11,030 --> 01:00:13,400
0,180 180,690 690,1020 1020,1440 1830,2370
and then last one number
最后一个数字12，我们在服务器2和3的索引4中有条目，条目编号为4和5。

1928
01:00:13,400 --> 01:00:14,810
0,630 660,750 750,930 930,1080 1080,1410
12 you know we have

1929
01:00:14,810 --> 01:00:17,140
0,510 510,1080 1110,1830
entries in {}

1930
01:00:17,140 --> 01:00:18,850
0,360 360,900 900,1050 1050,1500 1500,1710
index 4 at servers 2

1931
01:00:18,850 --> 01:00:20,440
0,150 150,600 720,1110 1110,1290 1290,1590
and 3 with term numbers

1932
01:00:20,440 --> 01:00:21,780
0,210 210,330 330,810
4 and 5.|
|

1933
01:00:22,020 --> 01:00:22,920
0,330 330,390 390,600 600,810 810,900
So the first question that
因此，我们需要问自己的第一个问题是，这是可能的，

1934
01:00:22,920 --> 01:00:23,760
0,90 90,180 180,270 270,510 510,840
we need to ask ourselves

1935
01:00:23,760 --> 01:00:25,260
0,120 120,330 330,870
is this possible,|
|

1936
01:00:26,330 --> 01:00:29,150
0,630 840,1350 1350,1500 1500,2010 2010,2820
can raft end up producing
木筏最终会以这种方式生产原木吗，

1937
01:00:29,180 --> 01:00:31,400
0,720 720,810 810,990 990,1350 1830,2220
logs in this way,| were
|它们是否在相同的日志条目中，

1938
01:00:31,400 --> 01:00:33,380
0,390 600,750 750,840 840,1680 1680,1980
they in the same log

1939
01:00:33,380 --> 01:00:34,880
0,540 630,840 840,990 990,1170 1170,1500
entry,| we have two different
|我们有两个不同的术语号和相同的日志索引。

1940
01:00:34,880 --> 01:00:36,140
0,240 240,750
term numbers

1941
01:00:36,560 --> 01:00:39,080
0,660 660,1020 1050,1680 1680,1890 1890,2520
{and,same,log} index.| Yeah, that's possible.|
|是的，这是有可能的。|

1942
01:00:41,140 --> 01:00:43,300
0,570 570,720 720,1500
{} So basically,|
所以基本上，|

1943
01:00:43,300 --> 01:00:45,700
0,420 420,570 570,780 780,1410 2340,2400
{} it looks like. {}|
看起来像是。|

1944
01:00:45,700 --> 01:00:48,070
0,660 660,810 810,1320 1320,1920 1920,2370
{So,it,like,scenario} that produced.| Yeah, so
所以它就像是产生了这样一个场景。|是的，所以看起来2号服务器或3号服务器是第三任期的领先者

1945
01:00:48,070 --> 01:00:49,660
0,210 210,420 420,660 660,990 990,1590
it looks like {} server

1946
01:00:49,660 --> 01:00:51,430
0,420 420,600 600,870 870,1290 1290,1770
two or server three was

1947
01:00:51,700 --> 01:00:54,730
0,720 1110,1650 1650,2250 2250,2580 2580,3030
{} leader for term 3|
|

1948
01:00:54,730 --> 01:00:57,400
0,210 210,810 1110,2100 2100,2310 2310,2670
and then got some logs
然后把一些日志放到一号服务器上

1949
01:00:57,400 --> 01:00:59,680
0,420 600,1020 1020,1290 1290,1650 1650,2280
out to server one| and
|然后仅与两个服务器中的一个共享另一个日志，

1950
01:00:59,680 --> 01:01:00,620
0,450
then

1951
01:01:00,620 --> 01:01:03,020
0,330 330,720 720,1050 1050,1560 1890,2400
shared another log with {}

1952
01:01:03,200 --> 01:01:04,190
0,300 300,540 540,660 660,780 780,990
only one of the two

1953
01:01:04,190 --> 01:01:06,050
0,570 600,1200 1200,1470 1470,1740 1740,1860
servers,| after which point it
|在这一点之后，它下降了，

1954
01:01:06,050 --> 01:01:08,100
0,180 180,780 810,1500
went down, {}|
|

1955
01:01:08,220 --> 01:01:10,350
0,180 180,900 1140,1470 1470,1830 1830,2130
and then {S2 -} got
然后S2当选为第二任期的领导人，

1956
01:01:10,350 --> 01:01:12,690
0,480 480,690 690,1080 1080,1620 1770,2340
elected as leader for term

1957
01:01:12,690 --> 01:01:14,040
0,300 300,570 570,660 660,900 900,1350
2,| which is still possible,|
|这仍然是可能的，|

1958
01:01:14,040 --> 01:01:15,330
0,300 300,480 480,780 780,960 960,1290
because its log is like
因为它的日志就像是最新的，和其他人一样最新，然后。

1959
01:01:15,360 --> 01:01:16,650
0,150 150,240 240,510 510,990 1110,1290
up to date as as

1960
01:01:16,650 --> 01:01:18,330
0,120 120,240 240,480 480,570 570,1680
up to date as others,

1961
01:01:18,570 --> 01:01:20,670
0,840 900,1500 1500,1650 1650,1950 1950,2100
and then.| And then again
|然后再次确认，

1962
01:01:20,670 --> 01:01:21,630
0,60 60,210 210,480 480,720 720,960
to make sure,| so {S2
|因此，S2当选为第四任期。

1963
01:01:21,630 --> 01:01:22,590
0,180 180,390 390,780 780,930 930,960
-} got elected for {}

1964
01:01:22,590 --> 01:01:23,540
0,510
term

1965
01:01:23,570 --> 01:01:26,360
0,780 990,1770 1770,1860 1890,2370 2400,2790
4.| Yes.| {} Okay, {not,term}
|是。|好吧，不是第二学期。

1966
01:01:26,360 --> 01:01:27,240
0,300
2.|
|

1967
01:01:27,540 --> 01:01:28,380
0,210 210,390 390,540 540,660 660,840
Okay, so {S2 -} get
好的，那么S2当选为第四任期

1968
01:01:28,380 --> 01:01:29,610
0,360 360,510 510,540 540,780 780,1230
elected for {} term 4|
|

1969
01:01:29,670 --> 01:01:31,920
0,750 750,960 990,1710 1710,1860 1860,2250
{} and using {S1 -}
并使用S1作为备份，正确，

1970
01:01:31,920 --> 01:01:33,180
0,150 150,240 240,630 630,900 900,1260
as a backup, correct,| basically
|基本上是以追随者的身份？

1971
01:01:33,180 --> 01:01:34,780
0,150 150,510 510,1050
as the follower?|
|

1972
01:01:35,900 --> 01:01:39,440
0,630 630,1620 2040,2280 2280,2730 2970,3540
{} Yes, I think, {}
是的，我想，然后S3在S2可以将任何东西放入日志之前当选为第五任期。

1973
01:01:39,440 --> 01:01:40,280
0,150 150,270 270,480 480,630 630,840
and then {S3 -} gets

1974
01:01:40,280 --> 01:01:41,630
0,420 420,510 510,570 570,900 900,1350
elected for {} term 5

1975
01:01:41,630 --> 01:01:43,070
0,390 390,570 570,840 840,1260 1260,1440
before {S2 -} can put

1976
01:01:43,070 --> 01:01:44,660
0,420 420,540 540,660 660,1170 1260,1590
anything in the logs.| Yeah,
|是啊，换一种说法就像是S2崩溃了，就在我当选第四任期之后

1977
01:01:44,660 --> 01:01:45,410
0,210 210,300 300,390 390,630 630,750
another way of saying it's

1978
01:01:45,410 --> 01:01:46,880
0,180 180,450 450,780 780,1170 1200,1470
like maybe S2 crashed, right

1979
01:01:46,880 --> 01:01:49,070
0,450 480,750 750,1350 1350,2010 2010,2190
away, right after I got

1980
01:01:49,070 --> 01:01:51,440
0,360 360,480 480,750 750,1260 1620,2370
elected to term 4| and
|所以有一个超时，

1981
01:01:51,440 --> 01:01:52,580
0,420 420,720 720,900 900,1080 1080,1140
{} so then there's a

1982
01:01:52,580 --> 01:01:54,590
0,600 600,1290 1380,1680 1680,1860 1860,2010
timeout,| then let's say {S3
|然后假设S3是分区，但现在又回来了，

1983
01:01:54,590 --> 01:01:56,330
0,210 210,390 390,870 870,1260 1260,1740
-} is partition {but,now,is} back,|
|

1984
01:01:56,720 --> 01:01:58,700
0,330 330,510 510,870 870,1170 1170,1980
{} in that point, {}
在这一点上，它将成为，

1985
01:01:58,730 --> 01:02:00,140
0,180 180,330 330,870 900,1260 1260,1410
it will become,| {} it
|它会，它会进入第五学期，对。

1986
01:02:00,140 --> 01:02:02,270
0,510 840,1350 1350,1500 1500,1890 1890,2130
will, it come into a

1987
01:02:02,270 --> 01:02:03,760
0,210 210,540 570,900
term 5, right.|
|

1988
01:02:04,350 --> 01:02:05,500
0,690
Yeah.|
嗯。|

1989
01:02:06,460 --> 01:02:07,900
0,270 270,570 600,750 750,960 960,1440
Okay, good,| so that's possible,|
好的，很好，|所以这是可能的，|

1990
01:02:08,080 --> 01:02:09,100
0,210 210,420 420,630 630,960 960,1020
so turns out there are
所以事实证明，可能会有相当多的野生变种，

1991
01:02:09,100 --> 01:02:10,300
0,390 390,420 420,600 600,690 690,1200
quite a bit of wild

1992
01:02:10,300 --> 01:02:13,150
0,810 840,1560 1560,1830 1830,2340 2520,2850
variations possible,| so we'll look
|所以我们来看一下，

1993
01:02:13,150 --> 01:02:14,420
0,210 210,600
at the,|
|

1994
01:02:14,420 --> 01:02:15,960
0,540

1995
01:02:16,180 --> 01:02:17,920
0,180 180,540 540,870 870,1170 1170,1740
so here's the figure six
这是家庭作业中的数字六或数字七，对不起，

1996
01:02:18,280 --> 01:02:19,870
0,510 510,810 810,1350 1350,1500 1500,1590
or figure {seven,sorry} from the

1997
01:02:19,870 --> 01:02:23,660
0,570 990,1620 1620,2400 2580,3270
homework,| {} and {}
|哦，在和作业中，问一些关于表格的基本问题，

1998
01:02:23,750 --> 01:02:25,040
0,540
oops,

1999
01:02:27,580 --> 01:02:29,860
0,450 450,1110 1140,1710
{} in {}

2000
01:02:29,920 --> 01:02:31,060
0,210 210,300 300,600 600,840 840,1140
and the homework, ask basic

2001
01:02:31,060 --> 01:02:32,920
0,420 420,660 660,750 750,1290 1530,1860
questions about the form {},|
|

2002
01:02:32,920 --> 01:02:34,300
0,270 270,570 570,780 780,1170 1170,1380
like well what happens like
就像六号图形中的这个人发生的事情，七号图形不管是什么，

2003
01:02:34,300 --> 01:02:35,770
0,180 180,690 780,1170 1170,1260 1260,1470
this guy in the figure

2004
01:02:35,770 --> 01:02:37,300
0,240 240,600 600,870 870,1140 1140,1530
six itself, figure seven whatever

2005
01:02:37,300 --> 01:02:38,950
0,60 60,180 360,840 1140,1470 1470,1650
it is,| I think figure
|我认为图7，

2006
01:02:38,950 --> 01:02:42,850
0,420 750,1260 1800,2820 3150,3720 3720,3900
seven,| {} the scenarios being
|正在讨论的场景，

2007
01:02:42,850 --> 01:02:44,170
0,450 450,690 690,840 840,1050 1050,1320
discussed,| is like this guy
|就像这个人变成的，最高层的人成为新的领导者

2008
01:02:44,170 --> 01:02:45,400
0,330 330,540 540,780 780,930 930,1230
becomes, the top one becomes

2009
01:02:45,400 --> 01:02:46,840
0,150 150,630 900,1290 1290,1380 1380,1440
new leader| and in the
|在作业中，我们会问这个问题，

2010
01:02:46,840 --> 01:02:47,950
0,330 330,450 450,600 600,660 660,1110
homework, we ask the question,|
|

2011
01:02:48,070 --> 01:02:50,800
0,390 390,780 780,1140 1140,1710 1740,2730
what happens if this leader
如果这个领导人就这么走了，会发生什么？

2012
01:02:50,800 --> 01:02:52,000
0,150 150,360 360,810
just goes away,|
|

2013
01:02:52,060 --> 01:02:53,680
0,750 780,990 990,1080 1080,1200 1200,1620
and what are the possible
可能的结果是什么？

2014
01:02:53,680 --> 01:02:55,510
0,750 1140,1260 1260,1440 1440,1740 1740,1830
outcomes| you know and the
|你知道，对于每个对数索引，可能的结果

2015
01:02:55,510 --> 01:02:58,030
0,300 300,660 660,1320 1440,1950 1950,2520
possible outcomes like for every

2016
01:02:58,300 --> 01:03:00,790
0,900 900,1680 1920,2100 2100,2160 2160,2490
log index| and the question
|问题是哪一个会被拒绝，

2017
01:03:00,790 --> 01:03:02,560
0,360 390,600 600,810 810,1050 1050,1770
is which one gets rejected,|
|

2018
01:03:06,210 --> 01:03:07,530
0,180 180,390 390,540 540,630 630,1320
which one will be accepted
哪一个肯定会被接受，

2019
01:03:07,740 --> 01:03:09,140
0,300 300,840
for sure,|
|

2020
01:03:11,170 --> 01:03:14,080
0,150 150,330 330,840 1350,2100
and which ones depends.|
哪些要看情况而定。|

2021
01:03:16,280 --> 01:03:17,090
0,390 390,450 450,600 600,720 720,810
And I think there's an
我认为有一件重要的事情需要锻炼，

2022
01:03:17,090 --> 01:03:18,620
0,390 390,630 630,1080 1080,1200 1200,1530
important thing exercise to do,|
|

2023
01:03:18,620 --> 01:03:20,120
0,630 660,990 990,1140 1140,1290 1290,1500
because once we have to
因为一旦我们必须了解所有可能的日志条目，

2024
01:03:20,120 --> 01:03:21,620
0,450 450,690 690,870 870,1140 1140,1500
understand what all log entries

2025
01:03:21,620 --> 01:03:22,970
0,60 60,450 450,600 600,930 930,1350
are possible,| they're possible outcomes
|它们可能的结果会让整个世界变得更加稳固，

2026
01:03:22,970 --> 01:03:23,960
0,180 180,330 330,390 390,780 780,990
gonna do a whole really

2027
01:03:23,960 --> 01:03:25,430
0,360 360,600 600,810 810,960 960,1470
firm up,| like our understanding
|就像我们对救生筏实际应该如何运作的理解一样，

2028
01:03:25,430 --> 01:03:27,200
0,210 210,540 540,1200 1200,1410 1410,1770
about how raft actually supposed

2029
01:03:27,200 --> 01:03:28,620
0,60 60,150 150,660
to be operating,|
|

2030
01:03:28,620 --> 01:03:29,220
0,180 180,240 240,360 360,450 450,600
what I'd like to do
我想做的就是做一个快速休息室

2031
01:03:29,220 --> 01:03:30,210
0,120 120,330 330,510 510,660 660,990
is like do a quick

2032
01:03:30,210 --> 01:03:33,090
0,450 450,840 1170,2040 2310,2730 2730,2880
breakout room| and I'd like
|我想让你们找出两种可能的结果，这并不能保证，

2033
01:03:33,090 --> 01:03:35,980
0,120 120,210 210,1290 1320,2310
you to identify the

2034
01:03:36,590 --> 01:03:38,480
0,240 240,720 720,1380 1410,1710 1710,1890
two possible outcomes, {} that

2035
01:03:38,480 --> 01:03:40,020
0,270 270,990
not guaranteed,|
|

2036
01:03:40,280 --> 01:03:42,770
0,480 480,990 990,1500 1500,2310 2310,2490
{} and {} in the
并且在相应的场景中，

2037
01:03:42,770 --> 01:03:45,650
0,570 570,1230 1380,2160 2310,2700 2700,2880
corresponding scenario,| so {} let
|所以，让我们在这里进行一个简短的分组会议

2038
01:03:45,650 --> 01:03:47,720
0,390 390,660 660,840 840,1830 1860,2070
me let's take a quick

2039
01:03:47,720 --> 01:03:49,250
0,240 240,420 420,810 810,1140 1140,1530
break out room session here|
|

2040
01:03:49,250 --> 01:03:50,180
0,240 240,450 450,570 570,660 660,930
and let's try to figure
让我们试着在五分钟内算出家庭作业问题的答案。

2041
01:03:50,180 --> 01:03:51,110
0,90 90,210 210,570 570,810 810,930
out the answer to the

2042
01:03:51,110 --> 01:03:52,320
0,330 330,690
homework question

2043
01:03:53,180 --> 01:03:54,620
0,270 270,480 480,930
in five minutes.|
|

2044
01:04:00,930 --> 01:04:03,120
0,840 870,1140 1140,1500 1560,2010 2010,2190
{Lily,you're} able to.| You want
莉莉，你能做到。|你想让我这么做。

2045
01:04:03,120 --> 01:04:05,550
0,150 150,660 840,1380 1590,1800 1800,2430
me to.| Yeah, oh, yeah.|
|是的，哦，是的。|

2046
01:04:05,550 --> 01:04:07,980
0,870 1200,1680 1710,1920 1920,2070 2070,2430
Yeah yup, let me actually
是的是的，让我让你来主持，现在你是主持人。

2047
01:04:07,980 --> 01:04:09,100
0,210 210,660
make you

2048
01:04:11,820 --> 01:04:13,180
0,810
{}

2049
01:04:13,550 --> 01:04:14,980
0,930
participants

2050
01:04:18,930 --> 01:04:20,850
0,420 420,870 1020,1320 1320,1500 1500,1920
{} host, now you're host.|
|

2051
01:04:30,710 --> 01:04:31,620
0,60

2052
01:04:42,990 --> 01:04:44,520
0,660

2053
01:11:58,250 --> 01:11:59,760
0,360 360,840
Hey, ones.|
嘿，各位。|

2054
01:12:10,150 --> 01:12:12,250
0,750 1140,1530 1530,1860 1860,2010 2010,2100
Okay, can everybody hear me
好了，大家能再听到我说话吗？

2055
01:12:12,250 --> 01:12:13,400
0,450
again?|
|

2056
01:12:15,460 --> 01:12:16,660
0,180 180,270 270,450 450,720 750,1200
Can I get a positive
我能得到一个积极的信号吗。

2057
01:12:16,660 --> 01:12:20,770
0,600 1320,1830 2040,2400 2400,2970 3420,4110
signal.| Yes, okay sure,| okay,
|是的，好的，当然，|好的，希望大家都能好好讨论这个

2058
01:12:20,800 --> 01:12:24,640
0,690 780,990 990,1230 1230,2460 2520,3840
{} so hope everybody gotta

2059
01:12:24,670 --> 01:12:25,570
0,120 120,180 180,330 330,510 510,900
have a good time discussing

2060
01:12:25,570 --> 01:12:28,900
0,390 1380,2010 2010,2310 2310,2730 2730,3330
this| and so let's this
|让我们来看看这是一个关于对数发散的讨论

2061
01:12:28,900 --> 01:12:29,770
0,90 90,330 330,360 360,720 720,870
is really a discussion about

2062
01:12:29,770 --> 01:12:32,830
0,210 210,960 1980,2370 2370,2790 2790,3060
log divergence| and we see
|我们在这里看到修正了这个数字，

2063
01:12:32,830 --> 01:12:34,150
0,270 270,600 600,750 750,1140 1140,1320
here correcting this figure,| there
|有一些非常狂野的变化，

2064
01:12:34,150 --> 01:12:36,400
0,120 120,420 420,1050 1050,1890
are pretty wild variations,|
|

2065
01:12:36,550 --> 01:12:38,770
0,600 600,1260 1290,1770 1770,2100 2100,2220
{} in {} what can
对于可能发生的事情

2066
01:12:38,770 --> 01:12:40,480
0,360 780,1080 1080,1380 1380,1500 1500,1710
happen| and these are all
|而这些都是可能的，正如图中的标题所解释的那样，

2067
01:12:40,480 --> 01:12:42,640
0,690 750,960 960,1680 1680,2070 2070,2160
possible as the caption of

2068
01:12:42,640 --> 01:12:43,870
0,90 90,480 480,900 900,1080 1080,1230
the figure explains,| they're all
|它们都是可能的情景，

2069
01:12:43,870 --> 01:12:49,450
0,1260 2160,3180 4470,4860 4860,5160 5460,5580
possible scenarios,| {} so the
|所以作业中的问题，快速回顾一下，我相信你们大多数人都已经知道了。

2070
01:12:49,450 --> 01:12:50,980
0,330 330,480 480,960 990,1440 1440,1530
question in the homework and

2071
01:12:50,980 --> 01:12:52,030
0,150 150,240 240,570 570,810 810,1050
just to quickly review that

2072
01:12:52,030 --> 01:12:52,750
0,120 120,300 300,510 510,600 600,720
I'm sure most of you

2073
01:12:52,750 --> 01:12:54,160
0,480 480,960
already. {}|
|

2074
01:12:54,160 --> 01:12:54,640
0,60 60,180 180,300 300,360 360,480
I don't think, we can
我想，我们看不到你的屏幕。

2075
01:12:54,640 --> 01:12:56,890
0,150 150,300 300,870 1260,1950 1980,2250
see your screen.| Oh, how'd
|哦，你是怎么做到的，

2076
01:12:56,890 --> 01:12:58,480
0,120 120,270 270,720 1110,1350 1350,1590
you do that,| {} that's
|那是因为我忘了点击是，

2077
01:12:58,480 --> 01:12:59,650
0,270 270,270 270,750 750,840 840,1170
because I forgot to click

2078
01:12:59,650 --> 01:13:03,220
0,1440 1890,2640 2760,3210 3210,3300 3300,3570
yes,| okay, let me fix
|好吧，让我纠正一下，

2079
01:13:03,220 --> 01:13:04,760
0,450 480,1020
that right,|
|

2080
01:13:04,760 --> 01:13:06,120
0,300 300,780
appreciate that.|
我很感激。|

2081
01:13:07,190 --> 01:13:08,340
0,540

2082
01:13:10,430 --> 01:13:11,840
0,840

2083
01:13:14,680 --> 01:13:16,180
0,450 1020,1260 1260,1320 1320,1380 1380,1500
Okay, {} do you see
好的，你在屏幕上看到了很多吗。

2084
01:13:16,180 --> 01:13:16,660
0,180 180,270 270,360 360,420 420,480
much of it on the

2085
01:13:16,660 --> 01:13:17,680
0,420
screen.|
|

2086
01:13:18,980 --> 01:13:20,690
0,390 420,1020 1050,1290 1290,1530 1530,1710
Yeah, okay okay, thank you
好的，好的，谢谢，对不起，

2087
01:13:20,690 --> 01:13:22,250
0,540 540,660 660,990 990,1230 1230,1560
sorry,| but okay, so go
|但好的，回到图7的标题，

2088
01:13:22,250 --> 01:13:24,650
0,0 1470,1800 1800,2100 2100,2310 2310,2400
{} so going back to

2089
01:13:24,650 --> 01:13:26,330
0,240 240,810 810,930 930,1380 1380,1680
this caption of figure seven,|
|

2090
01:13:26,330 --> 01:13:27,800
0,210 210,480 480,930 930,1140 1140,1470
figure seven explains like these
图7解释了所有可能的情况

2091
01:13:27,800 --> 01:13:30,560
0,150 150,570 570,1320 1800,2460 2460,2760
all possible situations| and what
|我们想弄清楚的是，在谈到如何修复原木的细节之前

2092
01:13:30,560 --> 01:13:31,460
0,90 90,210 210,270 270,540 540,900
we want to figure out,

2093
01:13:31,460 --> 01:13:32,330
0,90 90,150 150,390 390,750 750,870
you know before talking about

2094
01:13:32,330 --> 01:13:33,470
0,60 60,540 540,780 780,990 990,1140
the details about how the

2095
01:13:33,470 --> 01:13:35,870
0,330 330,540 540,1170 1530,2100 2100,2400
logs gets repaired| {} you
|你知道什么实际上是可能的，

2096
01:13:35,870 --> 01:13:37,160
0,60 60,480 480,750 750,840 840,1290
know what actually is possible,|
|

2097
01:13:37,160 --> 01:13:38,720
0,210 210,720 720,1080 1080,1290 1290,1560
so soon actually this top
所以很快这位最高领导人就没有当选为领导人，

2098
01:13:38,720 --> 01:13:40,550
0,450 570,900 900,1140 1140,1290 1290,1830
guy did not get elected

2099
01:13:40,550 --> 01:13:42,040
0,0
{}

2100
01:13:42,070 --> 01:13:44,500
0,390 390,1470 1680,1860 1860,2070 2070,2430
leader,| {} so the caption
|所以这幅图的标题，

2101
01:13:44,500 --> 01:13:46,600
0,120 120,930 990,1410 1410,1680 1680,2100
of the figure,| but basically
|但基本上有什么结果是可能的

2102
01:13:46,600 --> 01:13:48,460
0,450 450,1020 1020,1110 1110,1650 1650,1860
what outcomes are possible| and
|他们将会是，

2103
01:13:48,790 --> 01:13:49,720
0,240 240,360 360,420 420,690 690,930
they're going to be,| what
|我的意思是，例如，我们看f，

2104
01:13:49,720 --> 01:13:50,710
0,60 60,330 330,450 450,750 750,990
I mean with that is

2105
01:13:50,710 --> 01:13:52,060
0,180 180,240 240,900 930,1170 1170,1350
like for example we look

2106
01:13:52,060 --> 01:13:53,260
0,180 180,690 780,930 930,1080 1080,1200
at f,| you know it
|你知道它有一个条目的索引，来自术语2的索引。

2107
01:13:53,260 --> 01:13:55,600
0,210 210,270 270,990 1260,1890 1890,2340
has {} 2 an index

2108
01:13:55,600 --> 01:13:57,040
0,300 300,600 600,900 900,1080 1080,1440
of an entry from term

2109
01:13:57,040 --> 01:13:58,760
0,330 330,840 840,1290
2 index 4.|
|

2110
01:13:59,230 --> 01:14:00,400
0,480 540,690 690,960 960,1050 1050,1170
And the question that we
我们想要问和理解的问题是

2111
01:14:00,400 --> 01:14:01,420
0,150 150,210 210,480 480,570 570,1020
want to ask and understand

2112
01:14:01,420 --> 01:14:03,160
0,390 690,1080 1080,1260 1260,1560 1560,1740
is| {} the clear this
|显然，这是可能的，

2113
01:14:03,160 --> 01:14:04,540
0,120 120,600 600,870 870,1260 1260,1380
is possible,| because this could
|因为这是可能发生的，

2114
01:14:04,540 --> 01:14:05,650
0,90 90,570 660,840 840,900 900,1110
have happened,| you know what
|你知道接下来会发生什么，

2115
01:14:05,650 --> 01:14:07,060
0,120 120,390 390,930
will happen next,|
|

2116
01:14:07,060 --> 01:14:08,170
0,60 60,180 180,390 390,540 540,1110
you know, is it possible
你知道，有没有可能这个条目会保留下来，

2117
01:14:08,170 --> 01:14:09,880
0,180 180,360 360,750 750,930 930,1710
that this entry will survive,|
|

2118
01:14:10,890 --> 01:14:12,600
0,330 330,750 750,1470 1470,1620 1620,1710
so we reconfigured like the
所以我们像领先者一样重新配置，

2119
01:14:12,600 --> 01:14:14,220
0,510 510,960 960,1080 1080,1470 1470,1620
leader,| basically {you,know} logs get
|基本上，你知道，日志被同步地放在一起

2120
01:14:14,220 --> 01:14:15,540
0,150 150,600 600,690 690,930 1140,1320
{} being you know put

2121
01:14:15,540 --> 01:14:17,550
0,390 390,630 630,1050 1200,1770 1770,2010
together in {} synchronized| where
|你知道领导者的作用力记录可能是相同的，

2122
01:14:17,550 --> 01:14:19,320
0,90 90,330 810,1080 1080,1380 1380,1770
you know the leaders force

2123
01:14:19,320 --> 01:14:20,940
0,300 300,480 480,570 570,1230 1380,1620
logs could be identical,| is
|有没有一种情况，在这种情况下，实际上日志条目，从术语2开始的条目将继续存在。

2124
01:14:20,940 --> 01:14:21,990
0,150 150,210 210,690 690,750 750,1050
there a scenario in which

2125
01:14:21,990 --> 01:14:24,300
0,480 480,720 720,1020 1020,1620 2070,2310
actually the log entry, the

2126
01:14:24,300 --> 01:14:25,530
0,270 270,450 450,690 690,960 960,1230
entry from term 2 will

2127
01:14:25,530 --> 01:14:26,520
0,570
survive.|
|

2128
01:14:29,880 --> 01:14:31,100
0,720
No.|
不是的。|

2129
01:14:31,130 --> 01:14:32,960
0,450 540,930 930,1110 1110,1350 1350,1830
No, correct,| this will definitely
不，正确，|这个肯定会被拒绝的，对吗？

2130
01:14:32,960 --> 01:14:34,700
0,180 180,690 690,1080 1410,1560 1560,1740
be rejected, correct| and why
|为什么会这样呢？

2131
01:14:34,700 --> 01:14:36,020
0,90 90,210 210,270 270,780
is that the case?|
|

2132
01:14:36,740 --> 01:14:38,690
0,540 750,1170 1170,1260 1260,1620 1620,1950
{} There are entries from
有来自术语6的条目已经被提交，

2133
01:14:38,690 --> 01:14:40,250
0,270 270,900 930,1200 1200,1290 1290,1560
term 6 that are already

2134
01:14:40,250 --> 01:14:41,460
0,600
committed,|
|

2135
01:14:41,550 --> 01:14:43,590
0,660 840,1080 1080,1530 1530,1710 1860,2040
{} so f {} will
所以f永远不会当选。

2136
01:14:43,590 --> 01:14:45,540
0,270 270,360 360,900 1410,1620 1620,1950
never be elected.| Yeah, {f,will}
|是啊，f永远不会当选

2137
01:14:45,540 --> 01:14:46,920
0,180 180,270 270,810 810,1230 1230,1380
never be elected| and so
|所以其他人将会当选

2138
01:14:46,920 --> 01:14:47,970
0,300 300,450 450,540 540,630 630,1050
somebody else will be elected|
|

2139
01:14:47,970 --> 01:14:49,020
0,90 90,450 450,630 630,660 660,1050
and nobody has {} 2
而在第二项指标4中没有人有2，

2140
01:14:49,020 --> 01:14:51,000
0,450 480,840 840,1020 1020,1470 1470,1980
in term 2 index 4,|
|

2141
01:14:51,030 --> 01:14:52,290
0,180 180,270 270,450 450,570 570,1260
so it will be overwritten,
因此，它将被覆盖，并使用将被覆盖的值。

2142
01:14:52,440 --> 01:14:53,580
0,180 180,420 420,810 810,1020 1020,1140
with what value will be

2143
01:14:53,580 --> 01:14:54,680
0,600
overwritten.|
|

2144
01:14:58,360 --> 01:15:00,040
0,450 450,750 750,900 900,1350 1350,1680
{} There will be a
将有一个4被覆盖。

2145
01:15:00,040 --> 01:15:02,560
0,390 390,750 750,1200 1740,2280 2280,2520
4 {overwritten -}.| {There,will,be}, this
|会有，这会变成4，

2146
01:15:02,560 --> 01:15:04,060
0,240 240,570 570,660 660,960 1140,1500
will become a 4,| so
|所以，当我们稍后谈到一种原木时，

2147
01:15:04,480 --> 01:15:05,440
0,240 240,540 540,690 690,840 840,960
when later on when we

2148
01:15:05,440 --> 01:15:06,520
0,180 180,420 420,570 570,690 690,1080
talk about sort of log,|
|

2149
01:15:06,520 --> 01:15:08,440
0,120 120,270 270,1050 1050,1530 1560,1920
you know synchronization were forcing
你知道同步迫使追随者记下日志，

2150
01:15:08,440 --> 01:15:10,150
0,420 420,630 630,840 840,1410 1530,1710
logs on the followers,| it
|必须是这样的，在f处，这2变成4。

2151
01:15:10,150 --> 01:15:10,960
0,210 210,300 300,420 420,480 480,810
has to be the case

2152
01:15:10,960 --> 01:15:12,460
0,330 450,750 750,960 960,1230 1230,1500
that these 2 turns into

2153
01:15:12,460 --> 01:15:13,700
0,300 300,450 450,810
4 at f.|
|

2154
01:15:14,190 --> 01:15:16,000
0,420 570,1260
Good, {}
好，所以，所以，这也回答了第二个问题，

2155
01:15:16,000 --> 01:15:17,050
0,300 300,480 480,660 660,810 810,1050
so, {} so, this also

2156
01:15:17,050 --> 01:15:18,820
0,330 330,450 450,690 690,1080 1080,1770
answers the second question,| like
|就像第4项中索引4中的条目一样，肯定会被接受。

2157
01:15:19,000 --> 01:15:22,510
0,990 1470,1860 1860,2520 2670,2850 2850,3510
the entry from the index

2158
01:15:22,540 --> 01:15:23,830
0,450 450,600 600,870 870,1110 1110,1290
4 from term 4 is

2159
01:15:23,830 --> 01:15:25,150
0,420 420,540 540,600 600,720 720,1320
definitely going to be accepted.|
|

2160
01:15:26,910 --> 01:15:29,400
0,510 510,720 720,1260 1260,2070 2130,2490
{} Okay, then maybe more
好吧，也许更有趣的是关于依赖的讨论，

2161
01:15:29,400 --> 01:15:31,980
0,360 360,930 1170,1890 1890,2370 2370,2580
interesting is {} discussion about

2162
01:15:31,980 --> 01:15:33,200
0,750
depends,|
|

2163
01:15:33,790 --> 01:15:34,690
0,150 150,450 450,660 660,810 810,900
you know, {} so we
你知道，我们知道至少有一个条目肯定会拒绝它，

2164
01:15:34,690 --> 01:15:36,070
0,150 150,240 240,480 480,780 780,1380
know at least one entry

2165
01:15:36,070 --> 01:15:37,240
0,330 330,630 630,960 960,1080 1080,1170
term that's definitely going to

2166
01:15:37,240 --> 01:15:38,170
0,330 330,420 420,540 540,660 660,930
reject it,| we know one
|我们知道有一个条款肯定会接受它，

2167
01:15:38,170 --> 01:15:39,130
0,210 210,420 420,780 780,900 900,960
term that's definitely going to

2168
01:15:39,130 --> 01:15:40,960
0,360 360,510 840,1500 1500,1680 1680,1830
accept it,| and you know
|你知道有没有任何可能被接受的术语和索引。

2169
01:15:40,960 --> 01:15:41,890
0,150 150,300 300,630 630,810 810,930
are there any sort of

2170
01:15:41,890 --> 01:15:44,170
0,270 270,870 900,1140 1140,2100 2100,2280
in terms and indexes that

2171
01:15:44,170 --> 01:15:46,200
0,270 270,930 930,1530
maybe possibly accepted.|
|

2172
01:15:47,570 --> 01:15:49,780
0,420 420,540 540,1140 1170,1620
Oh, the 7s maybe.|
哦，也许是7s。|

2173
01:15:50,060 --> 01:15:51,660
0,150 150,390 390,720 720,1020
{Yeah -}, {7s -}.|
是的，7分。|

2174
01:15:52,180 --> 01:15:53,590
0,270 270,870 870,1050 1050,1170 1170,1410
So when would this 7s
那么，这个7什么时候不会被接受呢？

2175
01:15:53,590 --> 01:15:55,240
0,360 360,480 480,1050
not be accepted.|
|

2176
01:15:55,240 --> 01:15:56,650
0,150 150,330 330,510 510,870 870,1410
Okay, so the easy scenarios,|
好的，那么简单的场景，|

2177
01:15:56,650 --> 01:15:57,820
0,90 90,390 390,600 600,720 720,1170
the 7s will be accepted
7将被接受为正确的，

2178
01:15:57,820 --> 01:15:59,170
0,270 270,510 510,690 690,960 960,1350
correct,| because d gets elected
|因为民主党当选为领导人

2179
01:15:59,170 --> 01:16:00,820
0,540 750,1080 1080,1260 1260,1470 1470,1650
leader| and then it will
|然后它会强制它登录到其他所有人。

2180
01:16:00,820 --> 01:16:02,440
0,330 330,540 540,1050 1050,1230 1230,1620
force it log on everybody

2181
01:16:02,440 --> 01:16:03,300
0,450
else.|
|

2182
01:16:03,420 --> 01:16:04,200
0,120 120,300 300,360 360,600 600,780
So that's the case where
所以这就是7S被感染的情况，

2183
01:16:04,200 --> 01:16:05,580
0,300 300,510 510,990 990,1320 1320,1380
7s gets appected,| when I
|当我拿到这个7被拒绝的时候。

2184
01:16:05,580 --> 01:16:07,200
0,180 180,330 330,660 660,960 960,1620
get this 7 getting rejected.|
|

2185
01:16:08,620 --> 01:16:10,660
0,420 420,660 660,990 990,1560 1560,2040
If c gets elected leader
如果c当选领袖，然后d倒下，

2186
01:16:10,660 --> 01:16:12,580
0,210 210,690 810,1110 1110,1230 1230,1920
and then d is down,|
|

2187
01:16:13,300 --> 01:16:15,220
0,210 210,480 480,600 600,1200 1590,1920
it is all overwritten.| Yeah,
它都被覆盖了。|是啊，所以D倒下了，C成了领袖，

2188
01:16:15,220 --> 01:16:17,530
0,330 360,840 840,1050 1050,1650 2040,2310
so d goes down, c

2189
01:16:17,530 --> 01:16:18,880
0,300 300,870
becomes leader,|
|

2190
01:16:18,910 --> 01:16:20,560
0,270 270,450 450,960 960,1230 1230,1650
and then c's log entries
然后c的日志条目被推送到其他所有条目上

2191
01:16:20,560 --> 01:16:21,760
0,210 210,420 420,750 750,840 840,1200
are being pushed on everybody

2192
01:16:21,760 --> 01:16:24,190
0,420 450,1140 1260,1470 1470,1650 1650,2430
else entries| and then whenever
|然后，无论何时d，所以我们将是第7项，对吗，

2193
01:16:24,190 --> 01:16:26,560
0,690 780,1230 1230,1350 1350,2100 2130,2370
d and so we're going

2194
01:16:26,560 --> 01:16:27,640
0,60 60,180 180,420 420,780 780,1080
to be term 7, correct,|
|

2195
01:16:27,640 --> 01:16:28,300
0,120 120,270 270,480 480,570 570,660
at some point it will
在某一时刻，它将变得更长，并且每个d都会恢复，

2196
01:16:28,300 --> 01:16:29,920
0,120 120,750 840,1020 1020,1410 1410,1620
be longer and {every,d} comes

2197
01:16:29,920 --> 01:16:31,360
0,240 240,600 840,960 960,1050 1050,1440
back up,| you know it's
|你知道，你知道条目将被覆盖，对吧。

2198
01:16:31,360 --> 01:16:32,080
0,90 90,240 240,540 540,600 600,720
you know entries are going

2199
01:16:32,080 --> 01:16:34,040
0,60 60,180 180,750 1080,1500
to be overwritten, right.|
|

2200
01:16:34,730 --> 01:16:36,980
0,270 270,570 570,1110 1590,1980 1980,2250
Is a possible.| So 7
是一种可能。|因此，7是绝对有可能的，但不能保证。

2201
01:16:36,980 --> 01:16:38,750
0,90 90,660 810,1410 1410,1530 1530,1770
is definitely possible, but not

2202
01:16:38,750 --> 01:16:39,980
0,660
guaranteed.|
|

2203
01:16:40,220 --> 01:16:41,810
0,120 120,210 210,360 360,810 1320,1590
In the other case. {}|
在另一种情况下。|

2204
01:16:41,810 --> 01:16:43,040
0,360 360,480 480,540 540,870 870,1230
I had a question, a
我有一个问题，一个人也可以成为领导，对吧。

2205
01:16:43,040 --> 01:16:45,230
0,210 210,570 570,1140 1170,1590 1620,2190
could become leader too, right.|
|

2206
01:16:46,020 --> 01:16:47,260
0,690

2207
01:16:47,490 --> 01:16:48,580
0,540
a?
一个?嗯。

2208
01:16:48,740 --> 01:16:49,980
0,780
Yeah.|
|

2209
01:16:49,980 --> 01:16:52,140
0,1410 1410,1410 1410,1830 1830,2070 2070,2160
Yeah, a {could,be,a} leader if
是的，如果C和D都跌了，A可能会成为领头羊。

2210
01:16:52,140 --> 01:16:53,660
0,210 210,540 540,960
c {and,d} {are,down}.|
|

2211
01:16:55,280 --> 01:16:56,570
0,660 660,900 900,1050 1050,1170 1170,1290
{Well,d} don't even have to
嗯，我甚至不需要为当选领导人而倒下，

2212
01:16:56,570 --> 01:16:57,320
0,150 150,510 510,600 600,660 660,750
be down for a to

2213
01:16:57,320 --> 01:16:59,270
0,120 120,540 540,900 900,1350 1830,1950
be elected leader right,| it
|它只会送到[]。

2214
01:16:59,270 --> 01:17:00,920
0,180 180,330 330,780 1080,1590 1590,1650
just goes to [].| The
|第一个。

2215
01:17:00,920 --> 01:17:04,370
0,390 390,660 1950,2010 2010,2580 2700,3450
first one.| Is a longer
|是一个更长的，如果两个学期结束时相等的话，

2216
01:17:04,400 --> 01:17:07,280
0,600 600,870 870,2340 2370,2790 2790,2880
longer if {two,terms} equal at

2217
01:17:07,280 --> 01:17:08,120
0,150 150,390 390,570 570,690 690,840
the end,| then you pick
|然后你挑选最长的原木。

2218
01:17:08,120 --> 01:17:09,360
0,90 90,450 450,810
the longest log.|
|

2219
01:17:09,800 --> 01:17:11,960
0,480 600,1590
{} But,
但是，我认为如果a是第一个呼吁选举的人，对吧，

2220
01:17:11,960 --> 01:17:15,020
0,630 1170,1680 1680,2430 2520,2850 2850,3060
I think if a is

2221
01:17:15,020 --> 01:17:16,010
0,150 150,480 480,630 630,720 720,990
the first one to call

2222
01:17:16,010 --> 01:17:18,080
0,120 120,210 210,840 870,1380 1740,2070
for an election, right,| like
|就像是潜在的。

2223
01:17:18,080 --> 01:17:20,340
0,840 870,1710
potentially be.|
|

2224
01:17:20,490 --> 01:17:23,250
0,1890 2100,2250 2250,2490 2490,2580 2580,2760
Yeah, if c and d
是啊，如果C和D倒下而A可能赢得选举。

2225
01:17:23,250 --> 01:17:24,480
0,60 60,630 840,990 990,1080 1080,1230
are down and a could

2226
01:17:24,480 --> 01:17:25,780
0,150 150,240 240,720
win the election.|
|

2227
01:17:25,930 --> 01:17:27,700
0,420 420,600 600,870 870,1470 1470,1770
But if they're alive, can
但如果他们还活着，它还能赢得选举吗？

2228
01:17:27,700 --> 01:17:28,720
0,120 120,510 510,780 780,960 960,1020
it also still win the

2229
01:17:28,720 --> 01:17:29,920
0,600
election?|
|

2230
01:17:30,320 --> 01:17:31,500
0,630
Ah,
啊，那么我们说c，

2231
01:17:31,560 --> 01:17:33,090
0,210 210,420 420,600 600,1380 1380,1530
so let's say c,| okay
|好了，我们开始吧，

2232
01:17:33,090 --> 01:17:34,200
0,240 240,540 540,870 870,1020 1020,1110
let's {d,is} down,| let's do
|我们一定要这么做，对吧，

2233
01:17:34,200 --> 01:17:35,370
0,150 150,240 240,540 540,960 960,1170
that for sure, correct,| because
|因为我们知道d会赢得选举期间，d完成了。

2234
01:17:35,370 --> 01:17:36,090
0,90 90,240 240,420 420,540 540,720
we know that d will

2235
01:17:36,090 --> 01:17:37,820
0,180 180,240 240,630 630,1200
win the election period,

2236
01:17:38,120 --> 01:17:39,340
0,270 270,540
d done.|
|

2237
01:17:39,340 --> 01:17:40,900
0,450 450,540 540,810 810,1080 1110,1560
Does it have to, like
它必须，就像我们知道它肯定不会得到d Right的投票一样，

2238
01:17:41,230 --> 01:17:42,040
0,120 120,330 330,450 450,690 690,810
we know we know we

2239
01:17:42,040 --> 01:17:42,970
0,180 180,270 270,600 600,840 840,930
know it won't get a

2240
01:17:42,970 --> 01:17:45,310
0,360 360,630 630,960 990,1440 2010,2340
vote from d right for

2241
01:17:45,310 --> 01:17:46,300
0,450
sure,|
|

2242
01:17:46,870 --> 01:17:48,060
0,600
but,
但是，但是它必须赢得什么。

2243
01:17:48,350 --> 01:17:50,210
0,690 690,1020 1020,1230 1230,1320 1320,1860
but what does it have

2244
01:17:50,210 --> 01:17:51,420
0,150 150,630
to win.|
|

2245
01:17:51,540 --> 01:17:52,350
0,180 180,330 330,390 390,510 510,810
Why, what do you think?|
怎么了，你觉得呢？|

2246
01:17:54,820 --> 01:17:56,740
0,450 450,690 690,1020 1020,1710 1710,1920
What if a received the
如果A先得到英国央行和法国联邦的投票，情况会怎样？

2247
01:17:56,740 --> 01:17:58,660
0,330 330,630 630,1380 1380,1710 1710,1920
vote from b e and

2248
01:17:58,660 --> 01:18:00,550
0,330 330,840 840,1050 1050,1290 1290,1890
f first| and then received
|然后收到了来自。

2249
01:18:00,550 --> 01:18:02,420
0,150 150,420 420,720 960,1380
the vote from. {}|
|

2250
01:18:04,840 --> 01:18:05,890
0,390 450,750 750,870 870,1020 1020,1050
Yeah, you can get a
是的，你可以在没有实际参与的情况下获得多数票。

2251
01:18:05,890 --> 01:18:08,410
0,690 690,1050 1050,1530 1530,1860 1860,2520
majority without actually d participating.|
|

2252
01:18:09,720 --> 01:18:10,740
0,540

2253
01:18:18,800 --> 01:18:20,150
0,480 480,600 600,720 720,1260 1260,1350
Even if d participated in
即使d参加了选举，

2254
01:18:20,150 --> 01:18:21,770
0,90 90,480 480,630 630,1050 1050,1620
the election,| it's possible for
|A获得多数票是有可能的，对吧。

2255
01:18:21,950 --> 01:18:23,090
0,420 420,510 510,660 660,750 750,1140
a to get the majority

2256
01:18:23,090 --> 01:18:24,260
0,270 270,600
votes, right.|
|

2257
01:18:28,840 --> 01:18:30,190
0,510 510,630 630,840 840,1020 1020,1350
Yes, I think we just
是的，我想我们已经回答了这个问题。

2258
01:18:30,190 --> 01:18:31,340
0,300 300,600
answered that.|
|

2259
01:18:34,780 --> 01:18:36,730
0,510 840,1110 1110,1290 1290,1320 1320,1950
Isn't isn't there a mechanism
难道不是有一种机制吗，如果候选人看到来自另一台服务器的消息，比如停机。

2260
01:18:36,730 --> 01:18:38,100
0,210 210,810
though where,

2261
01:18:38,460 --> 01:18:40,200
0,150 150,240 240,720 720,1200 1200,1740
if the candidate sees a

2262
01:18:41,570 --> 01:18:43,940
0,510 510,1110 1470,2010 2010,2280 2280,2370
message from another server of

2263
01:18:43,940 --> 01:18:44,960
0,120 120,360 360,570 570,840 840,1020
the higher term number like

2264
01:18:44,960 --> 01:18:46,360
0,360 360,870
stands down.|
|

2265
01:18:48,090 --> 01:18:50,610
0,690 690,1680 1680,1920 1920,2190 2190,2520
From a higher term number,
从一个更高的项数，但a有，如果d是下降的。

2266
01:18:50,610 --> 01:18:52,530
0,180 180,420 420,1050 1260,1530 1530,1920
but a has, if {d,is}

2267
01:18:52,530 --> 01:18:53,640
0,570
down.|
|

2268
01:18:56,910 --> 01:18:57,660
0,150 150,390 390,510 510,600 600,750
It doesn't have to be
它不一定要停下来，对吧，

2269
01:18:57,660 --> 01:18:58,950
0,330 330,690 690,930 930,1140 1140,1290
down, right,| we just have
|我们只要先拿到他们，就行了。

2270
01:18:58,950 --> 01:19:00,600
0,90 90,300 300,450 450,1470 1470,1650
to get them first, just.|
|

2271
01:19:00,600 --> 01:19:01,840
0,600
Yeah.|
嗯。|

2272
01:19:01,970 --> 01:19:03,160
0,600
Exactly.|
一点儿没错。|

2273
01:19:06,160 --> 01:19:07,240
0,240 240,330 330,450 450,810 810,1080
But it will step down
但它将在投票时从7票支持民主党下台。

2274
01:19:07,240 --> 01:19:08,110
0,120 120,300 300,510 510,600 600,870
when it gets to vote

2275
01:19:08,110 --> 01:19:09,970
0,240 240,690 810,1230 1230,1470 1500,1860
from 7 for {} d.|
|

2276
01:19:10,880 --> 01:19:12,380
0,690 690,780 780,960 960,1290 1290,1500
Wait, are you sure about
等等，你确定吗，

2277
01:19:12,380 --> 01:19:13,430
0,360 360,600 600,660 660,870 870,1050
that,| because I don't think
|因为我不这么认为。

2278
01:19:13,430 --> 01:19:16,300
0,510 1350,2340
so. {}|
|

2279
01:19:16,450 --> 01:19:17,860
0,330 330,510 510,990 990,1200 1200,1410
Well, what okay, if d
好吧，好吧，如果在某个时候，

2280
01:19:17,860 --> 01:19:19,390
0,90 90,270 270,630 630,1050 1050,1530
at some point,| well, {}
|嗯，这要看情况了，他们要开始比赛了，对吧，

2281
01:19:19,390 --> 01:19:21,160
0,270 810,1320 1320,1410 1410,1560 1560,1770
it depends, they're gonna start

2282
01:19:21,160 --> 01:19:25,570
0,390 390,840 1170,3150 3390,3840 3960,4410
racing, correct,| the, {} okay,
|好的，让我问一个非常重要的话题

2283
01:19:25,600 --> 01:19:26,530
0,180 180,360 360,540 540,720 720,930
let me ask this very

2284
01:19:26,530 --> 01:19:27,550
0,300 300,780 780,870 870,990 990,1020
important topic| and so I
|所以我不想在十秒钟内完成

2285
01:19:27,550 --> 01:19:28,090
0,150 150,300 300,360 360,450 450,540
don't want to do it

2286
01:19:28,090 --> 01:19:30,640
0,300 330,570 570,1050 1950,2430 2430,2550
in ten seconds| and let
|让我回到这个问题上来，

2287
01:19:30,640 --> 01:19:31,540
0,120 120,240 240,510 510,570 570,900
me come back to this,|
|

2288
01:19:31,540 --> 01:19:32,410
0,450 450,510 510,720 720,780 780,870
at the start of the
在下一堂课开始时，

2289
01:19:32,410 --> 01:19:34,030
0,180 180,570 720,1290 1380,1560 1560,1620
next lecture,| okay, this is
|好了，这是一个很好的止步点。

2290
01:19:34,030 --> 01:19:35,020
0,60 60,270 270,420 420,510 510,990
a great point to stop.|
|

2291
01:19:37,060 --> 01:19:38,400
0,330

2292
01:19:39,320 --> 01:19:40,700
0,210 210,420 420,510 510,810 810,1380
I think the state machine
我认为图4中的状态机澄清了，或者说像候选人回到了追随者，

2293
01:19:40,790 --> 01:19:42,170
0,150 150,510 510,780 780,1380 1380,1380
in figure four clarifies or

2294
01:19:42,350 --> 01:19:43,610
0,240 240,330 330,840 840,1050 1050,1260
like a candidate goes back

2295
01:19:43,610 --> 01:19:45,920
0,150 150,750 750,1050 1260,1890 1890,2310
to follower,| if discovers a
|如果发现了更高的术语，

2296
01:19:45,950 --> 01:19:47,510
0,270 270,570 570,720 720,1410 1440,1560
higher terms,| so if d
|因此，如果d没有倒下，它将立即返回到追随者那里，试图选举自己的候选人。

2297
01:19:47,510 --> 01:19:49,400
0,360 360,930 1320,1590 1590,1740 1740,1890
wasn't down it will go

2298
01:19:49,400 --> 01:19:50,750
0,210 210,300 300,750 750,870 870,1350
back to follower at once

2299
01:19:50,780 --> 01:19:51,920
0,240 240,450 480,840 840,1050 1050,1140
trying to elect its own.|
|

2300
01:19:53,350 --> 01:19:54,970
0,270 270,390 390,570 570,1110 1410,1620
Wait, but I thought that
等等，但我以为它只会回到追随者的状态，

2301
01:19:54,970 --> 01:19:56,080
0,90 90,270 270,480 480,810 810,1110
it would only go back

2302
01:19:56,080 --> 01:19:58,060
0,420 420,540 540,990 990,1440 1770,1980
to a follower state,| if
|如果它接收到来自当前领导者的附加条目，

2303
01:19:58,060 --> 01:20:00,310
0,150 150,930 930,1020 1020,1470 1470,2250
it received an append entries

2304
01:20:00,340 --> 01:20:02,360
0,510 510,630 630,1020 1020,1500
from a current leader,|
|

2305
01:20:02,700 --> 01:20:04,860
0,390 390,630 630,1200 1200,1620
like a request vote,
就像一个请求投票，是不一样的。

2306
01:20:04,860 --> 01:20:06,400
0,120 120,330 330,420 420,990
is not the same.|
|

2307
01:20:06,830 --> 01:20:09,050
0,600 600,900 900,1080 1080,1500 1590,2220
So it is worth worth
所以它是值得的，在服务器数量这个术语之间是有区别的

2308
01:20:09,050 --> 01:20:10,250
0,150 150,540 540,600 600,900 900,1200
and there's a difference between

2309
01:20:10,250 --> 01:20:11,660
0,150 150,510 510,840 840,990 990,1410
the term number the servers

2310
01:20:11,660 --> 01:20:13,490
0,450 570,1200 1200,1380 1380,1710 1710,1830
at| and the term of
|以及日志中最近条目的期限。

2311
01:20:13,490 --> 01:20:14,930
0,150 150,540 540,870 870,1320 1320,1440
the most recent entry in

2312
01:20:14,930 --> 01:20:18,290
0,90 90,690 900,1140 1140,2100 2880,3360
the log.| Oh yeah.| Like
|哦，是的。|与服务器A一样，它具有最近的条目：日志为6，项6，

2313
01:20:18,320 --> 01:20:20,030
0,510 510,810 840,1080 1080,1410 1410,1710
server a, it has most

2314
01:20:20,030 --> 01:20:21,650
0,240 240,600 600,690 690,1080 1080,1620
recent entries the log be

2315
01:20:21,710 --> 01:20:23,720
0,750 780,930 930,1170 1170,1620 1650,2010
6, the term 6,| but
|但将其当前期限编号定为7。

2316
01:20:23,720 --> 01:20:25,940
0,270 270,600 840,1530 1530,1770 1770,2220
have its current term number

2317
01:20:25,940 --> 01:20:27,800
0,180 180,690 900,1440 1440,1530 1530,1860
be 7.| And current term
|而目前的期限实际上可以任意高一些。

2318
01:20:27,800 --> 01:20:29,810
0,420 420,750 750,900 900,1560 1560,2010
can actually be arbitrarily high.|
|

2319
01:20:30,110 --> 01:20:32,360
0,390 420,1020 1020,1500 1500,1920 1950,2250
Yes.| Correct, that's correct| and
是。|对，对，对|所以第八学期就可以开始了，

2320
01:20:32,360 --> 01:20:34,640
0,420 510,750 750,1320 1470,1980 1980,2280
so a could start term

2321
01:20:34,670 --> 01:20:35,540
0,540
8,|
|

2322
01:20:35,600 --> 01:20:37,340
0,210 210,750 780,960 960,1350 1350,1740
and then get elected {in,term}
然后在第八届任期内当选

2323
01:20:37,340 --> 01:20:39,560
0,540 990,1590
8| and
|不管这些告诉我们什么都无关紧要，

2324
01:20:39,590 --> 01:20:41,630
0,510 540,810 810,1560 1560,1770 1770,2040
that and whatever these tells

2325
01:20:41,630 --> 01:20:43,310
0,150 150,390 390,690 690,1200 1230,1680
it doesn't matter,| because if
|因为如果这些最新的条款7，

2326
01:20:43,310 --> 01:20:44,930
0,210 210,450 450,660 660,990 990,1620
these most recent terms 7,|
|

2327
01:20:45,260 --> 01:20:46,490
0,300 300,780 780,900 900,1140 1140,1230
it won't go back to
它不会回头追随，

2328
01:20:46,490 --> 01:20:48,200
0,480 480,810 810,1260 1320,1470 1470,1710
follow,| because it's a higher
|因为这是一个比7更高的术语。

2329
01:20:48,200 --> 01:20:49,500
0,330 330,780
{term,than} 7.|
|

2330
01:20:49,500 --> 01:20:51,150
0,420 420,600 600,1050 1230,1530 1530,1650
{} I see, so it
我明白了，所以它可以是一个更高的术语武断。

2331
01:20:51,150 --> 01:20:52,290
0,120 120,240 240,330 330,690 690,1140
could be a higher term

2332
01:20:52,320 --> 01:20:55,380
0,690 1560,1920 1920,2280 2310,2580 2580,3060
arbitrary.| Wait, could could a
|等等，能不能进到第7项，

2333
01:20:55,440 --> 01:20:57,840
0,510 510,1020 1200,1800
going to {}

2334
01:20:58,260 --> 01:20:59,980
0,270 270,510 510,1110
into terms 7,|
|

2335
01:21:00,420 --> 01:21:01,980
0,240 240,540 540,780 780,1320 1350,1560
its own term 7 if
它自己的项7，如果d类似于分区，

2336
01:21:01,980 --> 01:21:03,540
0,240 240,540 540,990
d was like

2337
01:21:03,740 --> 01:21:05,480
0,600 600,990 1230,1470 1470,1590 1590,1740
partition,| like if there was
|就好像有一个网络分区

2338
01:21:05,480 --> 01:21:06,650
0,30 30,390 390,960 960,1110 1110,1170
a network partition| and it
|而且它也不知道d的事。

2339
01:21:06,650 --> 01:21:08,800
0,270 270,390 390,840 1080,1590
didn't know about d.|
|

2340
01:21:09,060 --> 01:21:10,530
0,210 210,450 540,900 900,1050 1050,1470
{} I think confused is,|
我认为困惑是，|

2341
01:21:10,530 --> 01:21:11,580
0,270 270,570 570,660 660,780 780,1050
like even if it does
就像即使它知道D，

2342
01:21:11,580 --> 01:21:12,900
0,180 180,510 510,750 750,990 990,1320
know about d,| why does
|这有什么关系，不应该有什么关系。

2343
01:21:12,900 --> 01:21:14,820
0,360 360,870 870,1170 1170,1440 1440,1920
that matter, it shouldn't matter.|
|

2344
01:21:19,070 --> 01:21:21,260
0,990 1020,1260 1260,1710 1710,2040 2040,2190
If a promotes itself to
如果A将自己提升为候选人

2345
01:21:21,260 --> 01:21:23,180
0,690 690,870 870,1290
candidate| and then
|然后发出一个请求，一个投票请求，

2346
01:21:23,180 --> 01:21:26,060
0,300 300,450 450,1440 1440,2220
sends out a request,

2347
01:21:26,450 --> 01:21:29,280
0,240 240,480 480,1140 1590,2280
a vote request, {}|
|

2348
01:21:29,280 --> 01:21:31,500
0,480 480,930 1350,1800 1800,2010 2010,2220
then, like d could come
然后，就像d可以回来说，

2349
01:21:31,500 --> 01:21:32,910
0,270 270,420 420,600 600,810 840,1410
back and say like,| oh
|哦，我最新的日志条目是第7学期的这个索引，

2350
01:21:33,180 --> 01:21:35,700
0,390 390,630 630,1470 1500,2010 2010,2520
well my latest log entry

2351
01:21:35,700 --> 01:21:36,990
0,240 240,360 360,540 540,1140 1140,1290
was at this index for

2352
01:21:36,990 --> 01:21:39,180
0,300 300,900 1350,1800 1830,2100 2100,2190
term 7,| {} but I
|但我不认为这是一个，

2353
01:21:39,180 --> 01:21:40,680
0,420 420,690 690,960
don't think that

2354
01:21:41,120 --> 01:21:42,520
0,420 450,840
a,| wait,
|等等，实际上，它甚至看不到这一点，对吧，

2355
01:21:42,520 --> 01:21:43,870
0,390 390,450 450,690 690,960 960,1350
actually, it doesn't even see

2356
01:21:43,870 --> 01:21:45,310
0,330 360,720 720,1080 1110,1320 1320,1440
that, right,| in in their
|在他们对RPC请求的响应中，

2357
01:21:45,310 --> 01:21:46,630
0,480 480,630 630,720 720,1140 1140,1320
response to a request for

2358
01:21:46,630 --> 01:21:49,660
0,120 120,720 1050,2460 2460,2820 2820,3030
{rpc -},| basically says like
|基本上说，它现在的期限是7，与a的期限相匹配，

2359
01:21:49,660 --> 01:21:51,040
0,180 180,540 540,960 960,1200 1200,1380
its current term which would

2360
01:21:51,040 --> 01:21:53,620
0,150 150,720 1080,1380 1380,1860 1860,2580
be 7, which matches a's,|
|

2361
01:21:54,040 --> 01:21:55,480
0,570 570,780 780,990 990,1290 1290,1440
because that way that's our
因为那样的话这就是我们的假设。

2362
01:21:55,480 --> 01:21:58,630
0,780 780,930 930,1350 1770,2430 2700,3150
hypothesis and then.| {} {Yeah,a}
|是的，A在第7个转弯时开始了选举，

2363
01:21:58,630 --> 01:22:00,370
0,360 360,420 420,780 780,1470 1500,1740
started the election in turn

2364
01:22:00,370 --> 01:22:01,380
0,480
7,|
|

2365
01:22:04,370 --> 01:22:05,660
0,360 360,480 480,960 960,1080 1080,1290
with a {and,d} would not
有a和d的人不会投票给a。

2366
01:22:05,660 --> 01:22:07,340
0,270 270,510 510,780 1080,1440 1440,1680
vote for a.| Yes, that's
|是的，这是事实，

2367
01:22:07,340 --> 01:22:08,400
0,540
true,|
|

2368
01:22:08,400 --> 01:22:09,960
0,270 270,330 330,540 540,960 1170,1560
but I don't know I
但我不知道我觉得这完全没问题，

2369
01:22:09,960 --> 01:22:11,730
0,390 510,810 810,1200 1200,1590 1590,1770
think it's totally fine,| if
|如果D是活的并且给予它对A的投票请求的响应，

2370
01:22:11,730 --> 01:22:13,170
0,240 240,420 420,900 900,1080 1080,1440
d is alive and gives

2371
01:22:13,170 --> 01:22:13,980
0,210
it

2372
01:22:13,980 --> 01:22:16,710
0,330 690,1620 1620,2190 2190,2520 2520,2730
a response to a's vote

2373
01:22:16,710 --> 01:22:18,870
0,720 1140,1290 1290,1620 1620,1830 1830,2160
request,| I don't think that
|我不认为这会阻止他成为候选人。

2374
01:22:18,870 --> 01:22:20,220
0,510 510,750 750,930 930,1230 1230,1350
deters a from being a

2375
01:22:20,220 --> 01:22:21,360
0,600
candidate.|
|

2376
01:22:22,120 --> 01:22:23,650
0,510 510,1050 1050,1260 1260,1440 1440,1530
{} Someone just put in
有人刚刚加入了聊天，我认为答案是，

2377
01:22:23,650 --> 01:22:24,460
0,60 60,420 420,510 510,720 720,810
the chat, I think the

2378
01:22:24,460 --> 01:22:25,660
0,330 330,420 420,810 840,1080 1080,1200
answer to that,| so I
|所以我要格兰特这么说，

2379
01:22:25,660 --> 01:22:27,400
0,360 360,720 720,1140 1290,1530 1530,1740
grant said that,| as soon
|一旦D拒绝投票，

2380
01:22:27,400 --> 01:22:29,320
0,240 240,510 510,1140 1140,1320 1320,1920
as d rejects the vote,|
|

2381
01:22:29,650 --> 01:22:31,870
0,690 930,1200 1200,1560 1560,2100 2100,2220
{} a will revert to
一个意志回归为追随者，

2382
01:22:31,870 --> 01:22:33,160
0,240 240,360 360,930 930,1200 1200,1290
being a follower,| because it
|因为它会意识到它有一个较低的期限数。

2383
01:22:33,160 --> 01:22:34,510
0,180 180,690 690,900 900,1110 1110,1350
will realize that it has

2384
01:22:34,510 --> 01:22:36,220
0,60 60,390 390,720 720,1230 1260,1710
a lower term number.| But,
|但是，好吧。

2385
01:22:36,250 --> 01:22:39,310
0,510 840,1230 1230,2040 2070,2520 2520,3060
okay.| Not necessarily, because again
|不一定，因为再一次记住，他们日志上的最近项与服务器记录的最近项不是同一件事，

2386
01:22:39,340 --> 01:22:40,750
0,540 570,840 840,1020 1020,1080 1080,1410
the remember that the most

2387
01:22:40,750 --> 01:22:42,280
0,270 270,660 660,900 900,1050 1050,1530
recent term on their log

2388
01:22:42,280 --> 01:22:43,660
0,180 180,630 630,720 720,1050 1050,1380
is not the same thing

2389
01:22:43,660 --> 01:22:44,980
0,180 180,270 270,540 540,810 810,1320
as the most recent term

2390
01:22:45,010 --> 01:22:46,460
0,300 300,390 390,1110
that the server

2391
01:22:46,490 --> 01:22:48,290
0,330 330,600 600,870 1500,1680 1680,1800
keep track of,| you can
|您可以拥有比日志中最近的条目更高的当前条目

2392
01:22:48,290 --> 01:22:50,030
0,300 300,360 360,840 840,1200 1200,1740
have a higher current term

2393
01:22:50,120 --> 01:22:51,320
0,420 420,510 510,750 750,1080 1080,1200
than the most recent thing

2394
01:22:51,320 --> 01:22:52,970
0,150 150,210 210,690 1110,1470 1470,1650
on the log| and so
|因此，如果A试图在第7届任期中选举自己，

2395
01:22:52,970 --> 01:22:54,380
0,330 330,630 630,1110 1110,1200 1200,1410
if a tries to elect

2396
01:22:54,380 --> 01:22:57,080
0,360 360,780 810,1260 1260,1860 1890,2700
itself in term 7,| yes
|是，当它试图联系D时，

2397
01:22:57,110 --> 01:22:58,520
0,270 270,360 360,630 630,720 720,1410
when it tries to contact

2398
01:22:58,520 --> 01:23:00,500
0,570 960,1170 1170,1470 1470,1620 1620,1980
d,| it will give up,|
|它会放弃的，|

2399
01:23:00,560 --> 01:23:01,730
0,360 360,480 480,630 630,930 930,1170
but if a tries elect
但如果A试图在第8届任期内选举自己，

2400
01:23:01,730 --> 01:23:03,020
0,270 270,360 360,660 690,1020 1050,1290
itself in term 8,| which
|如果它已经看到已经到了第7期，它就会这样做，

2401
01:23:03,020 --> 01:23:04,340
0,270 270,720 720,840 840,1050 1050,1320
it would if it's already

2402
01:23:04,340 --> 01:23:05,900
0,390 390,510 510,780 900,1260 1260,1560
seen that the has reached

2403
01:23:05,900 --> 01:23:07,380
0,210 210,720
term 7,|
|

2404
01:23:08,110 --> 01:23:09,580
0,720 750,1080 1080,1170 1170,1320 1320,1470
then, like a can get
然后，就像一个能当选。

2405
01:23:09,580 --> 01:23:11,860
0,450 990,1320 1320,1680
elected.| Wait, but.
|等等，但是。如果我们假设d在项7中，

2406
01:23:12,100 --> 01:23:13,660
0,270 270,570 570,1140 1140,1290 1290,1560
if d if we assume

2407
01:23:13,660 --> 01:23:14,530
0,150 150,360 360,480 480,600 600,870
that d is in term

2408
01:23:14,530 --> 01:23:17,860
0,570 930,1470 1950,2430 2940,3120 3120,3330
7,| {} like if a
|例如，如果A试图选举自己参加第七届任期，

2409
01:23:17,860 --> 01:23:19,180
0,270 270,390 390,600 600,960 960,1320
tries to elect itself {for,term}

2410
01:23:19,180 --> 01:23:21,200
0,600 930,1470
seven,| then
|那么我们实际上并没有这个案子，

2411
01:23:21,290 --> 01:23:22,610
0,480 480,660 660,900 900,1230 1230,1320
the we don't actually have

2412
01:23:22,610 --> 01:23:24,680
0,150 150,570 570,1110 1410,1890 1890,2070
this case,| because {} if
|因为如果RPC请求响应包含一个术语

2413
01:23:24,680 --> 01:23:25,970
0,90 90,210 210,480 480,930 930,1290
the {rpc -} request response

2414
01:23:25,970 --> 01:23:26,930
0,360 360,390 390,690 690,870 870,960
contains a term| which is
|严格地大于现在的期限，你就放弃，

2415
01:23:26,930 --> 01:23:28,280
0,390 390,750 750,930 930,1020 1020,1350
strictly greater than the current

2416
01:23:28,280 --> 01:23:29,180
0,240 240,360 360,510 510,750 750,900
term, you give up,| but
|但如果它们是一样的，

2417
01:23:29,180 --> 01:23:30,560
0,120 120,300 300,390 390,930 1110,1380
if they're the same,| then
|那就不重要了，

2418
01:23:30,560 --> 01:23:31,760
0,90 90,420 420,840 840,1080 1080,1200
it doesn't matter,| it will
|一切照常进行。

2419
01:23:31,760 --> 01:23:33,520
0,180 180,660 660,780 780,1260
just proceed as normal.|
|

2420
01:23:34,170 --> 01:23:36,030
0,210 210,690 690,1170 1470,1680 1680,1860
That's great.| Yes.| The d's
太好了。|是。|D的词条会被a告诉它的任何东西所取代。

2421
01:23:36,030 --> 01:23:37,500
0,180 180,450 450,660 660,1200 1200,1470
{entris -} get replaced by

2422
01:23:37,500 --> 01:23:39,360
0,540 540,750 750,1020 1020,1260
whatever a telling it.|
|

2423
01:23:40,100 --> 01:23:42,080
0,540 690,1170 1320,1560 1560,1680 1680,1980
So, {} at the end
所以，在这一节的末尾，

2424
01:23:42,080 --> 01:23:44,540
0,270 270,1110 1140,1650 2100,2370 2370,2460
of section,| {} like the
|就像选举限制条款5.4.1一样，

2425
01:23:44,540 --> 01:23:46,340
0,420 420,990 990,1380 1380,1590 1590,1800
election restriction section {5.4.1 -

2426
01:23:46,340 --> 01:23:48,230
0,180 180,390 390,810 1110,1350 1350,1890
- - -},| if the
|如果RAFT通过将索引与日志中的最后条目进行比较来确定两个日志中的哪一个是更新的，

2427
01:23:48,260 --> 01:23:49,610
0,390 390,900 900,1110 1110,1200 1200,1350
raft determines which of the

2428
01:23:49,610 --> 01:23:50,630
0,150 150,450 450,600 600,840 840,1020
two logs is more up

2429
01:23:50,630 --> 01:23:51,890
0,90 90,480 480,600 600,1140 1140,1260
to date by comparing the

2430
01:23:51,890 --> 01:23:53,000
0,450 450,630 630,870 870,990 990,1110
index in terms of the

2431
01:23:53,000 --> 01:23:54,350
0,330 330,720 720,840 840,960 960,1350
last entries in the log,|
|

2432
01:23:54,800 --> 01:23:57,710
0,720 810,1500 1650,2070 2070,2340 2340,2910
{} so wouldn't that mean
所以这不是意味着D必须成为领导者吗，

2433
01:23:57,740 --> 01:23:59,630
0,600 750,1140 1140,1440 1440,1560 1560,1890
that d has to become

2434
01:23:59,630 --> 01:24:01,430
0,90 90,450 450,900 900,1080 1080,1800
the leader,| if we're comparing.|
|如果我们要比较。|

2435
01:24:01,760 --> 01:24:03,710
0,720 840,1110 1110,1290 1290,1680 1680,1950
No, because d just vote
不，因为我会投反对票，

2436
01:24:03,710 --> 01:24:05,750
0,510 960,1500 1500,1680 1680,1890 1890,2040
no,| but other people might
|但其他人可能会投赞成票。

2437
01:24:05,750 --> 01:24:07,000
0,210 210,600
vote yes.|
|

2438
01:24:09,380 --> 01:24:10,600
0,900
Yeah.|
嗯。|

2439
01:24:11,680 --> 01:24:14,200
0,510 540,1920
So.| What,
所以。|什么，如果e在第五届[]5参选，

2440
01:24:15,660 --> 01:24:17,490
0,630 1080,1380 1410,1560 1560,1740 1740,1830
{ -} what about the

2441
01:24:17,490 --> 01:24:19,280
0,270 270,600 630,1230
case where e

2442
01:24:19,280 --> 01:24:20,870
0,450 450,600 600,1050 1050,1200 1200,1590
runs for election in term

2443
01:24:20,870 --> 01:24:23,390
0,870 1020,1470 1500,1830 1830,2220 2220,2520
5 [] {} 5,| yeah
|是啊，然后D就投了反对票，

2444
01:24:23,480 --> 01:24:25,250
0,480 480,810 810,1170 1260,1560 1560,1770
and then it gets a

2445
01:24:25,250 --> 01:24:26,900
0,300 300,570 570,900 900,1290 1290,1650
vote from d saying no,|
|

2446
01:24:26,900 --> 01:24:28,010
0,180 180,360 360,510 510,930 930,1110
it would then update its
然后，它将正确更新其术语并停止运行。

2447
01:24:28,010 --> 01:24:29,600
0,420 420,720 720,840 840,1170 1170,1590
term right and stop running.|
|

2448
01:24:30,530 --> 01:24:31,400
0,90 90,420 420,600 600,780 780,870
{} Hold on, like {
等一下，就像你在考虑开始5年的选举。

2449
01:24:31,400 --> 01:24:32,900
0,150 150,300 300,810 810,1140 1140,1500
-} so you're thinking about

2450
01:24:32,930 --> 01:24:35,720
0,660 660,960 960,1020 1020,1440 1470,2790
e starting the {election,for,5}.| Yeah,
|是的，如果它得到了几乎所有人的回应，

2451
01:24:36,320 --> 01:24:37,310
0,210 210,420 420,540 540,750 750,990
and if it gets a

2452
01:24:37,310 --> 01:24:39,380
0,420 420,780 810,1320 1320,1920 1920,2070
response from almost anybody,| it's
|它会发现它落后于一个学期，对吧，

2453
01:24:39,380 --> 01:24:40,130
0,150 150,240 240,450 450,570 570,750
going to see that it's

2454
01:24:40,130 --> 01:24:41,810
0,570 570,690 690,1140 1140,1350 1350,1680
behind a term, right,| so,
|所以，它确实在这种情况下更新了它的术语，对吧，

2455
01:24:42,170 --> 01:24:43,400
0,240 240,510 510,840 840,990 990,1230
it does update its term

2456
01:24:43,400 --> 01:24:44,450
0,90 90,270 270,600 600,780 780,1050
in that case, right,| to
|追加，追加

2457
01:24:44,450 --> 01:24:46,400
0,120 120,270 270,540 540,1050 1650,1950
append.| So {another -} way
|因此，问这个问题的另一种方式是，谁能成为领导者，

2458
01:24:46,400 --> 01:24:47,180
0,120 120,300 300,420 420,690 690,780
to ask this question, who

2459
01:24:47,180 --> 01:24:48,920
0,180 180,480 480,900
can become leader,|
|

2460
01:24:48,920 --> 01:24:50,240
0,330 330,690 690,810 810,1080 1080,1320
correct,| this you know from
对，是这样,|这就是你从这里知道的，你知道从这6个人中谁能成为领袖。

2461
01:24:50,240 --> 01:24:51,620
0,330 330,450 450,540 540,1200 1200,1380
this, you know whatever from

2462
01:24:51,620 --> 01:24:54,080
0,210 210,960 1230,1950 1950,2130 2130,2460
these 6 {a,b,c} to f

2463
01:24:54,080 --> 01:24:56,020
0,540 540,690 690,990 990,1380
who can become leader.|
|

2464
01:24:57,840 --> 01:24:59,220
0,240 240,450 450,630 630,900 900,1380
Can what f become leader?|
什么能成为领导者？|

2465
01:24:59,820 --> 01:25:02,320
0,510 780,1410 1410,2010
No.| { -}
不是的。|我们能成为领袖吗？

2466
01:25:03,430 --> 01:25:05,240
0,270 270,450 450,720 720,1230
Can e become leader?|
|

2467
01:25:06,660 --> 01:25:08,190
0,780 780,1020 1020,1110 1110,1320 1320,1530
Also no, the only ones
也不是，唯一可以成为领导者的是a、c和d。

2468
01:25:08,190 --> 01:25:09,750
0,150 150,270 270,810 810,1140 1140,1560
that can become leader are

2469
01:25:09,750 --> 01:25:12,220
0,60 60,900 1290,1980
a {c,and,d}.| {That's,correct},
|没错，有可能成为领导者。

2470
01:25:14,580 --> 01:25:16,140
0,420 420,840
possible leaders.|
|

2471
01:25:17,690 --> 01:25:19,940
0,390 720,1470 1500,1740 1740,1980 1980,2250
But can, can a become
但是如果d还活着，a能不能成为领导者，

2472
01:25:19,940 --> 01:25:20,960
0,90 90,390 390,630 630,900 900,1020
a leader, if d is

2473
01:25:20,960 --> 01:25:23,450
0,510 540,1200 1200,1860 2070,2370 2370,2490
alive,| because the because the
|因为安全部分说RPC，对RPC的请求实施了限制，

2474
01:25:23,450 --> 01:25:25,610
0,660 660,1080 1080,1650 1740,2070 2070,2160
safety section says that the

2475
01:25:25,610 --> 01:25:27,020
0,210 210,600 600,720 720,1140 1140,1410
{rpc -}, the request for

2476
01:25:27,020 --> 01:25:28,850
0,150 150,540 540,1080 1080,1200 1200,1830
{rpc -} implements the restriction,|
|

2477
01:25:28,850 --> 01:25:31,100
0,450 780,1320 1320,1770 1770,1890 1890,2250
that it compares the last
它会比较最后的日志条目

2478
01:25:31,100 --> 01:25:32,720
0,300 300,930 930,1260 1260,1320 1320,1620
log entries| and the one
|而日志条目最高的应该成为领先者。

2479
01:25:32,720 --> 01:25:34,250
0,180 180,270 270,660 660,900 900,1530
with the highest log entry

2480
01:25:34,370 --> 01:25:36,650
0,300 300,930 930,1080 1080,1560 2010,2280
should become the leader.| I
|我我只是觉得它不会投票给某个人。

2481
01:25:36,650 --> 01:25:38,750
0,0 0,630 630,900 930,1470 1500,2100
I only think it doesn't

2482
01:25:38,750 --> 01:25:41,560
0,690 720,1560 1860,2340
vote for someone.|
|

2483
01:25:42,060 --> 01:25:43,260
0,810
Exactly.|
一点儿没错。|

2484
01:25:43,410 --> 01:25:44,490
0,240 240,480 480,630 630,780 780,1080
So like they will never
所以他们永远不会投票给任何其他的权利。

2485
01:25:44,490 --> 01:25:46,110
0,330 330,450 450,1020 1050,1440 1440,1620
vote for a, right {}

2486
01:25:46,110 --> 01:25:48,090
0,180 180,600 600,1230 1260,1590 1590,1980
for anything else.| That's exactly
|这是完全正确的。

2487
01:25:48,090 --> 01:25:49,530
0,300 360,390 630,1020 1020,1170 1170,1440
right.| I mean it's also
|我的意思是，这也不是真的，就像如果你有一个条目比另一个节点的条目更高，

2488
01:25:49,530 --> 01:25:51,480
0,330 330,720 720,1020 1020,1410 1770,1950
not true, that like if

2489
01:25:51,480 --> 01:25:52,890
0,180 180,540 540,690 690,1260 1260,1410
you have an entry in

2490
01:25:52,890 --> 01:25:55,650
0,90 90,690 690,1380 1500,2070 2220,2760
a higher term than another

2491
01:25:55,650 --> 01:25:58,160
0,450 450,810 840,1320 1320,2010
node,| like you're actually
|就像你其实更好一样，对吧，

2492
01:25:58,160 --> 01:25:59,570
0,180 180,270 270,540 540,1170 1170,1410
sort of like better right,|
|

2493
01:25:59,570 --> 01:26:01,850
0,390 900,1440 1710,2010 2010,2130 2130,2280
because I mean you can
因为我的意思是你可以像成为领袖一样

2494
01:26:01,850 --> 01:26:03,120
0,330 330,690
be like

2495
01:26:03,120 --> 01:26:05,070
0,540 540,930 930,1230 1230,1740 1740,1950
becoming leader| and trying to
|并试图将他们喜欢的条目添加到日志中，但不会通过，所以。

2496
01:26:05,070 --> 01:26:06,960
0,630 660,1020 1020,1230 1230,1380 1380,1890
append entries into the log

2497
01:26:06,960 --> 01:26:08,040
0,240 240,450 480,690 690,930 930,1080
what they like don't go

2498
01:26:08,040 --> 01:26:12,180
0,540 540,1140 1860,3660
through, so.| {Well,,d,is,like,when,you,go,through},|
|嗯，D就像当你穿过的时候，|

2499
01:26:12,290 --> 01:26:13,880
0,300 300,480 480,600 600,1080 1080,1590
okay, d is like, correct,
好的，d是正确的，d再次投票，a成为领袖，

2500
01:26:14,000 --> 01:26:16,550
0,660 660,1140 1140,1530 1530,2010 2040,2550
{d,voted} again, {a,becomes} leader,| d
|我真的试着，

2501
01:26:16,550 --> 01:26:18,800
0,240 240,600 600,990 1320,1800 1800,2250
actually tries to,| {} well,
|嗯，如果A实际上没有投赞成票，A不会联系D。

2502
01:26:20,760 --> 01:26:22,710
0,210 210,450 450,810 810,1230 1260,1950
a won't contact d, if

2503
01:26:22,710 --> 01:26:23,910
0,300 300,480 480,750 750,990 990,1200
actually didn't vote for it.|
|

2504
01:26:26,340 --> 01:26:27,320
0,510

2505
01:26:27,780 --> 01:26:28,620
0,240 240,360 360,480 480,660 660,840
And so they would just
因此，他们会继续进行下去。

2506
01:26:28,620 --> 01:26:29,640
0,450
proceed.|
|

2507
01:26:31,380 --> 01:26:32,700
0,210 210,390 390,720 720,930 930,1320
So why could they have
那么为什么他们会有7项的原木呢，

2508
01:26:32,700 --> 01:26:34,410
0,480 480,690 690,1050 1050,1470 1470,1710
logs in terms 7,| if
|如果它在第七方面不是领导者呢？

2509
01:26:34,410 --> 01:26:35,460
0,240 240,480 480,600 600,930 930,1050
it's not a leader in

2510
01:26:35,460 --> 01:26:36,740
0,300 300,750
terms 7?|
|

2511
01:26:37,940 --> 01:26:39,110
0,540 540,750 750,870 870,1050 1050,1170
d must have been the
D一定是第七届的领头羊，对吧。

2512
01:26:39,110 --> 01:26:40,370
0,270 270,360 360,630 630,750 900,1260
leader in term 7, right.|
|

2513
01:26:41,760 --> 01:26:43,180
0,270 270,270 270,900
Yeah, I agree.|
是的，我同意。|

2514
01:26:43,590 --> 01:26:44,400
0,360 360,420 420,510 510,660 660,810
Otherwise, you would have no
否则，您将没有日志条目。

2515
01:26:44,400 --> 01:26:45,640
0,240 240,660
log entries.|
|

2516
01:26:54,360 --> 01:26:56,070
0,180 180,780 780,990 990,1230 1230,1710
{} When you have log
当你有日志时，我想我忘了。

2517
01:26:56,070 --> 01:26:58,230
0,840 840,1320 1350,1620 1620,1710 1710,2160
[] I think I forgot.|
|

2518
01:26:58,230 --> 01:26:59,670
0,180 180,300 300,510 510,990 990,1440
So in this case, was
因此，在这种情况下，d在第七届任期中是领头羊，

2519
01:26:59,910 --> 01:27:01,200
0,690
d

2520
01:27:01,400 --> 01:27:02,700
0,720
{}

2521
01:27:02,840 --> 01:27:05,040
0,390 390,660 660,930 930,1620
was d a leader

2522
01:27:05,560 --> 01:27:07,210
0,210 210,480 480,990 1020,1290 1290,1650
in term 7,| who got
|谁被切断了联系

2523
01:27:07,210 --> 01:27:09,280
0,1020 1020,1320 1320,1710 1710,1830 1830,2070
disconnected| and then the new
|然后新的领导人当选为最高层的领导人。

2524
01:27:09,280 --> 01:27:10,930
0,300 300,540 540,1140 1170,1500 1500,1650
leader got elected the one

2525
01:27:10,930 --> 01:27:12,100
0,90 90,150 150,690
at the top.|
|

2526
01:27:12,740 --> 01:27:14,420
0,420 450,570 570,720 720,1080
Yeah I think so.|
是的我想是的。|

2527
01:27:15,120 --> 01:27:16,170
0,420 420,600 600,780 780,960 960,1050
Actually, let me take that
实际上，让我收回这句话，

2528
01:27:16,170 --> 01:27:17,340
0,210 210,240 240,450 450,810 810,1170
back,| I don't really remember
|我记不清具体的顺序了，

2529
01:27:17,340 --> 01:27:18,960
0,450 450,990 990,1080 1080,1380 1380,1620
exactly sequence,| I didn't really
|我真的没怎么注意到这位顶尖人物，

2530
01:27:18,960 --> 01:27:19,770
0,150 150,420 420,630 630,720 720,810
pay attention much to the

2531
01:27:19,770 --> 01:27:22,440
0,270 270,600 1050,1590 1620,1980 2370,2670
top guy,| {} but I
|但我认为情况就是这样，

2532
01:27:22,440 --> 01:27:23,490
0,270 270,450 450,540 540,630 630,1050
presume that is the case,|
|

2533
01:27:23,790 --> 01:27:24,960
0,210 210,450 450,720 720,930 930,1170
it does say that it's
它确实说，它既不是第8学期，也不是[]一个日志。

2534
01:27:24,960 --> 01:27:27,810
0,510 510,870 870,1170 1200,2400 2400,2850
neither for term {8,and} {[]

2535
01:27:28,110 --> 01:27:31,320
0,1710 1710,1710 2130,2730
-} a log.|
|

2536
01:27:33,110 --> 01:27:33,950
0,150 150,420 420,510 510,750 750,840
I think the case we're
我认为我们正在审理的案件

2537
01:27:33,950 --> 01:27:35,240
0,360 360,690 690,780 780,990 990,1290
looking at| the one where
|其中a的项数比d的项数大，

2538
01:27:35,240 --> 01:27:36,800
0,210 210,420 420,480 480,1140 1230,1560
a has a higher term

2539
01:27:36,800 --> 01:27:38,060
0,360 360,660 660,840 840,1020 1020,1260
number than d is,| the
|他们提到了安全论证中的矛盾案例，

2540
01:27:38,090 --> 01:27:39,800
0,810 810,1110 1110,1200 1200,1290 1290,1710
contradiction case in the safety

2541
01:27:39,800 --> 01:27:41,630
0,450 450,570 570,1140 1470,1710 1710,1830
argument, they mentioned,| like I
|就像我认为他们证明了这是不可能的。

2542
01:27:41,630 --> 01:27:42,620
0,210 210,360 360,660 660,840 840,990
think they proved that this

2543
01:27:42,620 --> 01:27:44,040
0,120 120,330 330,900
is not possible.|
|

2544
01:27:45,890 --> 01:27:47,120
0,240 240,450 450,570 570,780 780,1230
What one is not possible?|
哪一个是不可能的？|

2545
01:27:47,780 --> 01:27:49,820
0,240 240,750 930,1560 1590,1830 1830,2040
Like that, {} a could
这样，a可以当选，b漏掉一个条目，并且任期比d高，

2546
01:27:49,820 --> 01:27:52,040
0,90 90,840 1290,1710 1710,2070 2070,2220
be elected, b missing an

2547
01:27:52,040 --> 01:27:53,570
0,630 810,990 990,1170 1170,1230 1230,1530
entry and have a higher

2548
01:27:53,570 --> 01:27:54,620
0,270 270,390 390,690 690,930 930,1050
term than d,| which is
|这里就是这种情况，

2549
01:27:54,620 --> 01:27:55,670
0,120 120,450 450,720 750,840 840,1050
the case here,| I think
|我认为有证据表明这是一种矛盾。

2550
01:27:55,670 --> 01:27:57,470
0,240 240,450 570,1140 1140,1440 1440,1800
there's {} like step proof

2551
01:27:57,470 --> 01:27:58,910
0,270 270,480 480,600 600,690 690,1440
that this is a contradiction.|
|

2552
01:27:59,570 --> 01:28:00,740
0,360 360,540 540,780 780,930 930,1170
I I don't think so,|
我我不这么认为，|

2553
01:28:00,740 --> 01:28:02,000
0,240 240,480 480,660 660,990 990,1260
I think it's totally fine
我认为[它]当选领导人是完全可以的。

2554
01:28:02,000 --> 01:28:02,900
0,120 120,210 210,300 300,390 390,900
for [it] to be elected

2555
01:28:02,900 --> 01:28:03,920
0,420
leader.|
|

2556
01:28:03,920 --> 01:28:05,150
0,120 120,300 300,570 570,1050 1110,1230
Yeah, I think the, I
是的，我认为，我认为安全证明说，未来的领导人不能有，需要提交所有的日志。

2557
01:28:05,150 --> 01:28:06,560
0,180 180,300 300,720 720,1050 1050,1410
think the safety proof says

2558
01:28:06,560 --> 01:28:08,960
0,600 840,1020 1020,1440 1440,1830 1830,2400
that a future leader cannot

2559
01:28:08,960 --> 01:28:11,360
0,720 1170,1830 1830,1950 1950,2250 2250,2400
have, needs to have all

2560
01:28:11,360 --> 01:28:12,780
0,150 150,600
of the

2561
01:28:12,780 --> 01:28:15,810
0,780 810,1410 1410,1950 2190,2790 2790,3030
log commited.| Commited, yeah.| And
|投降了，是的。|和7没有承诺。

2562
01:28:15,810 --> 01:28:18,400
0,480 480,750 750,1200 1410,2010
{7,is} not committed.| Exactly.|
|一点儿没错。|

2563
01:28:18,700 --> 01:28:19,330
0,180 180,300 300,420 420,480 480,630
I could use a whole
我可以在这里做一大堆手术，

2564
01:28:19,330 --> 01:28:20,380
0,150 150,210 210,690 690,900 900,1050
bunch of operations here,| they're
|他们没有做出正确的承诺，

2565
01:28:20,380 --> 01:28:21,670
0,210 210,600 600,870 870,1080 1080,1290
not committed right,| they're just
|他们只是试探性的

2566
01:28:21,670 --> 01:28:23,230
0,510 540,720 720,1110 1140,1440 1440,1560
tentative| and so anything can
|所以任何事情都可能发生在他们身上，

2567
01:28:23,230 --> 01:28:24,700
0,240 240,330 330,570 960,1140 1140,1470
happen to them,| then nothing
|那最后就不会出什么差错了。

2568
01:28:24,700 --> 01:28:25,630
0,390 390,510 510,750 750,840 840,930
wrong will happen in the

2569
01:28:25,630 --> 01:28:26,520
0,330
end.|
|

2570
01:28:27,490 --> 01:28:28,540
0,210 210,300 300,720 720,900 900,1050
And the reason that the
而所有承诺的事情之所以奏效是因为，

2571
01:28:28,540 --> 01:28:30,190
0,240 240,660 660,870 870,1380 1410,1650
whole committed thing works is,|
|

2572
01:28:30,190 --> 01:28:32,560
0,870 1200,1440 1440,1590 1590,2040 2040,2370
because if it's committed then
因为如果它被承诺了，那么它比大多数人都要多，

2573
01:28:32,560 --> 01:28:35,080
0,420 420,930 1260,1590 1590,2100 2100,2520
more than the majority have,|
|

2574
01:28:35,110 --> 01:28:36,700
0,360 360,870 870,1050 1050,1200 1200,1590
those entries and so someone
那些参赛作品，所以没有提交参赛作品的人永远不会当选，对吧。

2575
01:28:36,700 --> 01:28:37,810
0,90 90,390 390,660 660,750 750,1110
who doesn't have the committed

2576
01:28:37,810 --> 01:28:39,430
0,360 360,540 540,810 810,1110 1110,1620
entries could never become elected,

2577
01:28:39,490 --> 01:28:41,180
0,360 540,1230
right.| Yes.|
|是。|

2578
01:28:41,180 --> 01:28:42,640
0,150 150,510 510,870
That's exactly right.|
这是完全正确的。|

2579
01:28:49,450 --> 01:28:51,250
0,510 510,870 870,1020 1020,1620 1620,1800
Yeah, they they discussed like,|
是啊，他们讨论的就像，|

2580
01:28:51,250 --> 01:28:52,660
0,330 330,660 690,960 960,1230 1230,1410
yeah, like in terms of
是啊，就像只有年龄较大的参赛者才能当选，

2581
01:28:53,470 --> 01:28:55,000
0,330 330,600 600,810 810,1140 1170,1530
only someone who has older

2582
01:28:55,000 --> 01:28:56,530
0,330 330,660 660,960 960,1110 1110,1530
committed entries can get elected,|
|

2583
01:28:56,530 --> 01:28:57,880
0,120 120,270 270,420 420,810 870,1350
I think it gets more
我认为事情变得更复杂了，因为你知道，在所有承诺参选的人中，哪些人可以当选，

2584
01:28:57,880 --> 01:29:00,490
0,870 870,1200 1530,1680 1680,1860 1860,2610
complicated with you know within

2585
01:29:00,550 --> 01:29:01,720
0,210 210,510 510,630 630,960 960,1170
the people who have all

2586
01:29:01,720 --> 01:29:03,730
0,390 390,810 810,1260 1260,1710 1710,2010
committed entries which ones can

2587
01:29:03,730 --> 01:29:05,000
0,180 180,810
get elected,|
|

2588
01:29:05,060 --> 01:29:06,380
0,360 360,720
that's. {}|
那是。|

2589
01:29:06,380 --> 01:29:07,430
0,270 270,360 360,570 570,810 810,1050
Yeah, some ways it doesn't
是啊，在某种程度上这无关紧要。

2590
01:29:07,430 --> 01:29:08,500
0,420
matter.|
|

2591
01:29:08,800 --> 01:29:10,200
0,1290
Yeah.|
嗯。|

2592
01:29:15,060 --> 01:29:17,850
0,240 240,930 1170,1230 2070,2670 2670,2790
So all.| {} All the
所以所有的。|条款4之后的所有提交都不会在这里提交，对吧。

2593
01:29:17,850 --> 01:29:19,560
0,390 390,750 750,1050 1050,1470 1470,1710
commits after term 4 are

2594
01:29:19,560 --> 01:29:21,180
0,240 240,720 720,930 930,1230 1230,1620
not committed then here, right.|
|

2595
01:29:22,020 --> 01:29:24,360
0,1050 1080,1350 1350,1650 1650,1830 1830,2340
{} So these two 4s,
所以这两个4，那些不是。

2596
01:29:25,960 --> 01:29:27,910
0,270 270,300 300,1170 1170,1290 1290,1950
those are not.| The first,
|第一个，前两个4。

2597
01:29:27,910 --> 01:29:29,540
0,120 120,360 360,510 510,1110
the first two 4s.|
|

2598
01:29:29,630 --> 01:29:31,640
0,300 300,720 900,1290 1290,1530 1530,2010
Those are, where your question,|
这些都是你的问题所在，|

2599
01:29:31,790 --> 01:29:33,470
0,210 210,450 450,570 570,960 1410,1680
they will be committed.| Yeah,
他们将会被承诺。|是啊，这些都是有罪的，

2600
01:29:33,470 --> 01:29:34,490
0,210 210,360 360,480 480,870 870,1020
those would be committed,| but
|但之后做的一切不是吗？

2601
01:29:34,490 --> 01:29:35,960
0,210 210,600 600,930 930,1200 1200,1470
done everything after wouldn't be?|
|

2602
01:29:37,220 --> 01:29:38,870
0,480 480,630 630,720 720,1170 1470,1650
5 will be committed.| Two
将承诺5个。|两个六岁。

2603
01:29:38,870 --> 01:29:41,120
0,480 690,930 930,1050 1050,1320 1320,2250
6.| And two 6 {also,be}
|和两个6也被委托。

2604
01:29:41,120 --> 01:29:42,160
0,480
commited.|
|

2605
01:29:42,780 --> 01:29:44,520
0,450 450,600 600,780 780,1050 1080,1740
Okay, you only need exactly,|
好的，你只需要准确地，|

2606
01:29:44,520 --> 01:29:46,500
0,570 570,1110 1290,1710 1710,1830 1830,1980
it's okay,| exactly how it's
没关系的,|就是这样的，好的。

2607
01:29:46,500 --> 01:29:47,700
0,210 210,630
okay, okay.|
|

2608
01:29:48,120 --> 01:29:49,380
0,120 120,630 630,960 960,1020 1020,1260
No, {another - -} one.|
不，是另一个。|

2609
01:29:49,380 --> 01:29:51,800
0,540 540,1140
Over 4.|
4岁以上。|

2610
01:29:52,430 --> 01:29:53,360
0,270 270,420 420,540 540,780 780,930
Yeah, so the 5 and
是啊，所以5号和6号不会犯罪，

2611
01:29:53,360 --> 01:29:55,140
0,210 210,450 450,570 570,1050
6 wouldn't be committed,|
|

2612
01:29:55,400 --> 01:29:57,950
0,360 360,540 540,690 690,1140 1140,2550
oh, but you have {another,leader}
哦，但你又找对了一位领导。

2613
01:29:57,950 --> 01:30:00,380
0,180 180,630 720,1500 1500,2070 2250,2430
right.| Yeah yeah.| Okay, well
|对，对。|好的，别忘了这些，好的，我知道了。

2614
01:30:00,380 --> 01:30:01,490
0,210 210,390 390,600 600,750 750,1110
let's not forget about those

2615
01:30:01,490 --> 01:30:03,520
0,360 690,840 840,1170
right, I {got,it}.|
|

2616
01:30:03,610 --> 01:30:07,030
0,660 1500,1650 1650,3120 3120,3210 3210,3420
Okay, okay, I'll come back
好的，好的，我会回到这个话题，在下一节课开始的时候，

2617
01:30:07,030 --> 01:30:07,780
0,60 60,240 240,360 360,510 510,750
to this, at the beginning

2618
01:30:07,780 --> 01:30:09,010
0,60 60,240 240,480 480,690 690,1230
of next lecture,| because some
|因为你们中的一些人可能不得不跑到另一个班级，

2619
01:30:09,010 --> 01:30:09,850
0,180 180,270 270,420 420,750 750,840
some of you probably have

2620
01:30:09,850 --> 01:30:11,020
0,90 90,270 270,390 390,630 630,1170
to run to another class,|
|

2621
01:30:11,050 --> 01:30:12,220
0,600

2622
01:30:12,220 --> 01:30:13,510
0,270 270,720 720,990 990,1110 1110,1290
but, {} I'll come back
但是，我会回到这个问题上来，

2623
01:30:13,510 --> 01:30:14,620
0,90 90,450 540,810 810,1020 1020,1110
to this,| {} if you
|如果你有更多的问题，请不要客气，

2624
01:30:14,620 --> 01:30:15,490
0,90 90,270 270,570 570,720 720,870
have more questions feel free

2625
01:30:15,490 --> 01:30:17,620
0,90 90,270 270,630 780,1560 1560,2130
to stick around,| {} you
|你知道我们会重新开始的。

2626
01:30:17,680 --> 01:30:19,540
0,300 300,720 720,1020 1020,1350
know we'll resume this.|
|

2627
01:30:23,000 --> 01:30:24,590
0,420 450,690 690,870 870,1380 1410,1590
Oh, can you see the
哦，你能再一次看到原木的副本吗，

2628
01:30:24,590 --> 01:30:27,680
0,360 360,1380 1530,2190 2220,2640 2640,3090
log duplication, {} again,| why,
|为什么，什么时候会有日志复制。

2629
01:30:27,710 --> 01:30:29,090
0,270 270,420 420,630 630,990 1020,1380
when could there be log

2630
01:30:29,090 --> 01:30:30,480
0,870
duplication.|
|

2631
01:30:30,910 --> 01:30:32,350
0,420 450,930 930,1170 1170,1200 1200,1440
What, {} what I mean
什么，我的意思是，在某个时候，领导者会把自己的日志强加给追随者。

2632
01:30:32,350 --> 01:30:34,330
0,150 150,510 1020,1380 1380,1890 1890,1980
is that the leader at

2633
01:30:34,330 --> 01:30:36,400
0,210 210,600 600,1230 1260,1590 1590,2070
some point forces its log

2634
01:30:36,430 --> 01:30:38,160
0,420 420,540 540,1200
on the followers.|
|

2635
01:30:41,910 --> 01:30:42,990
0,150 150,570 600,720 720,930 930,1080
I think I think you
我想我认为你在前面的一些幻灯片中是认真的。

2636
01:30:42,990 --> 01:30:44,520
0,300 300,480 510,1140 1170,1410 1410,1530
meant it on some of

2637
01:30:44,520 --> 01:30:46,560
0,120 120,600 600,1320 1320,1920 1920,2040
the previous slides.| Okay, so
|好吧，所以也许，也许我，我不记得我说过。

2638
01:30:46,560 --> 01:30:49,590
0,270 270,660 660,960 960,1500 1920,3030
maybe, yeah maybe I I

2639
01:30:49,620 --> 01:30:54,660
0,420 420,840 870,4110 4350,4590 4590,5040
can't remember I {said -}.|
|

2640
01:30:55,050 --> 01:30:56,580
0,390 390,540 540,720 720,1080 1080,1530
It is a little more,
这是多一点，也许多一点。

2641
01:30:57,530 --> 01:30:59,200
0,240 240,300 300,570 570,990
maybe a little more.|
|

2642
01:30:59,830 --> 01:31:01,080
0,660

2643
01:31:01,270 --> 01:31:02,580
0,690

2644
01:31:09,510 --> 01:31:11,850
0,420 420,600 600,1260 1260,1710 1710,2340
Oh, is {there,is} there deleted
哦，有没有被删掉的副本。

2645
01:31:11,850 --> 01:31:13,300
0,930
duplicates.|
|

2646
01:31:13,490 --> 01:31:16,610
0,750 750,1260 1290,1710 1710,1890 2430,3120
Detect duplicates.| Yeah, it's difficult.|
检测重复项。|是啊，这很难。|

2647
01:31:16,670 --> 01:31:18,800
0,540 540,870 870,1260 1290,1860 1860,2130
Yeah, this is, {} this
是的，这不是木筏问题，对吧，

2648
01:31:18,800 --> 01:31:20,450
0,180 180,600 600,690 690,1170 1170,1650
is not a {raft,issue} correct,|
|

2649
01:31:20,450 --> 01:31:22,130
0,120 120,240 240,630 630,900 900,1680
this is really a kv,
这真的是一个KV，一个关键价值服务问题。

2650
01:31:22,160 --> 01:31:23,840
0,300 300,540 540,840 840,1200 1200,1680
a {key-value -} service issue.|
|

2651
01:31:24,340 --> 01:31:27,370
0,510 510,1320 1590,2070 2070,2430 2430,3030
{} Where a client request,|
在客户端请求时，|

2652
01:31:27,400 --> 01:31:28,690
0,270 270,690 690,960 960,1200 1200,1290
you might be reaching a
你可能正在联系一位客户，

2653
01:31:28,690 --> 01:31:30,970
0,360 360,660 660,1410 1800,2160 2160,2280
client may,| {} client might
|客户端可能得不到响应，

2654
01:31:30,970 --> 01:31:32,400
0,150 150,270 270,330 330,960
not get a response,|
|

2655
01:31:32,460 --> 01:31:34,050
0,420 420,660 660,1290 1320,1440 1440,1590
{} even though you know
即使你知道那个请求真的通过了救生艇，

2656
01:31:34,050 --> 01:31:35,220
0,210 210,570 570,750 750,990 990,1170
that request actually went through

2657
01:31:35,220 --> 01:31:37,200
0,570 960,1290 1290,1440 1440,1800 1800,1980
raft,| because what happened is
|因为发生的情况是，领导者可能会被应用于其状态的操作，

2658
01:31:37,200 --> 01:31:38,340
0,270 270,450 450,840 840,990 990,1140
that the leader may be

2659
01:31:38,340 --> 01:31:39,810
0,330 330,420 420,1170 1170,1320 1320,1470
applied to operation to its

2660
01:31:39,810 --> 01:31:41,580
0,450 450,1110 1110,1560 1560,1680 1680,1770
state,| before responding to the
|在回应客户之前，它崩溃了，

2661
01:31:41,580 --> 01:31:43,500
0,300 300,390 390,960
client, it crashed,|
|

2662
01:31:43,880 --> 01:31:45,860
0,150 150,570 570,720 720,1410
so {the,client} will retry,|
因此客户端将重试，|

2663
01:31:45,860 --> 01:31:46,730
0,360 360,510 510,570 570,660 660,870
{} and we will send
我们会将这一请求发送给新领导人，

2664
01:31:46,730 --> 01:31:47,690
0,180 180,480 480,630 630,750 750,960
this request to the new

2665
01:31:47,690 --> 01:31:49,130
0,480 510,660 660,870 870,1200 1200,1440
leader,| the new lender will
|新的贷款方将通过RAFT贷款。

2666
01:31:49,130 --> 01:31:50,030
0,180 180,270 270,420 420,810 810,900
run it through raft| and
|然后它又会从木筏上弹出来。

2667
01:31:50,030 --> 01:31:50,750
0,60 60,210 210,480 480,630 630,720
it will pop out of

2668
01:31:50,750 --> 01:31:51,900
0,270 270,600
raft again.|
|

2669
01:31:52,570 --> 01:31:53,380
0,270 270,480 480,570 570,750 750,810
And so it has to
因此，情况就是这样，

2670
01:31:53,380 --> 01:31:54,280
0,90 90,180 180,540 540,750 750,900
be the case,| that the
|KV服务器进行重复检测。

2671
01:31:54,280 --> 01:31:55,780
0,240 240,450 450,810 810,1110 1110,1500
{kv -} server does duplicate

2672
01:31:55,780 --> 01:31:56,860
0,510
detection.|
|

2673
01:31:58,240 --> 01:31:59,380
0,210 210,360 360,480 480,750 780,1140
Oh, this is like only
哦，这就像是只有在客户没有得到回复的情况下。

2674
01:31:59,380 --> 01:32:00,550
0,120 120,240 240,570 570,930 930,1170
if the client didn't get

2675
01:32:00,550 --> 01:32:04,120
0,60 60,660 1800,2100 2130,2670 3030,3570
the response.| Yeah, exactly.| Okay,
|是啊，就是这样。|好的，好的，我明白了，谢谢。

2676
01:32:04,180 --> 01:32:05,770
0,240 240,390 390,720 810,1110 1110,1590
okay I see, thank you.|
|

2677
01:32:05,950 --> 01:32:07,630
0,1200 1200,1320 1320,1440 1440,1620 1620,1680
You will do this in
您将在实验3中完成此操作。

2678
01:32:07,630 --> 01:32:08,740
0,210 210,480
lab 3.|
|

2679
01:32:12,180 --> 01:32:13,380
0,720

2680
01:32:13,380 --> 01:32:14,460
0,330 330,540 540,600 600,810 810,1080
I think I also ask
我想我在演讲中也会问一些问题，

2681
01:32:14,460 --> 01:32:15,600
0,300 300,540 540,600 600,990 990,1140
questions during the lecture,| but
|但我不认为我完全理解了答案，

2682
01:32:15,600 --> 01:32:16,800
0,540 570,780 780,900 900,960 960,1200
I don't think I fully

2683
01:32:16,800 --> 01:32:18,450
0,390 390,510 510,990 990,1530 1530,1650
understood the answers,| so I
|所以我再重复一遍问题，

2684
01:32:18,450 --> 01:32:20,790
0,210 210,510 510,570 570,1200 2100,2340
just repeat the question,| the
|问题是，

2685
01:32:20,790 --> 01:32:23,010
0,330 330,510 510,1050 1080,1680 1980,2220
question is that,| {} you
|你说做工作的一种方式是，

2686
01:32:23,010 --> 01:32:25,320
0,240 240,660 870,1290 1320,1860 1860,2310
said that a way commits

2687
01:32:25,320 --> 01:32:26,580
0,330 330,510 510,810 840,1170 1170,1260
work is that,| once the
|一旦领导者提交，它就会等待新的客户端消息

2688
01:32:26,580 --> 01:32:28,230
0,300 300,900 900,1110 1110,1470 1470,1650
leader commits, it waits for

2689
01:32:28,230 --> 01:32:29,560
0,60 60,360 360,870
a new client

2690
01:32:29,560 --> 01:32:31,630
0,690 1020,1530 1530,1740 1740,1920 1920,2070
{} message| and then it
|然后它只是将该消息附加到日志条目

2691
01:32:31,630 --> 01:32:32,980
0,270 300,720 720,930 930,1260 1260,1350
just appends that message to

2692
01:32:32,980 --> 01:32:34,270
0,120 120,390 390,720 720,930 930,1290
the log entry| and send
|并将附加条目发送给剩余的追随者

2693
01:32:34,270 --> 01:32:35,980
0,90 90,930 1140,1230 1230,1320 1320,1710
{append,entry -} to the remaining

2694
01:32:35,980 --> 01:32:38,290
0,660 1080,1440 1440,1560 1560,1950 1950,2310
followers| with an additional message
|另外还有一条消息说，他们也应该提交之前的所有条目，正确。

2695
01:32:38,290 --> 01:32:39,490
0,330 330,480 480,630 630,870 870,1200
saying that they should also

2696
01:32:39,490 --> 01:32:40,930
0,420 450,660 660,780 780,1050 1050,1440
commit all the previous entries,

2697
01:32:40,930 --> 01:32:42,970
0,480 810,1080 1080,1260 1260,1950 1950,2040
correct.| Yeah, there's indirectly the
|是的，有间接的工作人员正确的礼仪。

2698
01:32:42,970 --> 01:32:44,830
0,300 300,480 480,780 780,1140 1320,1860
protocol the staff correct.| Right,
|对，所以我的问题是，

2699
01:32:44,860 --> 01:32:46,450
0,420 420,570 570,900 900,1080 1080,1590
so my question is that,|
|

2700
01:32:46,480 --> 01:32:48,670
0,360 360,870 1020,1440 1440,1680 1680,2190
what if a the leader
如果领导者提交了所有条目，

2701
01:32:48,670 --> 01:32:50,640
0,450 450,720 720,900 900,1530
commits all the entries,|
|

2702
01:32:50,640 --> 01:32:51,870
0,270 270,570 570,960 960,1050 1050,1230
and right before it is
就在它能够将这一信息发送给其余追随者之前，

2703
01:32:51,870 --> 01:32:53,580
0,240 240,360 360,990 1020,1290 1290,1710
able to send this message

2704
01:32:53,580 --> 01:32:55,290
0,150 150,240 240,690 690,1410 1440,1710
to the remaining followers,| the
|领队坠毁了。

2705
01:32:55,290 --> 01:32:57,360
0,300 300,870 1170,1410 1410,1710 1710,2070
leader crashes.| {} It cannot
|在得到大多数追随者的多数响应之前，它无法承诺。

2706
01:32:57,360 --> 01:32:59,220
0,390 390,810 810,990 990,1050 1050,1860
commit until have a majority

2707
01:32:59,310 --> 01:33:01,920
0,360 360,840 840,1020 1020,2490 2490,2610
{} response from majority of

2708
01:33:01,920 --> 01:33:02,960
0,90 90,600
the followers.|
|

2709
01:33:03,760 --> 01:33:05,500
0,180 180,450 450,630 630,990 1440,1740
I see, so it at
我明白了，所以一开始就好像扯平了。

2710
01:33:05,500 --> 01:33:08,320
0,510 780,1200 1470,1800 1800,2130 2310,2820
first like even.| It sticks
|它会粘在木头上，

2711
01:33:08,320 --> 01:33:09,070
0,180 180,240 240,600 600,690 690,750
to a log,| but it
|但它还没有真正交付给KV服务器。

2712
01:33:09,070 --> 01:33:10,510
0,300 300,480 480,930 930,1050 1050,1440
doesn't actually deliver to the

2713
01:33:10,510 --> 01:33:12,120
0,360 360,750 750,1080
kv servers yet.|
|

2714
01:33:12,650 --> 01:33:13,790
0,210 210,360 360,510 510,660 660,1140
I see, so it waits
我明白了，所以它在等待所有剩余追随者的承诺回复

2715
01:33:13,790 --> 01:33:15,440
0,480 480,600 600,1020 1020,1200 1200,1650
from a reply of commit,

2716
01:33:15,440 --> 01:33:16,790
0,210 210,420 420,510 510,840 840,1350
from all the remaining followers|
|

2717
01:33:16,790 --> 01:33:18,230
0,270 270,480 480,810 810,1260 1260,1440
and then it commits its
然后它做出自己的承诺。

2718
01:33:18,230 --> 01:33:21,830
0,570 1890,2310 2490,2820 2820,3000 3000,3600
own.| Okay okay.| So there's
|好吧，好吧。|所以这里有基本的，有一个变量最后应用提交的索引，对吧，

2719
01:33:21,830 --> 01:33:23,540
0,60 60,330 330,690 690,1230 1230,1710
the basic, {there's,a} variable last

2720
01:33:23,540 --> 01:33:25,160
0,300 300,390 390,690 690,1200 1230,1620
applied {} commited index, right,|
|

2721
01:33:25,190 --> 01:33:26,990
0,240 240,360 360,630 630,1260 1590,1800
that is actually maintaining,| it
这实际上是在维护，|它只会增加提交的索引

2722
01:33:26,990 --> 01:33:29,000
0,660 660,1200 1200,1290 1290,1620 1620,2010
only increases the commited index|
|

2723
01:33:29,000 --> 01:33:30,410
0,360 360,780 780,1020 1020,1350 1350,1410
and once it receives a
一旦收到大多数追随者的回应。

2724
01:33:30,410 --> 01:33:31,700
0,390 390,480 480,540 540,1110 1110,1290
response from the majority of

2725
01:33:31,700 --> 01:33:32,760
0,90 90,660
the followers.|
|

2726
01:33:32,940 --> 01:33:33,900
0,210 210,360 360,480 480,570 570,960
And all of the followers
所有的追随者都说他们犯下了自己的罪行，

2727
01:33:33,900 --> 01:33:34,890
0,150 150,300 300,450 450,600 600,990
say that they have committed

2728
01:33:34,890 --> 01:33:36,180
0,210 210,780
their own,|
|

2729
01:33:36,180 --> 01:33:37,260
0,420 420,510 510,600 600,990 990,1080
like they have committed the
就像他们在自己的服务器上提交了日志条目一样。

2730
01:33:37,260 --> 01:33:38,370
0,240 240,630 630,810 810,960 960,1110
log entries on their own

2731
01:33:38,370 --> 01:33:39,480
0,540
servers.|
|

2732
01:33:39,890 --> 01:33:41,210
0,360 360,630 630,870 870,1080 1080,1320
They will commit their log
一旦他们知道领导者确实提交了日志条目，他们就会提交日志条目。

2733
01:33:41,210 --> 01:33:42,650
0,330 330,540 540,690 690,1170 1170,1440
entries once they know that

2734
01:33:42,650 --> 01:33:45,290
0,930 1140,1830 1830,2130 2130,2310 2310,2640
the leader actually has committed

2735
01:33:45,290 --> 01:33:46,060
0,210
it.|
|

2736
01:33:48,280 --> 01:33:49,750
0,480 480,780 780,1050 1050,1140 1140,1470
Right, so that's my question,
是的，这就是我的问题，比如他们如何知道领导人是否无法向其余的人传达这一信息。

2737
01:33:49,750 --> 01:33:50,920
0,180 180,570 570,810 810,900 900,1170
like how would they know

2738
01:33:50,920 --> 01:33:51,970
0,120 120,270 270,630 630,960 960,1050
if the leaders unable to

2739
01:33:51,970 --> 01:33:53,020
0,210 210,420 420,840 840,960 960,1050
send that message to the

2740
01:33:53,020 --> 01:33:55,030
0,450 690,1020 1020,1290 1290,1470 1470,2010
remaining.| Well, yeah, so then
|嗯，是的，所以我们基本上是在图7中看到的情况下结束，

2741
01:33:55,030 --> 01:33:56,440
0,120 120,480 480,780 780,870 870,1410
we basically {we,end} in situations

2742
01:33:56,440 --> 01:33:57,280
0,150 150,270 270,480 480,690 690,840
that we just saw in

2743
01:33:57,280 --> 01:33:58,780
0,120 120,360 360,720 1050,1380 1380,1500
this figure 7,| there's going
|他们的日志中会有暂定的日志条目

2744
01:33:58,780 --> 01:34:00,310
0,60 60,240 240,720 720,1050 1050,1530
to be tentative log entries

2745
01:34:00,310 --> 01:34:04,060
0,450 480,1080 1080,1320 1320,1980 2310,3750
in {} their logs| and
|取决于谁将成为新的领导人

2746
01:34:04,090 --> 01:34:05,830
0,420 420,600 600,1050 1050,1260 1260,1740
depending who becomes new leader|
|

2747
01:34:05,830 --> 01:34:07,120
0,210 210,390 390,540 540,810 810,1290
and what the log situation
以及原木情况是什么，

2748
01:34:07,120 --> 01:34:08,470
0,270 270,450 450,690 690,1110 1110,1350
is,| in that operation may
|在该操作中可能被提交，也可能不被提交。

2749
01:34:08,470 --> 01:34:09,490
0,210 210,540 540,660 660,780 780,1020
get committed or may not

2750
01:34:09,490 --> 01:34:10,420
0,150 150,480
get committed.|
|

2751
01:34:11,490 --> 01:34:12,620
0,210 210,750
I see.|
我明白了。|

2752
01:34:12,650 --> 01:34:14,240
0,600 630,1140
Okay, yeah.|
好的，好的。|

2753
01:34:14,360 --> 01:34:16,220
0,120 120,390 720,1230 1230,1500 1500,1860
I get it.| Hi, I
我懂了。|嗨，我有一个关于这个的后续问题，

2754
01:34:16,220 --> 01:34:17,210
0,120 120,240 240,570 570,900 900,990
had a follow-up question on

2755
01:34:17,210 --> 01:34:19,250
0,270 450,930 930,1200 1200,1560 1560,2040
this,| so if says a
|因此，如果说领导者推入了一个日志条目，

2756
01:34:19,310 --> 01:34:21,710
0,750 990,1440 1440,1560 1560,1860 1860,2400
leader pushes a log entry,|
|

2757
01:34:21,830 --> 01:34:23,660
0,540 540,960 960,1050 1050,1650 1650,1830
it's accepted by majority,| but
这是被大多数人接受的，|但它崩溃了，

2758
01:34:23,660 --> 01:34:25,040
0,240 240,900
it crashes,|
|

2759
01:34:25,100 --> 01:34:27,320
0,510 510,870 870,1170 1170,1710 1800,2220
then later on, {} this
然后以后，这个日志条目可以提交，对，由其他领导人提交。

2760
01:34:27,320 --> 01:34:28,880
0,420 420,660 660,750 750,1200 1200,1560
{log,entry} can be committed, right,

2761
01:34:28,940 --> 01:34:31,310
0,240 240,450 450,630 630,1050 1140,2370
by some other leader.| {It,can,also}
|它可以也可能不会。

2762
01:34:31,310 --> 01:34:32,400
0,120 120,540
may not.|
|

2763
01:34:32,700 --> 01:34:34,020
0,420 450,810 810,960 960,1110 1110,1320
Yeah, but say if it's
是啊，但如果要订婚的话，

2764
01:34:34,020 --> 01:34:36,000
0,210 210,660 660,990 1290,1710 1710,1980
get committed,| then, {} how
|那么，新领导怎么知道谁是客户，

2765
01:34:36,000 --> 01:34:37,260
0,420 420,540 540,720 720,990 990,1260
does the new leader know

2766
01:34:37,260 --> 01:34:38,580
0,210 210,450 450,540 540,960 960,1320
who was the client,| who
|请求此日志条目的人或客户端是合格的。

2767
01:34:38,790 --> 01:34:40,230
0,570 570,720 720,960 960,1140 1140,1440
requested for this log entry

2768
01:34:40,230 --> 01:34:44,780
0,240 390,1020 1020,3540 3540,3990
or the client {be,qualified}.|
|

2769
01:34:45,100 --> 01:34:46,260
0,540

2770
01:34:46,260 --> 01:34:47,520
0,690

2771
01:34:49,540 --> 01:34:53,320
0,810 870,1590 2070,2550 2580,3180 3300,3780
The, {} the, {} what
好的，好的，好的，

2772
01:34:53,350 --> 01:34:54,520
0,210 210,540 540,810 810,1140 1140,1170
okay,| so there's really a
|因此，关于KV实际上是如何使用RAFT存储信息的，确实存在一个问题，

2773
01:34:54,520 --> 01:34:55,660
0,300 300,630 630,870 870,1020 1020,1140
question about actually how the

2774
01:34:55,660 --> 01:34:57,400
0,390 390,750 750,1080 1080,1440 1440,1740
kv serves actually {} store

2775
01:34:57,400 --> 01:35:00,130
0,930 930,1140 1140,1560 1950,2220 2220,2730
information with raft,| {} so
|所以情况是这样的，

2776
01:35:00,160 --> 01:35:01,990
0,120 120,570 570,1200 1260,1620 1620,1830
the scenario is,| client talk
|客户与领导谈话，

2777
01:35:01,990 --> 01:35:04,480
0,90 90,210 210,750 900,1650 1710,2490
to the leader,| the {}
|客户，领导者真正承诺的，

2778
01:35:04,510 --> 01:35:07,240
0,630 630,1230 1260,1680 1680,2250 2250,2730
{the,client}, {} leader actually committed,|
|

2779
01:35:08,130 --> 01:35:09,960
0,540 540,960 960,1380 1380,1440 1440,1830
did {executive,this} operation or not,|
有没有执行过这项行动，|

2780
01:35:10,170 --> 01:35:12,270
0,240 240,390 390,630 630,930 1890,2100
they did not know,| they
他们不知道，|他们不知道的是，

2781
01:35:12,270 --> 01:35:13,230
0,180 180,390 390,600 600,780 780,960
did not know with,| so
|所以后来有一个追随者会做这个手术，

2782
01:35:13,230 --> 01:35:14,280
0,210 210,390 390,480 480,570 570,1050
then one of the followers

2783
01:35:14,280 --> 01:35:17,340
0,570 570,1230 1230,1950 1980,2640 2670,3060
later { -} will get

2784
01:35:17,340 --> 01:35:19,440
0,120 120,840 960,1380 1380,1770 1770,2100
this operation,| maybe apply it,|
|或许可以应用它，|

2785
01:35:19,830 --> 01:35:21,780
0,1110 1110,1260 1260,1320 1320,1770 1770,1950
won't send a response because
不会发送响应，因为它不知道客户端，

2786
01:35:21,780 --> 01:35:22,620
0,60 60,390 390,540 540,780 780,840
it doesn't know about the

2787
01:35:22,620 --> 01:35:23,600
0,540
client,|
|

2788
01:35:23,600 --> 01:35:25,070
0,180 180,300 300,630 630,810 810,1470
{} but {the,client} will retry
但客户端将正确重试，

2789
01:35:25,160 --> 01:35:26,360
0,300 300,570 570,690 690,960 960,1200
right,| because it actually haven't
|因为它实际上还没有得到回应，

2790
01:35:26,360 --> 01:35:27,920
0,240 240,960 990,1110 1110,1200 1200,1560
gotten response,| it will contact
|它将与新领导人联系

2791
01:35:27,920 --> 01:35:29,390
0,60 60,270 270,810 960,1110 1110,1470
the new leader| and basically
|基本上在，在木筏上又进入了同样的操作

2792
01:35:29,390 --> 01:35:31,460
0,960 960,1050 1050,1290 1290,1830 1830,2070
enter the same operation in

2793
01:35:31,460 --> 01:35:32,990
0,450 450,810 810,870 870,1170 1170,1530
the, in the raft again|
|

2794
01:35:33,470 --> 01:35:35,030
0,300 300,540 630,900 900,1050 1050,1560
and will pop out again|
并且会再次冒出来|

2795
01:35:35,270 --> 01:35:37,310
0,180 180,750 750,750 1380,1620 1620,2040
and then {} the server
然后服务器将发送，正如我们将在实验3中看到的

2796
01:35:37,310 --> 01:35:38,930
0,180 180,810 870,1080 1080,1230 1230,1620
will send, as we'll see

2797
01:35:38,930 --> 01:35:39,890
0,150 150,270 270,480 480,810 810,960
in the lab 3,| will
|会发最后一条回复，对，

2798
01:35:39,890 --> 01:35:41,090
0,210 210,270 270,570 570,1050 1050,1200
send the last response, right,|
|

2799
01:35:41,090 --> 01:35:43,190
0,360 360,780 780,1470 1650,1800 1800,2100
{in,fact}, servers remember the last
事实上，服务器会记住它们发回的最后一个值。

2800
01:35:43,190 --> 01:35:44,630
0,510 510,690 690,810 810,1050 1050,1440
value that they send back.|
|

2801
01:35:46,770 --> 01:35:51,630
0,720 720,1380 1410,2340 2550,4350 4350,4860
{} Okay.| {} {If,get} request,
好吧。|如果GET请求，您知道第一个GET请求被执行，

2802
01:35:51,630 --> 01:35:52,620
0,90 90,240 240,540 570,780 780,990
you know the first get

2803
01:35:52,620 --> 01:35:54,540
0,450 450,540 540,1230 1590,1770 1770,1920
request is executed,| there's no
|没有要发回的响应

2804
01:35:54,540 --> 01:35:55,740
0,360 360,450 450,570 570,780 780,1200
response to be sent back|
|

2805
01:35:55,950 --> 01:35:57,060
0,180 180,420 420,780 780,990 990,1110
and get request {actually -
而GET请求实际上会将响应存储在KV服务器中，并会记住响应。

2806
01:35:57,060 --> 01:35:58,710
0,120 120,300 300,810 810,900 900,1650
-} will store the response

2807
01:35:58,740 --> 01:36:00,810
0,330 330,1170 1200,1350 1350,1440 1440,2070
in the in the kv

2808
01:36:00,810 --> 01:36:03,150
0,870 870,1140 1140,1590 1590,1680 1680,2340
server, will remember the response.|
|

2809
01:36:03,660 --> 01:36:04,530
0,210 210,420 420,480 480,750 750,870
So when it sees you
所以当它看到你做复制时，就会发送一个响应，

2810
01:36:04,530 --> 01:36:06,000
0,510 510,690 690,840 840,1200 1200,1470
do {duplicate - -}, then

2811
01:36:06,000 --> 01:36:07,480
0,120 120,330 330,360 360,960
will send a response,|
|

2812
01:36:08,050 --> 01:36:09,100
0,180 180,270 270,420 420,660 660,1050
so there will be duplicate
所以会有重复检测表，

2813
01:36:09,100 --> 01:36:10,480
0,390 390,780
detection table,|
|

2814
01:36:10,600 --> 01:36:12,400
0,210 210,600 600,690 690,1290
that includes the response.|
这包括人们的回应。|

2815
01:36:13,270 --> 01:36:14,950
0,450 510,750 780,990 990,1200 1200,1680
Okay, yeah, makes sense, thanks.|
好的，是的，有道理，谢谢。|

2816
01:36:16,950 --> 01:36:18,160
0,240 240,630
You're welcome.|
不用谢。|

2817
01:36:19,260 --> 01:36:20,160
0,360 360,600 600,690 690,720 720,900
I I was a little
我我有点好奇，

2818
01:36:20,160 --> 01:36:21,180
0,360 360,420 420,540 540,660 660,1020
curious,| I think I asked
|我想我大概是问了，这是我的问题，就像讲座前的问题，

2819
01:36:21,240 --> 01:36:22,680
0,480 510,780 780,990 990,1080 1080,1440
{} roughly this is my

2820
01:36:22,800 --> 01:36:24,480
0,630 660,960 960,1140 1140,1380 1380,1680
question like pre lecture questions

2821
01:36:24,480 --> 01:36:26,220
0,330 690,1050 1050,1200 1200,1440 1440,1740
well,| {} like how raft
|就像RAFT与其他类似的共识算法在类似优化方面的比较一样，你可以做

2822
01:36:26,220 --> 01:36:28,230
0,420 420,840 930,1440 1440,1620 1620,2010
compares to other like consensus

2823
01:36:28,230 --> 01:36:29,880
0,330 330,420 420,690 690,810 1320,1650
algorithm in terms of {}

2824
01:36:29,880 --> 01:36:31,770
0,390 450,1170 1170,1320 1320,1440 1440,1890
like optimization you could do|
|

2825
01:36:32,010 --> 01:36:32,970
0,300 300,450 450,510 510,900 900,960
and as an example I
举个例子，我想我唯一能想到的就是批处理。

2826
01:36:32,970 --> 01:36:33,930
0,120 120,480 480,570 570,900 900,960
was thinking the {only,thing} I

2827
01:36:33,930 --> 01:36:36,000
0,210 390,780 780,840 840,1200 1230,2070
could think of was batching.|
|

2828
01:36:36,330 --> 01:36:37,560
0,210 210,390 390,660 660,900 900,1230
Yeah.| It seemed like raft
嗯。|看起来木筏是配料的完美选择，

2829
01:36:37,560 --> 01:36:39,150
0,90 90,390 660,1050 1050,1170 1170,1590
is like perfect for batching,|
|

2830
01:36:39,150 --> 01:36:40,290
0,420 450,690 690,870 870,990 990,1140
because the leader could just
因为领导者可以在其日志中放入不止一个条目，

2831
01:36:40,290 --> 01:36:41,700
0,270 270,720 780,1170 1170,1290 1290,1410
like put more than one

2832
01:36:41,700 --> 01:36:42,810
0,210 210,300 300,390 390,870 870,1110
entry on its log,| wait
|在发送下一个条目之前，请稍等片刻，

2833
01:36:42,810 --> 01:36:43,650
0,30 30,180 180,510 510,720 720,840
a little before sending its

2834
01:36:43,650 --> 01:36:45,510
0,300 300,900 1020,1410 1410,1740 1740,1860
next entries,| then send up
|然后发送带有任何批次操作集的条目

2835
01:36:45,510 --> 01:36:47,580
0,450 450,660 720,1260 1260,1770 1770,2070
entries with whatever batch set

2836
01:36:47,580 --> 01:36:50,280
0,270 720,2040 2040,2100 2100,2520 2520,2700
of operations| or whatever it
|或者它想让复制品做什么，

2837
01:36:50,280 --> 01:36:51,900
0,330 330,630 630,1050 1050,1140 1140,1620
wants the replicas to do,|
|

2838
01:36:52,320 --> 01:36:53,040
0,240 240,390 390,510 510,570 570,720
{} just trying to figure
只是想弄清楚有什么不足之处，

2839
01:36:53,040 --> 01:36:55,410
0,180 180,780 1230,1650 1650,1710 1710,2370
out what what the deficiencies

2840
01:36:55,410 --> 01:36:56,520
0,60 60,420 420,660 900,1050 1050,1110
are raft,| like from {}
|从性能的角度来看是这样的。

2841
01:36:56,520 --> 01:36:58,320
0,480 480,690 690,750 750,1140 1290,1800
performance point of view.| Well,
|嗯，木筏不会那么做的，对吧？

2842
01:36:58,320 --> 01:36:59,580
0,240 240,450 450,720 720,990 1020,1260
raft does not do that

2843
01:36:59,580 --> 01:37:01,260
0,240 270,660 960,1470 1470,1530 1530,1680
[shape], right| and you know
|你知道，也许它可以，

2844
01:37:01,260 --> 01:37:02,370
0,210 210,300 300,720 750,1050 1050,1110
maybe it could,| but it
|但这会使协议变得更加复杂

2845
01:37:02,370 --> 01:37:03,270
0,180 180,300 300,420 420,720 720,900
would make {protocol -} more

2846
01:37:03,270 --> 01:37:04,890
0,600 630,930 930,1080 1080,1230 1230,1620
complicated| and so they decide
|所以他们什么都不做决定。

2847
01:37:04,890 --> 01:37:05,800
0,390
nothing.|
|

2848
01:37:05,830 --> 01:37:06,700
0,240 240,480 480,660 660,720 720,870
I guess, okay, I guess
我想，好吧，我想我写木筏实验室代码的方式，

2849
01:37:06,700 --> 01:37:07,450
0,60 60,270 270,420 420,690 690,750
the way I happen to

2850
01:37:07,450 --> 01:37:09,340
0,150 150,570 600,1050 1080,1560 1560,1890
have written my raft lab

2851
01:37:09,340 --> 01:37:10,780
0,240 240,600 660,990 990,1350 1350,1440
code,| like I sort of
|就像我隐含地做了批处理一样，

2852
01:37:10,780 --> 01:37:12,760
0,180 180,810 840,1710 1710,1890 1890,1980
did batching implicitly,| because I'll
|因为在发送附加条目之前，我有时只会等待一小段时间，

2853
01:37:12,760 --> 01:37:13,690
0,240 240,450 450,510 510,690 690,930
just wait a little bit

2854
01:37:13,810 --> 01:37:15,610
0,690 690,900 900,1230 1230,1320 1320,1800
sometimes before sending {append,entry -},|
|

2855
01:37:15,610 --> 01:37:16,660
0,300 450,660 660,780 780,840 840,1050
so I guess I felt
所以我想我觉得你真的不需要做任何事情，只是像之前那样，如果你想的话，也许可以等待。

2856
01:37:16,660 --> 01:37:17,650
0,240 480,630 630,750 750,870 870,990
like you don't really need

2857
01:37:17,650 --> 01:37:18,550
0,60 60,270 270,570 570,780 780,900
to do anything other than

2858
01:37:18,550 --> 01:37:19,930
0,150 150,360 390,990 990,1290 1290,1380
just like maybe wait if

2859
01:37:19,930 --> 01:37:21,100
0,120 120,300 300,540 540,660 660,1170
you feel like it before.|
|

2860
01:37:21,100 --> 01:37:22,660
0,180 180,270 270,1020
{Yeah,you} can have.|
是啊，你可以的。|

2861
01:37:22,810 --> 01:37:23,860
0,540

2862
01:37:23,920 --> 01:37:29,680
0,330 330,690 690,1200 1710,3690 3720,5760
{} So yeah like.| Yeah,
所以，是的，就像。|是啊，是啊，我我想归根结底就是表演，

2863
01:37:30,070 --> 01:37:31,300
0,510
yeah,

2864
01:37:31,300 --> 01:37:32,140
0,180 180,390 390,540 540,660 660,840
I I think it all

2865
01:37:32,140 --> 01:37:33,790
0,210 210,360 360,450 450,1050 1440,1650
comes down to performance,| so
|所以你知道有一大堆的优化是木筏做不到的，

2866
01:37:33,790 --> 01:37:34,510
0,180 180,390 390,540 540,600 600,720
you know there's a whole

2867
01:37:34,510 --> 01:37:35,680
0,150 150,210 210,750 750,930 930,1170
bunch of optimization that raft

2868
01:37:35,680 --> 01:37:36,610
0,270 270,510 510,660 660,780 780,930
doesn't do,| you know that
|你知道其他一些系统也是这样做的，

2869
01:37:36,610 --> 01:37:38,050
0,180 180,360 360,690 690,1050 1050,1440
some other systems do,| you
|你知道，例如，你也许能够沟通你的操作，

2870
01:37:38,050 --> 01:37:38,890
0,150 150,210 210,570 570,630 630,840
know for example you might

2871
01:37:38,890 --> 01:37:39,820
0,90 90,240 240,300 300,750 750,930
be able to communicate your

2872
01:37:39,820 --> 01:37:42,100
0,570 570,780 780,1200 1200,1770 1950,2280
operations,| because doesn't matter {}
|因为你按什么顺序做并不重要，

2873
01:37:42,100 --> 01:37:42,880
0,120 120,300 300,540 540,660 660,780
in what order you do

2874
01:37:42,880 --> 01:37:44,410
0,450 570,930 930,1080 1080,1320 1320,1530
them,| {} so there's a
|所以有一系列的优化

2875
01:37:44,410 --> 01:37:46,510
0,630 630,840 840,1590 1590,1710 1710,2100
slew of {optimizations -}| and
|而在木筏上，基本上不会这样做。

2876
01:37:46,510 --> 01:37:47,860
0,600 600,930 930,1050 1050,1230 1230,1350
{in,raft} basically do none of

2877
01:37:47,860 --> 01:37:48,560
0,150
it.|
|

2878
01:37:48,760 --> 01:37:49,760
0,570
Okay,
好的，谢谢。

2879
01:37:51,330 --> 01:37:53,010
0,570 900,1110 1110,1290 1290,1380 1380,1680
thanks.| It might be perfectly
|对于类似的用例，它可能非常好，对吧。

2880
01:37:53,010 --> 01:37:54,390
0,300 300,570 570,840 840,1050 1050,1380
fine for like use case,

2881
01:37:54,390 --> 01:37:55,240
0,270
right.|
|

2882
01:37:55,240 --> 01:37:56,320
0,540
Right.|
正确的。|

2883
01:37:59,380 --> 01:38:01,300
0,390 390,630 630,1230 1320,1770 1770,1920
{} You mentioned something a
你几分钟前提到了一件事，

2884
01:38:01,300 --> 01:38:03,250
0,210 210,510 510,870 870,1320 1500,1950
couple minutes ago,| that log
|该日志条目可能丢失，

2885
01:38:03,250 --> 01:38:04,990
0,330 330,540 540,720 720,1290 1560,1740
entry could be lost,| so
|那么有没有可能永远不会执行客户端请求，

2886
01:38:04,990 --> 01:38:06,130
0,150 150,270 270,720 720,870 870,1140
is it possible that a

2887
01:38:06,130 --> 01:38:07,450
0,390 390,780 780,900 900,1170 1170,1320
client request could never be

2888
01:38:07,450 --> 01:38:09,460
0,570 570,720 720,1140 1140,1680 1680,2010
executed,| but raft guarantees that,
|但RAFT保证所有服务器将以相同的顺序执行相同的块条目集。

2889
01:38:09,730 --> 01:38:11,710
0,330 330,420 420,900 900,1140 1470,1980
all the servers will execute

2890
01:38:11,710 --> 01:38:12,670
0,90 90,390 390,570 570,660 660,960
the same set of block

2891
01:38:12,670 --> 01:38:14,170
0,480 480,600 600,690 690,930 930,1500
entries in the same sequence.|
|

2892
01:38:15,920 --> 01:38:17,570
0,570 600,780 780,1110 1110,1350 1350,1650
And so that means raft
因此，这意味着RAFT并不是适用于所有应用，

2893
01:38:17,570 --> 01:38:19,310
0,120 120,510 810,1170 1170,1290 1290,1740
does not cannot be usable

2894
01:38:19,310 --> 01:38:21,080
0,360 360,540 540,1320 1320,1440 1440,1770
for all applications,| we can
|我们只负担得起一些丢失的请求。

2895
01:38:21,530 --> 01:38:23,780
0,390 510,1200 1200,1710
only afford the

2896
01:38:24,470 --> 01:38:26,860
0,450 450,660 660,1080 1170,1890
{} some lost requests.|
|

2897
01:38:27,340 --> 01:38:29,140
0,810 1080,1350 1350,1440 1440,1620 1620,1800
Well, you know we have
你知道，我们必须假设你知道来自RAFT服务器的响应作为一个整体正确的KV服务器加上RAFT，

2898
01:38:29,140 --> 01:38:29,980
0,60 60,360 360,540 540,690 690,840
to assume that you know

2899
01:38:29,980 --> 01:38:32,980
0,630 660,1230 1230,1530 1530,2460 2610,3000
the responses from the from

2900
01:38:32,980 --> 01:38:34,240
0,150 150,450 450,1020 1020,1200 1200,1260
the raft servers as a

2901
01:38:34,240 --> 01:38:35,800
0,240 240,480 480,930 930,1320 1320,1560
whole correct kv servers plus

2902
01:38:35,800 --> 01:38:37,360
0,450 480,690 690,870 870,1110 1110,1560
raft,| may get lost anyway,|
|可能无论如何都会迷路，|

2903
01:38:37,360 --> 01:38:38,530
0,240 240,300 300,570 570,750 750,1170
because the network gets lost,|
因为网络迷路了，|

2904
01:38:39,220 --> 01:38:40,870
0,420 420,690 690,810 810,1140 1140,1650
network network may lost responses,|
网络网络可能丢失响应，|

2905
01:38:40,870 --> 01:38:42,040
0,150 150,600 600,960 960,1050 1050,1170
so {the,client} has to be
所以客户必须能够重复，

2906
01:38:42,040 --> 01:38:43,400
0,210 210,330 330,810
able to repeat,|
|

2907
01:38:44,200 --> 01:38:45,190
0,180 180,360 360,420 420,900 900,990
they call it must be
他们说它必须是最近的，必须重试。

2908
01:38:45,190 --> 01:38:48,080
0,630 870,1380 1410,1770 1770,2310
recent, {} must retry.|
|

2909
01:38:48,700 --> 01:38:49,960
0,120 120,600 600,750 750,930 930,1260
I see, so like when
我明白了，所以当它实际提交日志条目时

2910
01:38:49,960 --> 01:38:51,700
0,180 180,540 540,960 960,1320 1350,1740
it actually commits {} log

2911
01:38:51,700 --> 01:38:53,650
0,270 270,360 360,1170 1170,1440 1500,1950
entry| and excuses it replies
|并为其回复客户提供借口，

2912
01:38:53,650 --> 01:38:54,820
0,90 90,450 480,870 870,1050 1050,1170
to the client,| that it
|它确实做到了。

2913
01:38:54,820 --> 01:38:56,800
0,210 210,570 570,810 1200,1830 1830,1980
did actually do.| Yeah, so
|是的，这就像我们之前讨论过的重复检测表，

2914
01:38:56,800 --> 01:38:57,640
0,120 120,180 180,360 360,570 570,840
this is like we're {a,little,bit}

2915
01:38:57,640 --> 01:38:59,080
0,210 210,300 300,510 510,780 780,1440
earlier we talked about the

2916
01:38:59,080 --> 01:39:00,610
0,360 360,780 780,1080 1080,1170 1170,1530
duplicate detection table,| the duplicate
|重复检测表具有已发送的响应

2917
01:39:00,610 --> 01:39:02,500
0,360 360,630 630,1140 1560,1770 1770,1890
detection table has {} the

2918
01:39:02,500 --> 01:39:04,270
0,540 540,690 690,810 810,1260 1470,1770
response that was sent| or
|或者是响应于执行该操作而构造的。

2919
01:39:04,270 --> 01:39:05,800
0,180 180,750 750,930 930,1350 1350,1530
was constructed in response to

2920
01:39:05,800 --> 01:39:07,380
0,450 450,600 600,1110
executing that operation.|
|

2921
01:39:08,890 --> 01:39:09,840
0,450
Okay.|
好吧。|

2922
01:39:13,740 --> 01:39:15,480
0,510 510,720 720,1230
Any further questions?|
还有什么问题吗？|

2923
01:39:18,320 --> 01:39:19,640
0,510 540,750 750,810 810,960 960,1320
Okay, thank you so much.|
好的，非常感谢。|

2924
01:39:20,030 --> 01:39:21,590
0,540 630,1080 1080,1230 1230,1440 1440,1560
Alright, welcome, it's great to
好的，欢迎，能问这么多问题真是太好了。

2925
01:39:21,590 --> 01:39:22,466
0,120 120,210 210,360 360,810
ask so many questions.

