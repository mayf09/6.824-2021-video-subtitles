1
00:00:02,000 --> 00:00:03,160
0,240

2
00:00:03,550 --> 00:00:05,710
0,450 450,600 600,1560 1560,1740 1740,2160
Okay, good afternoon, good morning

3
00:00:05,710 --> 00:00:09,520
0,420 510,780 780,1320 2190,2940 3360,3810
or good night,| { -}

4
00:00:09,520 --> 00:00:11,800
0,450 450,570 570,1080 1500,1950 1980,2280
let's get started,| {} today

5
00:00:11,800 --> 00:00:12,910
0,180 180,360 360,420 420,600 600,1110
I want to talk about

6
00:00:12,910 --> 00:00:15,490
0,630 1200,1860 1980,2400 2400,2430 2430,2580
Bitcoin.| {} {The,reason} I want

7
00:00:15,490 --> 00:00:17,080
0,60 60,240 240,570 570,1410 1410,1590
to talk about {it,is},| {}

8
00:00:17,080 --> 00:00:18,910
0,930 930,1200 1200,1230 1230,1440 1440,1830
it solves a hard problem,|

9
00:00:18,940 --> 00:00:22,880
0,720 870,1800 1800,2760
namely achieving consensus

10
00:00:25,230 --> 00:00:26,540
0,690
{}

11
00:00:28,780 --> 00:00:30,800
0,540 540,690 690,1110
with {} byzantine

12
00:00:30,860 --> 00:00:33,060
0,780
participants.|
|

13
00:00:41,300 --> 00:00:42,920
0,540 540,750 750,1020 1020,1320 1320,1620
And {as,I,said} it solves it,|

14
00:00:43,040 --> 00:00:44,510
0,240 240,390 390,840 840,930 930,1470
{} so byzantine I mean

15
00:00:44,540 --> 00:00:46,010
0,390 390,570 570,900 900,1290 1290,1470
participants is that,| it might

16
00:00:46,010 --> 00:00:47,390
0,300 300,480 480,1020 1020,1260 1260,1380
be a malicious or {adversarial

17
00:00:47,390 --> 00:00:49,730
0,60 60,660 1050,1680 1680,2160 2160,2340
- -}| and {} it

18
00:00:49,730 --> 00:00:51,020
0,210 210,360 360,840 840,1200 1200,1290
solves this problem in the

19
00:00:51,020 --> 00:00:52,730
0,360 360,510 510,1080 1110,1470 1470,1710
context of a completely open

20
00:00:52,730 --> 00:00:53,840
0,480 480,540 540,630 630,870 870,1110
systems,| you know people can

21
00:00:54,260 --> 00:00:56,120
0,990 990,1230 1230,1440 1440,1500 1500,1860
join and leave the system

22
00:00:56,120 --> 00:00:58,490
0,90 90,600 780,1740 1740,2190 2190,2370
at will,| {} and some

23
00:00:58,490 --> 00:01:00,110
0,60 60,360 360,720 720,1020 1020,1620
of them may be malicious,|

24
00:01:00,110 --> 00:01:02,870
0,390 600,990 990,1110 1110,1770 2250,2760
and yet {you,know} achieve consensus

25
00:01:02,870 --> 00:01:05,420
0,630 930,1710 1860,1980 1980,2460 2460,2550
on {} the order in

26
00:01:05,420 --> 00:01:07,190
0,450 480,960 960,1290 1320,1530 1530,1770
which transaction happen.| So does

27
00:01:07,190 --> 00:01:08,210
0,90 90,360 360,450 450,660 660,1020
it actually a very challenging

28
00:01:08,210 --> 00:01:09,740
0,390 390,450 450,720 720,1170 1170,1530
context,| is actually really {}

29
00:01:09,950 --> 00:01:13,160
0,480 480,660 660,1500 2280,2670 2670,3210
doing in the money involved.|

30
00:01:13,780 --> 00:01:17,500
0,510 1200,1890 1950,2910 3060,3600 3600,3720
{} The design, {} you

31
00:01:17,500 --> 00:01:18,760
0,300 330,600 600,660 660,840 840,1260
know, looks a little bit

32
00:01:18,760 --> 00:01:21,190
0,1320 1350,1560 1560,2100 2100,2190 2190,2430
like has aspects of {SUNDR

33
00:01:21,190 --> 00:01:22,450
0,360 450,480 480,750 750,990 990,1260
-}.| So {in,the} sence, there's

34
00:01:22,450 --> 00:01:23,980
0,90 90,870
a {signed,log}

35
00:01:25,310 --> 00:01:26,960
0,210 210,1020 1050,1170 1170,1290 1290,1650
of operations, in this case

36
00:01:26,960 --> 00:01:28,400
0,900
transactions.|

37
00:01:28,400 --> 00:01:30,470
0,570 570,720 720,1020 1020,1740 1770,2070
{} We know {like,in,SUNDR}, that

38
00:01:30,470 --> 00:01:33,950
0,360 360,600 600,750 750,1410 2760,3480
actually you can handle {}

39
00:01:33,980 --> 00:01:35,240
0,810
forks,|

40
00:01:39,140 --> 00:01:40,880
0,180 180,420 420,480 480,870 1200,1740
so most of the, many

41
00:01:40,880 --> 00:01:41,750
0,330 330,420 420,450 450,780 780,870
aspects that are interesting to

42
00:01:41,750 --> 00:01:43,370
0,180 180,1110 1110,1260 1260,1560 1560,1620
talk about with respect to

43
00:01:43,370 --> 00:01:44,990
0,600 780,1080 1080,1380 1380,1500 1500,1620
Bitcoin,| but mostly I'm going

44
00:01:44,990 --> 00:01:46,400
0,90 90,420 420,660 660,1230 1260,1410
to focus on {sort,of} {sort,of}

45
00:01:46,400 --> 00:01:48,680
0,270 270,750 750,1200 1200,1890 1890,2280
the distributed systems aspect of

46
00:01:48,680 --> 00:01:51,230
0,150 150,480 480,900 1470,1830 1830,2550
this particular paper.| This paper

47
00:01:51,470 --> 00:01:53,600
0,150 150,300 300,480 480,1230 1890,2130
is a bit unusual or

48
00:01:53,600 --> 00:01:56,180
0,270 270,960 1710,1770 1890,2370 2370,2580
quite unusual.| { -} First

49
00:01:56,180 --> 00:01:57,230
0,90 90,270 270,450 450,780 780,1050
of all, it's not a

50
00:01:57,410 --> 00:01:59,390
0,420 420,600 600,720 720,1290 1350,1980
paper out of the scientific

51
00:01:59,390 --> 00:02:00,350
0,330 330,450 450,540 540,720 720,960
literature that I've been reading

52
00:02:00,350 --> 00:02:01,880
0,240 240,720 900,1170 1170,1290 1290,1530
so far,| {} it comes

53
00:02:01,880 --> 00:02:03,710
0,150 150,240 240,810 810,1290 1320,1830
out of a different part

54
00:02:03,710 --> 00:02:05,180
0,60 60,150 150,600 690,1320 1320,1470
of the world,| {} it

55
00:02:05,180 --> 00:02:10,400
0,330 330,930 1140,1500 1500,2280
is {} {pseudo-anonymous -},|

56
00:02:14,510 --> 00:02:16,220
0,420 420,600 600,900 900,1620 1620,1710
and it has {} you

57
00:02:16,220 --> 00:02:17,690
0,180 180,630 630,1140 1140,1350 1350,1470
know particularly [],| you know

58
00:02:17,690 --> 00:02:20,570
0,330 330,750 780,1170 1170,2010 2310,2880
with a financial institutions,| {}

59
00:02:20,570 --> 00:02:21,350
0,390 390,480 480,570 570,690 690,780
and you know you can

60
00:02:21,350 --> 00:02:23,510
0,660 1110,1350 1350,1500 1500,1560 1560,2160
have all kinds of opinions

61
00:02:23,540 --> 00:02:25,250
0,300 300,660 660,990 990,1080 1080,1710
about whether Bitcoin in general|

62
00:02:25,250 --> 00:02:27,470
0,930 930,1020 1140,1740 1740,1800 1800,2220
{} and cryptocurrency in general,|

63
00:02:27,740 --> 00:02:29,270
0,450 450,780 780,1050 1050,1110 1110,1530
{} but from the perspective

64
00:02:29,270 --> 00:02:31,220
0,90 90,390 390,990 990,1590 1590,1950
of distributed systems,| {this,is,a} []

65
00:02:31,220 --> 00:02:33,530
0,420 420,870 1140,1380 1380,1740 1740,2310
successful system,| {this,is,a} really truly

66
00:02:33,770 --> 00:02:36,170
0,570 570,780 780,1380 1470,2220 2280,2400
{} an open system that

67
00:02:36,170 --> 00:02:38,030
0,90 90,720 720,840 840,1260 1260,1860
can tolerate the byzantine participants

68
00:02:38,030 --> 00:02:40,100
0,240 270,750 750,1380 1710,1890 1890,2070
and achieving consensus.| And so

69
00:02:40,100 --> 00:02:41,090
0,360 360,480 480,600 600,720 720,990
really, you know the focus

70
00:02:41,090 --> 00:02:41,960
0,90 90,210 210,480 480,570 570,870
of this lecture,| you're trying

71
00:02:41,960 --> 00:02:44,090
0,420 450,1200 1200,1440 1440,1710 1710,2130
to understand how actually achieves

72
00:02:44,090 --> 00:02:46,780
0,210 210,960 1620,2400
that particular aspect.|

73
00:02:48,310 --> 00:02:49,620
0,660

74
00:02:49,920 --> 00:02:51,690
0,210 210,720 720,930 930,1380 1410,1770
Any questions, just do before

75
00:02:51,690 --> 00:02:52,960
0,450 450,660
diving in.|

76
00:03:00,570 --> 00:03:03,030
0,390 390,840 930,1860 2160,2250 2250,2460
Okay, so {} {as,I} just

77
00:03:03,030 --> 00:03:04,890
0,360 360,540 540,660 660,1200 1260,1860
mentioned,| you know the context

78
00:03:04,890 --> 00:03:08,780
0,210 210,1560 1650,2430 2430,3150
is here financial transactions.|

79
00:03:09,050 --> 00:03:10,430
0,270 270,390 390,630 630,810 810,1380
And so there's a free

80
00:03:10,430 --> 00:03:13,220
0,930 1320,2100 2100,2190 2190,2280 2280,2790
overriding concerns,| you know when,

81
00:03:13,220 --> 00:03:15,110
0,420 600,900 900,1380 1380,1470 1470,1890
{} when transactions are involved,|

82
00:03:15,110 --> 00:03:16,430
0,120 120,330 330,750 750,840 840,1320
where money transactions are involved,|

83
00:03:16,700 --> 00:03:17,930
0,240 240,450 450,750 750,1170 1170,1230
first {of,all}, {of,course} there's the

84
00:03:17,930 --> 00:03:21,200
0,450 450,1170 1560,2430
conservative outright forgery,|

85
00:03:25,520 --> 00:03:26,720
0,450 450,780 780,840 840,990 990,1200
where basically you know people

86
00:03:26,720 --> 00:03:29,300
0,210 210,540 570,1650 1830,2400 2400,2580
cook up transactions {} out

87
00:03:29,300 --> 00:03:30,980
0,60 60,240 240,720 750,1440 1440,1680
of thin air| and enter

88
00:03:30,980 --> 00:03:32,180
0,210 210,330 330,450 450,900 900,1200
them in the log| and

89
00:03:32,180 --> 00:03:34,070
0,120 120,870 900,1140 1140,1290 1290,1890
you know trying to mislead

90
00:03:34,190 --> 00:03:36,110
0,570 660,1500 1500,1620 1620,1740 1740,1920
other participants,| you know that

91
00:03:36,110 --> 00:03:37,760
0,270 270,390 390,720 720,1530 1530,1650
actually they're spending their own

92
00:03:37,760 --> 00:03:40,340
0,330 900,1770 1770,2070 2070,2310 2310,2580
money,| while spending somebody else's

93
00:03:40,340 --> 00:03:41,660
0,300 480,840 840,960 960,1050 1050,1320
money| and you know this

94
00:03:41,660 --> 00:03:43,460
0,600 600,750 750,1080 1080,1560 1560,1800
problem is reasonably straightforward for

95
00:03:43,460 --> 00:03:44,750
0,450 450,630 630,750 750,1050 1050,1290
solved| in a very short

96
00:03:44,750 --> 00:03:46,640
0,330 330,750 750,1020 1020,1590 1620,1890
similar style to SUNDR,| but

97
00:03:46,640 --> 00:03:49,080
0,270 270,660 660,1470
basically signing operations

98
00:03:49,260 --> 00:03:51,960
0,570 1950,2310 2310,2370 2370,2610 2610,2700
{} make it hard to

99
00:03:51,960 --> 00:03:53,280
0,270 270,780 810,960 960,1050 1050,1320
actually forge| and in fact

100
00:03:53,280 --> 00:03:54,300
0,90 90,270 270,420 420,690 690,1020
you know the general setting

101
00:03:54,300 --> 00:03:55,290
0,210 210,510 510,600 600,690 690,990
here,| correct it's the same

102
00:03:55,290 --> 00:03:56,490
0,120 120,270 270,510 510,750 750,1200
as in {SUNDR -},| well,

103
00:03:56,640 --> 00:03:58,200
0,150 150,330 330,780 810,1140 1140,1560
you know the byzantine {}

104
00:03:58,260 --> 00:04:00,810
0,1230 1230,1260 1260,1740 1740,1980 1980,2550
participants are very very powerful,|

105
00:04:00,840 --> 00:04:01,800
0,150 150,270 270,330 330,450 450,960
we're going to be assuming

106
00:04:01,800 --> 00:04:04,110
0,180 180,450 450,750 750,1380 1380,2310
that the crypto systems actually

107
00:04:04,110 --> 00:04:06,300
0,420 450,960 960,1380 1380,1470 1470,2190
work and cannot be compromised.|

108
00:04:06,840 --> 00:04:07,770
0,150 150,300 300,480 480,600 600,930
And so {a,lot} of the

109
00:04:07,800 --> 00:04:10,830
0,600 630,1560 1800,2550 2550,2850 2850,3030
core [functionality] {} or the

110
00:04:10,830 --> 00:04:12,030
0,540 540,630 630,990 990,1080 1080,1200
basis of which you know

111
00:04:12,030 --> 00:04:13,260
0,120 120,390 390,780 780,930 930,1230
we might conclude| that actually

112
00:04:13,260 --> 00:04:14,340
0,240 240,420 420,840 840,960 960,1080
things are secure, all going

113
00:04:14,340 --> 00:04:15,900
0,60 60,180 180,690 960,1470 1470,1560
to come down| to the

114
00:04:15,900 --> 00:04:18,480
0,300 300,510 510,840 1020,1500 1500,2580
fact that the underlying cryptography

115
00:04:18,480 --> 00:04:19,260
0,90 90,510
is correct,|

116
00:04:20,780 --> 00:04:22,740
0,450 450,660 660,840 840,1410
so that's one challenge.|

117
00:04:22,740 --> 00:04:24,390
0,570 720,1080 1080,1410 1410,1560 1560,1650
{} {The,second} challenge which is

118
00:04:24,390 --> 00:04:25,530
0,60 60,270 270,630 630,690 690,1140
the one,| that the {paper,spends}

119
00:04:25,530 --> 00:04:27,480
0,390 390,570 570,900 900,1350 1470,1950
{mosts,of,time -} talking about is

120
00:04:27,480 --> 00:04:29,300
0,210 210,660
double spending.|

121
00:04:33,780 --> 00:04:35,970
0,540 810,960 960,1590 1590,2070 2100,2190
So you literally have you

122
00:04:35,970 --> 00:04:37,650
0,210 210,1020 1020,1320 1320,1530 1530,1680
know {some,bitcoins},| {} that you

123
00:04:37,650 --> 00:04:40,710
0,690 1080,1830 1830,2370 2370,3060 3060,3060
accumulated {} in a {}

124
00:04:41,670 --> 00:04:43,410
0,360 360,1050 1050,1290 1290,1380 1380,1740
business practitioner tries to spend

125
00:04:43,770 --> 00:04:46,530
0,870 1050,1680 1770,2070 2070,2640 2640,2760
twice that same bitcoin| and

126
00:04:46,530 --> 00:04:47,550
0,150 150,360 360,570 570,750 750,1020
of course we want to

127
00:04:47,550 --> 00:04:49,200
0,300 300,480 480,780 780,1410 1410,1650
avoid that particular problem not

128
00:04:49,200 --> 00:04:51,330
0,390 870,1200 1200,1290 1290,1680 1680,2130
ideal| and the main ideas

129
00:04:51,330 --> 00:04:53,280
0,150 150,570 570,930 930,1590 1590,1950
we'll see is a public

130
00:04:53,280 --> 00:04:55,410
0,480 900,1140 1140,1230 1230,1530 1530,2130
ledger or a public log

131
00:04:55,880 --> 00:04:57,860
0,480 480,660 660,960 960,1230 1230,1980
{} of all the transactions|

132
00:04:57,860 --> 00:04:58,460
0,120 120,210 210,390 390,510 510,600
you know, so you can

133
00:04:58,460 --> 00:05:00,050
0,270 270,540 540,600 600,1020 1020,1590
see if the transaction actually,|

134
00:05:00,050 --> 00:05:01,430
0,270 510,840 840,1020 1020,1170 1170,1380
{} without money was already

135
00:05:01,430 --> 00:05:03,710
0,390 390,780 780,1320 1770,2040 2040,2280
spending early transaction| and really

136
00:05:03,710 --> 00:05:05,660
0,270 270,330 330,960 990,1410 1410,1950
trying to achieve {} consensus

137
00:05:05,660 --> 00:05:06,440
0,150 150,330 330,450 450,720 720,780
on what is actually in

138
00:05:06,440 --> 00:05:07,820
0,60 60,630 690,810 810,1050 1050,1380
the log| is the heart

139
00:05:07,820 --> 00:05:09,880
0,150 150,840 1020,1620
of the paper.|

140
00:05:10,470 --> 00:05:12,690
0,570 810,1350 1380,1710 1710,1860 1860,2220
Then, of course, in addition

141
00:05:12,690 --> 00:05:14,580
0,390 390,1080 1080,1380 1380,1440 1440,1890
to these two,| you know

142
00:05:14,580 --> 00:05:16,770
0,210 210,540 540,960 990,1650 1650,2190
the obvious other problem which

143
00:05:16,770 --> 00:05:18,000
0,240 240,600 600,810 810,960 960,1230
paper doesn't talk much about|

144
00:05:18,000 --> 00:05:18,720
0,120 120,270 270,450 450,570 570,720
and we're also not gonna

145
00:05:18,720 --> 00:05:20,220
0,210 210,360 360,750 1110,1170 1170,1500
talk much {about -}| which

146
00:05:20,220 --> 00:05:21,460
0,60 60,240 240,780
is just theft,|

147
00:05:21,750 --> 00:05:24,300
0,330 330,990 1350,1740 1740,2220 2220,2550
{} where {} somebody actually

148
00:05:24,300 --> 00:05:26,430
0,300 300,630 630,1110 1140,1590 1590,2130
steal somebody else's private key|

149
00:05:26,430 --> 00:05:27,900
0,180 180,810 810,900 900,1110 1110,1470
and therefore I can spend

150
00:05:27,900 --> 00:05:30,390
0,480 780,1140 1140,1800 1830,2340 2340,2490
money or bitcoins| using that

151
00:05:30,390 --> 00:05:31,620
0,300 300,600 600,990 990,1110 1110,1230
particular private key,| and it

152
00:05:31,620 --> 00:05:32,190
0,210 210,330 330,390 390,480 480,570
turns out to be in

153
00:05:32,190 --> 00:05:34,680
0,360 360,420 420,720 720,1860 2070,2490
practice a series problem,| people

154
00:05:34,680 --> 00:05:38,100
0,690 1020,1590 1680,2250 2250,2460 2460,3420
store their wallets with their

155
00:05:38,100 --> 00:05:40,620
0,360 360,1020 1290,1860 1860,2340 2340,2520
signing keys on computers| and

156
00:05:40,620 --> 00:05:42,030
0,330 330,450 450,540 540,840 840,1410
computers can be broken into|

157
00:05:42,030 --> 00:05:43,770
0,540 870,1140 1140,1290 1290,1530 1530,1740
and {} and therefore people

158
00:05:43,770 --> 00:05:45,270
0,90 90,360 360,570 570,900 900,1500
can break it over steals

159
00:05:45,390 --> 00:05:46,720
0,300 300,600 600,900
somebody else's money.|

160
00:05:47,050 --> 00:05:48,700
0,510 510,870 870,1110 1110,1470 1470,1650
{} And I think this

161
00:05:48,700 --> 00:05:49,660
0,90 90,180 180,420 420,810 810,960
is a serious problem in

162
00:05:49,750 --> 00:05:51,310
0,570 720,1110 1110,1230 1230,1470 1470,1560
practice,| I'm not going to

163
00:05:51,310 --> 00:05:52,630
0,210 210,510 510,660 660,1020 1020,1320
be spending much time talking

164
00:05:52,630 --> 00:05:54,130
0,210 210,270 690,1110 1110,1230 1230,1500
about it,| again I want

165
00:05:54,130 --> 00:05:55,180
0,150 150,540 540,660 660,780 780,1050
to focus on the distributed

166
00:05:55,180 --> 00:05:56,680
0,420 420,1050
systems aspects.|

167
00:05:59,210 --> 00:06:00,470
0,300 300,570 570,720 720,780 780,1260
Any questions about the challenges?|

168
00:06:06,460 --> 00:06:07,540
0,330 330,630 630,930 930,1020 1020,1080
Okay, let's look at the

169
00:06:07,540 --> 00:06:08,920
0,450 450,810
transaction then,|

170
00:06:09,040 --> 00:06:09,910
0,180 180,270 270,480 480,750 750,870
you know what's actually in

171
00:06:09,910 --> 00:06:11,560
0,270 360,990
it. {}|

172
00:06:11,650 --> 00:06:12,790
0,240 240,450 450,510 510,930 930,1140
So this is basically what

173
00:06:12,790 --> 00:06:15,080
0,90 90,210 210,330 330,900
is in the ledge,|

174
00:06:21,530 --> 00:06:23,390
0,330 330,630 630,870 870,1440 1440,1860
{} I'm going simplify it

175
00:06:23,390 --> 00:06:25,820
0,630 780,1470
greatly, {}|

176
00:06:26,640 --> 00:06:27,720
0,180 180,330 330,480 480,840 840,1080
{because,some} of the details actually

177
00:06:27,720 --> 00:06:28,590
0,150 150,360 360,660 660,780 780,870
don't really matter to the

178
00:06:28,590 --> 00:06:29,340
0,390 390,480 480,570 570,690 690,750
discussion that we're going to

179
00:06:29,340 --> 00:06:31,500
0,450 750,1440 1440,1680 1680,1920 1920,2160
have| and the first order

180
00:06:31,500 --> 00:06:32,760
0,90 90,240 240,450 450,810 810,1260
you can think about is|

181
00:06:32,970 --> 00:06:35,580
0,450 450,1200
every transaction

182
00:06:35,610 --> 00:06:36,930
0,300 300,390 390,930 930,1260 1260,1320
is a record| and the

183
00:06:36,930 --> 00:06:38,520
0,330 330,600 600,720 720,1020 1020,1590
record has a public key,|

184
00:06:43,830 --> 00:06:45,510
0,150 150,240 240,870 1110,1260 1260,1680
for the user for which

185
00:06:45,510 --> 00:06:47,160
0,120 120,270 270,900 1170,1440 1440,1650
you know the, {} the

186
00:06:47,160 --> 00:06:48,360
0,270 270,390 390,870 870,990 990,1200
money is intended,| so this

187
00:06:48,360 --> 00:06:50,400
0,180 180,390 420,1440
is a destination,|

188
00:06:51,260 --> 00:06:53,080
0,390 510,1350
a hash

189
00:06:56,460 --> 00:06:58,140
0,240 240,330 330,720 720,1500 1530,1680
of the previous transaction,| you

190
00:06:58,140 --> 00:06:59,640
0,120 120,270 270,420 420,810 810,1500
know for this particular bitcoin,|

191
00:07:00,660 --> 00:07:03,920
0,510 510,1230 1440,1890 1890,2670
{} and a signature,

192
00:07:05,320 --> 00:07:06,310
0,300 300,420 420,540 540,660 660,990
and we have the private

193
00:07:06,310 --> 00:07:07,440
0,570
key,

194
00:07:11,060 --> 00:07:12,920
0,330 330,900 930,1320 1320,1680 1680,1860
these two were basically the

195
00:07:12,920 --> 00:07:16,190
0,420 420,990 1020,2520 2550,2670 2670,3270
previous owner of that particular

196
00:07:16,520 --> 00:07:19,550
0,270 270,1020 1380,2070 2100,2880 2880,3030
{} bitcoin| and {} in

197
00:07:19,550 --> 00:07:20,210
0,180 180,360 360,450 450,570 570,660
that sort of you can

198
00:07:20,210 --> 00:07:20,930
0,120 120,330 330,480 480,630 630,720
think about this as the

199
00:07:20,930 --> 00:07:22,760
0,570 630,900 900,1440 1440,1620 1620,1830
source,| so basically those two

200
00:07:22,760 --> 00:07:24,680
0,120 120,690 690,960 1200,1800 1800,1920
is making you granting you

201
00:07:24,680 --> 00:07:26,810
0,120 120,540 540,930 960,1680 1680,2130
know bitcoin from transferring bitcoins

202
00:07:26,810 --> 00:07:27,860
0,180 180,510 510,570 570,720 720,1050
from you to other one,|

203
00:07:28,340 --> 00:07:29,240
0,300 300,420 420,570 570,780 780,900
so that your one and

204
00:07:29,240 --> 00:07:30,440
0,90 90,210 210,510 510,780
{} can spend them.|

205
00:07:30,780 --> 00:07:32,130
0,510 630,780 780,990 990,1140 1140,1350
Um, of course it open

206
00:07:32,130 --> 00:07:32,910
0,120 120,270 270,480 480,600 600,780
to other stuff in it

207
00:07:32,910 --> 00:07:34,230
0,210 210,480 480,570 570,1050 1050,1320
like there's a mounting it

208
00:07:34,830 --> 00:07:37,350
0,540 540,1170 1530,2160 2160,2460 2460,2520
fractional amounts, um, there are

209
00:07:37,350 --> 00:07:38,880
0,240 240,870 870,930 930,1140 1140,1530
many destinations as many sources

210
00:07:38,880 --> 00:07:40,050
0,60 60,660 660,810 810,870 870,1170
as possible, there are many

211
00:07:40,050 --> 00:07:41,440
0,300 300,420 420,930
ins and outs.

212
00:07:43,330 --> 00:07:44,740
0,330 330,450 450,810 810,990 990,1410
We are basically will ignore

213
00:07:44,740 --> 00:07:46,300
0,180 180,330 330,570 570,990 990,1560
it and just focus on

214
00:07:46,300 --> 00:07:48,640
0,690 1080,1410 1410,1470 1470,1890 1890,2340
a sort of simplified description

215
00:07:48,940 --> 00:07:50,470
0,420 420,570 570,690 690,1200 1200,1530
turns out that transactions are

216
00:07:50,620 --> 00:07:52,480
0,600 600,1140 1140,1620 1620,1740 1740,1860
encoded also not sort of

217
00:07:52,480 --> 00:07:54,010
0,390 420,630 630,690 690,1110 1110,1530
like sort of passive records,

218
00:07:54,010 --> 00:07:56,020
0,270 570,1350 1350,1440 1440,1650 1650,2010
but basically a little scripting

219
00:07:56,020 --> 00:07:58,390
0,600 840,1380 1380,1920 1920,2250 2250,2370
language a and also going

220
00:07:58,390 --> 00:08:01,160
0,150 150,630 660,1800 1800,2400
to ignore zone aspects.

221
00:08:01,550 --> 00:08:03,200
0,510 930,1050 1050,1110 1110,1290 1290,1650
I'm going to start to

222
00:08:03,200 --> 00:08:04,550
0,240 240,330 330,480 480,870 870,1350
focus on this thing, and

223
00:08:04,550 --> 00:08:05,360
0,120 120,300 300,360 360,570 570,810
you talk a little bit

224
00:08:05,360 --> 00:08:06,830
0,120 300,570 570,630 630,810 810,1470
and show a little example,

225
00:08:07,100 --> 00:08:07,880
0,270 270,390 390,540 540,600 600,780
so we get a little

226
00:08:07,880 --> 00:08:08,960
0,150 150,210 210,630 630,750 750,1080
bit of handel and actually

227
00:08:08,960 --> 00:08:10,760
0,150 360,1170 1170,1590 1590,1710 1710,1800
what we're looking at in

228
00:08:10,760 --> 00:08:12,200
0,210 210,300 300,390 390,750
terms of the challenge.

229
00:08:15,480 --> 00:08:16,440
0,180 180,330 480,720 720,780 780,960
So I sort of look

230
00:08:16,440 --> 00:08:18,120
0,120 120,240 240,690 690,1290 1290,1680
at an example, leger and

231
00:08:18,120 --> 00:08:19,290
0,150 150,480 480,660 660,720 720,1170
sort of trying to understand

232
00:08:19,290 --> 00:08:20,130
0,360 360,480 480,540 540,750 750,840
actually you know what it

233
00:08:20,130 --> 00:08:21,570
0,360 360,480 480,630 630,690 690,1440
means to be a Bitcoin

234
00:08:21,810 --> 00:08:23,160
0,330 330,480 480,570 570,870 870,1350
or what a coin is

235
00:08:23,430 --> 00:08:25,800
0,660 660,1140 1140,1320 1320,1800 2130,2370
a it's not like sort

236
00:08:25,800 --> 00:08:27,330
0,90 90,180 180,480 480,900 900,1530
of a single thing, actually

237
00:08:27,330 --> 00:08:28,590
0,330 330,570 570,810 810,1050 1050,1260
it really comes down to

238
00:08:28,590 --> 00:08:30,060
0,120 120,570 780,1050 1050,1110 1110,1470
is actually sort of a

239
00:08:30,330 --> 00:08:31,410
0,300 300,630 630,720 720,810 810,1080
Sha one of the last

240
00:08:31,410 --> 00:08:32,520
0,540 540,780 780,930 930,990 990,1110
transaction that's sort of what

241
00:08:32,520 --> 00:08:33,760
0,60 60,390 390,840
a coin is.

242
00:08:33,950 --> 00:08:35,270
0,450 600,810 810,960 960,1200 1200,1320
Um, so let's say you

243
00:08:35,270 --> 00:08:37,580
0,330 390,1260 1440,2070 2070,2250 2250,2310
know why a owns a

244
00:08:37,580 --> 00:08:40,940
0,600 1020,1680 1680,2610 2610,2820 2820,3360
coin and received from X

245
00:08:41,390 --> 00:08:42,230
0,150 150,240 240,390 390,690 690,840
and so that means that

246
00:08:42,230 --> 00:08:44,030
0,150 150,540 540,780 780,1230 1260,1800
there's somewhere in the ledger

247
00:08:44,030 --> 00:08:46,760
0,690 810,1500 1500,1680 1680,2490 2550,2730
represents transactions that transfer the

248
00:08:46,760 --> 00:08:48,380
0,390 390,630 630,930 960,1500 1500,1620
money or the coin where

249
00:08:48,380 --> 00:08:49,820
0,240 240,330 330,390 390,750 750,1440
parts of the coin to

250
00:08:49,940 --> 00:08:51,740
0,810 900,1110 1110,1260 1260,1410 1410,1800
y and so let's see

251
00:08:51,740 --> 00:08:54,380
0,360 360,720 720,1290 2010,2190 2190,2640
like somewhere, maybe there was

252
00:08:54,380 --> 00:08:55,490
0,60 60,360 360,450 450,720 720,1110
an injury that lives somewhere

253
00:08:55,490 --> 00:08:57,890
0,270 300,690 750,1050 1050,1620 1650,2400
in some weird time where

254
00:08:57,890 --> 00:09:00,120
0,690 690,1440
actually received.

255
00:09:00,560 --> 00:09:03,800
0,750 780,1620 1620,1860 1860,2730
Um, yeah, so bitcoins.

256
00:09:03,800 --> 00:09:06,380
0,870 960,1740 1740,1950 1950,2430 2430,2580
And, um, and now you

257
00:09:06,380 --> 00:09:07,760
0,300 300,510 510,600 600,900 900,1380
know sort of grant sr,

258
00:09:07,760 --> 00:09:09,650
0,0 840,1110 1110,1350 1350,1470 1470,1890
a has given it to

259
00:09:09,650 --> 00:09:11,200
0,480 480,930
a what.

260
00:09:11,430 --> 00:09:13,590
0,210 210,390 390,660 660,1260 1650,2160
So there's another transaction in

261
00:09:13,620 --> 00:09:15,600
0,210 210,540 540,660 660,1380 1380,1980
the ledger that basically records

262
00:09:15,600 --> 00:09:16,680
0,180 180,540 540,660 660,840 840,1080
that fact and so that

263
00:09:16,680 --> 00:09:18,270
0,210 210,540 660,690 690,1260 1260,1590
might have a puppy off

264
00:09:18,810 --> 00:09:22,560
0,810 1410,2610 3000,3150 3150,3540 3540,3750
why destination the hash of

265
00:09:22,560 --> 00:09:24,480
0,150 150,690 690,1410
the transaction six.

266
00:09:26,280 --> 00:09:27,870
0,240 240,360 360,480 480,960 960,1590
And so that uniquely identifies

267
00:09:27,870 --> 00:09:30,540
0,630 630,1050 1050,1320 1350,1980 1980,2670
shorthand handle for uniquely identifying

268
00:09:30,540 --> 00:09:32,400
0,180 180,600 600,1200 1500,1650 1650,1860
a transaction six and so

269
00:09:32,400 --> 00:09:33,630
0,210 210,630 630,780 780,1140 1140,1230
we have the ledger a

270
00:09:33,630 --> 00:09:34,950
0,420 420,570 570,750 750,840 840,1320
record we think is transaction

271
00:09:34,950 --> 00:09:35,820
0,360 360,480 480,570 570,720 720,870
six now we can {re-compute

272
00:09:35,820 --> 00:09:37,020
0,330 330,390 390,870 870,1050 1050,1200
-} the hash of that

273
00:09:37,020 --> 00:09:38,910
0,480 480,960 960,1350 1500,1680 1680,1890
transaction compared to the one

274
00:09:38,910 --> 00:09:40,590
0,90 90,540 540,870 870,1350 1500,1680
that storage section seven and

275
00:09:40,590 --> 00:09:42,690
0,240 240,540 540,1200 1200,1440 1440,2100
we're truly determined that basically

276
00:09:42,690 --> 00:09:44,760
0,570 570,1050 1050,1590 1620,2010 2010,2070
a transaction six what's the

277
00:09:44,760 --> 00:09:46,080
0,630 630,720 720,810 810,990 990,1320
source, you know for distance

278
00:09:46,080 --> 00:09:47,300
0,300 300,810
section seven.

279
00:09:47,450 --> 00:09:48,650
0,270 270,360 360,810 810,870 870,1200
Where is based the previous

280
00:09:48,650 --> 00:09:50,780
0,390 390,600 600,990 990,1440 1890,2130
objection watched rejection six for

281
00:09:50,780 --> 00:09:52,280
0,150 150,450 450,960 1200,1380 1380,1500
this particular coin, it is

282
00:09:52,280 --> 00:09:53,940
0,450 450,1020
assigned by.

283
00:09:55,580 --> 00:09:56,980
0,390 390,900
No Max.

284
00:09:57,380 --> 00:09:59,540
0,540 630,1380 1500,1860 1860,2010 2010,2160
Um, now, um, so this

285
00:09:59,540 --> 00:10:01,070
0,90 90,240 240,300 300,870 870,1530
is sort of situation where

286
00:10:01,070 --> 00:10:05,240
0,840 1140,1860 1920,2700 2700,3360 3810,4170
why obtained basically I show

287
00:10:05,270 --> 00:10:06,380
0,180 180,720 720,810 810,930 930,1110
some bitcoins, you know for

288
00:10:06,380 --> 00:10:08,000
0,450 720,990 990,1320 1320,1530 1530,1620
next know why, want to

289
00:10:08,000 --> 00:10:09,650
0,390 390,930 930,1020 1020,1350 1350,1650
spam spam, for example, maybe

290
00:10:09,650 --> 00:10:10,790
0,240 240,330 330,570 570,810 810,1140
what I want to buy

291
00:10:10,790 --> 00:10:13,520
0,690 810,1440 1650,2250 2250,2550 2550,2730
latte rumsey a and so

292
00:10:13,520 --> 00:10:15,290
0,180 180,720 750,1170 1170,1320 1320,1770
it's a transfer some money

293
00:10:15,590 --> 00:10:18,410
0,690 690,1560 1650,2280 2280,2460 2460,2820
to a seat so maybe

294
00:10:18,410 --> 00:10:20,120
0,180 180,360 360,990 1140,1620 1620,1710
we'll see another transaction in

295
00:10:20,120 --> 00:10:21,140
0,90 90,570 570,810 810,870 870,1020
the ledger which is going

296
00:10:21,140 --> 00:10:22,550
0,60 60,240 240,360 360,1050 1080,1410
to be a form, this

297
00:10:22,550 --> 00:10:23,570
0,90 90,360 360,510 510,780 780,1020
is one that actually why

298
00:10:23,570 --> 00:10:24,920
0,90 90,210 210,300 300,870
is going to add.

299
00:10:29,160 --> 00:10:33,270
0,2040 2850,3210 3210,3780 3840,3960 4050,4110
Ozzy a hash of the

300
00:10:34,230 --> 00:10:37,360
0,900 990,2700
previous coin.

301
00:10:37,510 --> 00:10:38,740
0,90 90,360 360,840 840,990 990,1230
The last injection for dot

302
00:10:38,740 --> 00:10:40,780
0,660 660,930 930,1500 1800,1950 1950,2040
coincidence, teach seven in a

303
00:10:40,780 --> 00:10:42,780
0,330 330,450 450,990
sense by y.

304
00:10:45,100 --> 00:10:47,410
0,570 1050,1590 1590,1680 1680,1890 1890,2310
Um, basically you know see,

305
00:10:47,410 --> 00:10:48,520
0,60 60,330 330,450 450,600 600,1110
he wants to do before

306
00:10:48,520 --> 00:10:49,450
0,150 150,210 210,420 420,690 690,930
going to see actually hands

307
00:10:49,450 --> 00:10:50,770
0,240 240,330 330,660 660,780 780,1320
over the latte too, why

308
00:10:50,950 --> 00:10:51,670
0,180 180,360 360,540 540,600 600,720
does she need to do

309
00:10:51,670 --> 00:10:53,710
0,120 120,990 1260,1440 1440,1770 1770,2040
some verification to make sure

310
00:10:53,710 --> 00:10:54,610
0,150 150,300 300,720 720,810 810,900
that this actually is a

311
00:10:54,610 --> 00:10:57,040
0,480 480,600 600,720 720,1440 1710,2430
legit you know transaction, um,

312
00:10:57,040 --> 00:10:59,380
0,390 390,510 510,1170 1350,1980 1980,2340
so you know look up

313
00:10:59,410 --> 00:11:01,390
0,720 720,810 810,900 900,1380 1380,1980
a you know transaction seven,

314
00:11:01,720 --> 00:11:04,150
0,780 900,1470 1470,1770 1770,2340 2340,2430
um, ah, you compute you

315
00:11:04,150 --> 00:11:04,960
0,90 90,180 180,420 420,600 600,810
know the hash of a

316
00:11:04,990 --> 00:11:06,790
0,390 390,810 810,1200 1200,1590 1590,1800
double check the hash actually

317
00:11:06,790 --> 00:11:07,840
0,540 540,630 630,720 720,930 930,1050
corresponds to the one that

318
00:11:07,840 --> 00:11:12,190
0,330 330,600 600,1470 1620,3840 3840,4350
actually listed intersection, a introduction

319
00:11:12,190 --> 00:11:13,870
0,420 540,960 960,1440 1440,1560 1560,1680
eight um, if you know

320
00:11:13,870 --> 00:11:15,400
0,150 150,750 810,1170 1170,1410 1410,1530
the hash checks out so

321
00:11:15,400 --> 00:11:16,750
0,270 270,480 480,750 750,870 870,1350
there's actually seven is indeed

322
00:11:16,750 --> 00:11:18,130
0,120 120,390 720,840 840,1170 1170,1380
you know we believe that

323
00:11:18,130 --> 00:11:19,210
0,90 90,420 420,570 570,840 840,1080
the one that actually started

324
00:11:19,210 --> 00:11:21,550
0,240 240,450 450,930 930,1260 1620,2340
action age refers to a

325
00:11:21,550 --> 00:11:22,840
0,150 150,390 390,900 900,1110 1110,1290
you know z looks up

326
00:11:22,840 --> 00:11:25,030
0,270 300,690 690,1200 1350,1680 1680,2190
the public key a in

327
00:11:25,240 --> 00:11:27,490
0,300 300,390 390,630 630,1200 1230,2250
a is actually seven for

328
00:11:27,520 --> 00:11:29,020
0,480 480,690 690,1050 1050,1170 1170,1500
y which usually is the

329
00:11:29,080 --> 00:11:31,240
0,330 330,480 480,990 1230,2040 2040,2160
public key why then oh

330
00:11:31,240 --> 00:11:32,590
0,630 630,780 780,960 960,1110 1110,1350
verifies that use that public

331
00:11:32,590 --> 00:11:34,060
0,120 120,210 210,600 600,720 720,1470
key to verify the signature

332
00:11:34,120 --> 00:11:36,160
0,360 360,840 990,1890 1890,1980 1980,2040
of this transaction and the

333
00:11:36,160 --> 00:11:38,530
0,480 480,840 990,1470 1950,2100 2100,2370
signature course covers the whole

334
00:11:38,530 --> 00:11:40,270
0,750 960,1290 1290,1380 1380,1440 1440,1740
transaction, and if the signature

335
00:11:40,270 --> 00:11:41,800
0,270 270,690 690,810 810,960 960,1530
checks out you know then,

336
00:11:42,010 --> 00:11:43,600
0,660 660,780 780,960 960,1410 1410,1590
um, you know z can

337
00:11:43,600 --> 00:11:45,040
0,210 210,930 930,1020 1020,1140 1140,1440
be confident you know that

338
00:11:45,040 --> 00:11:45,400
0,300
actually.

339
00:11:45,850 --> 00:11:48,460
0,690 810,1290 1320,2010 2010,2520 2520,2610
Um the ledger contains a

340
00:11:48,460 --> 00:11:50,170
0,570 570,720 720,1020 1020,1650 1650,1710
transaction that basically transfers you

341
00:11:50,170 --> 00:11:51,220
0,120 120,330 330,540 540,600 600,1050
know some amount of money

342
00:11:51,400 --> 00:11:53,320
0,570 570,900 900,1350 1380,1560 1560,1920
from A Y to z

343
00:11:53,350 --> 00:11:54,430
0,270 270,420 420,480 480,630 630,1080
man, so at this point

344
00:11:54,430 --> 00:11:56,080
0,90 90,210 210,300 300,1170 1500,1650
you know the verification, you

345
00:11:56,080 --> 00:12:00,640
0,120 120,300 300,1290 1650,2490
know she verifies and.

346
00:12:00,730 --> 00:12:03,730
0,480 480,720 720,1410 2220,2670 2670,3000
Yeah it's okay, yeah whatever

347
00:12:03,730 --> 00:12:05,320
0,270 270,990
shaped latte.

348
00:12:05,580 --> 00:12:06,680
0,60 60,480
He asked.

349
00:12:07,410 --> 00:12:09,270
0,570 570,660 660,780 780,1290 1290,1860
And in the article reject.

350
00:12:12,620 --> 00:12:13,850
0,150 150,420 420,660 660,1200 1200,1230
And again like before, I

351
00:12:13,850 --> 00:12:16,340
0,450 450,1200 1230,1950 1950,2340 2340,2490
mean a sunder and all

352
00:12:16,340 --> 00:12:18,080
0,180 180,300 300,360 360,1020 1200,1740
these sort of schemes, um,

353
00:12:18,080 --> 00:12:19,010
0,120 120,330 330,660 660,870 870,930
yeah we're lying here in

354
00:12:19,010 --> 00:12:20,660
0,90 90,420 420,510 510,900 900,1650
the fact that visually why,

355
00:12:20,960 --> 00:12:22,280
0,720
um.

356
00:12:22,310 --> 00:12:23,360
0,180 180,300 300,750 750,900 900,1050
He was careful with his

357
00:12:23,360 --> 00:12:24,880
0,240 240,330 330,720
bride and key.

358
00:12:30,980 --> 00:12:32,930
0,450 450,840 930,1260 1260,1800 1800,1950
Yeah, so yeah we have

359
00:12:32,930 --> 00:12:34,730
0,60 60,690 750,1140 1140,1500 1500,1800
to assume that why didn't

360
00:12:34,730 --> 00:12:36,320
0,840
disclose.

361
00:12:36,920 --> 00:12:38,900
0,150 150,360 360,870
In any way.

362
00:12:40,160 --> 00:12:41,840
0,240 240,600 600,1110
It's perfect key.

363
00:12:43,850 --> 00:12:45,110
0,360 360,600 600,690 690,1080 1080,1260
A because if anybody I

364
00:12:45,110 --> 00:12:45,860
0,90 90,210 210,300 300,690 690,750
was going to describe the

365
00:12:45,860 --> 00:12:47,510
0,240 240,450 450,630 630,1050 1050,1650
key then there's anybody cooped

366
00:12:47,510 --> 00:12:49,460
0,120 120,240 240,960 1170,1560 1560,1950
up his signature, um, and

367
00:12:49,460 --> 00:12:50,540
0,300 300,420 420,660 660,780 780,1080
he was able to spend

368
00:12:50,540 --> 00:12:52,040
0,300 300,630 630,960
basically wise money.

369
00:12:52,340 --> 00:12:53,660
0,750
I'm.

370
00:12:53,780 --> 00:12:54,950
0,300 300,570 570,690 690,750 750,1170
Although maybe from the perspective,

371
00:12:54,950 --> 00:12:56,580
0,210 210,480 480,660 660,1050
he doesn't really care.

372
00:12:56,580 --> 00:12:57,780
0,690
From.

373
00:12:57,870 --> 00:13:00,260
0,300 300,720 1080,1830
Okay, so um.

374
00:13:00,530 --> 00:13:02,080
0,150 150,510 510,990
So that's good.

375
00:13:02,080 --> 00:13:04,480
0,390 390,1050 1140,1770 1770,2070 2070,2400
Basic plan, um in terms

376
00:13:04,480 --> 00:13:06,480
0,420 450,840 840,930 930,1440
of having a record.

377
00:13:06,570 --> 00:13:08,250
0,120 120,660 840,1530 1530,1620 1620,1680
I mean, um, you know,

378
00:13:08,250 --> 00:13:09,210
0,180 180,300 300,450 450,780 840,960
this is pretty good, I

379
00:13:09,210 --> 00:13:11,940
0,1140 1470,2130
mean, um.

380
00:13:12,720 --> 00:13:13,710
0,390 390,450 480,810 810,900 900,990
There's a record of the

381
00:13:13,710 --> 00:13:15,330
0,420 420,540 540,1050 1110,1410 1410,1620
transaction that happened, um when

382
00:13:15,330 --> 00:13:16,920
0,540 540,990 990,1020 1020,1500 1500,1590
she receives a transaction that

383
00:13:16,920 --> 00:13:17,910
0,120 120,420 420,660 660,840 840,990
could check whether this is

384
00:13:17,910 --> 00:13:21,060
0,270 270,840 900,1560 1860,2190 2190,3150
a valid transaction and, um,

385
00:13:21,240 --> 00:13:22,680
0,210 210,600 600,870 870,990 990,1440
you know, want to decide

386
00:13:22,680 --> 00:13:24,000
0,240 240,360 360,870 870,1230 1230,1320
where to actually accept the

387
00:13:24,000 --> 00:13:25,900
0,300 300,630 660,990 990,1470
money in delivery groups.

388
00:13:26,620 --> 00:13:28,520
0,570 750,1320
So, um.

389
00:13:28,550 --> 00:13:30,640
0,390 390,540 540,1350
Want to challenge.

390
00:13:31,290 --> 00:13:33,560
0,510 510,630 630,1770
Um, you're next.

391
00:13:33,930 --> 00:13:35,010
0,90 90,270 270,420 420,540 540,1080
You know sort of left

392
00:13:35,070 --> 00:13:36,240
0,330 330,480 480,750 750,990 990,1170
you know we're seeing that

393
00:13:36,240 --> 00:13:38,910
0,330 330,750 750,810 810,1410 1890,2670
outright forgery is difficult, um.

394
00:13:40,810 --> 00:13:41,500
0,300 300,390 390,510 510,600 600,690
But you know we need

395
00:13:41,500 --> 00:13:42,130
0,90 90,240 240,270 270,480 480,630
to think a little bit

396
00:13:42,130 --> 00:13:43,780
0,210 210,300 300,510 510,900 1140,1650
about the double spending and

397
00:13:43,780 --> 00:13:45,220
0,420 510,690 690,900 900,1200 1200,1440
so the double spending problem

398
00:13:45,220 --> 00:13:46,780
0,90 90,180 180,810 870,1200 1200,1560
is as follows, let's say

399
00:13:46,780 --> 00:13:48,400
0,360 360,450 450,960 960,1260 1260,1620
instead of creating two record

400
00:13:48,400 --> 00:13:50,020
0,300 300,840 840,960 960,1140 1140,1620
one records in this particular

401
00:13:50,020 --> 00:13:51,640
0,510 510,660 660,810 810,1410 1410,1620
example in the transaction, the

402
00:13:51,640 --> 00:13:54,130
0,420 660,1260 1290,1590 1590,1890 1890,2490
eight oz g actually generates

403
00:13:54,190 --> 00:13:55,390
0,450 450,690 690,780 780,1050 1050,1200
over why it creates two

404
00:13:55,390 --> 00:13:56,980
0,510
rabbits.

405
00:14:07,190 --> 00:14:09,170
0,210 210,540 540,870 1080,1260 1260,1980
A one record is visually

406
00:14:09,470 --> 00:14:11,000
0,750 810,960 960,1140 1140,1290 1290,1530
giving the one that you

407
00:14:11,000 --> 00:14:13,340
0,570 600,1110 1110,1260 1260,1410 1410,2340
saw a you are th.

408
00:14:14,480 --> 00:14:16,460
0,330 330,660 660,1350 1380,1800 1800,1980
A white DJ a with

409
00:14:16,460 --> 00:14:18,120
0,390 390,990
hash seven.

410
00:14:19,990 --> 00:14:21,550
0,300 300,450 450,720 720,1230 1230,1560
And let's see let's assume

411
00:14:21,550 --> 00:14:23,230
0,150 150,570 570,810 810,1050 1050,1680
that actually, um, why also

412
00:14:23,260 --> 00:14:25,060
0,270 270,630 630,1050 1200,1590 1590,1800
tries to a double spend

413
00:14:25,060 --> 00:14:26,230
0,150 150,510 750,900 900,960 960,1170
its money so it creates

414
00:14:26,230 --> 00:14:27,970
0,60 60,480 540,1320 1350,1560 1560,1740
a second transaction T A

415
00:14:27,970 --> 00:14:30,100
0,570 840,1110 1110,1740 1860,1980 1980,2130
prime um, we're you know

416
00:14:30,100 --> 00:14:31,270
0,330 330,600 600,720 720,1080 1080,1170
the records is basically the

417
00:14:31,270 --> 00:14:33,340
0,420 420,1020 1020,1110 1110,1440 1440,2070
same except the money goes

418
00:14:33,340 --> 00:14:36,160
0,90 90,660 930,1830 1830,2100 2100,2820
to Q A unit half

419
00:14:36,160 --> 00:14:37,840
0,1110
fifty-seven.

420
00:14:38,090 --> 00:14:39,410
0,300 300,390 390,660 660,780 780,1320
And of course no science

421
00:14:39,410 --> 00:14:41,750
0,270 270,1050 1710,1860 1860,2220 2220,2340
by why you signed by

422
00:14:41,750 --> 00:14:43,840
0,450
y.

423
00:14:45,960 --> 00:14:48,270
0,1020 1140,1920 1920,2010 2010,2130 2130,2310
Now, now you know let's

424
00:14:48,270 --> 00:14:49,200
0,180 180,300 300,450 450,780 780,930
say you know both q

425
00:14:49,200 --> 00:14:50,940
0,90 90,330 330,900 900,1230 1230,1740
and z are lucky stores,

426
00:14:51,270 --> 00:14:54,030
0,690 690,1320 1350,1500 1500,1890 1890,2760
um, if you know A

427
00:14:54,150 --> 00:14:56,550
0,390 390,840 840,1290 1290,1770 1830,2400
Z accepts you ate a

428
00:14:56,550 --> 00:14:57,630
0,240 240,300 300,600 600,960 960,1080
as it would because you

429
00:14:57,630 --> 00:14:58,950
0,240 240,600 600,750 750,990 990,1320
know everything will check out

430
00:14:58,950 --> 00:14:59,520
0,120 120,240 240,420 420,480 480,570
as we saw in the

431
00:14:59,520 --> 00:15:01,830
0,510 510,1050 1500,1950 1950,2190 2190,2310
previous slide, then z would

432
00:15:01,830 --> 00:15:02,760
0,210 210,450 450,480 480,810 810,930
actually ship a latte too,

433
00:15:02,760 --> 00:15:05,640
0,570 780,1440 1440,1980 1980,2550 2580,2880
why a when q not

434
00:15:05,640 --> 00:15:06,870
0,210 210,600 600,870 870,1110 1110,1230
knowing anything, maybe about this

435
00:15:06,870 --> 00:15:09,240
0,450 450,750 780,1440 1650,2130 2130,2370
other ta transaction, um, she's

436
00:15:09,240 --> 00:15:11,160
0,180 180,630 630,1440 1620,1740 1740,1920
this th transaction, you know

437
00:15:11,160 --> 00:15:12,360
0,270 270,360 360,690 690,900 900,1200
check it out, it's indeed

438
00:15:12,360 --> 00:15:13,440
0,60 60,450 450,720 720,840 840,1080
the case that you know

439
00:15:13,440 --> 00:15:15,000
0,210 210,660 690,1050 1050,1380 1380,1560
the money into separate wash

440
00:15:15,000 --> 00:15:16,920
0,480 480,780 780,1320 1470,1740 1740,1920
transfer to why, um the

441
00:15:16,920 --> 00:15:18,000
0,210 210,420 420,510 510,600 600,1080
thing is you know checked,

442
00:15:18,000 --> 00:15:19,710
0,120 120,330 330,480 480,1530 1530,1710
you know with zero for

443
00:15:19,710 --> 00:15:21,390
0,300 300,690 690,1140 1410,1590 1590,1680
y units fellow and will

444
00:15:21,390 --> 00:15:23,190
0,150 150,390 390,810 810,930 930,1800
say okay great, you know,

445
00:15:23,190 --> 00:15:24,090
0,330 330,510 510,720 720,810 810,900
oh, um, thank you for

446
00:15:24,090 --> 00:15:25,080
0,60 60,360 360,600 600,840 840,990
the money, I'll ship you

447
00:15:25,080 --> 00:15:26,490
0,270 270,480 480,630 660,870 870,1410
also want it and now

448
00:15:26,640 --> 00:15:28,380
0,300 300,390 390,510 510,1080 1110,1740
we're in this bad position

449
00:15:28,500 --> 00:15:31,860
0,900 1020,2550 2640,2790 2790,3120 3120,3360
where y um by double

450
00:15:31,860 --> 00:15:33,300
0,570 570,810 810,1080 1080,1260 1260,1440
spending or she didn't double

451
00:15:33,300 --> 00:15:34,980
0,330 330,540 540,990 990,1140 1140,1680
spending and got two laptops

452
00:15:35,070 --> 00:15:36,480
0,390 390,480 480,780 780,870 870,1410
there's the problem that basically

453
00:15:36,780 --> 00:15:39,240
0,780 810,1290 1290,1620 1620,2070 2070,2460
the paper image really focused

454
00:15:39,240 --> 00:15:40,540
0,210 210,450 450,570 570,1020
on trying to solve.

455
00:15:44,610 --> 00:15:48,080
0,600 750,1170 1170,1860 1890,2760
A basic approach is.

456
00:15:49,210 --> 00:15:51,040
0,270 270,420 420,600 1140,1650 1650,1830
Yeah sort of similar to

457
00:15:51,040 --> 00:15:52,750
0,390 540,870 870,990 990,1350 1350,1710
what someone was doing let's

458
00:15:52,750 --> 00:15:53,890
0,210 210,270 270,630 630,960 990,1140
keep a complete loss of

459
00:15:53,890 --> 00:15:55,180
0,270 270,870 870,1050 1050,1230 1230,1290
all transactions here since the

460
00:15:55,180 --> 00:15:56,500
0,300 300,390 390,810
beginning of time.

461
00:15:56,890 --> 00:15:58,660
0,870
AW.

462
00:16:01,840 --> 00:16:04,450
0,750 1020,1650 1650,2160 2160,2250 2250,2610
And, um, in the log

463
00:16:04,450 --> 00:16:06,640
0,510 510,690 690,780 780,1560 1650,2190
contains all the transactions a

464
00:16:06,640 --> 00:16:08,480
0,660 660,750 750,1230
including the order.

465
00:16:13,000 --> 00:16:14,290
0,330 330,450 450,780 780,1110 1110,1290
Right, and so again let's

466
00:16:14,290 --> 00:16:15,430
0,330 330,420 420,600 600,750 750,1140
see you know, so we

467
00:16:15,460 --> 00:16:16,930
0,270 270,360 360,690 690,780 780,1470
sort of put the distractions

468
00:16:16,930 --> 00:16:18,640
0,480 870,990 990,1080 1080,1440 1440,1710
in you know whatever here

469
00:16:18,640 --> 00:16:20,800
0,120 120,720 750,990 990,1650 1860,2160
we have t six here

470
00:16:20,800 --> 00:16:23,080
0,120 120,330 330,570 570,1200 1800,2280
we have t seven so

471
00:16:23,080 --> 00:16:24,340
0,510 510,660 660,750 750,1020 1020,1260
if there's a public blood

472
00:16:24,340 --> 00:16:25,360
0,90 90,450 450,570 570,660 660,1020
a record that is ordered

473
00:16:25,360 --> 00:16:26,350
0,120 120,240 240,330 330,900 900,990
to all the transactions you

474
00:16:26,350 --> 00:16:27,400
0,180 180,480 480,720 720,810 810,1050
know t eight or T

475
00:16:27,400 --> 00:16:28,450
0,120 120,390 390,570 570,930 930,1050
A prime goes first let's

476
00:16:28,450 --> 00:16:29,560
0,150 150,330 330,450 450,660 660,1110
say T A goes first.

477
00:16:30,660 --> 00:16:32,340
0,210 210,420 420,600 750,1110 1110,1680
And then the prime goes

478
00:16:32,370 --> 00:16:33,980
0,210 210,300 300,810
in the log.

479
00:16:34,530 --> 00:16:36,180
0,600 600,1200 1200,1320 1320,1470 1470,1650
Um, and you know this

480
00:16:36,180 --> 00:16:38,070
0,150 150,720 960,1590 1590,1770 1770,1890
would happen then you have

481
00:16:38,070 --> 00:16:39,630
0,150 150,510 510,660 660,1170 1200,1560
no problem at all right,

482
00:16:39,630 --> 00:16:41,250
0,660 750,1140 1140,1380 1380,1500 1500,1620
because um, this was the

483
00:16:41,250 --> 00:16:43,740
0,600 600,1140 1260,1680 1680,1860 1860,2490
transaction from y to z

484
00:16:43,860 --> 00:16:45,060
0,240 240,390 390,480 480,1020 1020,1200
this was the transaction from

485
00:16:45,060 --> 00:16:48,420
0,450 450,1140 2040,2790 2820,3270 3270,3360
whitey q and a you

486
00:16:48,420 --> 00:16:51,570
0,90 90,480 480,1050 1230,2130 2340,3150
know basically when a cue

487
00:16:51,570 --> 00:16:53,460
0,630 630,1050 1050,1200 1200,1410 1410,1890
validates you as each validates

488
00:16:53,460 --> 00:16:54,900
0,510 510,840 840,990 990,1320 1320,1440
introduction, everything looks perfect as

489
00:16:54,900 --> 00:16:56,610
0,390 390,450 450,1080 1350,1500 1500,1710
exactly as before when q

490
00:16:56,610 --> 00:16:58,590
0,630 630,810 810,1470 1590,1680 1680,1980
validates the transaction, in addition

491
00:16:58,590 --> 00:16:59,550
0,90 90,210 210,570 570,870 870,960
to the checks that we

492
00:16:59,550 --> 00:17:01,500
0,210 210,420 420,720 960,1620 1620,1950
just looked at a it

493
00:17:01,500 --> 00:17:02,820
0,390 390,600 600,690 690,780 780,1320
actually looks in the log

494
00:17:02,970 --> 00:17:04,700
0,510 780,1380
q log.

495
00:17:07,520 --> 00:17:09,080
0,270 270,360 360,510 510,1200 1200,1560
Like to see 57 basically

496
00:17:09,080 --> 00:17:10,820
0,360 360,660 660,1200
hours already spent.

497
00:17:21,620 --> 00:17:22,790
0,330 330,510 510,780 780,930 930,1170
And of course you step

498
00:17:22,790 --> 00:17:23,960
0,210 210,330 330,720 720,870 870,1170
back and walk you runs

499
00:17:23,960 --> 00:17:25,640
0,210 210,390 390,960 1140,1440 1440,1680
into T Y A T

500
00:17:25,640 --> 00:17:27,290
0,450 450,870 960,1140 1140,1590 1590,1650
eight and she's directing the

501
00:17:27,290 --> 00:17:28,760
0,240 240,420 420,600 600,1050 1290,1470
money has been spent so

502
00:17:28,760 --> 00:17:30,170
0,420 420,480 480,660 660,1320 1320,1410
therefore it will reject you.

503
00:17:31,330 --> 00:17:33,020
0,330 330,510 510,990
T A prior.

504
00:17:33,910 --> 00:17:35,020
0,570
Alright.

505
00:17:35,750 --> 00:17:37,370
0,480 750,1050 1050,1170 1170,1500 1500,1620
So, um, so that's the

506
00:17:37,370 --> 00:17:38,870
0,240 240,690 750,1020 1020,1140 1140,1500
basic plan and so basically

507
00:17:38,870 --> 00:17:40,460
0,60 60,270 270,840 840,1080 1080,1590
you know reduces one problem

508
00:17:40,460 --> 00:17:41,780
0,420 420,630 630,960 960,1200 1200,1320
which is like how do

509
00:17:41,780 --> 00:17:45,800
0,180 180,450 450,1200 1350,2280 3480,4020
we actually ensure that all

510
00:17:45,800 --> 00:17:47,420
0,570 570,660 660,720 720,1320 1320,1620
participants in the systems actually

511
00:17:47,420 --> 00:17:49,130
0,540 540,780 780,930 930,1290 1290,1710
agree on this law and

512
00:17:49,160 --> 00:17:50,360
0,90 90,420 420,570 570,660 660,1200
you know all the transactions

513
00:17:50,360 --> 00:17:51,560
0,210 210,300 300,450 450,720 720,1200
are in the same flawed

514
00:17:51,620 --> 00:17:53,630
0,690 990,1350 1350,1620 1620,1950 1950,2010
everywhere, um and contain the

515
00:17:53,630 --> 00:17:55,010
0,210 210,660 660,720 720,930 930,1380
same content, the same hashes

516
00:17:55,010 --> 00:17:56,660
0,90 90,270 270,960 1230,1530 1530,1650
the same signatures so that

517
00:17:56,660 --> 00:17:58,250
0,90 90,180 180,390 390,1410 1440,1590
we can actually verify the

518
00:17:58,250 --> 00:18:02,000
0,600 600,840 840,1260 1260,1770 1800,3750
transactions you using {scheme's -}

519
00:18:02,000 --> 00:18:02,810
0,0 0,420 420,570 570,630 630,810
are laid out in this

520
00:18:02,810 --> 00:18:03,480
0,270
light.

521
00:18:03,930 --> 00:18:05,130
0,120 120,210 210,390 390,480 480,1200
And so this is where

522
00:18:05,130 --> 00:18:08,370
0,300 780,1320 1320,2370 2640,2910 2910,3240
a consensus problem comes in

523
00:18:08,640 --> 00:18:11,010
0,1170 1230,1620 1620,1890 1890,2250 2250,2370
and sometimes people refer to

524
00:18:11,010 --> 00:18:12,450
0,120 120,570 570,870 870,1050 1050,1440
this solution here as the

525
00:18:12,480 --> 00:18:14,880
0,720 720,960 960,1380 1380,1860
nakamoto a consensus protocol.

526
00:18:15,610 --> 00:18:17,140
0,360 360,660 660,1140 1140,1380 1380,1530
Now before diving into that

527
00:18:17,140 --> 00:18:19,420
0,570 810,1290 1290,1590 1590,1860 1860,2280
protocol a want to sketch

528
00:18:19,420 --> 00:18:22,510
0,300 300,600 600,900 1410,2340 2340,3090
out you know possible, um

529
00:18:22,690 --> 00:18:24,340
0,510 510,750 750,1170 1200,1530 1530,1650
solutions that are not going

530
00:18:24,340 --> 00:18:25,720
0,60 60,480 750,1020 1020,1230 1230,1380
to work a just to

531
00:18:25,720 --> 00:18:27,190
0,480 480,510 510,750 750,1290 1290,1470
get a better sense, but

532
00:18:27,190 --> 00:18:28,660
0,150 150,390 390,540 540,1080 1080,1470
like what the challenges are

533
00:18:28,660 --> 00:18:32,650
0,900 1680,2160 2190,2970 2970,3540 3540,3990
Z A nakamoto consensus actually

534
00:18:32,650 --> 00:18:33,700
0,720
assaults.

535
00:18:35,860 --> 00:18:38,800
0,630 660,1140 1170,1710 1710,2100
So a design one.

536
00:18:39,720 --> 00:18:41,520
0,270 270,450 450,690 690,1350 1440,1800
There's not really design a

537
00:18:41,520 --> 00:18:42,690
0,210 210,390 390,570 570,690 690,1170
it's more sort of an

538
00:18:42,690 --> 00:18:44,400
0,450 450,840 840,990 990,1470 1470,1710
idea to think about, and

539
00:18:44,400 --> 00:18:47,280
0,270 270,810 1260,1710 2130,2430 2430,2880
then reject a design, one

540
00:18:47,280 --> 00:18:48,600
0,210 210,360 360,450 450,840 840,1320
may be the easiest design

541
00:18:48,600 --> 00:18:50,900
0,600 690,1050 1050,1860
is let's assume.

542
00:18:50,930 --> 00:18:51,980
0,270 270,480 480,600 600,660 660,1050
Um, we have the {server's

543
00:18:51,980 --> 00:18:53,630
0,300 420,960 960,1050 1050,1350 1350,1650
-} and the server actually

544
00:18:53,630 --> 00:18:55,040
0,150 150,600
just trusted.

545
00:18:58,120 --> 00:18:59,620
0,540 540,690 690,810 810,1410 1410,1500
Yeah, we have clients you

546
00:18:59,620 --> 00:19:01,180
0,150 150,510 510,660 660,1020
know that you know.

547
00:19:01,180 --> 00:19:02,950
0,150 150,300 300,420 420,1260 1260,1770
There should be transactions, whatever

548
00:19:02,950 --> 00:19:04,620
0,240 240,840
t six.

549
00:19:06,730 --> 00:19:08,500
0,900
Oops.

550
00:19:08,590 --> 00:19:11,560
0,660 870,1350 1350,1920 2550,2760 2760,2970
One two where X Y

551
00:19:11,560 --> 00:19:13,960
0,510 810,1530 1530,1980 1980,2160 2160,2400
Z A and they just

552
00:19:13,960 --> 00:19:15,340
0,300 300,420 420,510 510,960 960,1380
Miss you know these transactions

553
00:19:15,340 --> 00:19:17,590
0,960 1410,1620 1620,1800 1800,2190 2190,2250
to a to distrust the

554
00:19:17,590 --> 00:19:19,300
0,720 810,900 900,1020 1020,1380 1380,1710
server you know after we

555
00:19:19,300 --> 00:19:21,460
0,480 900,1200 1200,1680 1710,2100 2100,2160
all old clients trust the

556
00:19:21,460 --> 00:19:22,900
0,540 540,990 990,1050 1050,1320 1320,1440
server and the server can

557
00:19:22,900 --> 00:19:24,490
0,150 150,420 420,480 480,900 1200,1590
just produce a lot right

558
00:19:24,490 --> 00:19:25,450
0,150 150,300 300,390 390,870 870,960
with all the transactions in

559
00:19:25,450 --> 00:19:27,040
0,270
it.

560
00:19:27,220 --> 00:19:29,170
0,540 540,720 720,1050 1050,1200 1200,1950
And we awarded them appropriately

561
00:19:29,170 --> 00:19:32,680
0,180 180,390 390,930 2640,3150 3270,3510
at cetera, etc, so if

562
00:19:32,680 --> 00:19:34,450
0,150 150,720 750,1230 1230,1290 1290,1770
we assume there's a transfer

563
00:19:34,450 --> 00:19:35,350
0,210 210,300 300,510 510,570 570,900
and this problem is actually

564
00:19:35,350 --> 00:19:37,090
0,510 540,1110 1110,1170 1170,1500 1500,1740
reasonably straightforward to solve, and

565
00:19:37,090 --> 00:19:37,990
0,60 60,210 210,480 480,780 780,900
you know that's setting a

566
00:19:37,990 --> 00:19:38,890
0,270 270,420 420,600 600,660 660,900
Rim that we're in great

567
00:19:38,890 --> 00:19:41,080
0,420 960,1530 1530,1770 1770,1860 1860,2190
shape, a you know we

568
00:19:41,110 --> 00:19:42,910
0,630 630,690 690,1200 1200,1650 1650,1800
replicate the server using you

569
00:19:42,910 --> 00:19:44,200
0,180 180,360 360,870 870,1110 1110,1290
know some rafting type through

570
00:19:44,200 --> 00:19:46,960
0,90 90,750 1110,1860 1890,2550 2550,2760
a protocol and a yeah

571
00:19:46,960 --> 00:19:47,950
0,360 360,480 480,570 570,720 720,990
we'll have a full home

572
00:19:47,950 --> 00:19:50,110
0,540 630,1110 1470,1890 1890,2040 2040,2160
server a and you know

573
00:19:50,110 --> 00:19:51,520
0,240 240,330 330,540 540,1110 1110,1410
really the only downside to

574
00:19:51,520 --> 00:19:52,990
0,150 150,480 480,990 990,1320 1320,1470
this particular process is if

575
00:19:52,990 --> 00:19:54,370
0,60 60,390 390,690 690,870 870,1380
the clients could not agree

576
00:19:54,370 --> 00:19:56,080
0,270 270,300 300,630 630,1140 1290,1710
on a single trusted a

577
00:19:56,080 --> 00:19:58,330
0,510 990,1230 1230,1680 1680,1800 1920,2250
server and so an example

578
00:19:58,330 --> 00:19:59,590
0,90 90,150 150,420 420,660 660,1260
in the case of Bitcoin

579
00:19:59,590 --> 00:20:00,370
0,360 360,450 450,600 600,660 660,780
where you want to do

580
00:20:00,370 --> 00:20:02,470
0,780 1050,1500 1500,1590 1590,1710 1710,2100
transactions, um, you know maybe

581
00:20:02,470 --> 00:20:04,150
0,570 600,750 750,1410 1440,1500 1500,1680
the you know the rest

582
00:20:04,150 --> 00:20:05,410
0,60 60,120 120,270 270,420 420,1260
of the world going to

583
00:20:06,040 --> 00:20:07,330
0,390 390,450 450,690 690,1140 1140,1290
trust the us government to

584
00:20:07,330 --> 00:20:09,130
0,360 360,870 870,960 960,1290 1290,1800
actually implement the server correctly

585
00:20:09,130 --> 00:20:11,830
0,120 120,810 1110,1440 1440,2070 2100,2700
and produce a log and

586
00:20:11,830 --> 00:20:13,900
0,570 570,1110 1110,1260 1260,1650 1650,2070
a in that case, we're

587
00:20:13,900 --> 00:20:17,290
0,120 120,810 1170,2040 2820,3240 3240,3390
with multiple different clients because

588
00:20:17,290 --> 00:20:18,640
0,60 60,570 570,900 900,1320 1320,1350
you cannot read on a

589
00:20:18,640 --> 00:20:20,710
0,270 270,930 930,1320 1320,1860 1860,2070
trusted service, this disillusion, you

590
00:20:20,710 --> 00:20:21,500
0,510
deserve.

591
00:20:21,620 --> 00:20:22,920
0,210 210,300 300,750
Not for work.

592
00:20:24,100 --> 00:20:25,930
0,150 150,300 300,750 780,1260 1260,1830
So that's one a solution

593
00:20:25,930 --> 00:20:27,940
0,360 360,1230 1230,1350 1350,1590 1590,2010
a it's the easy one,

594
00:20:27,940 --> 00:20:29,140
0,450 450,540 540,600 600,930 930,1200
but in the case of

595
00:20:29,230 --> 00:20:31,480
0,450 450,1110 1110,1440 1440,1680 1980,2250
a decentralized design where there's

596
00:20:31,480 --> 00:20:33,430
0,330 330,660 660,1140 1140,1410 1410,1950
no trust any central component,

597
00:20:33,580 --> 00:20:34,510
0,360 360,540 540,660 660,870 870,930
a this is not a

598
00:20:34,510 --> 00:20:37,340
0,690 1230,1710 1710,2070
workable solution so.

599
00:20:37,520 --> 00:20:39,380
0,270 270,600 600,750 750,1560 1560,1860
So now we consider using

600
00:20:39,380 --> 00:20:40,670
0,180 180,300 300,540 540,960 960,1290
sort of the more summer

601
00:20:40,670 --> 00:20:42,420
0,420 450,1350
like approach.

602
00:20:42,680 --> 00:20:44,810
0,930 930,1230 1230,1800 1800,1920 1920,2130
Modified scheme slightly and say

603
00:20:44,810 --> 00:20:45,890
0,240 240,510 510,810 810,900 900,1080
like okay good, we know

604
00:20:45,890 --> 00:20:47,150
0,270 270,450 450,570 570,900 900,1260
actually how to deal with

605
00:20:47,180 --> 00:20:48,920
0,510 510,1110 1140,1380 1380,1620 1620,1740
untrusted servers, in fact we

606
00:20:48,920 --> 00:20:49,610
0,120 120,180 180,450 450,600 600,690
wrote a paper about it

607
00:20:49,610 --> 00:20:52,190
0,270 270,630 930,1320 1320,1890 2040,2580
last week and so let's

608
00:20:52,190 --> 00:20:53,570
0,270 270,420 420,810 810,1140 1140,1380
assume that these servers actually

609
00:20:53,570 --> 00:20:54,700
0,510
interested.

610
00:20:55,200 --> 00:20:56,820
0,510 510,630 630,840 840,1410 1410,1620
Yeah you know basically you

611
00:20:56,820 --> 00:20:59,010
0,300 300,420 420,720 720,1230 1380,2190
play the summer game clients

612
00:20:59,040 --> 00:21:00,750
0,600 600,690 690,1410 1440,1620 1620,1710
produce the logs we eat

613
00:21:00,750 --> 00:21:01,890
0,90 90,390 390,510 510,570 570,1140
the logs from the server

614
00:21:01,890 --> 00:21:03,420
0,210 210,330 330,750 750,960 960,1530
and their records through the

615
00:21:03,480 --> 00:21:04,770
0,360 360,690 690,1050 1050,1170 1170,1290
console painter records to the

616
00:21:04,770 --> 00:21:06,630
0,480 600,1050 1050,1590 1680,1770 1770,1860
log submitted back to the

617
00:21:06,630 --> 00:21:08,010
0,660 750,960 960,1020 1020,1320 1320,1380
server, so the server is

618
00:21:08,010 --> 00:21:09,600
0,510 510,780 780,1020 1020,1260 1260,1590
basically do almost nothing else

619
00:21:09,600 --> 00:21:11,760
0,180 180,840 840,1470 1500,1920 1920,2160
that's relaying logs between different

620
00:21:11,760 --> 00:21:12,740
0,630
clients.

621
00:21:13,220 --> 00:21:15,290
0,450 720,990 990,1530 1530,1890 1890,2070
And we've seen last week

622
00:21:15,290 --> 00:21:17,270
0,240 240,420 420,930 930,1320 1320,1980
that actually approach works really

623
00:21:17,270 --> 00:21:19,550
0,480 810,1530 1530,2070 2070,2190 2190,2280
well, um, it can be

624
00:21:19,550 --> 00:21:21,590
0,690 690,1320 1320,1440 1440,1710 1710,2040
used, but you know it

625
00:21:21,590 --> 00:21:23,900
0,540 630,1350 1440,2070 2070,2220 2220,2310
has one shortcoming as we

626
00:21:23,900 --> 00:21:25,940
0,450 480,1020 1020,1110 1110,1500 1500,2040
saw namely the server can

627
00:21:25,970 --> 00:21:28,790
0,750 930,1560 1560,2310 2550,2700 2700,2820
present {200,,m} views of the

628
00:21:28,790 --> 00:21:30,620
0,390 420,900 900,1290 1290,1710 1710,1830
world by basically forking the

629
00:21:30,620 --> 00:21:32,030
0,420 630,810 810,1110 1110,1170 1170,1410
law so maybe the law

630
00:21:32,030 --> 00:21:33,560
0,210 210,390 390,1110 1350,1470 1470,1530
has some prefix, you know

631
00:21:33,560 --> 00:21:34,280
0,180 180,240 240,330 330,510 510,720
one of the p one

632
00:21:34,280 --> 00:21:35,720
0,150 150,510 510,810 810,1020 1020,1440
two five six six seven

633
00:21:35,900 --> 00:21:38,030
0,480 480,780 780,960 960,1470 1500,2130
but now it has th

634
00:21:38,030 --> 00:21:39,830
0,120 120,300 300,810 1020,1560 1560,1800
in this one and has

635
00:21:39,830 --> 00:21:40,980
0,300 300,780
another log.

636
00:21:41,250 --> 00:21:42,990
0,270 270,600 600,810 810,1020 1020,1740
Which indeed has t seven

637
00:21:43,740 --> 00:21:45,960
0,90 90,720 1080,1740 1800,2040 2040,2220
two do and ti a

638
00:21:45,960 --> 00:21:47,020
0,420
crime.

639
00:21:47,280 --> 00:21:49,290
0,390 390,840 960,1140 1140,1440 1440,2010
America and so one fork,

640
00:21:49,320 --> 00:21:50,070
0,150 150,270 270,480 480,660 660,750
you know we've got our

641
00:21:50,070 --> 00:21:51,450
0,600 630,780 780,870 870,1050 1050,1380
th on the other fork

642
00:21:51,450 --> 00:21:53,670
0,240 240,600 600,1140 1470,1830 1830,2220
we've th prime and now

643
00:21:53,670 --> 00:21:56,430
0,1800 1830,2010 2010,2430 2430,2610 2610,2760
like we became {re-or -}

644
00:21:56,430 --> 00:21:59,520
0,450 450,510 510,660 660,1800 2280,3090
settling in one particular a

645
00:21:59,580 --> 00:22:01,980
0,540 570,1200 1440,1920 1920,2070 2070,2400
fork and a the server

646
00:22:01,980 --> 00:22:03,240
0,150 150,240 240,1080 1080,1140 1140,1260
sort of persistently you know

647
00:22:03,240 --> 00:22:04,590
0,270 270,360 360,540 540,840 840,1350
keeps the two worlds apart

648
00:22:04,590 --> 00:22:06,720
0,300 300,630 630,960 1680,2070 2070,2130
lecture, why is Jesus in

649
00:22:06,720 --> 00:22:07,800
0,240 240,480 480,570 570,660 660,1080
one area of the world

650
00:22:07,830 --> 00:22:09,060
0,360 360,690 690,750 750,840 840,1230
accuse another in the world,

651
00:22:09,480 --> 00:22:11,730
0,1410 1410,1620 1620,1830 1830,1920 1920,2250
why always gets the first

652
00:22:11,730 --> 00:22:14,400
0,210 210,750 750,1320 1560,2250 2250,2670
serve blog {and -} a

653
00:22:14,400 --> 00:22:15,120
0,90 90,240 240,300 300,540 540,720
zio's gets the second one

654
00:22:15,120 --> 00:22:16,200
0,420 420,750 750,840 840,960 960,1080
lock marching the other way

655
00:22:16,200 --> 00:22:18,930
0,450 750,1080 1110,1680 1770,2490 2490,2730
around, um, then, um, you

656
00:22:18,930 --> 00:22:19,560
0,360
know.

657
00:22:19,650 --> 00:22:20,940
0,300 300,570 570,780 780,1110 1110,1290
Then they will pretend there's

658
00:22:20,940 --> 00:22:22,350
0,240 240,450 450,1020 1020,1260 1260,1410
okay good yeah, there's no

659
00:22:22,350 --> 00:22:24,870
0,270 270,600 600,1110 1110,1920 2190,2520
money earlier spending 97 a

660
00:22:24,870 --> 00:22:26,940
0,900 900,1080 1080,1380 1380,1650 1650,2070
in this lock, so guarantee

661
00:22:26,940 --> 00:22:28,770
0,420 420,600 600,810 810,1080 1080,1830
a queue will actually accept

662
00:22:28,980 --> 00:22:30,990
0,90 90,480 660,1440 1470,1950 1950,2010
you know th prime in

663
00:22:30,990 --> 00:22:32,520
0,150 150,660 930,1200 1200,1380 1380,1530
this world, and he or

664
00:22:32,520 --> 00:22:33,870
0,450 480,720 720,1200 1200,1260 1260,1350
she will accept you know

665
00:22:33,870 --> 00:22:35,910
0,600 720,900 900,1110 1110,1470 1470,2040
th and so why succeeded

666
00:22:35,910 --> 00:22:37,760
0,90 90,390 390,600 600,990
in actually double spending.

667
00:22:38,570 --> 00:22:40,970
0,510 750,1440 1560,1860 1860,2160 2160,2400
So, um, this design doesn't

668
00:22:40,970 --> 00:22:43,310
0,540 720,1470 1470,1560 1560,1920 1920,2340
work for the particular problem

669
00:22:43,310 --> 00:22:45,140
0,330 330,780 960,1530 1530,1650 1650,1830
at hand, um, we need

670
00:22:45,140 --> 00:22:46,520
0,240 240,960 960,1080 1080,1170 1170,1380
some solution and is where

671
00:22:46,520 --> 00:22:47,870
0,60 60,510 510,720 720,990 1140,1350
the consensus comes in we

672
00:22:47,870 --> 00:22:49,160
0,120 120,270 270,840 840,930 930,1290
need some solution that basically

673
00:22:49,160 --> 00:22:51,800
0,570 600,1020 1080,1530 1530,2160 2340,2640
for the interested clients to

674
00:22:51,800 --> 00:22:53,120
0,390 390,480 480,660 660,750 750,1320
basically be able to settle

675
00:22:53,120 --> 00:22:54,830
0,360 360,1020 1020,1110 1110,1230 1230,1710
on which you know fork,

676
00:22:54,830 --> 00:22:56,620
0,150 150,600
they are.

677
00:22:57,800 --> 00:22:59,560
0,330 330,900
Okay two.

678
00:22:59,560 --> 00:23:01,000
0,510 660,840 840,1290 1290,1410 1410,1440
In so let's think a

679
00:23:01,000 --> 00:23:02,140
0,180 180,300 300,510 510,750 750,1140
little bit about that so

680
00:23:02,170 --> 00:23:03,670
0,180 180,360 360,630 630,1080 1260,1500
so think about more much

681
00:23:03,670 --> 00:23:05,350
0,120 120,630 630,990 990,1560 1560,1680
more decentralized design, we're going

682
00:23:05,350 --> 00:23:06,970
0,390 420,930 930,990 990,1440 1440,1620
to replace the server with

683
00:23:06,970 --> 00:23:08,620
0,30 30,450 450,510 510,1170
a network of computers.

684
00:23:09,110 --> 00:23:10,680
0,330 330,630 630,990
He misses her.

685
00:23:10,900 --> 00:23:11,920
0,180 180,450 450,720 720,900 900,1020
And this goes sort of

686
00:23:11,920 --> 00:23:13,720
0,420 480,810 810,1230 1230,1440 1440,1800
to get closure to the

687
00:23:13,750 --> 00:23:16,000
0,450 450,900 900,1380 1560,1770 1770,2250
Bitcoin design where there's indeed

688
00:23:16,000 --> 00:23:19,150
0,90 90,750 780,1470 1650,2430 2760,3150
a network of peers, um

689
00:23:19,150 --> 00:23:21,580
0,360 360,600 600,1440 1470,2040 2070,2430
that's all collaborate to together,

690
00:23:21,580 --> 00:23:23,530
0,120 120,270 270,1260 1320,1890 1890,1950
if you should provide you

691
00:23:23,530 --> 00:23:25,690
0,120 120,660 930,1230 1230,1560 1560,2160
know this a single log,

692
00:23:25,720 --> 00:23:26,770
0,360 360,690 690,780 780,930 930,1050
although even though some of

693
00:23:26,770 --> 00:23:28,180
0,90 90,570 570,840 840,1140 1170,1410
the participants actually might be

694
00:23:28,180 --> 00:23:29,170
0,210 210,630 630,840 840,900 900,990
my assistant tried to do

695
00:23:29,170 --> 00:23:30,490
0,240 240,600 810,930 930,1050 1050,1320
something different and so basically

696
00:23:30,490 --> 00:23:31,450
0,60 60,390 390,480 480,750 750,960
the idea is that when

697
00:23:31,450 --> 00:23:33,280
0,60 60,390 390,870 870,1080
a client detonating it.

698
00:23:33,700 --> 00:23:37,120
0,570 630,990 990,1710 2400,2670 2670,3420
A creative transaction, no introduction

699
00:23:37,120 --> 00:23:39,970
0,90 90,720 840,1470 1470,2010 2040,2850
is distributed across a network

700
00:23:40,480 --> 00:23:42,380
0,420 420,960
of pierce.

701
00:23:42,470 --> 00:23:43,520
0,120 120,300 300,630 630,840 840,1050
In fact decline, one might

702
00:23:43,520 --> 00:23:45,290
0,120 120,180 180,420 420,960 1470,1770
be a pure himself, so

703
00:23:45,290 --> 00:23:46,280
0,90 90,600 600,780 780,930 930,990
the transaction is going to

704
00:23:46,280 --> 00:23:47,880
0,240 240,810
spread around.

705
00:23:50,720 --> 00:23:53,240
0,630 660,1080 1080,1320 1320,2160 2190,2520
And a yeah everybody every

706
00:23:53,270 --> 00:23:54,710
0,480 480,660 660,720 720,1020 1020,1440
node in the network actually

707
00:23:54,710 --> 00:23:57,470
0,420 420,480 480,990 1650,2370 2370,2760
maintains a log yeah attends

708
00:23:57,470 --> 00:23:58,820
0,180 180,270 270,870 870,1170 1170,1350
to the dejection to its

709
00:23:58,820 --> 00:23:59,920
0,450
log.

710
00:24:03,760 --> 00:24:06,520
0,630 1110,2070 2130,2430 2430,2520 2520,2760
And the problem that we

711
00:24:06,550 --> 00:24:07,660
0,150 150,480 480,720 720,960 960,1110
have left is like I

712
00:24:07,660 --> 00:24:08,320
0,120 120,180 180,450 450,540 540,660
have to agree on an

713
00:24:08,320 --> 00:24:09,300
0,450
order.

714
00:24:18,560 --> 00:24:20,080
0,960
AW.

715
00:24:20,440 --> 00:24:21,760
0,420 420,570 570,720 720,1020 1080,1320
And you know we we

716
00:24:21,760 --> 00:24:22,990
0,210 210,330 330,930 930,1050 1050,1230
actually have seen these kind

717
00:24:22,990 --> 00:24:24,580
0,90 90,720 720,900 900,1410 1410,1590
of systems there before like

718
00:24:24,580 --> 00:24:25,960
0,600 600,1080 1080,1140 1140,1290 1290,1380
infecting raft, you know we

719
00:24:25,960 --> 00:24:27,700
0,180 180,480 480,1080 1140,1620 1620,1740
had multiple computers and they

720
00:24:27,700 --> 00:24:28,660
0,240 240,480 480,540 540,780 780,960
were able to agree on

721
00:24:28,660 --> 00:24:30,190
0,360 390,690 690,1140 1140,1230 1230,1530
order right and the basic

722
00:24:30,190 --> 00:24:31,780
0,450 1050,1170 1170,1470 1470,1530 1530,1590
trick was used as a

723
00:24:31,780 --> 00:24:34,210
0,240 240,840 840,1140 1140,1800 1980,2430
basic insight into basically a

724
00:24:34,210 --> 00:24:35,980
0,570 570,720 720,1260 1260,1500 1500,1770
computer, some majority and have

725
00:24:35,980 --> 00:24:37,720
0,60 60,510 510,660 660,1230 1230,1740
a majority of nodes agree

726
00:24:37,990 --> 00:24:39,220
0,330 330,540 540,1050 1050,1110 1110,1230
a in slot, you know

727
00:24:39,220 --> 00:24:40,840
0,420 420,570 570,720 720,1110 1110,1620
six is gonna be transaction

728
00:24:40,840 --> 00:24:43,000
0,240 240,690 690,1080 1080,1650 1710,2160
t eight and in slot

729
00:24:43,000 --> 00:24:43,840
0,360 360,480 480,600 600,690 690,840
seven is going to be

730
00:24:43,840 --> 00:24:44,820
0,180 180,570
a trial.

731
00:24:46,040 --> 00:24:48,220
0,660 840,1560
And the.

732
00:24:48,740 --> 00:24:50,330
0,270 270,630 630,840 840,1230 1230,1590
And that works great great,

733
00:24:50,330 --> 00:24:52,460
0,600 600,1020 1020,1140 1140,1530 1530,2130
um, if we know exactly

734
00:24:52,460 --> 00:24:53,450
0,180 180,420 420,720 720,870 870,990
how many notes are in

735
00:24:53,450 --> 00:24:54,460
0,60 60,450
the system.

736
00:24:54,660 --> 00:24:55,980
0,480 480,690 690,900 900,1050 1050,1320
Um, we know there's five

737
00:24:55,980 --> 00:24:57,870
0,210 210,270 270,330 330,900 1230,1890
notes in the system, a

738
00:24:57,900 --> 00:24:59,400
0,420 420,750 750,930 930,1020 1020,1500
new and then the majority

739
00:24:59,400 --> 00:25:01,260
0,90 90,570 570,930 930,1260 1260,1860
is free and we receive

740
00:25:01,260 --> 00:25:03,720
0,540 540,1020 1050,1950 2160,2310 2310,2460
responsible free participants, you know

741
00:25:03,720 --> 00:25:04,560
0,120 120,390 390,600 600,720 720,840
we know okay, we can

742
00:25:04,560 --> 00:25:06,840
0,390 390,690 690,1020 1020,1470 2070,2280
commit that particular swamp and

743
00:25:06,840 --> 00:25:08,040
0,90 90,480 480,750 750,1110 1110,1200
the problem really here is

744
00:25:08,040 --> 00:25:09,150
0,120 120,270 270,390 390,480 480,1110
that this is a decentralized

745
00:25:09,150 --> 00:25:12,460
0,450 480,780 780,1260 1260,1710
system that's completely open.

746
00:25:12,980 --> 00:25:15,320
0,300 300,930 1020,1500 1530,2130 2130,2340
The system a notable even

747
00:25:15,320 --> 00:25:17,330
0,630 750,1260 1260,1650 1650,1920 1920,2010
a male even come in

748
00:25:17,330 --> 00:25:18,440
0,210 210,570 570,720 720,780 780,1110
any particular point of time

749
00:25:18,440 --> 00:25:20,060
0,90 90,600 600,720 720,990 990,1620
and there is no list

750
00:25:20,090 --> 00:25:21,530
0,210 210,360 360,480 480,1020 1020,1440
of all the participants system,

751
00:25:21,800 --> 00:25:24,170
0,480 510,750 750,1110 1110,1950 1950,2370
so there's also no clear

752
00:25:24,170 --> 00:25:25,010
0,210 210,480 480,660 660,780 780,840
what actually what is a

753
00:25:25,010 --> 00:25:26,540
0,570 690,990 990,1050 1050,1350 1350,1530
majority in the system like

754
00:25:26,540 --> 00:25:27,400
0,330
that.

755
00:25:29,280 --> 00:25:31,980
0,930 960,1380 1470,2160 2160,2280 2280,2700
Um, yeah, because it's completely

756
00:25:31,980 --> 00:25:33,180
0,360 570,750 750,900 900,1110 1110,1200
open so it's like the

757
00:25:33,180 --> 00:25:34,620
0,330 330,390 390,450 450,990 990,1440
notion of the majority's completely

758
00:25:34,620 --> 00:25:36,560
0,180 180,270 270,630
able to find.

759
00:25:36,590 --> 00:25:37,760
0,480 660,780 780,900 900,990 990,1170
So you know we need

760
00:25:37,760 --> 00:25:39,440
0,450 480,1200 1200,1380 1380,1620 1620,1680
some sort of like a

761
00:25:39,440 --> 00:25:41,360
0,540 540,1200 1200,1650 1650,1860 1860,1920
short usual gamer sort of

762
00:25:41,360 --> 00:25:43,610
0,450 690,1380 1380,1470 1470,1530 1530,2250
doing voting on a majority

763
00:25:43,610 --> 00:25:45,590
0,690 690,1290 1290,1620 1620,1680 1680,1980
and then accept the result

764
00:25:45,590 --> 00:25:46,760
0,60 60,150 150,690 840,990 990,1170
of the majority is not

765
00:25:46,760 --> 00:25:48,230
0,120 120,540 570,810 810,1140 1230,1470
going to play out and

766
00:25:48,230 --> 00:25:49,760
0,180 180,390 390,540 540,840
so this is the.

767
00:25:49,760 --> 00:25:51,230
0,390 390,660 660,810 810,900 900,1470
The game is a raft,

768
00:25:51,230 --> 00:25:51,890
0,60 60,180 180,390 390,510 510,660
you know even though it's

769
00:25:51,890 --> 00:25:53,450
0,30 30,420 420,1080 1170,1410 1410,1560
a consensus protocol not gonna

770
00:25:53,450 --> 00:25:54,620
0,240 240,450 450,750 750,1080 1080,1170
really work out because you

771
00:25:54,620 --> 00:25:56,870
0,510 900,1290 1290,1740 1740,1950 1950,2250
know a descending we're dealing

772
00:25:56,870 --> 00:25:58,490
0,600 600,690 690,1050 1050,1200 1200,1620
if it is a decent

773
00:25:58,490 --> 00:26:00,530
0,330 330,750 780,1290 1290,1680 1890,2040
life open distributed system as

774
00:26:00,530 --> 00:26:01,910
0,360 360,570 570,690 690,1020 1020,1380
opposed to a closed system

775
00:26:01,910 --> 00:26:02,960
0,180 180,300 300,690 690,930 930,1050
as in the setting of

776
00:26:02,960 --> 00:26:03,880
0,450
raft.

777
00:26:07,520 --> 00:26:08,810
0,180 180,330 330,510 510,990 1080,1290
Does this make sense so

778
00:26:08,810 --> 00:26:09,800
0,450
far.

779
00:26:10,800 --> 00:26:11,520
0,210 210,330 330,600 600,690 690,720
Let me pause for a

780
00:26:11,520 --> 00:26:12,930
0,330 330,810 840,1110 1110,1290 1290,1410
second before getting into the

781
00:26:12,930 --> 00:26:14,440
0,180 180,540 540,960
more technical part.

782
00:26:20,980 --> 00:26:22,300
0,510
Alright.

783
00:26:26,060 --> 00:26:29,090
0,450 480,1740 2040,2310 2310,2580 2580,3030
Okay, so how does Bitcoin

784
00:26:29,090 --> 00:26:31,080
0,240 240,360 360,780
solve this problem.

785
00:26:34,270 --> 00:26:36,520
0,450 450,870 870,1080 1080,1620 1620,2250
And the key idea is

786
00:26:36,550 --> 00:26:37,810
0,330 330,570 570,660 660,750 750,1260
a something that is called

787
00:26:37,810 --> 00:26:40,080
0,90 90,540 540,1020
the approval work.

788
00:26:44,980 --> 00:26:48,160
0,660 720,1680 1680,2310 2490,2910 2910,3180
A basically the rule is

789
00:26:48,160 --> 00:26:50,380
0,480 840,1590
that a.

790
00:26:50,940 --> 00:26:52,280
0,360 360,810
There's a.

791
00:26:52,340 --> 00:26:54,200
0,120 120,420 420,990 1020,1560 1560,1860
I might work a note

792
00:26:54,200 --> 00:26:55,550
0,210 210,300 300,690 690,990 990,1350
needs to do to actually

793
00:26:55,550 --> 00:26:57,290
0,150 150,450 450,540 540,1260 1440,1740
be able to extend the

794
00:26:57,290 --> 00:27:01,670
0,510 990,2400 2940,3540 3900,4080 4080,4380
law and in the basic

795
00:27:01,670 --> 00:27:03,140
0,300 300,420 420,690 690,840 840,1470
rule is that the winner.

796
00:27:05,170 --> 00:27:07,450
0,480 480,1290 1290,1500 1500,1590 1590,2280
A inch through the work

797
00:27:09,670 --> 00:27:11,080
0,510 510,660 660,990 990,1080 1080,1410
machine is able to solve

798
00:27:11,080 --> 00:27:14,230
0,90 90,660 960,1860 1950,2370 2370,3150
the puzzle, first it decides

799
00:27:14,260 --> 00:27:15,610
0,300 300,390 390,720 720,960 960,1350
on the next blog entry.

800
00:27:25,590 --> 00:27:28,050
0,510 570,1020 1020,1980 1980,2130 2130,2460
And, um, in the basic

801
00:27:28,050 --> 00:27:29,040
0,240 240,360 360,510 510,780 780,990
idea that this might you

802
00:27:29,040 --> 00:27:30,270
0,210 210,480 480,660 660,780 780,1230
might actually get some intuition,

803
00:27:30,270 --> 00:27:31,320
0,180 180,390 390,630 630,810 810,1050
why this action will work

804
00:27:31,320 --> 00:27:33,660
0,390 690,1050 1050,1350 1350,1740 1740,2340
out is because basically hard

805
00:27:33,660 --> 00:27:35,800
0,90 90,690 690,780 780,1200
to impersonate the winner.

806
00:27:44,460 --> 00:27:45,570
0,150 150,390 390,810 810,1020 1020,1110
To actually solve for the

807
00:27:45,570 --> 00:27:48,510
0,570 570,930 930,1290 1290,1800 1890,2940
particular improve work puzzle a

808
00:27:48,630 --> 00:27:50,610
0,540 540,750 750,1560 1620,1800 1800,1980
that needs to be able

809
00:27:50,610 --> 00:27:51,480
0,90 90,300 300,390 390,480 480,870
to add to the law

810
00:27:51,600 --> 00:27:53,250
0,270 270,660 660,810 810,1020 1020,1650
actually requires a real computer,

811
00:27:53,400 --> 00:27:55,500
0,480 480,660 660,1380 1380,1890 1890,2100
um, in a month getting

812
00:27:55,500 --> 00:27:57,300
0,390 390,750 750,870 870,1290 1290,1800
roughly a few compute time,

813
00:27:57,540 --> 00:27:59,400
0,570 570,870 870,1380 1380,1770 1770,1860
um to actually solve the

814
00:27:59,400 --> 00:28:01,020
0,420 510,870 870,1260 1380,1530 1530,1620
problem and so if you

815
00:28:01,020 --> 00:28:02,010
0,90 90,420 420,510 510,930 930,990
can solve and demonstrate you

816
00:28:02,010 --> 00:28:03,210
0,210 210,270 270,660 660,990 990,1200
solve the problem, you know

817
00:28:03,210 --> 00:28:04,350
0,90 90,450 450,570 570,930 930,1140
for sure that somebody actually

818
00:28:04,350 --> 00:28:05,280
0,240 240,270 270,570 570,630 630,930
spent a month of work

819
00:28:05,280 --> 00:28:07,890
0,210 210,480 1230,1770 2040,2460 2460,2610
actually doing and this is

820
00:28:07,890 --> 00:28:09,690
0,180 180,270 270,750 750,1110 1110,1800
sort of enough of to

821
00:28:09,690 --> 00:28:10,880
0,750
a.

822
00:28:12,120 --> 00:28:13,230
0,330 390,840 840,930 930,1020 1020,1110
A prince, you know the

823
00:28:13,230 --> 00:28:14,340
0,180 180,240 240,330 330,780 780,1110
rest of the system that

824
00:28:14,340 --> 00:28:17,820
0,120 120,270 270,420 420,2220 3030,3480
you know there's a um

825
00:28:17,850 --> 00:28:19,980
0,570 570,1110 1110,1410 1410,1650 1650,2130
real resources were actually spent

826
00:28:20,250 --> 00:28:22,410
0,570 570,1290 1350,1890 1890,2040 2040,2160
to a pen to be

827
00:28:22,410 --> 00:28:23,460
0,210 210,300 300,630 630,750 750,1050
able to attend to the

828
00:28:23,460 --> 00:28:25,950
0,300 300,660 1230,1890 2070,2370 2370,2490
log entry and and you

829
00:28:25,950 --> 00:28:26,850
0,90 90,330 330,480 480,540 540,900
can maybe think of others

830
00:28:26,850 --> 00:28:27,960
0,150 150,240 240,720 720,810 810,1110
like the schemes are like

831
00:28:27,960 --> 00:28:30,930
0,660 660,990 1860,2190 2190,2490 2490,2970
wherever u unique IP addresses

832
00:28:30,930 --> 00:28:31,620
0,90 90,300 300,450 450,600 600,690
or things like that, but

833
00:28:31,620 --> 00:28:32,340
0,150 150,330 330,450 450,540 540,720
all those kind of things

834
00:28:32,340 --> 00:28:34,140
0,120 120,330 330,570 570,990 990,1800
can be actually easily falsified

835
00:28:34,530 --> 00:28:36,810
0,450 450,720 720,1290 1410,1920 1920,2280
a and so um, it's

836
00:28:36,810 --> 00:28:37,800
0,150 150,210 210,420 420,510 510,990
sort of proof of work

837
00:28:37,800 --> 00:28:38,850
0,480 480,630 630,810 810,900 900,1050
idea is sort of your

838
00:28:38,850 --> 00:28:41,850
0,720 1020,1170 1170,1890 1890,2430 2460,3000
core to demonstrate that a

839
00:28:41,850 --> 00:28:43,590
0,300 300,1200 1200,1320 1320,1440 1440,1740
yeah actually you know put

840
00:28:43,590 --> 00:28:45,450
0,90 90,480 510,930 930,1380 1380,1860
a month effort into actually,

841
00:28:45,450 --> 00:28:48,420
0,360 720,1530 1530,1560 1560,2460 2610,2970
um, ah, um to figure

842
00:28:48,420 --> 00:28:49,110
0,90 90,240 240,300 300,510 510,690
out what the next door

843
00:28:49,110 --> 00:28:50,820
0,120 120,450 450,540 540,750 750,1710
to compute b able to

844
00:28:50,850 --> 00:28:51,780
0,240 240,420 420,540 540,810 810,930
be able to paint a

845
00:28:51,780 --> 00:28:53,730
0,330 330,630 630,840 840,1230 1350,1950
log entry to the blog.

846
00:28:55,070 --> 00:28:56,100
0,780
Walk.

847
00:28:57,070 --> 00:28:58,870
0,810 840,1020 1020,1470 1470,1650 1650,1800
One you just get that

848
00:28:58,870 --> 00:29:01,000
0,510 510,900 900,1200 1200,2040 2040,2130
immediately outweigh wanna downside of

849
00:29:01,000 --> 00:29:03,140
0,210 210,660 660,960 960,1680
this approval work approach.

850
00:29:03,290 --> 00:29:04,940
0,420 420,600 600,720 720,1020 1050,1650
Is that it actually waste

851
00:29:04,940 --> 00:29:06,700
0,390
energy.

852
00:29:11,150 --> 00:29:13,070
0,180 180,270 270,630 630,930 930,1920
And in fact if your

853
00:29:13,130 --> 00:29:15,590
0,660 660,930 930,1110 1110,1860 1920,2460
bitcoins become so successful that

854
00:29:15,590 --> 00:29:16,370
0,30 30,270 270,330 330,570 570,780
a lot of people are

855
00:29:16,370 --> 00:29:17,570
0,330 330,690 690,1020 1020,1110 1110,1200
down there are you know

856
00:29:17,570 --> 00:29:18,800
0,360 360,480 480,630 630,870 900,1230
mining and doing this proof

857
00:29:18,800 --> 00:29:20,960
0,90 90,510 870,1170 1170,1620 1620,2160
of work, um that the

858
00:29:20,990 --> 00:29:22,910
0,390 390,840 840,990 990,1290 1290,1920
energy Bill on energy consumption

859
00:29:23,180 --> 00:29:26,270
0,930 930,1200 1200,1560 1560,1950 2160,3090
a of all the combined

860
00:29:26,300 --> 00:29:28,610
0,390 390,900 930,1200 1200,1650 1650,2310
miners together is incredibly significant,

861
00:29:28,730 --> 00:29:31,700
0,750 750,990 990,1860 2280,2760 2760,2970
um, it's huge, um, and

862
00:29:31,700 --> 00:29:34,010
0,450 480,900 900,1350 1650,1890 1890,2310
so, um, um, play downside

863
00:29:34,010 --> 00:29:35,660
0,60 60,210 210,600 600,780 780,1650
of this approach is a

864
00:29:35,690 --> 00:29:36,840
0,330 330,390 390,810
waste of energy.

865
00:29:37,800 --> 00:29:40,620
0,300 300,870 900,1470 1470,2490 2490,2820
A in recent years there

866
00:29:40,620 --> 00:29:43,140
0,180 180,300 300,810 810,1860 2160,2520
have been other a crypto

867
00:29:43,140 --> 00:29:45,240
0,540 540,690 690,1140 1140,1740 1830,2100
currencies or other designs that

868
00:29:45,240 --> 00:29:46,170
0,90 90,420 420,540 540,660 660,930
are based on a different

869
00:29:46,170 --> 00:29:47,430
0,630 630,930 930,1020 1020,1200 1200,1260
idea instead of proof of

870
00:29:47,430 --> 00:29:48,600
0,360 360,570 570,780 780,1080 1080,1170
work, they're actually based on

871
00:29:48,600 --> 00:29:49,530
0,240 240,390 390,630 630,840 840,930
something else called proof of

872
00:29:49,530 --> 00:29:50,960
0,510
stake.

873
00:29:56,560 --> 00:29:57,850
0,270 270,630 630,810 810,1080 1080,1290
Um, and this basically sort

874
00:29:57,850 --> 00:29:59,110
0,450 450,720 720,1020 1020,1170 1170,1260
of game there is you

875
00:29:59,110 --> 00:30:00,400
0,450 450,630 630,840 840,1110 1110,1290
know let's say only {3%

876
00:30:00,400 --> 00:30:02,500
0,540 570,1260 1290,1410 1410,1560 1560,2100
-} of you know the

877
00:30:02,530 --> 00:30:05,560
0,720 930,1650 1650,1830 1830,2010 2010,3030
currency, then you get to

878
00:30:05,650 --> 00:30:07,540
0,270 270,660 660,1530 1530,1740 1740,1890
a because {your -} own

879
00:30:07,540 --> 00:30:09,790
0,450 450,630 630,780 780,1380 1500,2250
3%, you can actually {decide

880
00:30:09,790 --> 00:30:11,170
0,120 120,360 360,600 600,810 810,1380
-} you know for 3%

881
00:30:11,200 --> 00:30:12,670
0,270 270,480 480,780 780,1350 1350,1470
of the log entries, you

882
00:30:12,670 --> 00:30:13,630
0,270 270,570 570,780 780,840 840,960
know which ones are going

883
00:30:13,630 --> 00:30:14,780
0,90 90,180 180,750
to be dependent.

884
00:30:15,600 --> 00:30:17,730
0,180 180,420 420,810 1620,2070 2070,2130
And so the is a

885
00:30:17,730 --> 00:30:19,380
0,330 330,600 600,1080 1080,1380 1380,1650
completely different approach that doesn't

886
00:30:19,380 --> 00:30:23,010
0,1110 1140,1770 1800,2550 2730,3270 3270,3630
require a solving computational intensive

887
00:30:23,010 --> 00:30:25,770
0,570 810,1440 1440,2070 2250,2490 2490,2760
puzzles, um, and um, it

888
00:30:25,770 --> 00:30:27,600
0,270 270,780 780,1230 1260,1620 1620,1830
seems to um get quite

889
00:30:27,600 --> 00:30:29,940
0,30 30,180 180,270 270,930 1740,2340
a bit of affection attention,

890
00:30:29,940 --> 00:30:32,310
0,540 540,840 840,1440 1500,2220 2220,2370
and there are cryptocurrencies that

891
00:30:32,310 --> 00:30:33,780
0,180 180,360 750,1080 1080,1260 1260,1470
use it and in fact

892
00:30:33,780 --> 00:30:34,410
0,60 60,270 270,390 390,540 540,630
it looks like one of

893
00:30:34,410 --> 00:30:35,970
0,90 90,360 360,960 960,1260 1260,1560
the more major ones, um

894
00:30:36,090 --> 00:30:38,250
0,510 720,1140 1140,1200 1200,1410 1410,2160
era seems to be slated,

895
00:30:38,250 --> 00:30:39,510
0,450 480,690 690,780 780,840 840,1260
we're going in the direction

896
00:30:39,510 --> 00:30:40,650
0,180 180,390 390,630 630,690 690,1140
of a proof of stake

897
00:30:40,680 --> 00:30:41,760
0,180 180,870
a approach.

898
00:30:42,080 --> 00:30:44,270
0,390 390,1050 1260,1740 1740,2010 2010,2190
But Bitcoin uses a proof

899
00:30:44,270 --> 00:30:45,900
0,90 90,480 510,1140
of work approach.

900
00:30:45,960 --> 00:30:46,770
0,120 120,240 240,510 510,690 690,810
And so we're just going

901
00:30:46,770 --> 00:30:48,900
0,60 60,810 810,1350 1380,1680 1680,2130
to proceed with a design.

902
00:30:51,920 --> 00:30:53,260
0,210 210,810
Any questions.

903
00:30:54,720 --> 00:30:56,490
0,360 600,780 780,1110 1110,1500 1560,1770
Um, so let's um, I'm

904
00:30:56,490 --> 00:30:58,980
0,450 660,1170 1170,1380 1380,2040 2040,2490
just wondering of how it's

905
00:30:58,980 --> 00:31:00,240
0,210 210,270 270,840 840,900 900,1260
hard to impersonate the winner,

906
00:31:00,270 --> 00:31:01,470
0,450 480,810 810,930 930,1080 1080,1200
so let's say that we

907
00:31:01,470 --> 00:31:03,450
0,450 480,1050 1050,1350 1470,1680 1680,1980
have server a and server

908
00:31:03,450 --> 00:31:05,130
0,390 390,600 600,930 930,1350 1350,1680
b and server, a wants

909
00:31:05,130 --> 00:31:07,170
0,180 180,660 660,1470 1500,1830 1830,2040
to offend entry, let's say

910
00:31:07,170 --> 00:31:08,250
0,330 330,450 450,720 720,870 870,1080
one and server b wants

911
00:31:08,250 --> 00:31:09,660
0,60 60,360 360,690 690,900 900,1410
to offend entry e tube

912
00:31:09,750 --> 00:31:11,700
0,690 690,1290 1290,1500 1500,1860 1860,1950
eso server, a solves the

913
00:31:11,700 --> 00:31:13,830
0,480 570,930 930,1440 1440,1530 1530,2130
puzzle and publishes the solution

914
00:31:14,100 --> 00:31:15,300
0,300 300,420 420,750 750,1080 1080,1200
right and I'm assuming that

915
00:31:15,300 --> 00:31:16,080
0,60 60,360 360,480 480,690 690,780
the solution is easy to

916
00:31:16,080 --> 00:31:18,630
0,420 750,1260 1260,1680 1680,2070 2070,2550
check, so then server be

917
00:31:18,630 --> 00:31:19,980
0,480 510,780 780,840 840,1230 1230,1350
a sees the solution and

918
00:31:19,980 --> 00:31:22,080
0,210 210,330 330,420 420,990 1290,2100
check that it's correct, um.

919
00:31:22,580 --> 00:31:25,040
0,840 870,1140 1140,1590 1590,1980 1980,2460
So it cannot work that

920
00:31:25,130 --> 00:31:26,750
0,450 450,660 660,930 930,1440 1440,1620
server be just simply {re-publishes

921
00:31:26,750 --> 00:31:28,850
0,630 630,750 750,1530 1650,1920 1920,2100
-} the solution with its

922
00:31:28,850 --> 00:31:30,290
0,240 240,510 510,720 720,1230 1230,1440
own name and signing it

923
00:31:30,290 --> 00:31:31,670
0,180 180,420 420,600 600,930 930,1380
by its own name because

924
00:31:31,670 --> 00:31:33,410
0,210 210,600 600,1230 1260,1650 1650,1740
the puzzle for e2 is

925
00:31:33,410 --> 00:31:34,220
0,270 270,390 390,480 480,720 720,810
different from the puzzle for

926
00:31:34,220 --> 00:31:36,530
0,300 330,570 570,900 930,1590 1710,2310
you right, yeah okay, yeah

927
00:31:36,530 --> 00:31:38,060
0,360 360,510 510,750 750,930 930,1530
exactly and we'll see yeah

928
00:31:38,060 --> 00:31:38,780
0,150 150,300 300,450 450,630 630,720
we'll get into this in

929
00:31:38,780 --> 00:31:39,650
0,150 150,480 480,540 540,600 600,870
more detail in the second

930
00:31:40,700 --> 00:31:41,720
0,270 270,450 450,780 780,930 930,1020
quarter this year, this is

931
00:31:41,720 --> 00:31:42,800
0,180 180,240 240,330 330,660 660,1080
sort of the basic insight,

932
00:31:42,980 --> 00:31:44,380
0,180 180,390 390,600 600,1050
of course not enough.

933
00:31:45,290 --> 00:31:46,190
0,300 300,360 360,600 600,780 780,900
But it will turn out

934
00:31:46,190 --> 00:31:47,150
0,60 60,150 150,480 480,600 600,960
to be enough to basically

935
00:31:47,150 --> 00:31:48,980
0,420 420,630 630,990 990,1500 1560,1830
settle on a fork, so

936
00:31:48,980 --> 00:31:50,090
0,120 120,240 240,300 300,990 990,1110
we're going to accept their

937
00:31:50,090 --> 00:31:51,020
0,150 150,300 300,690 690,810 810,930
gonna be forks and then

938
00:31:51,020 --> 00:31:53,150
0,120 120,540 540,780 780,1830 1830,2130
we're gonna have a big

939
00:31:53,150 --> 00:31:54,950
0,300 300,630 630,1020 1020,1440 1440,1800
basically accepts their forks like

940
00:31:55,010 --> 00:31:56,690
0,600 630,900 900,1260 1260,1350 1350,1680
shoulder then has a way

941
00:31:56,690 --> 00:31:58,130
0,120 120,480 480,870 870,1110 1110,1440
of basically deciding which work

942
00:31:58,130 --> 00:31:59,200
0,90 90,420 420,600
to settle on.

943
00:32:00,290 --> 00:32:01,560
0,180 180,720
That's all.

944
00:32:01,920 --> 00:32:03,360
0,930 930,1110 1110,1260 1260,1380 1380,1440
Yeah, so I had a

945
00:32:03,360 --> 00:32:07,470
0,330 330,1050 1050,1440 1440,2400 3570,4110
question about network partitions, and

946
00:32:07,530 --> 00:32:08,910
0,120 120,120 120,480 480,900 900,1380
I I was wondering how

947
00:32:08,910 --> 00:32:09,900
0,480
like.

948
00:32:09,930 --> 00:32:11,310
0,150 150,600 930,1110 1110,1260 1260,1380
You know if you were

949
00:32:11,310 --> 00:32:12,930
0,360 360,480 480,720 720,780 780,1620
able to make a partition

950
00:32:12,990 --> 00:32:14,550
0,300 300,480 480,600 600,1200 1200,1560
like on the Internet which

951
00:32:14,550 --> 00:32:15,540
0,150 150,450
you know.

952
00:32:15,540 --> 00:32:17,970
0,510 510,1290 1290,1740 1800,2250 2250,2430
Probably unreasonable but you're able

953
00:32:17,970 --> 00:32:19,350
0,120 120,630 630,750 750,1260 1260,1380
to partition the Internet like

954
00:32:19,350 --> 00:32:21,540
0,90 90,390 390,1020 1290,1680 1680,2190
the whole Internet and who

955
00:32:21,540 --> 00:32:25,110
0,270 270,390 390,1350 1500,2580 2970,3570
couldn't you convince like no

956
00:32:25,530 --> 00:32:28,260
0,750 1020,1590 1590,1890 1890,2520 2520,2730
one like double spend by

957
00:32:28,260 --> 00:32:30,090
0,240 240,690 690,1050 1050,1500 1500,1830
like spending on both sides

958
00:32:30,090 --> 00:32:31,440
0,90 90,210 210,930
of the partition.

959
00:32:31,560 --> 00:32:33,090
0,330 330,450 450,750 750,960 960,1530
Yeah the petition never heals.

960
00:32:35,550 --> 00:32:38,820
0,1440 1440,2220 2280,2820 2820,3180 3180,3270
Eventually, it you'd assume it

961
00:32:38,820 --> 00:32:40,500
0,450 450,690 690,1050 1050,1230 1230,1680
heals but then by then

962
00:32:40,530 --> 00:32:41,620
0,660
like.

963
00:32:41,680 --> 00:32:42,580
0,210 210,510 510,630 630,720 720,900
You probably would have gone

964
00:32:42,580 --> 00:32:44,020
0,150 150,390 390,720 720,1200 1200,1440
in like something shipped, um,

965
00:32:44,200 --> 00:32:45,850
0,240 240,450 450,810 810,1410 1410,1650
yeah, so generally we'll see

966
00:32:45,850 --> 00:32:46,870
0,450 450,630 630,690 690,900 900,1020
we'll talk a little bit

967
00:32:46,870 --> 00:32:48,730
0,210 210,450 450,660 660,900 900,1860
more about it like a

968
00:32:48,760 --> 00:32:50,830
0,1200 1200,1470 1470,1680 1680,1770 1770,2070
zen there's ways of green

969
00:32:50,830 --> 00:32:52,120
0,450 450,600 600,690 690,870 870,1290
forks and what you're describing

970
00:32:52,120 --> 00:32:53,230
0,90 90,450 450,630 630,780 780,1110
is basically for it persists

971
00:32:53,230 --> 00:32:53,860
0,120 120,150 150,360 360,570 570,630
for a long period of

972
00:32:53,860 --> 00:32:56,110
0,270 870,1410 1410,1950 1950,2070 2070,2250
time, um, and you will

973
00:32:56,110 --> 00:32:59,020
0,240 240,540 540,1440 1500,2490 2490,2910
see that the basically the

974
00:32:59,350 --> 00:33:01,540
0,750 990,1170 1170,1290 1290,1680 1680,2190
um, you know Bitcoin basically

975
00:33:01,540 --> 00:33:03,580
0,360 360,540 540,1080 1080,1230 1230,2040
produces these blocks with transactions

976
00:33:03,580 --> 00:33:05,800
0,330 330,540 540,1110 1410,2100 2100,2220
every ten minutes and you

977
00:33:05,800 --> 00:33:07,330
0,120 120,270 270,420 420,870 870,1530
know if you're very conservative

978
00:33:07,330 --> 00:33:09,070
0,270 270,480 480,870 870,960 960,1740
or you wanna be careful

979
00:33:09,070 --> 00:33:10,840
0,540 540,600 600,930 930,1380
not to be, um.

980
00:33:12,550 --> 00:33:13,870
0,300 300,510 510,870 870,1110 1110,1320
Avoid double spending or making

981
00:33:13,870 --> 00:33:15,220
0,270 270,450 450,1020 1020,1140 1140,1350
sure there's nothing worth double

982
00:33:15,220 --> 00:33:17,500
0,330 330,480 480,900 900,1380 1710,2280
spend you generally wait for

983
00:33:17,500 --> 00:33:19,270
0,540 540,750 750,1020 1020,1110 1110,1770
multiple deep blocks to appear

984
00:33:19,330 --> 00:33:20,740
0,210 210,450 450,780 780,1050 1050,1410
like five six so basically

985
00:33:20,740 --> 00:33:22,270
0,60 60,660 720,1200 1200,1260 1260,1530
an hour before I actually

986
00:33:22,270 --> 00:33:23,710
0,420 420,540 540,840 840,1380 1380,1440
decided to actually accept you

987
00:33:23,710 --> 00:33:25,540
0,180 180,630 720,1290 1290,1500 1500,1830
know the seo, yeah, this

988
00:33:25,540 --> 00:33:26,500
0,180 180,510 510,660 660,750 750,960
is I'm on the right

989
00:33:26,500 --> 00:33:28,420
0,300
for.

990
00:33:29,370 --> 00:33:31,000
0,630
Eggs.

991
00:33:38,950 --> 00:33:40,440
0,420 450,900
Okay so.

992
00:33:40,900 --> 00:33:42,130
0,240 240,510 510,840 840,1140 1140,1230
Let's also see actually how

993
00:33:42,130 --> 00:33:44,650
0,360 360,750 750,1080 1080,1590 1740,2520
the pieces fit together, um,

994
00:33:45,190 --> 00:33:46,030
0,210 210,270 270,480 480,690 690,840
so it turns out you

995
00:33:46,030 --> 00:33:47,560
0,150 150,780 810,1050 1050,1260 1260,1530
know the you do a

996
00:33:47,590 --> 00:33:49,240
0,240 240,330 330,630 630,960 960,1650
proof of work for transaction

997
00:33:49,240 --> 00:33:51,490
0,450 450,660 660,750 750,1260 1290,2250
a it'll be crazy because

998
00:33:51,490 --> 00:33:52,120
0,210 210,330 330,390 390,600 600,630
you got to spend a

999
00:33:52,120 --> 00:33:53,740
0,150 150,210 210,690 690,1200 1380,1620
lot of conventional power and

1000
00:33:53,740 --> 00:33:55,180
0,330 330,540 540,750 750,990 990,1440
then put one single transaction

1001
00:33:55,180 --> 00:33:55,990
0,120 120,270 270,510 510,600 600,810
that will limit the number

1002
00:33:55,990 --> 00:33:57,040
0,60 60,570 570,690 690,780 780,1050
of transactions, you can actually

1003
00:33:57,040 --> 00:33:59,680
0,360 750,1140 1140,1620 1920,2100 2100,2640
do per second and so

1004
00:33:59,710 --> 00:34:01,240
0,540 570,960 960,1290 1290,1440 1440,1530
a way actually this is

1005
00:34:01,240 --> 00:34:02,680
0,240 240,360 360,870 870,1380 1380,1440
done is basically transaction to

1006
00:34:02,680 --> 00:34:05,470
0,690 720,1080 1080,1200 1200,1830 1950,2790
a group in blocks and

1007
00:34:05,500 --> 00:34:07,240
0,210 210,300 300,750 840,1560 1560,1740
proof of work, a is

1008
00:34:07,240 --> 00:34:08,590
0,300 300,540 540,1080 1080,1260 1260,1350
going on, um on a

1009
00:34:08,590 --> 00:34:09,760
0,270 270,900
block basis.

1010
00:34:10,080 --> 00:34:11,160
0,210 210,510 510,720 720,900 900,1080
Yeah, so we have our

1011
00:34:11,160 --> 00:34:12,340
0,570
network.

1012
00:34:14,780 --> 00:34:16,130
0,630 630,780 780,990 990,1290 1290,1350
Away and actually works is

1013
00:34:16,130 --> 00:34:17,270
0,180 180,270 270,480 480,780 780,1140
that we're not making a

1014
00:34:17,270 --> 00:34:18,590
0,360 360,450 450,930 930,1110 1110,1320
lot of blogs, but like

1015
00:34:18,590 --> 00:34:20,330
0,600 630,930 930,1230 1260,1680 1680,1740
we made a lot of

1016
00:34:20,330 --> 00:34:21,410
0,510 510,570 570,750 750,1050 1050,1080
transactions, we make actually a

1017
00:34:21,410 --> 00:34:22,790
0,240 240,420 480,1110 1110,1290 1290,1380
lot of blocks which are

1018
00:34:22,790 --> 00:34:24,620
0,330 330,570 570,1050 1050,1380 1380,1830
called neuro physically block shape.

1019
00:34:28,460 --> 00:34:30,260
0,480 480,840 1230,1410 1410,1590 1590,1800
And so here we got

1020
00:34:30,260 --> 00:34:32,630
0,240 240,870 870,1230 1230,1860 1920,2370
our network you're peers around

1021
00:34:32,630 --> 00:34:33,960
0,60 60,660
the world.

1022
00:34:33,960 --> 00:34:36,270
0,750 780,1620 1620,1740 1740,1860 1860,2310
And, um, you know the

1023
00:34:36,330 --> 00:34:38,130
0,390 390,780 780,930 930,1590 1590,1800
law here is basically a

1024
00:34:38,130 --> 00:34:39,660
0,330 330,450 450,1050
sequence of blocks.

1025
00:34:42,720 --> 00:34:43,890
0,150 150,300 300,630 630,930 930,1170
And so Peter chef no

1026
00:34:43,890 --> 00:34:45,270
0,390 390,480 480,1020 1140,1260 1260,1380
copies of these you know

1027
00:34:45,270 --> 00:34:47,280
0,210 210,480 510,1470 1470,1860 1860,2010
they make new ones can

1028
00:34:47,280 --> 00:34:48,960
0,330 330,810 810,960 960,1410 1410,1680
open them and distribute them

1029
00:34:48,960 --> 00:34:49,710
0,90 90,300 300,390 390,690 690,750
and flung them across the

1030
00:34:49,710 --> 00:34:50,680
0,480
network.

1031
00:34:51,690 --> 00:34:52,560
0,210 210,360 360,450 450,570 570,870
So what is in a

1032
00:34:52,560 --> 00:34:53,920
0,210 210,840
in block.

1033
00:34:54,620 --> 00:34:55,940
0,390 390,780 780,930 930,1170 1170,1320
A at a very high

1034
00:34:55,940 --> 00:34:57,260
0,570
level.

1035
00:34:57,470 --> 00:34:58,400
0,360 360,450 450,480 480,720 720,930
Again, there are many more

1036
00:34:58,400 --> 00:34:59,450
0,570 570,630 630,720 720,930 930,1050
details you know that I'm

1037
00:34:59,450 --> 00:35:01,250
0,180 180,390 390,1080 1230,1650 1650,1800
just gonna ignore, um, it's

1038
00:35:01,250 --> 00:35:02,090
0,150 150,270 270,360 360,690 690,840
gonna be the hash of

1039
00:35:02,090 --> 00:35:04,500
0,90 90,480 480,990 1020,1410
the previous blog so.

1040
00:35:04,790 --> 00:35:05,740
0,690
Yeah.

1041
00:35:05,740 --> 00:35:07,300
0,180 180,480 480,990
B minus one.

1042
00:35:07,450 --> 00:35:08,260
0,240 240,390 390,540 540,690 690,810
And so if this is

1043
00:35:08,260 --> 00:35:09,460
0,300 300,780 780,840 840,1020 1020,1200
block five you know this

1044
00:35:09,460 --> 00:35:10,270
0,90 90,240 240,300 300,420 420,810
is going to be done,

1045
00:35:10,660 --> 00:35:12,790
0,750 750,810 810,1020 1050,1740 1740,2130
um, you know before fifty

1046
00:35:12,790 --> 00:35:14,830
0,300 300,720 1500,1800 1800,1950 1950,2040
minus one um, so the

1047
00:35:14,830 --> 00:35:16,930
0,330 330,930 930,1050 1050,1590 1590,2100
unique identifier of the previous

1048
00:35:16,930 --> 00:35:20,230
0,510 540,1290 1320,2100 2250,2640 2640,3300
block in between the transactions

1049
00:35:20,230 --> 00:35:20,950
0,150 150,210 210,450 450,510 510,720
that are part of this

1050
00:35:20,950 --> 00:35:22,080
0,570
block.

1051
00:35:23,150 --> 00:35:26,140
0,1020 1110,1680 1680,1770 1770,2430
And then a notch.

1052
00:35:26,340 --> 00:35:27,240
0,240 240,480 480,660 660,840 840,900
Want to talk about in

1053
00:35:27,240 --> 00:35:28,050
0,30 30,330 330,480 480,630 630,810
a second, but this is

1054
00:35:28,050 --> 00:35:28,950
0,330 330,510 510,660 660,750 750,900
a thing that is going

1055
00:35:28,950 --> 00:35:30,210
0,90 90,300 300,390 390,810 810,1260
to play a crucial role

1056
00:35:30,210 --> 00:35:33,540
0,270 270,1050 1320,1680 1680,2280 2460,3330
in the the puzzle and

1057
00:35:33,540 --> 00:35:34,800
0,60 60,270 270,690
the time stamp.

1058
00:35:38,960 --> 00:35:40,220
0,690 690,810 810,960 960,1170 1170,1260
And you know this is

1059
00:35:40,220 --> 00:35:43,340
0,660 1290,1710 1710,2490 2760,2910 2910,3120
about typically yeah you'll see

1060
00:35:43,340 --> 00:35:44,060
0,60 60,240 240,420 420,600 600,720
a little bit, you know,

1061
00:35:44,060 --> 00:35:45,500
0,150 150,360 360,540 540,930 930,1440
think about these are roughly

1062
00:35:45,500 --> 00:35:46,840
0,90 90,720
a megabyte.

1063
00:35:47,530 --> 00:35:49,570
0,300 300,660 660,900 900,1560 1560,2040
Yeah block, so basically the

1064
00:35:49,600 --> 00:35:51,250
0,390 390,840 840,960 960,1140 1140,1650
game is you know the

1065
00:35:51,640 --> 00:35:53,260
0,360 360,810 810,1260 1260,1350 1350,1620
um, the peers of collect

1066
00:35:53,260 --> 00:35:57,610
0,870 1080,1950 1980,3390 3510,4080 4080,4350
interactions, um, then basically solve

1067
00:35:57,610 --> 00:35:59,800
0,60 60,630 1140,1800 1800,1980 1980,2190
the puzzle a and once

1068
00:35:59,800 --> 00:36:01,210
0,120 120,360 360,420 420,1020 1050,1410
they solve the puzzle, they

1069
00:36:01,210 --> 00:36:03,460
0,480 510,1200 1200,1290 1290,1680 1680,2250
gonna ship the block to

1070
00:36:03,460 --> 00:36:04,720
0,630 630,810 810,1050 1050,1170 1170,1260
everybody in the in the

1071
00:36:04,720 --> 00:36:06,970
0,480 930,1470 1470,1560 1560,1980 1980,2250
network everybody can check whether

1072
00:36:06,970 --> 00:36:08,800
0,660 750,1050 1050,1290 1290,1650 1650,1830
the kia actually solves the

1073
00:36:08,800 --> 00:36:10,690
0,300 300,930 1200,1500 1500,1770 1770,1890
puzzle correctly and is you

1074
00:36:10,690 --> 00:36:12,370
0,150 150,330 330,660 660,1050 1050,1680
know the possible correctly so

1075
00:36:12,400 --> 00:36:14,050
0,420 420,510 510,570 570,1050 1050,1650
correctly in the transaction checkout

1076
00:36:14,050 --> 00:36:15,850
0,360 360,810 810,870 870,1200 1200,1800
and everything the ashes checkout

1077
00:36:16,030 --> 00:36:16,900
0,270 270,360 360,480 480,570 570,870
then they're going to basically

1078
00:36:16,900 --> 00:36:18,010
0,330 330,510 510,870 870,1020 1020,1110
accept that block as the

1079
00:36:18,010 --> 00:36:19,210
0,300 300,600 600,690 690,810 810,1200
next block in the chain.

1080
00:36:22,540 --> 00:36:24,070
0,270 270,420 420,660 660,810 810,1530
So a little more detail.

1081
00:36:25,570 --> 00:36:27,700
0,810 810,960 960,1290 1290,1920 1980,2130
Um, you know when you

1082
00:36:27,700 --> 00:36:28,990
0,180 180,630 630,750 750,1080 1080,1290
know basically the winner gets

1083
00:36:28,990 --> 00:36:31,980
0,90 90,210 210,750 1170,2400
to the site to.

1084
00:36:32,070 --> 00:36:34,620
0,390 390,690 690,1500 1500,2070 2370,2550
On the network, so we

1085
00:36:34,620 --> 00:36:38,260
0,120 120,150 150,330 330,960
have a new work.

1086
00:36:39,720 --> 00:36:41,520
0,690 690,990 990,1260 1260,1650 1650,1800
Um, and this is gonna

1087
00:36:41,520 --> 00:36:42,480
0,120 120,210 210,450 450,540 540,960
be the proof of work,

1088
00:36:42,480 --> 00:36:43,920
0,210 210,300 300,600 600,1170 1170,1440
which is done typically the

1089
00:36:43,920 --> 00:36:44,880
0,330 330,480 480,660 660,750 750,960
party that does the proof

1090
00:36:44,880 --> 00:36:45,510
0,60 60,270 270,360 360,600 600,630
of work is called a

1091
00:36:45,510 --> 00:36:46,860
0,480
minor.

1092
00:36:47,240 --> 00:36:48,080
0,270 270,450 450,510 510,540 540,840
We'll see in a second,

1093
00:36:48,080 --> 00:36:49,580
0,540
why.

1094
00:36:49,970 --> 00:36:51,320
0,750
Tom.

1095
00:36:51,410 --> 00:36:54,740
0,570 570,990 990,1440 1770,2640 2640,3330
And basically the game that

1096
00:36:54,770 --> 00:36:55,820
0,270 270,390 390,480 480,840 840,1050
we're going to play is

1097
00:36:55,820 --> 00:36:58,380
0,840
that.

1098
00:36:58,410 --> 00:36:59,680
0,720
Are.

1099
00:36:59,930 --> 00:37:01,280
0,810
Girl.

1100
00:37:01,370 --> 00:37:03,260
0,570 570,780 780,870 870,1530 1560,1890
Minor has to compute a

1101
00:37:03,260 --> 00:37:04,970
0,540 540,750 750,900 900,1080 1080,1710
hash of this new blog.

1102
00:37:05,440 --> 00:37:09,460
0,630 630,780 780,1170 1170,1830 3600,4020
For that basically has as

1103
00:37:09,460 --> 00:37:11,100
0,390 390,1050
n leading.

1104
00:37:12,080 --> 00:37:14,100
0,720
Zero.

1105
00:37:17,510 --> 00:37:19,490
0,600 1170,1470 1470,1560 1560,1890 1890,1980
So and the way you

1106
00:37:19,490 --> 00:37:21,110
0,360 360,600 600,1230 1230,1530 1530,1620
know, um, the miner can

1107
00:37:21,110 --> 00:37:22,700
0,120 120,390 390,510 510,960 960,1590
do that is basically by

1108
00:37:22,790 --> 00:37:24,590
0,690 690,810 810,1140 1140,1380 1380,1800
changing the not so basically

1109
00:37:24,590 --> 00:37:26,480
0,270 300,630 630,990 990,1410 1410,1890
the miner makes random guesses

1110
00:37:26,660 --> 00:37:28,610
0,300 300,660 1050,1500 1500,1890 1890,1950
for non a confused the

1111
00:37:28,610 --> 00:37:30,800
0,630 810,1440 1440,1740 1740,2100 2100,2190
hash in and checks, you

1112
00:37:30,800 --> 00:37:31,730
0,180 180,300 300,540 540,630 630,930
know the number of leading

1113
00:37:31,730 --> 00:37:33,920
0,510 510,1080 1350,1740 1740,1950 1950,2190
zeros and if the number

1114
00:37:33,920 --> 00:37:35,480
0,60 60,270 270,990 990,1170 1170,1560
of leading zeros, you know

1115
00:37:35,480 --> 00:37:37,310
0,690 750,1260 1260,1350 1350,1470 1470,1830
larger than you know basically

1116
00:37:37,310 --> 00:37:38,270
0,330 330,390 390,750 750,840 840,960
that is what is going

1117
00:37:38,270 --> 00:37:39,420
0,60 60,180 180,810
to be acceptance.

1118
00:37:40,080 --> 00:37:40,830
0,240 240,420 420,570 570,660 660,750
The only way you can

1119
00:37:40,830 --> 00:37:42,090
0,150 150,510 510,660 660,1140 1140,1260
think about is basically the

1120
00:37:42,090 --> 00:37:43,800
0,270 270,660 660,840 840,1470 1500,1710
hash value is below some

1121
00:37:43,800 --> 00:37:47,820
0,810 960,1530 1800,2490 2610,3120 3120,4020
particular um, um, lo particular

1122
00:37:47,820 --> 00:37:49,380
0,480 480,1050
difficulty value.

1123
00:37:49,780 --> 00:37:51,070
0,480 510,750 750,1050 1050,1140 1140,1290
Um, this end can be

1124
00:37:51,070 --> 00:37:53,230
0,540 810,1350 1350,1800 1800,1920 1920,2160
changed over time so seeing

1125
00:37:53,230 --> 00:37:55,120
0,60 60,330 330,870 990,1590 1590,1890
the second leader, um to

1126
00:37:55,120 --> 00:37:56,950
0,90 90,210 210,1050 1050,1140 1140,1830
you know, adjust the difficulty

1127
00:37:57,160 --> 00:38:00,130
0,1500 1500,2130 2370,2640 2640,2790 2790,2970
a and um, but on

1128
00:38:00,130 --> 00:38:01,630
0,450 450,570 570,900 1260,1350 1350,1500
average you know you know

1129
00:38:01,630 --> 00:38:03,220
0,150 150,510 510,600 600,1140
the amount of work.

1130
00:38:04,080 --> 00:38:05,370
0,240 240,330 330,1050 1050,1110 1110,1290
That is necessary, you know

1131
00:38:05,370 --> 00:38:07,470
0,330 450,600 600,780 780,1470 1710,2100
so that they're targeting is

1132
00:38:07,470 --> 00:38:09,330
0,330 330,540 540,990 990,1410 1410,1860
about like a roughly CPU

1133
00:38:09,330 --> 00:38:12,000
0,540 690,1110 1110,1890
month of computation.

1134
00:38:12,740 --> 00:38:13,670
0,150 150,240 240,450 450,600 600,930
And it's not really expressed

1135
00:38:13,670 --> 00:38:14,420
0,60 60,210 210,480 480,570 570,750
in that way is really

1136
00:38:14,420 --> 00:38:15,350
0,330 330,420 420,630 630,720 720,930
expressed in terms of number

1137
00:38:15,350 --> 00:38:16,160
0,90 90,480 480,570 570,660 660,810
of hashes, you can do

1138
00:38:16,160 --> 00:38:17,990
0,120 120,600 960,1470 1500,1620 1620,1830
per second, um, but then

1139
00:38:17,990 --> 00:38:19,910
0,180 180,540 540,810 810,1200 1200,1920
it boils down to shooting

1140
00:38:19,910 --> 00:38:21,050
0,120 120,330 330,480 480,570 570,1140
for that kind of number.

1141
00:38:21,780 --> 00:38:22,350
0,120 120,300 300,300 300,510 510,570
Of course, a lot of

1142
00:38:22,350 --> 00:38:23,640
0,540 540,600 600,930 930,1110 1110,1290
peers, you know do this

1143
00:38:23,640 --> 00:38:25,170
0,90 90,780 990,1080 1080,1290 1290,1530
in parallel, you know there

1144
00:38:25,170 --> 00:38:26,100
0,120 120,330 330,450 450,750 750,930
I think the network is

1145
00:38:26,100 --> 00:38:28,590
0,390 390,690 690,1530 1530,2310 2310,2490
currently around {10,000,nodes,} {10,000,nodes} might

1146
00:38:28,590 --> 00:38:29,430
0,330 330,450 450,600 600,750 750,840
be and there might be

1147
00:38:29,430 --> 00:38:31,650
0,210 210,450 450,990 1410,1560 1560,2220
many more minors, um I

1148
00:38:31,980 --> 00:38:33,270
0,450 450,780 780,840 840,1230 1230,1290
think hundreds of thousands of

1149
00:38:33,270 --> 00:38:34,890
0,540 720,1080 1080,1170 1170,1350 1350,1620
miners and you know they

1150
00:38:34,890 --> 00:38:36,600
0,150 150,300 300,990 990,1440 1440,1710
might get lucky and you

1151
00:38:36,660 --> 00:38:38,160
0,600 600,690 690,930 930,1170 1170,1500
pick the right non Smith,

1152
00:38:38,160 --> 00:38:40,050
0,210 210,780 1050,1500 1500,1740 1740,1890
we're quickly, um, and some

1153
00:38:40,050 --> 00:38:41,700
0,60 60,210 210,720 720,1440 1560,1650
of them, actually I um

1154
00:38:41,700 --> 00:38:43,710
0,690 720,1170 1170,1530 1530,1620 1620,2010
I get quickly and so

1155
00:38:43,800 --> 00:38:44,730
0,210 210,330 330,630 630,810 810,930
what they're shooting sort of

1156
00:38:44,730 --> 00:38:45,840
0,450 450,570 570,900 900,990 990,1110
roughly is that you know

1157
00:38:45,840 --> 00:38:47,430
0,270 270,570 570,930 1050,1350 1350,1590
the first one, no extra

1158
00:38:47,430 --> 00:38:48,780
0,330 330,630 630,1020 1140,1290 1290,1350
salt does all that it

1159
00:38:48,780 --> 00:38:50,580
0,210 210,540 540,690 690,1200
takes about ten minutes.

1160
00:38:54,440 --> 00:38:56,030
0,30 30,480 720,930 930,1080 1080,1590
I mean you know by

1161
00:38:56,030 --> 00:38:59,180
0,510 510,600 600,1320 1560,1800 1800,3150
adjusting the difficulty or the

1162
00:38:59,210 --> 00:39:00,770
0,420 420,810 810,1350 1350,1410 1410,1560
vertical should just you know

1163
00:39:00,770 --> 00:39:03,410
0,480 510,1200 1290,1620 1620,2550 2550,2640
the time where the the

1164
00:39:03,410 --> 00:39:04,280
0,210 210,330 330,450 450,780 780,870
time it will take to

1165
00:39:04,280 --> 00:39:05,570
0,570 570,900 900,1050 1050,1140 1140,1290
actually compute one of these

1166
00:39:05,570 --> 00:39:07,190
0,330 330,900 900,1290 1290,1410 1410,1620
hashes a energy that one

1167
00:39:07,190 --> 00:39:08,150
0,180 180,240 240,480 480,600 600,960
has to put in to

1168
00:39:08,420 --> 00:39:10,660
0,360 360,870 870,960 960,1380
actually solve the problem.

1169
00:39:11,060 --> 00:39:13,440
0,270 270,600 660,1530 1770,2310
And so, whatever um.

1170
00:39:13,440 --> 00:39:16,140
0,300 330,960 1410,1800 1800,2370 2460,2700
Um, yeah, whatever minor sort

1171
00:39:16,140 --> 00:39:17,430
0,60 60,360 360,480 480,780 780,1290
of solves this possible first

1172
00:39:17,580 --> 00:39:19,710
0,660 660,930 930,1500 1710,2070 2070,2130
basically gets to spread the

1173
00:39:19,710 --> 00:39:21,690
0,330 330,630 630,720 720,1290 1500,1980
block across the network, and

1174
00:39:21,690 --> 00:39:22,650
0,330 330,480 480,540 540,810 810,960
basically sort of about ten

1175
00:39:22,650 --> 00:39:23,430
0,390 390,480 480,540 540,660 660,780
minutes, you know to do

1176
00:39:23,430 --> 00:39:24,630
0,270 300,600 600,750 750,1140 1140,1200
so right and so you

1177
00:39:24,630 --> 00:39:26,100
0,120 120,390 390,780 780,990 990,1470
know, one reason to the

1178
00:39:26,100 --> 00:39:27,900
0,420 420,510 510,930 1110,1440 1440,1800
timmins, is there is going

1179
00:39:27,900 --> 00:39:28,500
0,90 90,270 270,300 300,480 480,600
to take a little bit

1180
00:39:28,500 --> 00:39:29,610
0,90 90,420 420,630 630,960 960,1110
of time to move them

1181
00:39:29,610 --> 00:39:31,320
0,180 180,570 570,660 660,1050 1050,1710
one megabyte of walk across

1182
00:39:31,320 --> 00:39:32,430
0,60 60,210 210,510 510,750 750,1110
you know many many peers

1183
00:39:32,430 --> 00:39:33,330
0,150 150,210 210,330 330,420 420,900
that are in the network

1184
00:39:33,720 --> 00:39:35,370
0,690 810,1170 1170,1350 1350,1470 1470,1650
and, um you want to

1185
00:39:35,370 --> 00:39:36,960
0,180 180,570 570,1050 1050,1290 1290,1590
make sure there's enough time

1186
00:39:36,960 --> 00:39:39,920
0,300 450,780 780,1380 1770,2580
to get the um.

1187
00:39:39,920 --> 00:39:41,210
0,90 90,360 360,990 990,1080 1080,1290
The block out to many

1188
00:39:41,210 --> 00:39:43,010
0,90 90,180 180,750 990,1560 1590,1800
of the peers, um so

1189
00:39:43,010 --> 00:39:44,330
0,180 180,300 300,540 540,930 930,1320
that you can avoid forks

1190
00:39:44,330 --> 00:39:44,930
0,150 150,270 270,480 480,570 570,600
as we'll see in a

1191
00:39:44,930 --> 00:39:45,940
0,420
second.

1192
00:39:46,620 --> 00:39:48,030
0,270 270,720 720,840 840,1110 1110,1410
So, before that somebody else

1193
00:39:48,030 --> 00:39:49,470
0,390 390,480 480,660 660,1110 1110,1440
actually you know solves puzzle

1194
00:39:49,470 --> 00:39:50,360
0,300
too.

1195
00:39:51,170 --> 00:39:55,820
0,360 390,540 630,1350 2040,2730 2820,4650
I'm a professor so the

1196
00:39:55,820 --> 00:39:57,650
0,510 540,570 660,1440 1440,1560 1560,1830
does a number of leading

1197
00:39:57,650 --> 00:40:00,590
0,1050 1050,1290 1290,1950 2040,2400 2400,2940
{zeros's -} at a hash

1198
00:40:00,590 --> 00:40:02,900
0,810 1020,1470 1470,1620 1620,2160 2160,2310
needs to be accepted by

1199
00:40:02,900 --> 00:40:04,280
0,60 60,480 510,720 720,1020 1020,1380
a node is that number

1200
00:40:04,280 --> 00:40:05,540
0,180 180,570 570,720 720,1050 1050,1260
like set by each node

1201
00:40:05,540 --> 00:40:07,580
0,750 750,990 990,1650 1650,1890 1890,2040
individually like no no, it's

1202
00:40:07,580 --> 00:40:08,480
0,210 210,390 390,450 450,540 540,900
just part of the vertical

1203
00:40:08,480 --> 00:40:10,910
0,210 210,360 360,720 720,1110 1410,2430
there's a Greek part but

1204
00:40:10,910 --> 00:40:12,920
0,330 330,1020 1020,1350 1380,1710 1710,2010
but consensus on about it,

1205
00:40:13,850 --> 00:40:15,620
0,660 660,1320 1320,1350 1350,1650 1650,1770
but what I mean is

1206
00:40:15,620 --> 00:40:17,810
0,300 300,660 660,1080 1080,1680 1680,2190
like it's farther protocol, but

1207
00:40:17,840 --> 00:40:18,660
0,480
like.

1208
00:40:19,240 --> 00:40:20,560
0,750
I'm.

1209
00:40:21,340 --> 00:40:23,650
0,300 300,960 1020,1590 1590,1950 1950,2310
So so so change will

1210
00:40:23,650 --> 00:40:26,050
0,270 270,450 450,870 1440,2040 2040,2400
change over time well behaved

1211
00:40:26,050 --> 00:40:27,280
0,300 300,480 480,900 900,1050 1050,1230
nodes will follow it, but

1212
00:40:27,280 --> 00:40:29,110
0,330 540,870 870,1080 1080,1320 1320,1830
they but but who calculate

1213
00:40:29,110 --> 00:40:31,330
0,270 270,1050 1050,1350 1350,1710 1710,2220
who calculates that a central

1214
00:40:31,330 --> 00:40:34,060
0,810 1200,1620 1620,2250 2250,2400 2400,2730
server that calculates the sand

1215
00:40:34,060 --> 00:40:35,110
0,120 120,390 390,540 540,840 840,1050
and sends it out are

1216
00:40:35,110 --> 00:40:37,360
0,510 540,1350 1350,1620 1620,1950 1950,2250
everywhere, a second later actually

1217
00:40:37,360 --> 00:40:39,820
0,180 180,360 360,1020 1410,1920 1950,2460
how it's computed a basically

1218
00:40:39,820 --> 00:40:40,900
0,270 270,720 720,840 840,990 990,1080
why I can give you

1219
00:40:40,900 --> 00:40:42,040
0,60 60,420 450,840 840,990 990,1140
a hint about how it's

1220
00:40:42,040 --> 00:40:43,780
0,480 630,1050 1050,1380 1380,1470 1470,1740
computed one reason the time

1221
00:40:43,780 --> 00:40:45,520
0,360 360,510 510,780 780,1140 1140,1740
stamps are in these things.

1222
00:40:46,270 --> 00:40:48,100
0,480 480,810 810,1200 1200,1410 1410,1830
Um is that like if

1223
00:40:48,100 --> 00:40:49,900
0,120 120,540 540,1170 1170,1410 1410,1800
the time between a block

1224
00:40:49,900 --> 00:40:51,730
0,330 330,510 510,1050 1290,1740 1740,1830
becomes too low, then the

1225
00:40:51,730 --> 00:40:53,380
0,540 540,780 780,1140
difficulty goes up.

1226
00:40:53,380 --> 00:40:54,560
0,570
HMM.

1227
00:40:54,710 --> 00:40:56,150
0,570 600,750 750,840 840,1050 1050,1440
And you know these types

1228
00:40:56,150 --> 00:40:57,650
0,60 60,270 270,330 330,960 990,1500
of course are validated using

1229
00:40:57,650 --> 00:40:58,460
0,90 90,480 480,570 570,690 690,810
the hashes and all that

1230
00:40:58,460 --> 00:40:59,300
0,150 150,210 210,540 540,660 660,840
kind of stuff and sit

1231
00:40:59,300 --> 00:41:00,620
0,90 90,150 150,810 810,1110 1110,1320
in the blockchain everybody sees

1232
00:41:00,620 --> 00:41:02,480
0,90 90,300 300,1050 1500,1710 1710,1860
the same blockchain so they

1233
00:41:02,480 --> 00:41:04,160
0,180 180,660 660,1110 1110,1350 1350,1680
will compute the same difference

1234
00:41:04,160 --> 00:41:05,390
0,240 240,300 300,540 540,990 990,1230
between the time stamps and

1235
00:41:05,390 --> 00:41:07,040
0,570 570,870 870,960 960,1200 1200,1650
therefore make the same adjustment

1236
00:41:07,040 --> 00:41:08,340
0,90 90,300 300,360 360,810
in terms of difficulty.

1237
00:41:08,660 --> 00:41:10,190
0,390 420,900 1050,1320 1320,1380 1380,1530
Right, um, this is one

1238
00:41:10,190 --> 00:41:11,180
0,60 60,120 120,360 360,600 600,990
of the cool parts correct

1239
00:41:11,180 --> 00:41:12,410
0,270 270,360 360,810 840,960 960,1230
having a log of everything

1240
00:41:12,410 --> 00:41:13,340
0,180 180,300 300,510 510,690 690,930
that's in there like if

1241
00:41:13,370 --> 00:41:14,870
0,180 180,420 420,570 570,960 960,1500
you have some determine if

1242
00:41:14,900 --> 00:41:16,310
0,150 150,270 270,540 540,750 750,1410
you could compute any deterministic

1243
00:41:16,310 --> 00:41:17,510
0,330 330,630 630,720 720,1110 1110,1200
function over the content of

1244
00:41:17,510 --> 00:41:19,800
0,90 90,480 1170,1710
the law, right.

1245
00:41:19,950 --> 00:41:22,440
0,510 540,1080 1350,1830 1830,2310 2310,2490
Okay, um, so it would

1246
00:41:22,440 --> 00:41:24,030
0,120 120,180 180,840 840,1200 1200,1590
be a deterministic function, but

1247
00:41:24,030 --> 00:41:24,480
0,90 90,180 180,300 300,360 360,450
at the end of the

1248
00:41:24,480 --> 00:41:26,490
0,150 150,540 750,1230 1230,1620 1650,2010
day like if I like

1249
00:41:26,520 --> 00:41:27,720
0,330 330,480 480,630 630,960 960,1200
try and get away with

1250
00:41:27,720 --> 00:41:30,210
0,330 420,900 900,1590 1590,1890 1890,2490
like sending less than n

1251
00:41:30,630 --> 00:41:34,410
0,390 390,1560 1770,2490 2610,3000 3000,3780
like zeros, then each individual

1252
00:41:34,410 --> 00:41:35,820
0,330 330,450 450,540 540,1140 1140,1410
node in the network should

1253
00:41:35,820 --> 00:41:37,140
0,180 180,360 360,870 930,1200 1200,1320
call me out, yeah they

1254
00:41:37,140 --> 00:41:38,460
0,120 120,420 420,510 510,990 1050,1320
will reject your solution because

1255
00:41:38,460 --> 00:41:39,360
0,120 120,570 570,690 690,750 750,900
you don't have a real

1256
00:41:39,360 --> 00:41:40,240
0,450
solution.

1257
00:41:40,710 --> 00:41:43,650
0,570 840,1350 2070,2310 2310,2520 2520,2940
OK thanks, so what stops

1258
00:41:43,650 --> 00:41:45,660
0,240 240,990 990,1200 1200,1470 1470,2010
an attacker from just constantly

1259
00:41:45,660 --> 00:41:47,040
0,390 390,480 480,870 870,1080 1080,1380
flooding the network with wrong

1260
00:41:47,040 --> 00:41:48,440
0,930
solutions.

1261
00:41:48,500 --> 00:41:50,030
0,360 360,630 630,930 930,1140 1140,1530
Um, yeah denial service attack

1262
00:41:50,060 --> 00:41:51,470
0,150 150,720 720,1080 1080,1290 1290,1410
and hopefully then one of

1263
00:41:51,470 --> 00:41:53,390
0,1080 1080,1260 1260,1350 1350,1620 1620,1920
the turns out that checking

1264
00:41:53,390 --> 00:41:54,500
0,90 90,390 390,480 480,780 780,1110
the solution is very easy.

1265
00:41:55,250 --> 00:41:56,570
0,420 450,720 720,900 900,1050 1050,1320
Right, and so it's easy

1266
00:41:56,570 --> 00:41:58,280
0,240 240,600 600,1110 1140,1320 1320,1710
to quickly reject an incorrect

1267
00:41:58,280 --> 00:41:59,340
0,450
solution.

1268
00:42:01,370 --> 00:42:02,440
0,240 240,480
Thank you.

1269
00:42:02,620 --> 00:42:03,760
0,240 240,540 540,810 810,930 930,1140
And how, how are the

1270
00:42:03,760 --> 00:42:05,920
0,330 330,780 780,1170 1170,1650 1920,2160
time stamps determined dude like

1271
00:42:05,920 --> 00:42:07,150
0,150 150,330 330,810 870,1170 1170,1230
does each box set the

1272
00:42:07,150 --> 00:42:09,820
0,270 270,750 780,1680 2280,2460 2460,2670
time stamp genre, now the

1273
00:42:09,820 --> 00:42:12,130
0,390 390,510 510,960 960,1320 1320,2310
minor that successful mines z

1274
00:42:12,130 --> 00:42:14,000
0,120 120,540 870,1350
in the blog.

1275
00:42:14,660 --> 00:42:15,830
0,150 150,300 300,420 420,570 570,1170
And what if they just

1276
00:42:15,830 --> 00:42:16,970
0,240 240,330 330,630 630,990 990,1140
set the time stamp to

1277
00:42:16,970 --> 00:42:19,760
0,1020 1140,1710 1770,2310 2310,2550 2550,2790
be like longer than it

1278
00:42:19,940 --> 00:42:21,680
0,600 780,990 990,1260 1260,1350 1350,1740
took so that it becomes

1279
00:42:21,680 --> 00:42:22,940
0,180 180,570 570,900 900,1110 1110,1260
less difficult it can't lie

1280
00:42:22,940 --> 00:42:24,020
0,150 150,450 450,810 810,930 930,1080
too much correctly, they have

1281
00:42:24,020 --> 00:42:25,010
0,60 60,240 240,480 480,870 870,990
a ten minute window, so

1282
00:42:25,010 --> 00:42:26,630
0,480 480,750 750,1110 1110,1440 1440,1620
roughly to lie I don't

1283
00:42:26,630 --> 00:42:27,560
0,180 180,330 330,750 750,870 870,930
really know exactly how the

1284
00:42:27,560 --> 00:42:28,580
0,210 210,390 390,480 480,870 930,1020
time step is check, um

1285
00:42:28,580 --> 00:42:30,000
0,0 0,480 480,720
I don't know.

1286
00:42:31,090 --> 00:42:33,380
0,240 240,660 660,840 840,1710
Might imagine this solvable.

1287
00:42:36,080 --> 00:42:38,450
0,660 660,1170 1170,1530 1530,1650 1650,2370
Peers get to the transactions

1288
00:42:38,450 --> 00:42:39,830
0,270 300,630 630,750 750,930 930,1380
that want to be appended

1289
00:42:39,830 --> 00:42:43,360
0,120 120,240 240,870 2610,3000
to the block block.

1290
00:42:44,560 --> 00:42:45,860
0,720
SO.

1291
00:42:45,860 --> 00:42:47,680
0,150 150,510 510,600 600,1290
So blocks and transactions.

1292
00:42:57,310 --> 00:42:58,540
0,330 330,480 480,630 630,1020 1020,1230
Um, so let's assume like

1293
00:42:58,540 --> 00:43:00,130
0,210 210,630 720,870 870,1200 1260,1590
there's some you know one

1294
00:43:00,130 --> 00:43:01,660
0,210 210,870 900,1080 1080,1380 1380,1530
p five that already has

1295
00:43:01,660 --> 00:43:03,310
0,90 90,750 750,870 870,1170 1170,1650
been computed, you know that's

1296
00:43:03,310 --> 00:43:04,360
0,120 120,210 210,780 780,900 900,1050
in the log, you know

1297
00:43:04,360 --> 00:43:06,610
0,330 330,570 570,780 960,1500 1560,2250
points whatever to be four.

1298
00:43:07,940 --> 00:43:09,470
0,300 300,690 690,900 900,960 960,1530
And so were a minor

1299
00:43:09,500 --> 00:43:11,810
0,450 450,630 630,1050 1050,1680 2190,2310
a we're working on you

1300
00:43:11,810 --> 00:43:12,920
0,90 90,210 210,450 450,720 720,1110
know we got a blog

1301
00:43:12,920 --> 00:43:15,500
0,600 930,1140 1140,1380 1380,1800 2010,2580
with you, that is reminding

1302
00:43:15,500 --> 00:43:16,820
0,360 360,750 780,960 960,1140 1140,1320
on so it has a.

1303
00:43:17,520 --> 00:43:20,820
0,150 150,1200 1200,1770 2100,2820 2850,3300
My transactions and um, we're

1304
00:43:20,820 --> 00:43:21,990
0,720 720,780 780,870 870,1110 1110,1170
basically you know trying to

1305
00:43:21,990 --> 00:43:23,610
0,450 480,570 570,780 780,1140 1170,1620
compute you know the solution

1306
00:43:23,610 --> 00:43:24,930
0,90 90,240 240,750 1050,1200 1200,1320
to this puzzle and so

1307
00:43:24,930 --> 00:43:26,610
0,210 210,720 720,1110 1200,1560 1560,1680
new transactions coming right, you

1308
00:43:26,610 --> 00:43:28,020
0,120 120,240 240,780
know they arrived.

1309
00:43:28,450 --> 00:43:29,500
0,330 330,450 450,540 540,690 690,1050
And so the new texture

1310
00:43:29,500 --> 00:43:31,540
0,90 90,540 1350,1710 1710,1740 1740,2040
is actually called a memory

1311
00:43:31,540 --> 00:43:33,160
0,270 270,600 600,1110 1260,1440 1440,1620
buffer a buffer you're going

1312
00:43:33,160 --> 00:43:36,130
0,120 120,630 990,1530 1530,2280 2310,2970
some buffer, um, and um,

1313
00:43:36,160 --> 00:43:38,350
0,630 630,810 810,990 990,1230 1260,2190
basically they're going to when

1314
00:43:38,350 --> 00:43:40,720
0,60 60,330 330,780 840,2070 2100,2370
the next walk, we're going

1315
00:43:40,720 --> 00:43:42,160
0,60 60,570 780,870 870,1020 1020,1440
to be at some point

1316
00:43:42,370 --> 00:43:43,360
0,270 270,660 660,720 720,840 840,990
this guy you know let's

1317
00:43:43,360 --> 00:43:44,500
0,120 120,300 300,360 360,600 600,1140
say this is one minor

1318
00:43:44,890 --> 00:43:46,540
0,660
minor.

1319
00:43:46,850 --> 00:43:48,620
0,630 930,1230 1230,1380 1380,1530 1530,1770
Alright, so let's see man

1320
00:43:48,620 --> 00:43:49,730
0,300 300,390 390,600 600,960 990,1110
arrives the lucky one you

1321
00:43:49,730 --> 00:43:52,940
0,120 120,510 510,1980 2220,2760 2760,3210
know actually yeah mariah competes

1322
00:43:52,940 --> 00:43:54,410
0,120 120,240 240,600 660,1260 1260,1470
you know the new p

1323
00:43:54,410 --> 00:43:56,020
0,690
six.

1324
00:43:56,140 --> 00:43:57,070
0,120 120,270 270,360 360,480 480,930
And so at some point

1325
00:43:57,070 --> 00:43:58,990
0,90 90,180 180,390 390,1200 1710,1920
you know the sixth it's

1326
00:43:58,990 --> 00:44:02,110
0,90 90,1770 1800,2550 2550,2880 2880,3120
the new next head of

1327
00:44:02,110 --> 00:44:04,270
0,90 90,870 900,1500 1500,1860 1860,2160
the log log which contains

1328
00:44:04,270 --> 00:44:06,040
0,60 60,210 210,270 270,960 1560,1770
a bunch of transactions and

1329
00:44:06,040 --> 00:44:07,090
0,120 120,720 720,810 810,900 900,1050
so while you know sort

1330
00:44:07,090 --> 00:44:08,080
0,120 120,480 480,630 630,780 780,990
of minor I was actually

1331
00:44:08,080 --> 00:44:09,340
0,180 180,330 330,900 930,1050 1050,1260
trying to hash you know

1332
00:44:09,340 --> 00:44:11,200
0,960 1020,1380 1380,1440 1440,1710 1710,1860
a computing to many many,

1333
00:44:11,200 --> 00:44:12,640
0,240 240,750 750,1140 1140,1380 1380,1440
many hashers direction solves the

1334
00:44:12,640 --> 00:44:14,410
0,510 570,810 810,1230 1230,1410 1410,1770
puzzle new transactions come in

1335
00:44:14,650 --> 00:44:17,230
0,210 210,720 720,1320 1320,2100 2130,2580
so soon as a minor

1336
00:44:17,230 --> 00:44:19,150
0,240 240,930 930,1200 1200,1350 1350,1920
eyes done with b six

1337
00:44:19,210 --> 00:44:20,740
0,540 540,660 660,960 960,1410 1410,1530
a it basically selects you

1338
00:44:20,740 --> 00:44:22,330
0,240 240,420 420,660 660,750 750,1590
know the number of transactions

1339
00:44:22,390 --> 00:44:23,830
0,360 360,390 390,630 630,960 960,1440
puts a new blog together

1340
00:44:23,860 --> 00:44:25,330
0,120 120,450 450,900 930,1230 1230,1470
a partial blog, it's not

1341
00:44:25,330 --> 00:44:26,140
0,90 90,300 300,420 420,510 510,810
the one that is solved

1342
00:44:26,140 --> 00:44:26,820
0,330
yet.

1343
00:44:27,650 --> 00:44:29,300
0,510 510,750 750,1020 1020,1110 1110,1650
Transactions in from the board,

1344
00:44:29,690 --> 00:44:31,700
0,600 600,660 660,990 990,1590 1590,2010
um yeah whatever updates whatever

1345
00:44:31,700 --> 00:44:33,080
0,630 630,780 780,840 840,930 930,1380
nature needs to be updated,

1346
00:44:33,080 --> 00:44:34,070
0,120 120,240 240,540 540,930 930,990
and then starts hatching are

1347
00:44:34,070 --> 00:44:36,260
0,240 240,420 510,1080 1290,2070 2070,2190
not one and hoping to

1348
00:44:36,260 --> 00:44:37,490
0,330 330,420 420,690 690,1050 1050,1230
solve it so that can

1349
00:44:37,490 --> 00:44:39,080
0,180 180,480 480,930 930,1140 1140,1590
be added to the transaction

1350
00:44:39,080 --> 00:44:40,070
0,240 240,330 330,480 480,690 690,990
log at some point later

1351
00:44:40,070 --> 00:44:41,440
0,240 240,300 300,960
if it succeeds.

1352
00:44:41,760 --> 00:44:43,080
0,120 120,360 360,450 450,810 810,1320
Of course, if somebody else

1353
00:44:43,200 --> 00:44:45,900
0,570 570,630 630,1110 1110,2220 2310,2700
succeeds in solving a producing

1354
00:44:45,900 --> 00:44:47,670
0,180 180,600 600,750 750,1290 1320,1770
b seven b four minor

1355
00:44:47,670 --> 00:44:49,080
0,480 570,750 750,1080 1080,1290 1290,1410
I know minor eyes, gonna

1356
00:44:49,080 --> 00:44:50,550
0,390 390,570 570,690 690,960 960,1470
switch you to the seven

1357
00:44:50,670 --> 00:44:53,280
0,240 240,780 930,1620 1620,1800 1800,2610
that blog remove any transactions

1358
00:44:53,310 --> 00:44:54,930
0,450 450,720 720,1020 1020,1200 1200,1620
that a ended up already

1359
00:44:54,930 --> 00:44:56,490
0,90 90,270 270,750 840,960 960,1560
in d seven and continues

1360
00:44:56,490 --> 00:44:57,450
0,210 210,300 300,780 780,870 870,960
with the transactions that are

1361
00:44:57,450 --> 00:44:58,440
0,360 360,570 570,660 660,900 900,990
left and are not in

1362
00:44:58,440 --> 00:44:59,540
0,120 120,420 420,690
b seven yet.

1363
00:45:01,170 --> 00:45:01,950
0,330 330,390 390,540 540,690 690,780
Thanks for that sort of

1364
00:45:01,950 --> 00:45:03,260
0,660
the.

1365
00:45:03,560 --> 00:45:06,110
0,630 810,1560 1560,2010 2040,2460 2460,2550
Plan for how exactly the

1366
00:45:06,110 --> 00:45:07,980
0,570 570,750 750,1380
blogs need correct.

1367
00:45:08,950 --> 00:45:10,300
0,180 180,210 210,360 360,780
At a high level.

1368
00:45:12,470 --> 00:45:15,340
0,720 720,1020 1020,1260 1260,2370
So as as transactions.

1369
00:45:15,340 --> 00:45:18,640
0,600 630,1080 1080,1380 1710,2640 3150,3300
I'm coming in like you

1370
00:45:18,640 --> 00:45:19,900
0,150 150,600 600,690 690,1170 1170,1260
know trying to calculate the

1371
00:45:19,900 --> 00:45:21,580
0,390 390,600 600,1290
nonce for block.

1372
00:45:21,580 --> 00:45:23,080
0,240 240,510 510,960 960,1290 1290,1500
Um that will like give

1373
00:45:23,080 --> 00:45:25,570
0,600 930,1230 1230,1470 1470,1710 1710,2490
you know and leading zeros

1374
00:45:25,810 --> 00:45:28,630
0,1500 1500,2220 2220,2370 2370,2610 2610,2820
new transactions will come in

1375
00:45:28,630 --> 00:45:30,340
0,390 390,930 1020,1200 1200,1530 1530,1710
right as they agree, they're

1376
00:45:30,340 --> 00:45:31,390
0,240 240,420 420,480 480,630 630,1050
not part of that block,

1377
00:45:31,420 --> 00:45:32,110
0,180 180,300 300,360 360,450 450,690
we're going to be sitting

1378
00:45:32,110 --> 00:45:33,130
0,180 180,240 240,660 660,930 930,1020
on the site, therefore the

1379
00:45:33,130 --> 00:45:34,220
0,210 210,600
next block.

1380
00:45:34,250 --> 00:45:35,420
0,600
Okay.

1381
00:45:36,210 --> 00:45:38,700
0,480 480,930 1260,1560 1560,1770 1770,2490
Could you could you add.

1382
00:45:39,330 --> 00:45:40,680
0,300 300,450 450,690 690,1170 1200,1350
Could you add them to

1383
00:45:40,680 --> 00:45:42,030
0,180 180,480 480,750 750,840 840,1350
the lower change the hash.

1384
00:45:43,040 --> 00:45:45,920
0,540 570,1350 1380,1500 1500,2160 2610,2880
Right, but I mean you

1385
00:45:45,920 --> 00:45:47,090
0,240 240,420 420,480 480,900 900,1170
just need to keep trying

1386
00:45:47,090 --> 00:45:48,710
0,120 120,420 420,600 600,1050 1050,1620
to get like a nonce

1387
00:45:48,710 --> 00:45:49,940
0,210 210,600 690,870 870,1050 1050,1230
right, but you also have

1388
00:45:49,940 --> 00:45:50,990
0,360 360,600 600,690 690,750 750,1050
a limit on the block

1389
00:45:50,990 --> 00:45:52,550
0,510 810,1110 1110,1290 1290,1470 1470,1560
size block size can be

1390
00:45:52,550 --> 00:45:53,780
0,240 240,360 360,570 570,690 690,1230
bigger than one of z

1391
00:45:53,780 --> 00:45:55,910
0,210 210,600 630,1230 1260,1740 1740,2130
one, some particular predefined constant

1392
00:45:55,910 --> 00:45:57,950
0,120 120,180 180,900 1200,1890 1890,2040
by the critical, um, yeah

1393
00:45:57,950 --> 00:45:58,940
0,210 210,270 270,450 450,540 540,990
there's a bunch of other

1394
00:45:59,000 --> 00:46:00,050
0,600 600,690 690,780 780,960 960,1050
reasons you know once you

1395
00:46:00,050 --> 00:46:00,980
0,180 180,390 390,750 750,810 810,930
feel the blog you know

1396
00:46:00,980 --> 00:46:02,450
0,150 150,270 270,780 780,1230 1230,1470
with your transactions you you

1397
00:46:02,450 --> 00:46:04,430
0,180 180,510 510,960 960,1530 1680,1980
keep going hashing until you

1398
00:46:04,430 --> 00:46:05,580
0,210 210,300 300,750
find the solution.

1399
00:46:05,670 --> 00:46:06,800
0,540
Okay.

1400
00:46:07,130 --> 00:46:09,290
0,360 360,540 540,690 690,1290 1560,2160
Or, or you get a

1401
00:46:09,290 --> 00:46:10,160
0,240 240,420 420,690 690,720 720,870
or you receive a new

1402
00:46:10,160 --> 00:46:11,150
0,270 270,390 390,480 480,570 570,990
one and then you reject

1403
00:46:11,150 --> 00:46:13,700
0,120 120,270 270,480 480,570 570,2550
you go work on z.

1404
00:46:15,020 --> 00:46:16,280
0,510
Thanks.

1405
00:46:16,340 --> 00:46:18,800
0,360 360,1050 1170,1530 1530,2130 2160,2460
So when when someone when

1406
00:46:18,800 --> 00:46:21,200
0,90 90,480 480,1410 1590,2160 2190,2400
a minor loses and do

1407
00:46:21,200 --> 00:46:22,420
0,180 180,540
they like.

1408
00:46:22,480 --> 00:46:23,470
0,150 150,240 240,390 390,840 840,990
Like is it possible for

1409
00:46:23,470 --> 00:46:24,280
0,30 30,270 270,330 330,690 690,810
a man or never to

1410
00:46:24,280 --> 00:46:25,660
0,240 240,840 870,1080 1080,1200 1200,1380
make profit out of this

1411
00:46:25,660 --> 00:46:27,550
0,360 360,510 510,870 870,1650 1650,1890
because they keep losing because

1412
00:46:27,550 --> 00:46:29,920
0,150 150,450 480,840 870,1710 1770,2370
they have nothing yeah absolutely

1413
00:46:29,920 --> 00:46:31,780
0,540 1020,1320 1320,1500 1500,1650 1650,1860
if if I would start

1414
00:46:31,780 --> 00:46:32,890
0,270 270,390 390,510 510,1020 1020,1110
mining with my laptop, I'm

1415
00:46:32,890 --> 00:46:33,580
0,210 210,390 390,450 450,540 540,690
pretty sure it would make

1416
00:46:33,580 --> 00:46:34,640
0,150 150,480
no money.

1417
00:46:37,100 --> 00:46:38,510
0,240 240,330 330,960 960,1290 1290,1410
And the transaction pool, it

1418
00:46:38,510 --> 00:46:40,840
0,540 570,1770
is local.

1419
00:46:41,100 --> 00:46:43,350
0,390 390,1020 1020,1440 1440,1860 1890,2250
Yeah, every every node maintains

1420
00:46:43,350 --> 00:46:45,090
0,240 240,660 660,1080 1080,1530 1530,1740
this a transaction core as

1421
00:46:45,090 --> 00:46:48,540
0,150 150,510 510,1080 1080,1560 1560,3450
they receive transactions from a

1422
00:46:48,930 --> 00:46:49,950
0,240 240,420 420,840 840,960 960,1020
from other notes in the

1423
00:46:49,950 --> 00:46:51,300
0,510 510,630 630,750 750,1110 1110,1350
network, you know the the

1424
00:46:51,360 --> 00:46:53,070
0,540 540,840 840,1140 1140,1500 1500,1710
transaction pool and they use

1425
00:46:53,070 --> 00:46:55,020
0,240 240,720 720,1320 1320,1650 1650,1950
that transaction basically to fail

1426
00:46:55,020 --> 00:46:56,280
0,90 90,300 300,780
the next block.

1427
00:46:57,430 --> 00:46:58,630
0,360 360,780 780,930 930,1110 1110,1200
Sale and all kinds of

1428
00:46:58,630 --> 00:46:59,980
0,600 600,690 690,750 750,1110 1110,1350
rules, you know like how

1429
00:46:59,980 --> 00:47:01,690
0,90 90,330 330,630 630,1410 1500,1710
you choose select transactions which

1430
00:47:01,690 --> 00:47:02,620
0,90 90,300 300,360 360,570 570,930
I'm going to talk about

1431
00:47:02,890 --> 00:47:04,600
0,660 1080,1290 1290,1410 1410,1500 1500,1710
okay so to a pen,

1432
00:47:04,600 --> 00:47:05,350
0,90 90,240 240,330 330,600 600,750
you need to tell your

1433
00:47:05,350 --> 00:47:07,140
0,510 510,660 660,1290
transaction to everyone.

1434
00:47:07,780 --> 00:47:10,420
0,600 1020,1620 1620,1950 1950,2460 2460,2640
Yes, yeah or you tell

1435
00:47:10,420 --> 00:47:11,260
0,90 90,180 180,360 360,450 450,840
to a bunch of peers

1436
00:47:11,260 --> 00:47:12,460
0,120 120,480 480,720 720,1050 1050,1200
and they will flood for

1437
00:47:12,460 --> 00:47:13,510
0,60 60,330 330,420 420,630 750,1050
the rest of you through

1438
00:47:13,510 --> 00:47:14,380
0,90 90,270 270,330 330,390 390,870
the rest of the network.

1439
00:47:18,100 --> 00:47:20,080
0,270 270,450 450,720 720,1410 1410,1980
So for my understanding when

1440
00:47:20,080 --> 00:47:23,320
0,90 90,720 780,1920 1950,2610 2610,3240
a miner successfully mines or

1441
00:47:23,350 --> 00:47:25,840
0,660 660,810 810,1500 1710,1980 1980,2490
verifies a transaction a they

1442
00:47:25,840 --> 00:47:28,660
0,1110 1140,1800 1920,2520 2550,2670 2670,2820
get rewarded, yeah they did

1443
00:47:28,660 --> 00:47:31,300
0,480 480,840 870,1620 1680,2220 2220,2640
this a verification, but they

1444
00:47:31,300 --> 00:47:32,650
0,150 150,600 600,1050 1050,1230 1230,1350
can also lie when it

1445
00:47:32,650 --> 00:47:33,580
0,180 180,270 270,330 330,600 600,930
comes to the time stamp,

1446
00:47:33,670 --> 00:47:34,480
0,180 180,420 420,570 570,720 720,810
so let's say that you

1447
00:47:34,480 --> 00:47:35,710
0,240 240,450 450,870 870,1080 1080,1230
have to verify ers and

1448
00:47:35,710 --> 00:47:36,640
0,120 120,420 420,720 720,870 870,930
they're both working on the

1449
00:47:36,640 --> 00:47:38,410
0,210 210,600 810,960 960,1080 1080,1770
same block and they almost

1450
00:47:38,410 --> 00:47:40,720
0,1140 1170,1800 1800,1980 1980,2070 2070,2310
simultaneously verified at the same

1451
00:47:40,720 --> 00:47:42,400
0,240 420,900 900,1110 1110,1200 1200,1680
time, but one of them

1452
00:47:42,400 --> 00:47:44,140
0,750 750,900 900,1050 1050,1350 1380,1740
was a you know they

1453
00:47:44,140 --> 00:47:45,310
0,570 630,810 810,900 900,1110 1110,1170
lied, and they made the

1454
00:47:45,310 --> 00:47:47,440
0,240 240,870 900,1050 1050,1320 1350,2130
time step a bit earlier,

1455
00:47:47,620 --> 00:47:50,380
0,330 330,570 570,780 780,870 870,2760
um, so kind of z

1456
00:47:50,380 --> 00:47:51,730
0,330 330,810 810,1140 1140,1290 1290,1350
this difficulties chosen for a

1457
00:47:51,730 --> 00:47:52,840
0,270 270,360 360,750
period of time.

1458
00:47:52,870 --> 00:47:53,800
0,240 240,330 330,420 420,720 720,930
Like for the next like

1459
00:47:53,800 --> 00:47:54,910
0,510 510,660 660,720 720,930 930,1110
twenty as a whole bunch

1460
00:47:54,910 --> 00:47:55,930
0,60 60,390 390,660 660,780 780,1020
of years block it only

1461
00:47:55,930 --> 00:47:58,180
0,420 420,1110 1530,1800 1800,2070 2070,2250
changes periodically you can't change

1462
00:47:58,180 --> 00:47:59,500
0,120 120,750
it arbitrarily.

1463
00:47:59,880 --> 00:48:01,230
0,240 240,480 480,840 840,1200 1230,1350
So was that, um, I'm

1464
00:48:01,230 --> 00:48:01,980
0,210 210,360 360,510 510,540 540,750
sorry I think I missed

1465
00:48:01,980 --> 00:48:04,500
0,150 150,480 840,1290 1530,2400 2400,2520
that line, the difficulty is

1466
00:48:04,500 --> 00:48:06,480
0,270 270,840 840,1140 1140,1410 1410,1980
not changed on every block,

1467
00:48:06,900 --> 00:48:09,270
0,300 300,870 870,1560 1560,2100 2100,2370
a is periodically changed after

1468
00:48:09,270 --> 00:48:10,620
0,240 240,600 600,750 750,930 930,1350
some number of your blocks,

1469
00:48:10,620 --> 00:48:12,360
0,360 360,540 540,660 660,1230
yeah have been computed.

1470
00:48:12,480 --> 00:48:13,470
0,270 270,660 660,750 750,840 840,990
And so you know it's

1471
00:48:13,470 --> 00:48:14,370
0,210 210,300 300,360 360,810 810,900
done in the back, you

1472
00:48:14,370 --> 00:48:15,330
0,210 210,540 540,630 630,810 810,960
know everybody can see what

1473
00:48:15,330 --> 00:48:16,830
0,150 150,360 360,660 660,1230 1320,1500
these time stands, are you

1474
00:48:16,830 --> 00:48:18,780
0,360 360,660 660,780 780,1020 1020,1950
know every I think every

1475
00:48:18,810 --> 00:48:20,070
0,570 570,660 660,750 750,1020 1020,1260
pickup with the exact number

1476
00:48:20,070 --> 00:48:22,470
0,120 120,540 540,810 810,2010 2010,2400
of boxes were a when

1477
00:48:22,500 --> 00:48:24,270
0,420 420,600 600,690 690,1350 1350,1770
when there are difficulties adjusting.

1478
00:48:25,140 --> 00:48:26,180
0,210 210,510
I see.

1479
00:48:27,970 --> 00:48:28,630
0,180 180,240 240,390 390,570 570,660
So at that point you

1480
00:48:28,630 --> 00:48:29,800
0,240 240,750 750,840 840,990 990,1170
already agreed with all those

1481
00:48:29,800 --> 00:48:31,000
0,330 330,420 420,480 480,960 990,1200
blogs in the past so

1482
00:48:31,000 --> 00:48:32,110
0,330 330,450 450,840 840,960 960,1110
everybody's in agreement though like

1483
00:48:32,110 --> 00:48:33,460
0,210 210,750
what the.

1484
00:48:33,460 --> 00:48:34,420
0,240 240,480 480,720 720,840 840,960
Type things are that we're

1485
00:48:34,420 --> 00:48:35,350
0,180 180,330 330,570 570,690 690,930
going to use to actually

1486
00:48:35,350 --> 00:48:37,390
0,240 240,270 270,510 510,1260 1440,2040
compute a new a block.

1487
00:48:39,530 --> 00:48:41,540
0,540 660,1020 1020,1230 1230,1530 1530,2010
I'm so so I I

1488
00:48:41,540 --> 00:48:45,650
0,540 690,1290 1320,1860 1860,2670 3030,4110
had a question about like

1489
00:48:45,680 --> 00:48:48,320
0,450 450,1080 1080,1470 1470,1950 2130,2640
achieving consensus I guess, like

1490
00:48:48,380 --> 00:48:50,060
0,300 300,420 420,870 870,1530 1530,1680
all of this relies on

1491
00:48:50,060 --> 00:48:50,940
0,420
like.

1492
00:48:50,970 --> 00:48:52,800
0,390 390,600 600,900 900,1380 1380,1830
Pretty much every node running

1493
00:48:52,800 --> 00:48:54,960
0,1020 1020,1350 1350,1650 1650,1950 1950,2160
z same code right, or

1494
00:48:54,960 --> 00:48:57,210
0,150 150,330 330,720 720,1590 1620,2250
at least following the rules

1495
00:48:57,210 --> 00:48:59,910
0,480 480,780 780,1500 2340,2550 2550,2700
very, very precisely like what

1496
00:48:59,910 --> 00:49:01,140
0,300 300,450 450,600 600,720 720,1230
happens if there's a bug

1497
00:49:01,170 --> 00:49:02,430
0,360 360,510 510,1020 1080,1200 1200,1260
in my code and the

1498
00:49:02,430 --> 00:49:04,710
0,210 210,330 330,450 450,900 1320,2280
code that I'm running, you

1499
00:49:04,740 --> 00:49:06,420
0,480 480,870 870,1290 1290,1560 1560,1680
know maybe koa bug in

1500
00:49:06,420 --> 00:49:07,530
0,210 210,300 300,660 660,780 780,1110
like a bunch of different

1501
00:49:07,530 --> 00:49:09,140
0,600
nodes.

1502
00:49:09,590 --> 00:49:11,180
0,270 270,660 660,960 960,1200 1200,1590
Does that throw off like

1503
00:49:11,210 --> 00:49:12,860
0,450 450,660 660,1050 1080,1560 1560,1650
like all like notions of

1504
00:49:12,860 --> 00:49:15,280
0,210 210,1140 1140,1860
like consistency potentially.

1505
00:49:15,560 --> 00:49:17,720
0,360 360,630 630,1710 1710,1740 1830,2160
Well, yeah it a long

1506
00:49:17,720 --> 00:49:18,830
0,90 90,330 330,810 810,990 990,1110
as a majority as we'll

1507
00:49:18,830 --> 00:49:19,550
0,150 150,180 180,360 360,510 510,720
talk a little bit more

1508
00:49:19,550 --> 00:49:21,200
0,270 270,420 420,1020 1020,1230 1230,1650
about it has a majority

1509
00:49:21,200 --> 00:49:22,370
0,60 60,150 150,510 510,840 870,1170
of the notebook that runs

1510
00:49:22,370 --> 00:49:23,420
0,90 90,300 300,660 660,780 780,1050
the right code, you have

1511
00:49:23,420 --> 00:49:25,520
0,300 300,510 510,780 1020,1560
to work out right.

1512
00:49:26,010 --> 00:49:26,760
0,210 210,390 390,510 510,690 690,750
But like if there's a

1513
00:49:26,760 --> 00:49:29,010
0,660 660,840 840,1080 1080,1620 1620,2250
trapdoor in the code, yeah

1514
00:49:29,010 --> 00:49:30,030
0,180 180,300 300,330 330,750 750,1020
you've got a problem like

1515
00:49:30,030 --> 00:49:31,230
0,120 120,270 270,360 360,810 810,1200
if there's a temporary Linux

1516
00:49:31,230 --> 00:49:32,100
0,90 90,210 210,240 240,510 510,870
you got a problem too.

1517
00:49:33,940 --> 00:49:36,010
0,480 660,1080 1080,1530 1560,1830 1830,2070
So, so do do, does

1518
00:49:36,010 --> 00:49:37,840
0,330 330,660 660,1200 1290,1680 1680,1830
every node run like the

1519
00:49:37,840 --> 00:49:40,060
0,240 240,660 660,1080 1260,1440 1440,2220
same code or are there

1520
00:49:40,060 --> 00:49:41,500
0,60 60,390 390,660 660,1080 1080,1440
a couple different Bitcoin version

1521
00:49:41,500 --> 00:49:42,190
0,270 270,360 360,510 510,540 540,690
around we'll talk a little

1522
00:49:42,190 --> 00:49:42,910
0,120 120,300 300,540 540,660 660,720
bit more about in a

1523
00:49:42,910 --> 00:49:44,530
0,390 480,1050 1080,1200 1200,1320 1320,1620
second um, but there are

1524
00:49:44,530 --> 00:49:47,680
0,330 540,660 660,1320 1470,2190 3000,3150
um, the main core they're

1525
00:49:47,680 --> 00:49:48,820
0,420 420,510 510,690 690,810 810,1140
called you know and they're

1526
00:49:48,820 --> 00:49:49,720
0,210 210,420 420,570 570,660 660,900
like it's like an open

1527
00:49:49,720 --> 00:49:51,850
0,240 240,750 750,1440 1470,1830 1830,2130
source project like Linux is

1528
00:49:51,850 --> 00:49:53,320
0,150 150,330 330,540 540,1230 1230,1470
kind of house maintainers and

1529
00:49:53,530 --> 00:49:54,970
0,360 360,600 600,1170 1170,1320 1320,1440
no code review and all

1530
00:49:54,970 --> 00:49:55,940
0,120 120,240 240,300 300,660
that kind of stuff.

1531
00:49:56,860 --> 00:49:58,390
0,270 270,570 570,930 930,1020 1020,1530
And most of the walls,

1532
00:49:58,390 --> 00:50:00,610
0,120 120,360 360,450 450,1710 1770,2220
and most of ze appears

1533
00:50:00,610 --> 00:50:02,320
0,150 150,600 600,930 930,1020 1020,1710
will run one of the

1534
00:50:02,320 --> 00:50:04,200
0,570 570,900 900,1320
standardized version basically.

1535
00:50:04,560 --> 00:50:05,700
0,540
Thanks.

1536
00:50:11,070 --> 00:50:12,980
0,450 450,600 600,750 750,1320
A or a fork.

1537
00:50:13,740 --> 00:50:15,800
0,600 630,1200
So, um.

1538
00:50:16,080 --> 00:50:16,950
0,150 150,240 240,360 360,630 630,870
So we know now what

1539
00:50:16,950 --> 00:50:17,760
0,60 60,330 330,600 600,720 720,810
the rule is you know

1540
00:50:17,760 --> 00:50:20,370
0,630 630,750 750,990 990,1620 1620,2610
who can actually extends a

1541
00:50:20,400 --> 00:50:22,710
0,750 930,1290 1290,1590 1590,1740 1740,2310
log a or the change

1542
00:50:22,710 --> 00:50:23,940
0,600 660,810 810,930 930,1140 1140,1230
watching he could still have

1543
00:50:23,940 --> 00:50:25,200
0,540
forged.

1544
00:50:25,230 --> 00:50:27,960
0,510 540,990 990,1440 1440,2070
Okay, new York chain.

1545
00:50:27,990 --> 00:50:30,020
0,240 240,420 420,630 630,1500
There will be five.

1546
00:50:30,110 --> 00:50:32,240
0,300 300,1050 1470,1920 1920,2010 2010,2130
B six and you know

1547
00:50:32,240 --> 00:50:33,650
0,390 390,480 480,600 600,1230 1230,1410
we you know somebody to

1548
00:50:33,650 --> 00:50:34,640
0,270 270,480 480,690 690,870 870,990
do may actually gets a

1549
00:50:34,640 --> 00:50:36,470
0,570 600,870 870,990 990,1380 1380,1830
lucky and so roughly computers

1550
00:50:36,470 --> 00:50:38,000
0,210 210,390 390,990 1140,1350 1350,1530
can b seven to b

1551
00:50:38,000 --> 00:50:39,020
0,270 270,420 420,480 480,720 720,1020
seven at the same time

1552
00:50:39,050 --> 00:50:40,640
0,360 690,990 990,1140 1140,1290 1290,1590
so you're gonna be seven

1553
00:50:40,640 --> 00:50:41,740
0,600
prime.

1554
00:50:41,770 --> 00:50:42,670
0,300 300,450 450,540 540,690 690,900
And here we got v

1555
00:50:42,670 --> 00:50:44,280
0,240 240,510 510,840
seven double prime.

1556
00:50:45,910 --> 00:50:48,070
0,570 810,1080 1080,1170 1170,1560 1590,2160
Um, that would be problematic

1557
00:50:48,070 --> 00:50:49,390
0,150 150,300 300,510 510,810 810,1320
for us right, because maybe

1558
00:50:49,390 --> 00:50:51,280
0,270 270,360 360,810 810,1320 1320,1890
one of these this chain

1559
00:50:51,670 --> 00:50:53,470
0,810 810,900 900,1560 1560,1650 1650,1800
has the deduction you know

1560
00:50:53,470 --> 00:50:56,170
0,690 900,1770 1770,2130 2130,2580 2580,2700
the why to whatever it

1561
00:50:56,170 --> 00:50:57,580
0,240 240,360 360,810
white, you see.

1562
00:50:57,950 --> 00:50:59,180
0,360 360,690 690,810 810,1020 1020,1230
Yeah, maybe this one has

1563
00:50:59,180 --> 00:51:00,920
0,180 180,420 420,690 690,1020
no y two two.

1564
00:51:02,400 --> 00:51:03,570
0,720 720,810 810,990 990,1080 1080,1170
When we were on a

1565
00:51:03,570 --> 00:51:04,440
0,150 150,210 210,630 630,750 750,870
sort of mature that we

1566
00:51:04,440 --> 00:51:05,460
0,270 270,630 630,720 720,840 840,1020
actually settle in the end

1567
00:51:05,460 --> 00:51:06,720
0,90 90,300 300,660
of one chain.

1568
00:51:07,180 --> 00:51:08,410
0,150 150,420 420,540 540,870 870,1230
So there's two reasons why

1569
00:51:08,410 --> 00:51:10,300
0,180 180,480 480,690 690,1260 1710,1890
this change might develop no

1570
00:51:10,300 --> 00:51:12,660
0,540 570,1050 1050,1770
one is a.

1571
00:51:12,690 --> 00:51:16,500
0,690 690,990 1260,1710 1710,1950 1950,3810
People are politicians find z.

1572
00:51:17,140 --> 00:51:18,010
0,270 270,360 360,690 690,780 780,870
Find the neurons at the

1573
00:51:18,010 --> 00:51:19,440
0,210 210,690
same time.

1574
00:51:22,510 --> 00:51:23,410
0,180 180,480 480,570 570,660 660,900
Or roughly at the same

1575
00:51:23,410 --> 00:51:24,440
0,480
time.

1576
00:51:24,440 --> 00:51:25,670
0,330 330,420 420,720 720,990 990,1230
And the second one is

1577
00:51:25,670 --> 00:51:26,780
0,330 330,840 840,960 960,1080 1080,1110
that there may be a

1578
00:51:26,780 --> 00:51:29,580
0,240 240,780
slow networks.

1579
00:51:30,940 --> 00:51:32,500
0,210 210,660 660,870 870,1140 1140,1560
And so you know appear

1580
00:51:32,500 --> 00:51:34,120
0,330 330,1020 1050,1140 1140,1290 1290,1620
might receive you know from

1581
00:51:34,120 --> 00:51:35,800
0,600 720,1170 1170,1350 1350,1380 1380,1680
two notes that are different

1582
00:51:35,800 --> 00:51:36,520
0,120 120,210 210,360 360,420 420,720
and so then I worked

1583
00:51:36,520 --> 00:51:37,390
0,120 120,270 270,510 510,690 690,870
at some point these two

1584
00:51:37,390 --> 00:51:38,780
0,210 210,960
new solutions.

1585
00:51:39,080 --> 00:51:41,750
0,570 1020,1620 1770,2460 2460,2580 2580,2670
Um, and basically you know

1586
00:51:41,750 --> 00:51:42,860
0,390 390,510 510,780 780,960 960,1110
when a node ends up

1587
00:51:42,860 --> 00:51:44,390
0,90 90,210 210,870 900,1320 1320,1530
in this situation basically does

1588
00:51:44,390 --> 00:51:46,160
0,330 510,990 990,1320 1320,1470 1470,1770
nothing unusual keeps the fork

1589
00:51:46,160 --> 00:51:48,110
0,480 750,1020 1020,1200 1200,1770 1800,1950
around and just waits to

1590
00:51:48,110 --> 00:51:50,600
0,330 330,600 600,1110 1110,1800 2190,2490
see which forgets extended and

1591
00:51:50,600 --> 00:51:51,620
0,330 330,390 390,510 510,810 810,1020
so you know maybe this

1592
00:51:51,620 --> 00:51:53,240
0,330 330,390 390,660 660,1350 1350,1620
work, the bottom one will

1593
00:51:53,240 --> 00:51:54,410
0,150 150,660 690,960 960,1050 1050,1170
get extended if we go

1594
00:51:54,410 --> 00:51:56,390
0,660 1200,1560 1560,1710 1710,1770 1770,1980
da and then the rule

1595
00:51:56,390 --> 00:51:58,400
0,60 60,300 300,930 1020,1860 1860,2010
is very simple, um, you

1596
00:51:58,400 --> 00:52:00,440
0,210 210,510 540,870 870,1470
know the peer switches.

1597
00:52:04,110 --> 00:52:06,220
0,540 540,660 660,1080 1080,1590
Switches, the longest fork.

1598
00:52:11,690 --> 00:52:14,510
0,630 630,1230 1230,1770 1770,2130 2250,2820
And, um, and so, um,

1599
00:52:14,510 --> 00:52:15,890
0,210 210,390 390,1080 1080,1140 1140,1380
and so basically you know

1600
00:52:15,890 --> 00:52:17,480
0,270 270,360 360,1080 1080,1260 1260,1590
all the transactions you might

1601
00:52:17,480 --> 00:52:18,830
0,150 150,420 420,780 780,930 930,1350
have learned about in this

1602
00:52:18,830 --> 00:52:20,600
0,480 660,930 930,1050 1050,1320 1320,1770
work in the top fork,

1603
00:52:20,720 --> 00:52:21,740
0,120 120,270 270,390 390,450 450,1020
I'm just going to disappear,

1604
00:52:21,770 --> 00:52:22,970
0,120 120,210 210,420 420,870 900,1200
you know there's gonna not

1605
00:52:22,970 --> 00:52:25,490
0,450 450,840 1080,1200 1200,1680 1950,2520
matter in the system, because

1606
00:52:25,490 --> 00:52:26,540
0,90 90,240 240,660 720,810 810,1050
in the end, you know

1607
00:52:26,540 --> 00:52:28,040
0,180 180,690 690,900 900,1260 1260,1500
all those good notes will

1608
00:52:28,040 --> 00:52:29,270
0,240 240,630 630,810 810,870 870,1230
actually agree on the longest

1609
00:52:29,270 --> 00:52:32,660
0,510 750,1380 1410,1980 2010,2670 2700,3390
chain and basically proceed winding

1610
00:52:32,660 --> 00:52:34,220
0,420 420,510 510,870 870,1170
along the longest chain.

1611
00:52:35,010 --> 00:52:36,810
0,180 180,240 240,510 510,960 1500,1800
That's the basic plan and

1612
00:52:36,810 --> 00:52:37,680
0,90 90,330 330,630 630,660 660,870
so let's look a little

1613
00:52:37,680 --> 00:52:39,420
0,150 150,570 570,1200 1260,1470 1470,1740
bit about how would that

1614
00:52:39,420 --> 00:52:41,280
0,450 450,660 660,1260 1260,1500 1500,1860
solve our double double spending

1615
00:52:41,280 --> 00:52:42,200
0,360
problem.

1616
00:52:43,880 --> 00:52:45,620
0,540 540,690 690,1020 1020,1170 1170,1740
Wait I have a question

1617
00:52:45,620 --> 00:52:48,320
0,480 540,840 840,1470 1890,2310 2340,2700
on your slide, yep, I'm

1618
00:52:48,320 --> 00:52:49,610
0,180 180,600 600,720 720,930 930,1290
gonna continue a pretty slight

1619
00:52:49,610 --> 00:52:52,550
0,600 1080,1320 1320,1740 2100,2520 2520,2940
dislike, oh okay, so, um,

1620
00:52:52,580 --> 00:52:53,240
0,270 270,420 420,510 510,570 570,660
good luck, may I ask

1621
00:52:53,240 --> 00:52:54,560
0,60 60,450 450,840
the question so.

1622
00:52:54,840 --> 00:52:56,910
0,300 300,960 960,1110 1110,1710 1830,2070
So even if the in

1623
00:52:56,910 --> 00:52:58,320
0,150 150,300 300,390 390,810 810,1410
the in the second cause

1624
00:52:58,320 --> 00:53:00,540
0,210 210,330 330,570 570,1290 1830,2220
like the slow network can't

1625
00:53:00,540 --> 00:53:02,850
0,390 390,930 960,1620 1620,1950 1950,2310
you um detect that if

1626
00:53:02,850 --> 00:53:04,710
0,150 150,690 690,870 870,1380 1380,1860
you if the minor included

1627
00:53:04,710 --> 00:53:06,090
0,120 120,420 420,930 930,1230 1230,1380
the time stamp where they

1628
00:53:06,090 --> 00:53:07,050
0,240 240,450 450,600 600,870 870,960
felt when they found the

1629
00:53:07,050 --> 00:53:08,320
0,720
solution.

1630
00:53:08,930 --> 00:53:14,220
0,720 720,960 990,3780 3960,4740
Um, yeah OK, yeah.

1631
00:53:14,660 --> 00:53:16,520
0,150 150,600 600,1080 1080,1230 1230,1860
You might already be suspicious

1632
00:53:16,520 --> 00:53:17,960
0,240 240,600 600,1080 1080,1230 1230,1440
or may agree on what

1633
00:53:17,960 --> 00:53:19,190
0,270 270,390 390,840 840,1140 1140,1230
actually the next what the

1634
00:53:19,190 --> 00:53:20,750
0,240 240,480 480,570 570,810 810,1560
right probably the right changes,

1635
00:53:20,780 --> 00:53:21,920
0,210 210,270 270,480 480,570 570,1140
but it will be confirmed

1636
00:53:21,920 --> 00:53:24,460
0,480 480,750 750,1560 1560,2130
later by future blocks.

1637
00:53:24,800 --> 00:53:26,180
0,510 510,810 810,1020 1020,1080 1080,1380
And you use the future

1638
00:53:26,180 --> 00:53:27,770
0,360 360,510 510,720 720,1230 1230,1590
blocks do really disciples longest

1639
00:53:27,770 --> 00:53:28,840
0,600
genius.

1640
00:53:30,630 --> 00:53:31,700
0,510
Okay.

1641
00:53:34,060 --> 00:53:37,660
0,660 1020,1650 1680,2010 2010,2400 2700,3600
Um, OK double spending, um,

1642
00:53:37,660 --> 00:53:39,100
0,150 150,330 330,480 480,900 900,1440
so let's talk about two

1643
00:53:39,100 --> 00:53:40,420
0,450 450,600 600,1050 1050,1260 1260,1320
easy two cases when the

1644
00:53:40,420 --> 00:53:42,310
0,180 180,330 330,450 450,900 1140,1890
first one is easy, a

1645
00:53:42,310 --> 00:53:44,700
0,90 90,180 180,900 1140,1920
you know why since.

1646
00:53:45,400 --> 00:53:46,930
0,120 120,270 270,870 900,1290 1290,1530
You know the y to

1647
00:53:46,930 --> 00:53:49,900
0,630 1440,1770 1770,2040 2040,2310 2310,2970
z and y tu que.

1648
00:53:50,950 --> 00:53:52,240
0,390 390,600 600,1020 1020,1170 1170,1290
To some peer through the

1649
00:53:52,240 --> 00:53:54,800
0,540
piers.

1650
00:53:54,950 --> 00:53:56,390
0,420 420,780 780,960 960,1110 1110,1440
And basically what will happen

1651
00:53:56,570 --> 00:53:57,470
0,90 90,240 240,540 540,630 630,900
in this case is that

1652
00:53:57,470 --> 00:53:58,670
0,270 270,360 360,540 540,870 870,1200
it's a well behaving here

1653
00:53:58,670 --> 00:53:59,570
0,120 120,270 270,450 450,780 780,900
you'll see like hey you

1654
00:53:59,570 --> 00:54:02,180
0,90 90,1110 1350,1830 1830,2190 2190,2610
know transactions, um that actually

1655
00:54:02,180 --> 00:54:03,260
0,90 90,360 360,420 420,690 690,1080
I spent the same money,

1656
00:54:03,260 --> 00:54:05,690
0,480 870,1590 1680,2220 2220,2340 2340,2430
um twice are going to

1657
00:54:05,690 --> 00:54:07,820
0,600 630,960 960,1350 1590,1950 1950,2130
reject a that appear that

1658
00:54:07,820 --> 00:54:09,560
0,540 540,810 810,1020 1020,1350 1350,1740
regime was trying to go

1659
00:54:09,560 --> 00:54:10,370
0,60 60,90 90,570 570,720 720,810
on a minor that is

1660
00:54:10,370 --> 00:54:11,540
0,120 120,180 180,540 540,600 600,1170
going to construct a blog

1661
00:54:11,600 --> 00:54:13,400
0,540 540,1050 1050,1140 1140,1230 1230,1800
intellectual validate all the injections

1662
00:54:13,400 --> 00:54:14,360
0,360 360,450 450,720 720,840 840,960
before they stick them in

1663
00:54:14,360 --> 00:54:15,280
0,60 60,480
the blog.

1664
00:54:15,610 --> 00:54:16,570
0,180 180,330 330,510 510,870 870,960
Um, so this whole you

1665
00:54:16,570 --> 00:54:17,800
0,270 300,660 660,960 960,1140 1140,1230
know don't really this is

1666
00:54:17,800 --> 00:54:18,970
0,120 120,270 270,660 660,990 990,1170
not gonna work miners gonna

1667
00:54:18,970 --> 00:54:20,760
0,510 510,690 690,1260
reject good miners.

1668
00:54:24,310 --> 00:54:25,990
0,450 570,930 930,1200 1200,1620 1620,1680
Okay, the second question, the

1669
00:54:25,990 --> 00:54:27,760
0,240 240,720 720,900 900,1080 1080,1770
more interesting I think cases

1670
00:54:27,880 --> 00:54:30,560
0,540 540,930 930,1620
visually why since.

1671
00:54:30,650 --> 00:54:32,560
0,390 390,570 570,1230
Why do zoo.

1672
00:54:32,800 --> 00:54:34,120
0,120 120,390 390,570 570,690 690,1320
To some set of peers.

1673
00:54:35,980 --> 00:54:38,980
0,870 990,1350 1350,1650 1650,2310
And then y que.

1674
00:54:39,240 --> 00:54:40,530
0,210 210,540 540,690 690,780 780,1290
Through another set of Peters.

1675
00:54:47,160 --> 00:54:49,860
0,1050 1050,1560 1980,2430 2430,2640 2640,2700
Yeah yeah yeah, and I

1676
00:54:49,860 --> 00:54:51,960
0,450 780,1350 1380,1860 1860,1950 1950,2100
might know, maybe you know

1677
00:54:51,960 --> 00:54:53,520
0,630 660,1020 1020,1260 1260,1410 1410,1560
the maybe one pool was

1678
00:54:53,520 --> 00:54:54,570
0,210 210,360 360,420 420,600 600,1050
bigger than the other pool,

1679
00:54:54,780 --> 00:54:56,160
0,390 390,630 630,810 810,1230 1230,1380
but it could actually end

1680
00:54:56,160 --> 00:54:57,150
0,150 150,270 270,300 300,810 810,990
up in a situation where

1681
00:54:57,150 --> 00:54:58,860
0,540 540,870 870,1050 1050,1140 1140,1710
basically we got the chain

1682
00:54:59,250 --> 00:55:02,700
0,690 1080,1770 1860,2520 2520,3060 3150,3450
before and basically there once

1683
00:55:02,700 --> 00:55:04,260
0,90 90,600 600,660 660,780 780,1560
it appears you know computes.

1684
00:55:04,620 --> 00:55:06,390
0,90 90,240 240,930 960,1410 1410,1770
You know, they're a hash

1685
00:55:06,390 --> 00:55:08,250
0,450 480,660 660,990 990,1290 1290,1860
word that includes white cube.

1686
00:55:09,000 --> 00:55:10,380
0,540 540,600 600,780 780,1050 1050,1380
And the other one computes

1687
00:55:10,380 --> 00:55:11,340
0,60 60,450 450,510 510,690 690,960
a block you know actually

1688
00:55:11,340 --> 00:55:13,400
0,360 360,600 600,1020 1020,1410
contains y to z.

1689
00:55:13,740 --> 00:55:15,360
0,660 930,1110 1110,1290 1290,1440 1440,1620
Um, so this looks like

1690
00:55:15,360 --> 00:55:17,100
0,180 180,420 420,750 750,1200 1350,1740
a double spending thing and

1691
00:55:17,100 --> 00:55:18,570
0,150 150,330 330,570 570,1050 1140,1470
so if your z like

1692
00:55:18,570 --> 00:55:20,010
0,270 270,360 360,630 780,1230 1230,1440
CEO is the person that

1693
00:55:20,010 --> 00:55:20,970
0,90 90,210 210,300 300,720 720,960
is going to decide whether

1694
00:55:20,970 --> 00:55:22,620
0,270 270,810 810,870 870,1290 1440,1650
to accept you know this

1695
00:55:22,620 --> 00:55:25,320
0,480 480,600 600,1080 1080,1710 2100,2700
transaction and handout, the handout

1696
00:55:25,320 --> 00:55:27,210
0,120 120,810 930,1290 1290,1410 1410,1890
the latte what you do

1697
00:55:27,240 --> 00:55:29,080
0,630 630,780 780,930 930,1380
is you're gonna wait.

1698
00:55:29,380 --> 00:55:31,030
0,330 330,450 450,600 600,870 870,1650
And you're gonna wait until

1699
00:55:31,210 --> 00:55:32,170
0,360 360,600 600,660 660,870 870,960
um there's a bunch of

1700
00:55:32,170 --> 00:55:33,610
0,360 360,900 900,1050 1050,1140 1140,1440
more blocks that are behind

1701
00:55:33,610 --> 00:55:35,530
0,210 270,690 1020,1500 1500,1650 1650,1920
it, so typically it's five

1702
00:55:35,530 --> 00:55:37,180
0,480 510,720 720,840 840,1110 1110,1650
six up to five six

1703
00:55:37,510 --> 00:55:39,070
0,150 150,390 390,780 780,1320 1320,1560
are very valuable transaction, maybe

1704
00:55:39,070 --> 00:55:39,940
0,180 180,300 300,360 360,720 720,870
not for a latte, but

1705
00:55:39,940 --> 00:55:41,110
0,120 120,270 270,540 540,600 600,1170
if you're buying a car

1706
00:55:41,380 --> 00:55:42,640
0,510 510,840 840,1050 1050,1200 1200,1260
a you really want to

1707
00:55:42,640 --> 00:55:43,810
0,150 150,360 360,780 780,990 990,1170
make damn sure that you're

1708
00:55:43,810 --> 00:55:45,670
0,150 150,270 270,390 390,840 1080,1860
gonna get your money and

1709
00:55:45,790 --> 00:55:47,200
0,300 300,570 570,690 690,930 930,1410
um that you know why

1710
00:55:47,200 --> 00:55:48,730
0,270 270,480 480,810 810,1050 1050,1530
didn't double spend the money,

1711
00:55:49,270 --> 00:55:51,610
0,540 570,1200 1740,1980 1980,2190 2190,2340
so, um, you mean where

1712
00:55:51,610 --> 00:55:53,860
0,180 210,1440 1440,1590 1590,1650 1650,2250
they wait for a while

1713
00:55:54,370 --> 00:55:56,500
0,300 300,720 720,1410 1410,1680 1680,2130
until new Hampshire campaign ended

1714
00:55:56,620 --> 00:55:57,820
0,420 420,420 420,690 690,1020 1020,1200
to a new blocks being

1715
00:55:57,820 --> 00:56:00,820
0,420 420,540 540,900 1260,2400 2520,3000
extended to the blockchain and

1716
00:56:00,820 --> 00:56:01,570
0,120 120,390 390,600 600,660 660,750
you know once you have

1717
00:56:01,570 --> 00:56:03,550
0,240 240,270 270,840 930,1890 1890,1980
five or six, um, you

1718
00:56:03,550 --> 00:56:05,500
0,210 630,810 810,1650 1680,1830 1830,1950
know some calculations you're going

1719
00:56:05,500 --> 00:56:07,000
0,60 60,240 240,660 660,1260 1260,1500
to be pretty confident you're

1720
00:56:07,000 --> 00:56:10,270
0,240 240,870 870,1260 1560,2310 2550,3270
very confident that, um yeah

1721
00:56:10,450 --> 00:56:12,220
0,600 600,1290 1290,1380 1380,1530 1530,1770
it's unlikely you know for

1722
00:56:12,220 --> 00:56:14,200
0,480 480,570 570,1230 1230,1500 1500,1980
attacker to basically a compute

1723
00:56:14,200 --> 00:56:15,610
0,120 120,330 330,870 1080,1230 1230,1410
a new chain and sort

1724
00:56:15,610 --> 00:56:17,770
0,240 360,1440 1470,1590 1590,1770 1770,2160
of overtake, you know the

1725
00:56:17,770 --> 00:56:19,120
0,330 330,660 690,960 960,1140 1140,1350
longer chain right let's say

1726
00:56:19,120 --> 00:56:20,500
0,180 180,300 300,420 420,1050 1260,1380
this is the attacker, the

1727
00:56:20,500 --> 00:56:22,480
0,360 360,600 600,810 810,1440 1440,1980
attacker has less computational power,

1728
00:56:22,510 --> 00:56:24,070
0,90 90,180 180,660 660,720 1470,1560
they are presumably on the

1729
00:56:24,070 --> 00:56:25,390
0,450 450,690 690,810 810,960 960,1320
assumption behind this whole paper

1730
00:56:25,390 --> 00:56:26,710
0,180 180,390 390,900 900,1170 1170,1320
has less computational power than

1731
00:56:26,710 --> 00:56:28,150
0,90 90,180 180,360 360,810 1140,1440
all the good people and

1732
00:56:28,150 --> 00:56:29,380
0,420 540,780 780,870 870,1050 1050,1230
so if the good people

1733
00:56:29,380 --> 00:56:29,680
0,240
have.

1734
00:56:29,680 --> 00:56:31,390
0,180 180,810 810,1350 1380,1590 1590,1710
More computational power, it's going

1735
00:56:31,390 --> 00:56:32,800
0,90 90,150 150,900 900,1170 1170,1410
to be impossible for the

1736
00:56:32,800 --> 00:56:35,830
0,540 540,930 1320,2040 2040,2310 2820,3030
attack are unlikely or the

1737
00:56:35,830 --> 00:56:37,780
0,450 450,630 630,900 930,1830 1830,1950
judges will be impossible or

1738
00:56:37,780 --> 00:56:39,550
0,600 660,960 960,1440 1440,1650 1650,1770
unlikely for detective vision, we

1739
00:56:39,550 --> 00:56:41,290
0,360 360,960 1110,1260 1260,1500 1500,1740
compute faster and actually make

1740
00:56:41,290 --> 00:56:42,760
0,120 120,690 690,810 810,900 900,1470
a change that is lower

1741
00:56:42,760 --> 00:56:43,980
0,180 180,240 240,420 420,750
than the good change.

1742
00:56:44,580 --> 00:56:45,390
0,150 150,330 330,450 450,540 540,810
So that's sort of the

1743
00:56:45,420 --> 00:56:47,700
0,630 690,1290 1290,1500 1500,2010 2010,2280
key assumption that's behind all

1744
00:56:47,700 --> 00:56:51,150
0,510 570,1530 1530,2160 2160,3000 3000,3450
this, um among z reasoner

1745
00:56:51,360 --> 00:56:52,520
0,570
reason.

1746
00:56:53,560 --> 00:56:55,180
0,150 150,240 240,600 600,1230 1470,1620
And so basically see you

1747
00:56:55,180 --> 00:56:56,020
0,210 210,420 420,540 540,630 630,840
know just has to wait

1748
00:56:56,020 --> 00:56:57,820
0,120 120,210 210,810 930,1560 1560,1800
for a while until the

1749
00:56:57,820 --> 00:56:59,080
0,180 180,540 540,630 630,1170 1170,1260
good guys are extended to

1750
00:56:59,080 --> 00:57:00,910
0,510 510,900 900,1350 1350,1740 1740,1830
chain long enough that you

1751
00:57:00,910 --> 00:57:02,710
0,150 150,600 600,960 960,1470 1470,1800
know he's completely convinced that

1752
00:57:02,740 --> 00:57:04,390
0,90 90,660 660,780 780,1440 1440,1650
you know it's impossible for

1753
00:57:04,390 --> 00:57:05,950
0,60 60,210 210,300 300,870 1110,1560
a set of attackers, um

1754
00:57:05,950 --> 00:57:07,660
0,240 240,720 720,990 990,1620 1620,1710
to actually out compute, you

1755
00:57:07,660 --> 00:57:09,380
0,150 150,600 630,960 960,1290
know the good people.

1756
00:57:10,440 --> 00:57:12,060
0,390 720,990 990,1230 1230,1560 1560,1620
And at that point you

1757
00:57:12,060 --> 00:57:13,170
0,270 270,510 510,630 630,750 750,1110
know you can just accept

1758
00:57:13,170 --> 00:57:14,640
0,90 90,720 1050,1170 1170,1290 1290,1470
the transaction and say like

1759
00:57:14,640 --> 00:57:16,080
0,120 120,300 300,390 390,750 750,1440
oh this is legit transaction,

1760
00:57:16,080 --> 00:57:17,370
0,210 210,480 480,720 720,960 960,1290
if everything else checks out

1761
00:57:17,670 --> 00:57:20,100
0,690 690,1110 1110,1770 1770,1950 1950,2430
and a handover, the latte

1762
00:57:20,100 --> 00:57:20,880
0,120 120,180 180,600 600,690 690,780
with a car you know

1763
00:57:20,880 --> 00:57:23,970
0,360 360,810 1050,2160 2160,2730 2760,3090
to a zoo to Y

1764
00:57:23,970 --> 00:57:24,940
0,150 150,510
I guess.

1765
00:57:26,150 --> 00:57:28,280
0,330 330,510 510,1050 1050,1440 1440,2130
Sorry, quick question who distributes

1766
00:57:28,280 --> 00:57:30,040
0,90 90,900
the puzzles.

1767
00:57:30,520 --> 00:57:33,160
0,1020 1050,1500 1500,1770 1770,2280 2280,2640
Um, there's no distribution apostles

1768
00:57:33,160 --> 00:57:36,600
0,690 750,1770 1770,2850
necessary right z.

1769
00:57:37,570 --> 00:57:39,220
0,690 720,1110 1110,1410 1410,1530 1530,1650
The puzzle is you know

1770
00:57:39,220 --> 00:57:40,720
0,750 810,930 930,1020 1020,1170 1170,1500
predetermined you know the puzzle

1771
00:57:40,720 --> 00:57:41,830
0,180 180,360 360,540 540,630 630,1110
is you have to compute

1772
00:57:41,830 --> 00:57:43,300
0,180 180,630 630,810 810,900 900,1470
a hash over the block.

1773
00:57:43,780 --> 00:57:45,730
0,300 300,660 660,1050 1050,1290 1290,1950
That has enough leading zeros.

1774
00:57:49,160 --> 00:57:50,690
0,180 180,360 360,900 930,1470 1470,1530
So theres no distribution or

1775
00:57:50,690 --> 00:57:52,160
0,540 540,720 720,840 840,1020 1020,1470
deposit, only thing that's distributed

1776
00:57:52,160 --> 00:57:53,420
0,210 210,390 390,930 930,1110 1110,1260
maybe its difficulty, but as

1777
00:57:53,420 --> 00:57:54,050
0,180 180,360 360,390 390,540 540,630
we talk a little bit

1778
00:57:54,050 --> 00:57:55,190
0,420 420,570 570,690 690,750 750,1140
earlier that sort of adjusted

1779
00:57:55,190 --> 00:57:56,990
0,180 180,540 870,1110 1110,1200 1200,1800
over time in a deterministic

1780
00:57:56,990 --> 00:57:57,840
0,330
way.

1781
00:57:58,780 --> 00:58:00,040
0,360 360,720
Thank you.

1782
00:58:00,500 --> 00:58:03,260
0,810 900,1740 1740,1920 1920,2070 2070,2760
So there's all these transactions

1783
00:58:03,260 --> 00:58:04,580
0,120 120,210 210,720 720,870 870,1320
that are happening and then

1784
00:58:04,580 --> 00:58:06,350
0,210 210,690 690,1140 1140,1650 1650,1770
through some gossip protocol or

1785
00:58:06,350 --> 00:58:08,270
0,660 720,900 900,1380 1380,1830 1830,1920
something, the transaction distributed to

1786
00:58:08,270 --> 00:58:09,540
0,90 90,180 180,810
all the nodes.

1787
00:58:09,540 --> 00:58:10,820
0,210 210,780
And then.

1788
00:58:10,820 --> 00:58:15,170
0,1230 1680,2490 2550,3210 3210,3900 4080,4350
Somehow there's agreement on what

1789
00:58:15,170 --> 00:58:16,850
0,210 210,300 300,1050 1050,1230 1230,1680
set of transactions are packaged

1790
00:58:16,850 --> 00:58:18,050
0,210 210,300 300,690 690,810 810,1200
into a block so everyone

1791
00:58:18,050 --> 00:58:19,250
0,270 270,780 780,900 900,1110 1110,1200
has agreement on what the

1792
00:58:19,250 --> 00:58:20,560
0,330 330,870
block is.

1793
00:58:20,650 --> 00:58:23,380
0,330 330,690 720,1770 1830,2310 2490,2730
No no no no no

1794
00:58:23,380 --> 00:58:25,690
0,390 390,510 510,1140 1170,1680 1680,2310
no the miner receives transactions

1795
00:58:25,690 --> 00:58:26,600
0,390
Rec.

1796
00:58:27,260 --> 00:58:29,120
0,570 600,1050 1050,1470 1470,1680 1680,1860
A good year where was

1797
00:58:29,120 --> 00:58:29,940
0,270
it.

1798
00:58:31,300 --> 00:58:34,090
0,1050 1080,1950 2040,2220 2220,2430 2430,2790
A lock or some slight

1799
00:58:34,090 --> 00:58:35,830
0,480 780,1020 1020,1110 1110,1350 1350,1740
I think the next one.

1800
00:58:37,870 --> 00:58:39,340
0,270 270,450 450,1200 1230,1380 1380,1470
Yup, lots introductions, so the

1801
00:58:39,340 --> 00:58:41,460
0,450 450,690 690,1110 1110,1560
minor major minor I.

1802
00:58:41,720 --> 00:58:43,160
0,120 120,300 300,600 600,960 960,1440
You know just receive transactions

1803
00:58:43,160 --> 00:58:44,300
0,180 180,240 240,690 690,870 870,1140
over the network, and it

1804
00:58:44,300 --> 00:58:45,770
0,210 210,600 600,750 750,1230 1230,1470
just decides which transactions going

1805
00:58:45,770 --> 00:58:46,980
0,210 210,660
to watch.

1806
00:58:46,980 --> 00:58:48,930
0,600 600,990 990,1230 1230,1710 1710,1950
And it starts computing, and

1807
00:58:48,930 --> 00:58:50,160
0,120 120,210 210,780 810,1140 1140,1230
if it wins, that is

1808
00:58:50,160 --> 00:58:51,120
0,90 90,600 600,720 720,870 870,960
the transactions that go in

1809
00:58:51,120 --> 00:58:52,240
0,150 150,600
that block.

1810
00:58:52,670 --> 00:58:54,650
0,180 180,630 1350,1410 1410,1740 1740,1980
I see a doctor terms

1811
00:58:54,650 --> 00:58:56,480
0,180 180,480 480,840 1290,1440 1440,1830
the total order you know

1812
00:58:56,540 --> 00:58:57,530
0,150 150,420 420,570 570,660 660,990
the total order is disturbed

1813
00:58:57,530 --> 00:58:58,640
0,120 120,240 240,330 330,720 720,1110
by all the previous blocks

1814
00:58:58,640 --> 00:58:59,840
0,90 90,420 420,570 570,750 750,1200
can approach this new block

1815
00:58:59,840 --> 00:59:01,280
0,210 210,450 450,510 510,900 930,1440
and within a block basically

1816
00:59:01,280 --> 00:59:02,510
0,360 360,570 570,690 690,1080 1080,1230
minor eye is deciding what

1817
00:59:02,510 --> 00:59:03,680
0,180 180,300 720,870 870,1020 1020,1170
goes in and there's some

1818
00:59:03,680 --> 00:59:05,390
0,570 570,960 960,1290 1290,1650 1650,1710
complicated rules that miners are

1819
00:59:05,390 --> 00:59:07,790
0,300 300,660 690,1350 1410,2010 2010,2400
supposed to follow a but

1820
00:59:07,790 --> 00:59:08,690
0,330 330,420 420,630 630,840 840,900
basically the man gets to

1821
00:59:08,690 --> 00:59:09,600
0,420
decide.

1822
00:59:10,840 --> 00:59:12,120
0,360 360,840
Thank you.

1823
00:59:16,400 --> 00:59:17,300
0,150 150,240 240,270 270,480 480,900
And there are certain incentive

1824
00:59:17,300 --> 00:59:18,320
0,420 420,510 510,600 600,930 930,1020
systems for the miners to

1825
00:59:18,320 --> 00:59:19,660
0,90 90,210 210,450 450,750
do the right thing.

1826
00:59:20,480 --> 00:59:21,560
0,390 420,570 570,690 690,810 810,1080
Um, so let me talk

1827
00:59:21,560 --> 00:59:22,400
0,30 30,240 240,360 360,570 570,840
a little bit about this,

1828
00:59:22,400 --> 00:59:25,850
0,0 1560,1980 2310,2790 2790,3000 3000,3450
um, so yeah so far,

1829
00:59:26,240 --> 00:59:27,890
0,120 120,270 270,510 510,810 810,1650
you know we've seen the

1830
00:59:27,920 --> 00:59:28,910
0,480 480,660 660,810 810,900 900,990
disposal, that's sort of the

1831
00:59:28,910 --> 00:59:30,170
0,600 630,840 840,960 960,1170 1170,1260
core of this proof of

1832
00:59:30,170 --> 00:59:31,220
0,210 210,540 540,690 690,780 780,1050
work idea two is actually

1833
00:59:31,220 --> 00:59:33,230
0,90 90,510 510,600 600,1110 1200,2010
the core of actually achieving

1834
00:59:33,230 --> 00:59:36,950
0,750 1050,2430 2430,2970 3150,3420 3420,3720
consensus, um in um, but

1835
00:59:36,950 --> 00:59:38,240
0,90 90,480 540,840 840,1230 1230,1290
you know this requires the

1836
00:59:38,240 --> 00:59:39,140
0,300 300,510 510,660 660,870 870,900
miners actually do quite a

1837
00:59:39,140 --> 00:59:39,980
0,120 120,180 180,570 600,720 720,840
bit of work you know

1838
00:59:39,980 --> 00:59:41,720
0,210 210,360 360,510 510,750 750,1740
like they have to hash

1839
00:59:41,720 --> 00:59:43,670
0,390 390,450 450,720 720,1230 1230,1950
has a serious computer, a

1840
00:59:43,820 --> 00:59:45,230
0,330 510,810 810,930 930,1020 1050,1410
one one we saw roughly

1841
00:59:45,230 --> 00:59:46,970
0,60 60,330 330,750 1440,1650 1650,1740
a month worked and so

1842
00:59:46,970 --> 00:59:47,600
0,180 180,330 330,360 360,540 540,630
why would a man or

1843
00:59:47,600 --> 00:59:49,040
0,120 120,510 930,1110 1110,1260 1260,1440
do that and so there's

1844
00:59:49,040 --> 00:59:51,230
0,90 90,510 510,1080 1080,1860 1950,2190
an incentive system for to

1845
00:59:51,230 --> 00:59:52,670
0,420 420,840 840,990 990,1260 1260,1440
encourage miners to actually play

1846
00:59:52,670 --> 00:59:53,400
0,150 150,540
this role.

1847
01:00:02,510 --> 01:00:03,680
0,510 510,660 660,840 840,1080 1080,1170
And you know there's a

1848
01:00:03,680 --> 01:00:07,130
0,540 900,1320 1320,1770 1770,2700 2760,3450
rule that basically they're a

1849
01:00:07,250 --> 01:00:08,780
0,270 270,570 570,960 960,1410 1410,1530
bunch of bitcoins reserved in

1850
01:00:08,780 --> 01:00:10,670
0,60 60,570 600,780 780,1410 1440,1890
the pool like when rivers

1851
01:00:10,670 --> 01:00:12,560
0,450 450,570 570,720 840,1290 1290,1890
bits, you know Bitcoin transactions

1852
01:00:12,560 --> 01:00:15,950
0,240 240,780 1260,2070 2250,2850 2880,3390
are created and a miners

1853
01:00:15,950 --> 01:00:17,420
0,180 180,540 540,690 690,1320 1320,1470
get paid were rewarded out

1854
01:00:17,420 --> 01:00:18,500
0,60 60,150 150,570 690,960 960,1080
of the pool and so

1855
01:00:18,500 --> 01:00:19,940
0,180 180,330 330,420 420,720 720,1440
this was the first transaction.

1856
01:00:23,070 --> 01:00:25,290
0,510 510,630 630,750 750,1440 1680,2220
Production in the wok is

1857
01:00:25,290 --> 01:00:27,300
0,480 480,1320
basically reward.

1858
01:00:27,840 --> 01:00:29,500
0,240 240,390 390,450 450,1020
Um, for the minor.

1859
01:00:33,260 --> 01:00:34,400
0,210 210,330 330,660 660,750 750,1140
And so basically the miner

1860
01:00:34,400 --> 01:00:38,150
0,300 540,840 840,1560 1560,2700 2700,3750
can insert introduction in z

1861
01:00:38,150 --> 01:00:39,830
0,420 420,930 930,1020 1020,1290 1290,1680
considered introduction, the first lot

1862
01:00:40,160 --> 01:00:42,440
0,450 450,1080 1080,1410 1410,2070 2070,2280
a where that bicyclists are

1863
01:00:42,440 --> 01:00:43,640
0,60 60,330 330,420 420,690 690,1200
the {minor's -} public key

1864
01:00:43,820 --> 01:00:45,860
0,720 750,1530 1530,1860 1860,1980 1980,2040
and transferring money out of

1865
01:00:45,860 --> 01:00:47,420
0,90 90,450 450,540 540,1230
the pool to himself.

1866
01:00:47,580 --> 01:00:50,430
0,240 240,870 1410,2220 2250,2700 2700,2850
For herself and a and

1867
01:00:50,430 --> 01:00:51,390
0,180 180,300 300,540 540,810 810,960
that is the way that

1868
01:00:51,390 --> 01:00:53,520
0,300 300,600 600,1080 1080,1530 1860,2130
might get actually, um, uh,

1869
01:00:53,520 --> 01:00:56,370
0,1140 1170,2070 2070,2490 2490,2790 2790,2850
um, get naturally sort of

1870
01:00:56,370 --> 01:00:58,260
0,510 510,1200 1200,1350 1350,1740 1740,1890
a return or reward for

1871
01:00:58,260 --> 01:00:59,280
0,180 180,270 270,450 450,570 570,1020
actually the work they do

1872
01:00:59,640 --> 01:01:02,400
0,690 870,1560 1560,1980 1980,2190 2190,2760
a reward changes over time,

1873
01:01:02,460 --> 01:01:04,620
0,780 810,1500 1500,1590 1590,1800 1800,2160
I'm currently I think you

1874
01:01:04,650 --> 01:01:05,880
0,390 420,510 510,600 600,1080 1080,1230
were you know today is

1875
01:01:05,880 --> 01:01:06,840
0,120 120,240 240,360 360,660 660,960
I think it's six forty

1876
01:01:06,840 --> 01:01:09,040
0,210 210,750 780,1620
two five Bitcoin.

1877
01:01:10,100 --> 01:01:11,450
0,480 480,810 810,1080 1080,1290 1290,1350
Um to actually mined a

1878
01:01:11,450 --> 01:01:14,090
0,570 1200,1920 1920,2070 2070,2340 2340,2640
block, um, but this changes

1879
01:01:14,090 --> 01:01:15,050
0,150 150,390 390,480 480,720 720,960
over time, it actually has

1880
01:01:15,050 --> 01:01:17,780
0,180 180,630 630,1080 1350,2160 2160,2730
a having rule, um that

1881
01:01:17,810 --> 01:01:19,700
0,990 990,1110 1110,1440 1440,1560 1560,1890
reduces you know a half

1882
01:01:19,700 --> 01:01:21,470
0,690 840,1080 1080,1230 1230,1530 1530,1770
a couple years ago a

1883
01:01:21,500 --> 01:01:23,600
0,450 450,630 630,1200 1200,1500 1500,2100
twelve bit {{12.5,-} -} Bitcoin,

1884
01:01:23,930 --> 01:01:25,460
0,480 480,960 960,1260 1260,1470 1470,1530
um in a in a

1885
01:01:25,460 --> 01:01:26,930
0,360 360,510 510,840 840,1230 1230,1470
while will be whatever free

1886
01:01:26,930 --> 01:01:28,190
0,510 510,600 600,720 720,1140 1140,1260
points you know whatever they

1887
01:01:28,190 --> 01:01:29,450
0,330 330,540 540,780 780,1110 1110,1260
have six twenty five and

1888
01:01:29,450 --> 01:01:31,310
0,30 30,330 630,1110 1140,1470 1470,1860
I think I remember correctly

1889
01:01:31,310 --> 01:01:34,310
0,600 600,780 780,990 1380,1740 1740,3000
every {two,and -} every 210,000

1890
01:01:34,310 --> 01:01:36,920
0,930 1200,1530 1530,1740 1740,2010 2010,2610
blocks a that number haps

1891
01:01:37,430 --> 01:01:39,110
0,420 450,900 900,1110 1110,1350 1350,1680
it's until it runs {into

1892
01:01:39,110 --> 01:01:43,130
0,330 420,840 840,1140 1140,2400 2730,4020
-} the most fine isha's

1893
01:01:43,130 --> 01:01:47,000
0,0 0,510 660,2160 2190,3030 3390,3870
a finest Bitcoin denominator, um,

1894
01:01:47,000 --> 01:01:48,800
0,300 300,660 660,990 990,1560
and then basically stops.

1895
01:01:49,310 --> 01:01:50,600
0,360 360,480 480,570 570,840 840,1290
But we're a while away,

1896
01:01:50,630 --> 01:01:51,920
0,450 450,720 720,1080 1080,1200 1200,1290
before that actually is the

1897
01:01:51,920 --> 01:01:54,680
0,600 750,1080 1080,1260 1260,1920 2040,2760
case, if that happens then,

1898
01:01:54,680 --> 01:01:56,210
0,0 0,360 360,840 840,960 960,1530
um the idea is that

1899
01:01:56,210 --> 01:01:57,920
0,120 120,420 420,750 750,1230 1230,1710
two man actually block every

1900
01:01:57,950 --> 01:01:59,420
0,630 630,810 810,870 870,1080 1080,1470
transaction pays a little fee

1901
01:01:59,780 --> 01:02:01,250
0,540 540,720 720,1080 1080,1380 1380,1470
and the minor collects the

1902
01:02:01,250 --> 01:02:02,360
0,570 570,690 690,780 780,930 930,1110
fees you know from all

1903
01:02:02,360 --> 01:02:04,550
0,540 570,1110 1110,1290 1290,1680 1710,2190
the transactions in the block

1904
01:02:04,760 --> 01:02:06,890
0,630 630,840 840,1200 1200,1500 1500,2130
and a u.s and rewards

1905
01:02:06,890 --> 01:02:08,840
0,420 450,780 780,900 900,1290 1320,1950
a minor with those fees

1906
01:02:09,140 --> 01:02:10,040
0,240 240,540 540,660 660,750 750,900
even now there are some

1907
01:02:10,040 --> 01:02:12,380
0,480 510,1080 1440,1740 1740,2040 2070,2340
fees, um, um, but, um

1908
01:02:12,380 --> 01:02:13,910
0,240 240,630 630,870 870,1020 1020,1530
to make sure that basically,

1909
01:02:13,910 --> 01:02:15,230
0,390 390,600 600,1050 1050,1140 1140,1320
um the transactions are not

1910
01:02:15,230 --> 01:02:18,140
0,600 930,1650 1650,2190 2190,2580 2580,2910
frivolous a and a so

1911
01:02:18,140 --> 01:02:19,400
0,360 360,420 420,720 720,960 960,1260
really the miner actually earns

1912
01:02:19,400 --> 01:02:21,440
0,180 180,780 1230,1620 1620,1860 1860,2040
not only a six point

1913
01:02:21,440 --> 01:02:22,940
0,210 210,600 600,750 750,1140 1140,1500
twenty five but also like

1914
01:02:22,940 --> 01:02:26,600
0,1200 1200,1530 1530,1980 1980,3180 3450,3660
z feast, actually yeah and

1915
01:02:26,600 --> 01:02:27,530
0,90 90,330 330,480 480,750 750,930
the fees that actually go

1916
01:02:27,530 --> 01:02:28,960
0,300 300,420 420,510 510,1200
along with the transactions.

1917
01:02:31,830 --> 01:02:33,540
0,270 270,510 510,600 600,930 930,1710
Because that's the minor incentive.

1918
01:02:34,160 --> 01:02:36,860
0,720 720,1500 1620,2400 2460,2580 2580,2700
A in a you know

1919
01:02:36,860 --> 01:02:38,660
0,330 330,450 450,720 720,1020 1020,1800
Bitcoin has gotten so successful

1920
01:02:38,660 --> 01:02:39,950
0,480 480,960 960,1080 1080,1230 1230,1290
that basically there's sort of

1921
01:02:39,950 --> 01:02:41,600
0,60 60,360 360,870 900,1140 1140,1650
an arms race a minor.

1922
01:02:44,500 --> 01:02:45,160
0,210 210,360 360,450 450,600 600,660
And this is like for

1923
01:02:45,160 --> 01:02:46,210
0,330 330,660 660,780 780,900 900,1050
example, why you know if

1924
01:02:46,210 --> 01:02:47,530
0,120 120,300 300,450 450,510 510,1320
I would want to participate

1925
01:02:47,530 --> 01:02:49,390
0,450 450,930 930,1350 1560,1680 1680,1860
and actually when they make

1926
01:02:49,390 --> 01:02:50,560
0,90 90,570 720,990 990,1110 1110,1170
some money, I'm going to

1927
01:02:50,560 --> 01:02:53,860
0,570 600,1260 1260,2400 2490,2880 2910,3300
lose because, um the series

1928
01:02:53,860 --> 01:02:56,020
0,540 900,1440 1440,1680 1680,2040 2040,2160
miners are much better at

1929
01:02:56,020 --> 01:02:57,820
0,480 480,1170 1230,1590 1590,1710 1710,1800
computing a hash is at

1930
01:02:57,820 --> 01:03:00,190
0,60 60,300 300,480 480,960 1680,2370
a very high rate, then

1931
01:03:00,190 --> 01:03:01,210
0,60 60,210 210,390 390,690 690,1020
you know your standard laptop

1932
01:03:01,210 --> 01:03:01,980
0,360
camp.

1933
01:03:02,160 --> 01:03:02,970
0,180 180,270 270,420 420,450 450,810
And so there's a couple

1934
01:03:02,970 --> 01:03:04,020
0,210 210,450 450,660 660,810 810,1050
of things actually go wrong,

1935
01:03:04,020 --> 01:03:05,310
0,60 60,210 210,480 480,960 990,1290
in this arms race, first

1936
01:03:05,310 --> 01:03:06,720
0,90 90,570 750,990 990,1110 1110,1410
of all a the minus

1937
01:03:06,720 --> 01:03:08,000
0,240 240,780
four pools.

1938
01:03:13,290 --> 01:03:14,100
0,150 150,210 210,420 420,720 720,810
So the basic idea is

1939
01:03:14,100 --> 01:03:15,480
0,180 180,270 270,660 660,1230 1230,1380
that the miners collaborate with

1940
01:03:15,480 --> 01:03:17,430
0,90 90,540 750,1590 1590,1860 1860,1950
each other and share the

1941
01:03:17,430 --> 01:03:18,600
0,330 330,450 450,570 570,900 930,1170
revenue with each other and

1942
01:03:18,600 --> 01:03:19,350
0,240 240,390 390,480 480,600 600,750
so you know if your

1943
01:03:19,350 --> 01:03:20,460
0,390 390,510 510,690 690,900 900,1110
pool with many many, many

1944
01:03:20,460 --> 01:03:22,650
0,540 750,1530 1530,1620 1620,1770 1770,2190
notes, um, you know, maybe

1945
01:03:22,650 --> 01:03:25,020
0,120 120,750 1170,1380 1380,1950 1950,2370
you know from different people,

1946
01:03:25,020 --> 01:03:26,430
0,210 210,510 510,660 660,930 930,1410
many computers from different people,

1947
01:03:26,700 --> 01:03:28,560
0,780 810,1080 1080,1200 1200,1620 1620,1860
the people could share the

1948
01:03:28,560 --> 01:03:30,180
0,390 390,870 870,1020 1020,1110 1110,1620
revenue stream out of mining

1949
01:03:30,180 --> 01:03:32,190
0,270 630,1140 1170,1560 1560,1830 1830,2010
and um because they do

1950
01:03:32,190 --> 01:03:33,450
0,210 210,270 270,900 1050,1170 1170,1260
this a pool, you know

1951
01:03:33,450 --> 01:03:35,190
0,210 210,450 450,900 930,1410 1410,1740
they're more likely to actually

1952
01:03:35,190 --> 01:03:36,720
0,450 540,750 750,930 930,990 990,1530
win and once in awhile

1953
01:03:36,900 --> 01:03:38,490
0,720 720,810 810,1020 1020,1170 1170,1590
and you know of course

1954
01:03:38,490 --> 01:03:39,870
0,750 750,840 840,990 990,1110 1110,1380
probabilistically, they have some chance

1955
01:03:39,870 --> 01:03:41,430
0,90 90,480 720,1080 1080,1500 1500,1560
to win and basically you

1956
01:03:41,430 --> 01:03:42,960
0,90 90,480 480,690 690,1080
know spreads through the.

1957
01:03:42,960 --> 01:03:44,580
0,180 180,540 540,1110 1110,1560 1560,1620
A income stream in a

1958
01:03:44,580 --> 01:03:46,110
0,180 180,570 570,870 870,1290 1290,1530
more stable form across all

1959
01:03:46,110 --> 01:03:47,310
0,360 360,750 750,870 870,930 930,1200
the miners in a single

1960
01:03:47,310 --> 01:03:48,220
0,330
pool.

1961
01:03:48,430 --> 01:03:49,780
0,540 630,840 840,930 930,1110 1110,1350
So if you think you

1962
01:03:49,780 --> 01:03:52,990
0,180 180,900 930,1740 1920,2790 2820,3210
look online today, um, there

1963
01:03:52,990 --> 01:03:54,760
0,120 120,360 360,600 600,1050 1050,1770
are some really large pools

1964
01:03:55,000 --> 01:03:56,890
0,600 600,840 840,1260 1320,1500 1500,1890
and nothing like the three

1965
01:03:56,890 --> 01:04:00,010
0,330 330,990 1200,2040 2340,3030 3030,3120
biggest pools a contribute to

1966
01:04:00,010 --> 01:04:02,200
0,450 450,660 660,750 750,1530 1920,2190
contribute more than {50%,of -}

1967
01:04:02,200 --> 01:04:03,920
0,510 540,840 840,1290
the mining power.

1968
01:04:06,330 --> 01:04:08,520
0,270 270,780 1080,1620
I'm sorry, why.

1969
01:04:08,520 --> 01:04:09,390
0,300 300,420 420,540 540,720 720,870
Um, is this, why you

1970
01:04:09,390 --> 01:04:11,910
0,300 300,600 660,1080 1080,1740 2010,2520
said that each block takes

1971
01:04:12,240 --> 01:04:14,220
0,360 360,570 570,1110 1110,1650 1680,1980
around ten minutes to mine

1972
01:04:14,220 --> 01:04:15,240
0,240 240,450 450,570 570,960 960,1020
even though it takes a

1973
01:04:15,240 --> 01:04:18,810
0,450 450,720 720,1230 1230,1830 2100,3570
month of CPU power you

1974
01:04:18,810 --> 01:04:20,640
0,270 270,720 720,1020 1020,1500 1530,1830
on averages a month a

1975
01:04:20,640 --> 01:04:21,420
0,240 240,330 330,450 450,630 630,780
but you know you're gonna

1976
01:04:21,420 --> 01:04:22,320
0,120 120,210 210,510 510,690 690,900
have some lucky you, you

1977
01:04:22,320 --> 01:04:23,550
0,210 210,300 300,780 780,900 900,1230
pick the nuns you know

1978
01:04:23,550 --> 01:04:25,800
0,930 1140,1560 1560,1800 1800,1890 1890,2250
a get lucky and actually

1979
01:04:25,800 --> 01:04:27,600
0,660 690,1170 1170,1440 1440,1530 1530,1800
yeah picking knobs that actually

1980
01:04:27,600 --> 01:04:28,380
0,300 300,420 420,510 510,720 720,780
allows you to solve the

1981
01:04:28,380 --> 01:04:29,790
0,240 240,420 420,870 1050,1260 1260,1410
problem much quicker right there's

1982
01:04:29,790 --> 01:04:31,110
0,270 270,330 330,1020 1020,1170 1170,1320
always a probability than on

1983
01:04:31,110 --> 01:04:33,210
0,450 450,630 630,1080 1650,2010 2010,2100
some big number and if

1984
01:04:33,210 --> 01:04:34,110
0,150 150,300 300,390 390,540 540,900
you pick the right number,

1985
01:04:34,110 --> 01:04:35,250
0,90 90,420 420,840 840,990 990,1140
you know you can get

1986
01:04:35,250 --> 01:04:36,120
0,270 270,360 360,450 450,660 660,870
lucky and have many many,

1987
01:04:36,120 --> 01:04:38,100
0,210 210,990 990,1110 1110,1440 1710,1980
many miners do that there's

1988
01:04:38,100 --> 01:04:40,560
0,300 300,360 360,780 780,2100 2280,2460
actually a chance, um, you

1989
01:04:40,560 --> 01:04:42,270
0,600 600,780 780,1140 1140,1410 1410,1710
don't take much less than

1990
01:04:42,660 --> 01:04:44,400
0,540 570,1080 1080,1470 1470,1530 1530,1740
a month and in fact,

1991
01:04:44,400 --> 01:04:45,570
0,150 150,510 510,780 780,960 960,1170
that's why where ten minutes

1992
01:04:45,570 --> 01:04:46,360
0,210 210,450
comes from.

1993
01:04:46,360 --> 01:04:48,550
0,450 870,1230 1230,1440 1440,1890 1950,2190
Um, wait, oh is is

1994
01:04:48,550 --> 01:04:50,080
0,90 90,540 540,720 720,1290 1290,1530
the month more important ten

1995
01:04:50,080 --> 01:04:51,910
0,300 300,420 420,780 780,930 930,1830
minutes, more important because if

1996
01:04:51,910 --> 01:04:53,320
0,120 120,330 330,540 540,900 900,1410
there was only one minor

1997
01:04:53,350 --> 01:04:54,970
0,480 570,810 810,960 960,1530 1530,1620
right on the expected is

1998
01:04:54,970 --> 01:04:56,400
0,210 210,600 600,960
one month youd.

1999
01:04:56,580 --> 01:04:57,900
0,390 390,660 660,1050 1050,1110 1110,1320
Then, on average it would

2000
01:04:57,900 --> 01:04:59,160
0,210 210,420 420,690 690,780 780,1260
take one month or yeah

2001
01:04:59,160 --> 01:04:59,940
0,150 150,360 360,510 510,600 600,780
but they're going to do

2002
01:04:59,940 --> 01:05:00,840
0,390 390,540 540,660 660,690 690,900
something is there are many

2003
01:05:00,840 --> 01:05:02,180
0,210 210,840
many miners.

2004
01:05:02,210 --> 01:05:03,920
0,420 450,720 720,1200 1200,1440 1440,1710
Um, but what what it

2005
01:05:03,920 --> 01:05:05,420
0,240 240,690 690,960 960,1200 1200,1500
like very like if there's

2006
01:05:05,420 --> 01:05:07,340
0,60 60,330 330,450 450,990 1020,1920
a lot more minor minor

2007
01:05:07,340 --> 01:05:09,020
0,330 330,750 750,870 870,1410 1410,1680
it's clear the ability of

2008
01:05:09,380 --> 01:05:10,520
0,180 180,240 240,450 450,510 510,1140
there's a lot of variation,

2009
01:05:10,520 --> 01:05:11,900
0,240 240,390 390,810 810,990 990,1380
but on average ten minutes

2010
01:05:11,900 --> 01:05:14,000
0,960 960,1500 1500,1680 1680,1800 1800,2100
but speaks that is on

2011
01:05:14,000 --> 01:05:14,900
0,300 300,540 540,660 660,810 810,900
average comes out to be

2012
01:05:14,900 --> 01:05:16,000
0,240 240,690
ten minutes.

2013
01:05:16,090 --> 01:05:17,140
0,510
Yeah.

2014
01:05:18,150 --> 01:05:19,410
0,180 180,270 270,510 510,990 990,1260
Is it ever possible that

2015
01:05:19,410 --> 01:05:21,120
0,180 180,270 270,630 630,870 870,1710
like a puzzle is impossible.

2016
01:05:23,180 --> 01:05:26,780
0,2400 2430,2790 2790,2970 2970,3390 3420,3600
I don't think so it

2017
01:05:26,780 --> 01:05:27,770
0,120 120,270 270,330 330,540 540,990
may take a long time.

2018
01:05:29,080 --> 01:05:31,560
0,660 660,840 840,1050 1050,1920
There's gonna be a.

2019
01:05:34,020 --> 01:05:35,250
0,300 300,540 540,660 660,1050 1050,1230
Well there's gonna be you

2020
01:05:35,250 --> 01:05:36,120
0,120 120,210 210,450 450,540 540,870
get to pick the notes

2021
01:05:36,120 --> 01:05:38,100
0,390 930,1590 1590,1680 1680,1800 1800,1980
correct and you know there's

2022
01:05:38,100 --> 01:05:39,180
0,120 120,180 180,600 600,780 780,1080
going to be a case

2023
01:05:39,180 --> 01:05:40,560
0,270 270,360 360,930 960,1260 1260,1380
where the hash is going

2024
01:05:40,560 --> 01:05:44,280
0,90 90,690 750,2460 2610,3120 3120,3720
to fall within leading zeros.

2025
01:05:47,670 --> 01:05:49,080
0,210 210,390 390,600 600,960 960,1410
And so like how so

2026
01:05:49,080 --> 01:05:50,250
0,240 240,330 330,690 690,810 810,1170
since the value of Bitcoin

2027
01:05:50,250 --> 01:05:52,200
0,120 120,450 450,1200 1230,1500 1500,1950
is actually very let's say

2028
01:05:52,230 --> 01:05:57,270
0,1140 4110,4320 4320,4410 4410,4830 4830,5040
volatile and so then how

2029
01:05:57,270 --> 01:05:58,050
0,120 120,210 210,420 420,660 660,780
can we actually ensure that

2030
01:05:58,050 --> 01:05:59,670
0,60 60,570 600,990 990,1140 1140,1620
the incentive system for miners

2031
01:05:59,670 --> 01:06:01,560
0,720 780,1110 1110,1590 1590,1710 1710,1890
is still adequate to keep

2032
01:06:01,560 --> 01:06:02,670
0,150 150,330 330,720 930,1050 1050,1110
this thing going for the

2033
01:06:02,670 --> 01:06:03,540
0,390
future.

2034
01:06:03,800 --> 01:06:04,850
0,30 60,360 360,600 600,690 690,1050
I mean since the number

2035
01:06:04,850 --> 01:06:06,410
0,210 300,900 900,1140 1140,1230 1230,1560
of likes like the reward

2036
01:06:06,410 --> 01:06:07,640
0,120 120,750 750,1050 1050,1110 1110,1230
is predetermined lesson to be

2037
01:06:07,640 --> 01:06:09,290
0,180 180,420 420,990 990,1290 1470,1650
{6.258 - -} points, what

2038
01:06:09,290 --> 01:06:10,430
0,120 120,240 240,540 540,1050 1050,1140
if for some reason the

2039
01:06:10,430 --> 01:06:11,720
0,360 360,660 660,840 840,1200 1200,1290
Bitcoin value has dropped and

2040
01:06:11,720 --> 01:06:12,620
0,150 150,210 210,540 540,660 660,900
then the incentive is not

2041
01:06:12,620 --> 01:06:13,490
0,90 90,330 330,450 450,510 510,870
good enough for the miners

2042
01:06:13,490 --> 01:06:14,600
0,120 120,270 270,450 480,780 780,1110
and so I just think

2043
01:06:14,750 --> 01:06:16,550
0,120 120,300 300,750 750,1500 1500,1800
you know there's actually no

2044
01:06:16,550 --> 01:06:17,750
0,510 510,660 660,960 960,1050 1050,1200
value for miners to do

2045
01:06:17,750 --> 01:06:19,130
0,330 330,660 660,750 750,930 930,1380
this, then you know the

2046
01:06:19,160 --> 01:06:21,020
0,300 300,690 690,1140 1140,1500 1500,1860
Bitcoin network collapse, yeah and

2047
01:06:21,020 --> 01:06:22,160
0,570 570,780 780,930 930,1080 1080,1140
presumably the way this is

2048
01:06:22,160 --> 01:06:23,000
0,180 180,360 360,600 600,690 690,840
gonna work out is the

2049
01:06:23,000 --> 01:06:24,920
0,630 630,870 870,1260 1260,1530
transaction fees go up.

2050
01:06:25,770 --> 01:06:27,030
0,180 180,510 510,690 690,780 780,1260
But then, if the transaction

2051
01:06:27,030 --> 01:06:28,140
0,210 210,420 420,690 690,960 960,1110
fees go up, then it

2052
01:06:28,140 --> 01:06:29,370
0,420 690,900 900,1050 1050,1140 1140,1230
will, it will be a

2053
01:06:29,370 --> 01:06:31,290
0,330 330,810 810,990 990,1380 1380,1920
counter incentive for people who

2054
01:06:31,470 --> 01:06:32,940
0,180 180,330 330,480 480,1080 1110,1470
could use it, yeah yeah,

2055
01:06:32,940 --> 01:06:34,110
0,120 120,300 300,600 600,1080 1080,1170
but like if everybody's on

2056
01:06:34,110 --> 01:06:35,520
0,60 60,390 390,840 840,1350 1350,1410
the Bitcoin network, if you

2057
01:06:35,520 --> 01:06:37,590
0,180 180,240 240,1020 1020,1440 1440,2070
want to trade goods yeah

2058
01:06:37,590 --> 01:06:38,250
0,90 90,240 240,330 330,540 540,660
you have to deal with

2059
01:06:38,250 --> 01:06:39,510
0,300 300,390 390,450 450,750 750,1260
somebody on the Bitcoin network

2060
01:06:39,780 --> 01:06:41,250
0,360 390,600 600,780 780,960 960,1470
so there's all kinds of

2061
01:06:41,670 --> 01:06:43,620
0,960 960,1530 1530,1710 1710,1830 1830,1950
complicated analysis that I'm not

2062
01:06:43,620 --> 01:06:45,630
0,300 300,900 960,1530 1530,1830 1830,2010
gonna like predict on like

2063
01:06:45,630 --> 01:06:46,740
0,270 270,420 420,540 540,690 690,1110
what's gonna be the outcome.

2064
01:06:47,990 --> 01:06:49,640
0,450 750,1290 1290,1380 1380,1530 1530,1650
Okay, well I guess we've

2065
01:06:49,640 --> 01:06:50,840
0,240 240,450 450,750 750,1020 1020,1200
seen two to twenty one

2066
01:06:50,840 --> 01:06:52,550
0,480 930,1320 1320,1500 1500,1650 1650,1710
forty and that's sort of

2067
01:06:52,550 --> 01:06:53,390
0,90 90,330 330,540 540,630 630,840
the point where I think

2068
01:06:53,390 --> 01:06:54,800
0,300 300,630 630,930 930,1170 1170,1410
the reward system runs out,

2069
01:06:54,800 --> 01:06:55,700
0,240 240,420 420,540 540,660 660,900
it's gonna be all based

2070
01:06:55,700 --> 01:06:57,500
0,420 420,840 840,1260
on Jackie fees.

2071
01:06:57,530 --> 01:06:58,730
0,360 360,480 480,540 540,840 840,1200
And at the current rate.

2072
01:06:59,390 --> 01:07:01,380
0,150 150,480 750,1110
I see, thanks.

2073
01:07:02,850 --> 01:07:03,980
0,570
HMM.

2074
01:07:04,010 --> 01:07:05,570
0,570 720,1140 1140,1260 1260,1440 1440,1560
Okay, so um the other

2075
01:07:05,570 --> 01:07:06,620
0,120 120,240 240,420 420,690 690,1050
thing that's going on is

2076
01:07:06,620 --> 01:07:08,210
0,150 150,540 570,1050 1050,1260 1260,1590
you know people build special

2077
01:07:08,210 --> 01:07:10,490
0,570 1050,1440 1440,1530 1530,2010 2010,2280
hardware, there are companies that

2078
01:07:10,490 --> 01:07:12,140
0,120 120,360 420,600 600,1140 1140,1650
you know will delivery boards,

2079
01:07:12,140 --> 01:07:12,770
0,90 90,180 180,330 330,420 420,630
you know that are really

2080
01:07:12,770 --> 01:07:13,910
0,180 180,270 270,540 540,630 630,1140
good at fast and hassle,

2081
01:07:14,450 --> 01:07:16,400
0,1080 1110,1290 1290,1620 1620,1830 1830,1950
and these are used by

2082
01:07:16,400 --> 01:07:17,720
0,90 90,360 360,930
the miner pools.

2083
01:07:17,870 --> 01:07:20,330
0,810 990,1470 1470,1650 1650,2340 2340,2460
Yeah people say they have

2084
01:07:20,330 --> 01:07:21,590
0,150 150,450 450,810 810,990 990,1260
high speed links to many

2085
01:07:21,590 --> 01:07:22,800
0,690
peers.

2086
01:07:23,000 --> 01:07:24,050
0,450 450,660 660,750 750,990 990,1050
So if they find a

2087
01:07:24,050 --> 01:07:25,370
0,330 330,450 450,600 600,990 990,1320
walk, they can actually get

2088
01:07:25,370 --> 01:07:26,750
0,90 90,480 480,990 1020,1200 1200,1380
it out first and so

2089
01:07:26,750 --> 01:07:28,020
0,150 150,600
they win.

2090
01:07:28,050 --> 01:07:30,720
0,390 390,870 900,1260 2070,2550 2550,2670
Etc etc, so this is

2091
01:07:30,720 --> 01:07:31,800
0,480 510,720 720,810 810,900 900,1080
a you know if you're

2092
01:07:31,800 --> 01:07:32,880
0,330 330,390 390,690 690,960 960,1080
interested in this you can

2093
01:07:32,880 --> 01:07:33,630
0,180 180,420 420,510 510,660 660,750
read lots and lots of

2094
01:07:33,630 --> 01:07:35,670
0,390 390,570 570,660 660,1320 1560,2040
information about it online, um,

2095
01:07:35,670 --> 01:07:36,930
0,510 510,690 690,870 870,1020 1020,1260
you're gonna see all the

2096
01:07:36,930 --> 01:07:38,460
0,300 300,540 540,600 600,1020 1170,1530
system seems to be hanging

2097
01:07:38,460 --> 01:07:39,420
0,450
together.

2098
01:07:43,240 --> 01:07:44,920
0,510 660,1380 1380,1440 1440,1620 1620,1680
Okay, let me talk a

2099
01:07:44,920 --> 01:07:45,820
0,180 180,330 330,690 690,720 720,900
little bit about a whole

2100
01:07:45,820 --> 01:07:47,890
0,180 180,720 1020,1560 1560,1950 1950,2070
bunch of practical issues that

2101
01:07:47,890 --> 01:07:48,910
0,60 60,270 270,330 330,810 810,1020
I sort of ignored although

2102
01:07:48,910 --> 01:07:49,690
0,120 120,450 450,660 660,720 720,780
we touched on it a

2103
01:07:49,690 --> 01:07:51,160
0,330
bit.

2104
01:07:57,560 --> 01:08:00,230
0,690 990,1500 1500,1950 1950,2130 2130,2670
So, so first ten minutes.

2105
01:08:03,320 --> 01:08:04,250
0,120 120,330 330,510 510,780 780,930
I think ten minutes is

2106
01:08:04,250 --> 01:08:06,540
0,660 660,1020 1020,1710
basically user time.

2107
01:08:06,540 --> 01:08:07,410
0,120 120,360 360,600 600,810 810,870
You know the sort of

2108
01:08:07,410 --> 01:08:08,670
0,210 210,570 570,900 900,1140 1140,1260
upper bound where like you

2109
01:08:08,670 --> 01:08:10,920
0,240 240,750 870,1080 1080,1800
know, like ten times.

2110
01:08:11,190 --> 01:08:13,960
0,120 120,870 1050,1800
The time roughly.

2111
01:08:14,050 --> 01:08:15,820
0,120 120,390 390,450 450,1080
To flood the network.

2112
01:08:20,590 --> 01:08:21,490
0,210 210,300 300,450 450,750 750,900
It's a big one to

2113
01:08:21,490 --> 01:08:22,900
0,270 270,390 390,1050 1080,1260 1260,1410
try to avoid you know

2114
01:08:22,900 --> 01:08:24,160
0,510 510,570 600,810 810,1020 1020,1260
these are a sort of

2115
01:08:24,160 --> 01:08:27,610
0,810 1020,2190 2190,2370 2370,2760 2760,3450
privilege, um, yeah frivolous, a

2116
01:08:27,640 --> 01:08:29,710
0,810 840,1320 1320,1710 1710,1860 1860,2070
port we're basically no two

2117
01:08:29,710 --> 01:08:30,850
0,360 360,450 450,510 510,750 750,1140
nodes at the same time

2118
01:08:30,850 --> 01:08:32,980
0,390 390,900 1140,1350 1350,1620 1620,2130
roughly compute and therefore extends

2119
01:08:32,980 --> 01:08:35,500
0,870 1410,2100 2100,2370 2370,2460 2460,2520
a chain roughly at the

2120
01:08:35,500 --> 01:08:36,730
0,210 210,750 900,990 990,1170 1170,1230
same time I want to

2121
01:08:36,730 --> 01:08:38,230
0,120 120,210 210,510 510,870 1170,1500
try to avoid that um,

2122
01:08:38,230 --> 01:08:40,210
0,360 360,510 510,1200 1200,1650 1650,1980
and so one way to

2123
01:08:40,210 --> 01:08:41,320
0,270 270,510 510,660 660,750 750,1110
avoid that is to basically

2124
01:08:41,320 --> 01:08:42,550
0,150 150,480 480,960 960,1140 1140,1230
give enough time to the

2125
01:08:42,550 --> 01:08:43,570
0,390 390,510 510,720 720,780 780,1020
nodes to sort of get

2126
01:08:43,570 --> 01:08:44,460
0,390
the.

2127
01:08:44,460 --> 01:08:46,140
0,450 450,780 780,1200 1200,1560 1560,1680
Um the block out you

2128
01:08:46,140 --> 01:08:47,580
0,90 90,480 480,990 1020,1230 1230,1440
know to a many many

2129
01:08:47,580 --> 01:08:49,140
0,240 240,810 960,1140 1140,1290 1290,1560
many peers so that most

2130
01:08:49,140 --> 01:08:50,340
0,240 240,510 510,690 690,990 990,1200
peers actually know about it.

2131
01:08:51,110 --> 01:08:52,640
0,630 810,1170 1170,1320 1320,1410 1410,1530
Um, yeah you know so

2132
01:08:52,640 --> 01:08:53,780
0,210 210,390 390,600 600,870 870,1140
that's why we serve ten

2133
01:08:53,780 --> 01:08:55,460
0,450 540,810 810,1110
minutes comes from.

2134
01:08:56,150 --> 01:08:57,640
0,930
HMM.

2135
01:08:57,840 --> 01:08:59,250
0,60 60,420 420,480 480,750 750,1410
Of course, the block size.

2136
01:09:03,390 --> 01:09:05,760
0,270 270,810 810,1590 1620,2010 2010,2370
A determines the north texas

2137
01:09:05,760 --> 01:09:07,100
0,120 120,540
per second.

2138
01:09:08,790 --> 01:09:10,800
0,450 450,570 570,990 990,1290 1290,2010
Yeah the block's roughly megabyte

2139
01:09:10,800 --> 01:09:13,240
0,180 180,720 1020,1800
and so, um.

2140
01:09:15,160 --> 01:09:16,090
0,120 120,450 480,690 690,810 810,930
You know you're gonna do

2141
01:09:16,090 --> 01:09:17,710
0,240 240,690 690,1440 1440,1500 1500,1620
one block Uber you know

2142
01:09:17,710 --> 01:09:19,720
0,270 270,450 450,1050 1200,1890 1890,2010
roughly ten minutes, then you

2143
01:09:19,720 --> 01:09:21,100
0,150 150,300 300,570 570,690 690,1380
know the number of transactions

2144
01:09:21,100 --> 01:09:23,260
0,180 210,1140 1140,1320 1320,1680 1680,2160
is a is limited to

2145
01:09:23,560 --> 01:09:27,400
0,1020 1410,2250 2250,2400 2400,3000 3450,3840
a number of a number

2146
01:09:27,400 --> 01:09:28,420
0,150 150,570 570,720 720,930 930,1020
of introduction that fit in

2147
01:09:28,420 --> 01:09:29,700
0,60 60,300 300,780
a single walk.

2148
01:09:29,700 --> 01:09:30,870
0,300 300,600 600,810 810,960 960,1170
Um, and that is a

2149
01:09:30,870 --> 01:09:31,650
0,150 150,210 210,600 600,660 660,780
number of transactions, you can

2150
01:09:31,650 --> 01:09:32,500
0,270
do.

2151
01:09:32,750 --> 01:09:34,700
0,630 1020,1290 1290,1470 1470,1710 1710,1950
Um, and it turns out

2152
01:09:34,700 --> 01:09:37,580
0,360 360,1080 1380,2040 2220,2760 2760,2880
that for a today you

2153
01:09:37,580 --> 01:09:39,110
0,150 150,450 450,960 1200,1470 1470,1530
know that a number of

2154
01:09:39,110 --> 01:09:40,670
0,600 600,840 840,1050 1050,1410 1410,1560
transactions is like you get

2155
01:09:40,670 --> 01:09:41,840
0,90 90,150 150,600 600,720 720,1170
in the thousands per second

2156
01:09:42,050 --> 01:09:43,160
0,240 240,540 540,630 630,720 720,1110
to work out the numbers

2157
01:09:43,160 --> 01:09:44,810
0,150 150,330 330,840 990,1110 1200,1650
and that's sufficient for example

2158
01:09:44,810 --> 01:09:46,820
0,240 240,630 1050,1170 1170,1740 1740,2010
there's probably an analogy people

2159
01:09:46,820 --> 01:09:48,080
0,150 150,450 450,840 840,1050 1050,1260
which made it bigger than

2160
01:09:48,080 --> 01:09:50,240
0,240 420,750 750,1350 1350,1740 1740,2160
the Visa network more rejection

2161
01:09:50,240 --> 01:09:51,980
0,60 60,390 390,960 1260,1560 1560,1740
of vehicle process, a buyer

2162
01:09:51,980 --> 01:09:53,090
0,330 330,450 450,720 720,840 840,1110
persona is not big enough

2163
01:09:53,090 --> 01:09:56,180
0,90 90,480 480,1020 1530,2310 2340,3090
to actually um, um, basically

2164
01:09:56,180 --> 01:09:58,400
0,240 240,690 690,1290 1290,1530 1800,2220
run all transactions from a

2165
01:09:58,430 --> 01:10:00,650
0,270 270,720 720,810 810,1320 1350,2220
money transaction the world across.

2166
01:10:01,640 --> 01:10:03,140
0,840
Hump.

2167
01:10:03,340 --> 01:10:05,230
0,690 690,1170 1260,1320 1320,1710 1710,1890
Another big show, this come

2168
01:10:05,230 --> 01:10:06,130
0,510 510,600 600,750 750,840 840,900
back to this in a

2169
01:10:06,130 --> 01:10:09,550
0,450 780,1500 1560,2220 2220,2550 2550,3420
second, um, another big issue

2170
01:10:09,550 --> 01:10:11,320
0,360 360,630 660,1380 1380,1680 1680,1770
is that changes through the

2171
01:10:11,320 --> 01:10:13,200
0,690
protocol.

2172
01:10:14,230 --> 01:10:16,520
0,300 300,690 690,1560
Change require consensus.

2173
01:10:21,580 --> 01:10:23,650
0,600 1020,1500 1500,1650 1650,1920 1920,2070
A in some cases this

2174
01:10:23,650 --> 01:10:25,980
0,120 120,600 630,1080 1110,1740
is easy right, um.

2175
01:10:26,880 --> 01:10:28,720
0,360 360,660 660,870 870,1290
Some changes are easy.

2176
01:10:31,840 --> 01:10:33,700
0,720 720,1080 1080,1440 1440,1530 1530,1860
Everyone, easy changes, for example

2177
01:10:33,700 --> 01:10:34,930
0,90 90,300 300,390 390,600 600,1230
the number of leading zeros,

2178
01:10:35,710 --> 01:10:37,600
0,240 240,450 450,900 900,960 960,1890
yeah there's basically a deterministic.

2179
01:10:38,120 --> 01:10:40,610
0,270 270,1020 1350,1710 1710,2160 2160,2490
Um algorithm to compute from

2180
01:10:40,610 --> 01:10:43,100
0,570 600,1110 1110,1380 1380,2100 2250,2490
the past log entries, um,

2181
01:10:43,100 --> 01:10:44,330
0,360 360,450 450,1020 1020,1110 1110,1230
what the difficulty is going

2182
01:10:44,330 --> 01:10:47,000
0,60 60,300 300,480 480,1860 2010,2670
to be for future puzzles.

2183
01:10:47,570 --> 01:10:48,500
0,330 330,540 540,720 720,840 840,930
And since this would be

2184
01:10:48,500 --> 01:10:50,900
0,540 540,630 630,1260 1680,2250 2250,2400
termination of a function of

2185
01:10:50,900 --> 01:10:52,940
0,180 180,750 750,930 930,1560 1680,2040
the log, there's nothing that

2186
01:10:52,940 --> 01:10:54,800
0,390 390,930 930,1380 1380,1710 1710,1860
changes basically an easy there's

2187
01:10:54,800 --> 01:10:56,390
0,90 90,360 360,570 570,1140 1140,1590
a bunch of other parameters

2188
01:10:56,390 --> 01:10:57,290
0,60 60,120 120,540 540,630 630,900
in the purple but that

2189
01:10:57,290 --> 01:10:58,420
0,120 120,180 180,630
kind of flavor.

2190
01:11:00,000 --> 01:11:01,590
0,270 270,540 540,1020 1020,1440 1440,1590
Some changes however result in

2191
01:11:01,590 --> 01:11:03,200
0,210 210,510 510,990
a soft fork.

2192
01:11:10,350 --> 01:11:11,340
0,270 270,510 510,660 660,840 840,990
We talked a little bit

2193
01:11:11,340 --> 01:11:13,350
0,450 660,960 960,1170 1170,1920 1920,2010
about let's say yeah you

2194
01:11:13,350 --> 01:11:15,780
0,180 180,900 1200,1590 1590,2190 2190,2430
know the main suffered main

2195
01:11:15,780 --> 01:11:17,730
0,570 570,660 660,930 930,1800 1800,1950
distribution to core distribution for

2196
01:11:17,730 --> 01:11:18,870
0,630 660,690 720,960 960,1020 1020,1140
Bitcoin I want to make

2197
01:11:18,870 --> 01:11:20,250
0,90 90,510 510,960 960,1170 1170,1380
a change, there are the

2198
01:11:20,250 --> 01:11:22,710
0,180 180,270 270,1080 1530,2070 2100,2460
sort of incompatible um, then

2199
01:11:22,710 --> 01:11:24,090
0,210 210,360 360,570 570,810 810,1380
you're gonna have old clients

2200
01:11:24,210 --> 01:11:25,320
0,480 480,750 750,930 930,1050 1050,1110
or clients running with the

2201
01:11:25,320 --> 01:11:26,610
0,180 180,720 720,990 990,1200 1200,1290
old software peers running with

2202
01:11:26,610 --> 01:11:27,660
0,60 60,210 210,570 570,840 840,1050
the old server and new

2203
01:11:27,660 --> 01:11:29,970
0,330 600,960 960,1500 1920,2160 2160,2310
PR new software, and that

2204
01:11:29,970 --> 01:11:31,980
0,270 270,1140 1140,1320 1320,1740 1770,2010
will temporarily you may create

2205
01:11:31,980 --> 01:11:34,170
0,120 120,720 1110,1830 1830,1920 1920,2190
some forks, um, of course

2206
01:11:34,170 --> 01:11:35,400
0,60 60,180 180,570 570,720 720,1230
you know there's some communication

2207
01:11:35,400 --> 01:11:37,590
0,270 270,660 660,1110 1110,1530 1530,2190
going on and um in

2208
01:11:37,590 --> 01:11:38,430
0,60 60,330 330,660 660,720 720,840
the long run, you know

2209
01:11:38,430 --> 01:11:40,290
0,690 930,1200 1200,1350 1350,1650 1650,1860
probably people will settle on

2210
01:11:40,290 --> 01:11:41,970
0,60 60,300 300,810 1110,1410 1410,1680
the new fork, um, with

2211
01:11:41,970 --> 01:11:43,020
0,90 90,270 270,750
the new chauffeur.

2212
01:11:44,790 --> 01:11:46,200
0,270 270,780 780,1020 1020,1350 1350,1410
Some changes actually result in

2213
01:11:46,200 --> 01:11:48,260
0,60 60,330 330,810
a hard fork.

2214
01:11:54,490 --> 01:11:55,940
0,360 360,630 630,720
Work for it.

2215
01:11:57,390 --> 01:11:58,500
0,420 420,600 600,660 660,990 990,1110
Um, so, for example there

2216
01:11:58,500 --> 01:12:00,150
0,180 180,840 900,1080 1080,1290 1290,1650
was a couple years ago

2217
01:12:00,150 --> 01:12:00,960
0,120 120,240 240,330 330,720 720,810
there was a lot of

2218
01:12:00,960 --> 01:12:02,550
0,420 420,630 630,720 720,1050 1050,1590
discussion about this block size,

2219
01:12:03,480 --> 01:12:04,950
0,420 540,930 930,1020 1020,1080 1080,1470
some people in the community,

2220
01:12:04,950 --> 01:12:05,850
0,270 270,420 420,480 480,840 840,900
we want to increase the

2221
01:12:05,850 --> 01:12:06,840
0,270 270,510 510,600 600,750 750,990
block size so other people

2222
01:12:06,840 --> 01:12:07,560
0,210 210,330 330,390 390,660 660,720
don't want to increase the

2223
01:12:07,560 --> 01:12:09,390
0,270 270,660 1110,1320 1320,1770 1770,1830
block size and basically you

2224
01:12:09,390 --> 01:12:11,940
0,450 450,1020 1080,1320 1320,1800 1950,2550
know, um, they split and

2225
01:12:11,940 --> 01:12:14,640
0,720 720,1230 1230,1410 1410,1830 1830,2700
there's quarters only to Bitcoin

2226
01:12:14,850 --> 01:12:18,200
0,360 420,1770 1770,2280 2280,2640
or Bitcoin forks, right.

2227
01:12:22,560 --> 01:12:23,700
0,60 60,270 270,630 630,960 960,1140
In fact, there's probably more

2228
01:12:23,700 --> 01:12:25,230
0,120 120,480 720,1140 1140,1320 1320,1530
than two but like that

2229
01:12:25,230 --> 01:12:26,880
0,330 330,750 750,930 930,1560 1560,1650
one resolved in hardware and

2230
01:12:26,880 --> 01:12:28,520
0,300 300,600 600,1110
hard forks split.

2231
01:12:28,930 --> 01:12:30,970
0,510 960,1470 1500,1800 1800,1980 1980,2040
Um, so, um, sort of

2232
01:12:30,970 --> 01:12:32,290
0,60 60,480 480,570 570,720 720,1320
an interesting you know aspect

2233
01:12:32,290 --> 01:12:33,520
0,60 60,180 180,660 660,990 990,1230
of this consensus into kind

2234
01:12:33,520 --> 01:12:34,720
0,60 60,510 510,750 750,1080 1080,1200
of systems that you're going

2235
01:12:34,720 --> 01:12:36,550
0,60 60,600 630,1320 1410,1650 1650,1830
to have a these kinds

2236
01:12:36,550 --> 01:12:38,170
0,90 90,480 480,840 840,990 990,1620
of practical problems that actually

2237
01:12:38,470 --> 01:12:40,360
0,360 360,720 720,1050 1050,1320 1320,1890
can read either into software

2238
01:12:40,360 --> 01:12:41,710
0,360 360,480 480,900 900,1110 1110,1350
or in hardware because people

2239
01:12:41,710 --> 01:12:42,670
0,150 150,270 270,390 390,450 450,960
just don't want to collaborate

2240
01:12:42,670 --> 01:12:44,160
0,270 270,330 330,720 720,990
on a particular form.

2241
01:12:46,280 --> 01:12:48,080
0,270 270,690 690,900 900,1290
Any questions about this.

2242
01:12:50,070 --> 01:12:52,530
0,540 720,960 960,1710 1710,2010 2010,2460
Um, what happens in hard

2243
01:12:52,530 --> 01:12:53,740
0,750
forks.

2244
01:12:53,830 --> 01:12:55,450
0,450 870,1110 1110,1260 1260,1470 1470,1620
You have to give two

2245
01:12:55,450 --> 01:12:56,860
0,450 450,930
different change.

2246
01:12:57,460 --> 01:12:58,630
0,300 300,630 630,720 720,810 810,1170
And clients have to choose

2247
01:12:58,630 --> 01:12:59,470
0,240 240,510 510,570 570,720 720,840
which form they want to

2248
01:12:59,470 --> 01:13:00,240
0,210
be.

2249
01:13:01,060 --> 01:13:02,280
0,660
Interesting.

2250
01:13:03,310 --> 01:13:04,780
0,390 390,780 780,960 960,1380 1380,1470
Or publish their transactions in

2251
01:13:04,780 --> 01:13:06,840
0,360 360,600 600,840 960,1410
both I don't know.

2252
01:13:07,020 --> 01:13:08,880
0,150 150,810 990,1410 1410,1560 1560,1860
I mean, but you have

2253
01:13:08,880 --> 01:13:10,380
0,600 750,930 930,1200 1200,1320 1320,1500
like I say I have

2254
01:13:10,380 --> 01:13:12,240
0,270 270,600 600,1320
a couple Bitcoin.

2255
01:13:12,720 --> 01:13:14,100
0,180 180,510 510,720 720,1140 1140,1380
I'll have a couple of

2256
01:13:14,100 --> 01:13:16,680
0,660 690,1140 1140,1530 1530,1920 1920,2580
Bitcoin both forks right, but

2257
01:13:16,680 --> 01:13:18,330
0,120 120,270 270,630 630,1140 1140,1650
I can start spending them.

2258
01:13:19,010 --> 01:13:21,230
0,210 210,960 990,1470 1530,1800 1800,2220
And either, like, well you

2259
01:13:21,230 --> 01:13:22,400
0,450 480,630 630,750 750,1080 1080,1170
have you have bitcoins in

2260
01:13:22,400 --> 01:13:24,860
0,90 90,750 780,930 930,1260 1560,2460
the prefix of those correct

2261
01:13:24,860 --> 01:13:26,630
0,210 210,330 330,1170 1200,1560 1560,1770
so and both forks have

2262
01:13:26,630 --> 01:13:28,130
0,60 60,720 780,1080 1080,1200 1200,1500
the prefix so you can

2263
01:13:28,130 --> 01:13:29,030
0,90 90,300 300,540 540,780 780,900
you can't double spend your

2264
01:13:29,030 --> 01:13:29,960
0,360
money.

2265
01:13:30,760 --> 01:13:33,250
0,750 1170,1380 1380,1710 1710,2220 2220,2490
Ha, well, so actually in

2266
01:13:33,250 --> 01:13:34,420
0,240 240,360 360,720 720,930 930,1170
in the case of like

2267
01:13:34,420 --> 01:13:35,830
0,240 240,840 840,1200 1200,1290 1290,1410
when Bitcoin fork there was

2268
01:13:35,830 --> 01:13:36,850
0,60 60,360 360,630 630,780 780,1020
a hard fork and in

2269
01:13:36,850 --> 01:13:38,410
0,300 300,540 540,630 630,1500 1500,1560
the one of the new

2270
01:13:38,440 --> 01:13:40,180
0,330 330,450 450,720 720,1170 1170,1740
forks was called Bitcoin cash

2271
01:13:40,180 --> 01:13:42,910
0,960 990,1380 1380,1830 1830,1920 1920,2730
all the tokens were duplicated

2272
01:13:43,030 --> 01:13:45,940
0,750 780,1320 1380,2460 2460,2820 2820,2910
within the value of the

2273
01:13:45,940 --> 01:13:47,220
0,870
tokens.

2274
01:13:47,250 --> 01:13:48,780
0,660 840,1020 1020,1260 1260,1380 1380,1530
Um, it wasn't like you

2275
01:13:48,780 --> 01:13:49,740
0,270 270,390 390,690 690,810 810,960
doubled your values like the

2276
01:13:49,740 --> 01:13:51,750
0,330 330,450 450,960 960,1830 1830,2010
price of Bitcoin decrease and

2277
01:13:51,750 --> 01:13:53,370
0,450 480,750 750,1170 1170,1350 1350,1620
then the difference in that

2278
01:13:53,370 --> 01:13:54,750
0,600 630,840 840,960 960,1320 1320,1380
decrease was the value of

2279
01:13:54,750 --> 01:13:57,460
0,90 90,510 510,1140 1560,2220
the Bitcoin cash so.

2280
01:13:57,520 --> 01:13:58,660
0,690 690,870 870,930 930,1020 1020,1140
Is think of it like

2281
01:13:58,660 --> 01:14:00,100
0,60 60,390 390,780 780,1200 1260,1440
a stock split like you

2282
01:14:00,100 --> 01:14:01,750
0,210 210,480 480,1050 1050,1350 1350,1650
get more tokens, but the

2283
01:14:01,750 --> 01:14:03,670
0,450 450,1230 1410,1590 1590,1830 1830,1920
actual value would stay the

2284
01:14:03,670 --> 01:14:05,230
0,570 630,870 870,960 960,1080 1080,1560
same because you're just increasing

2285
01:14:05,230 --> 01:14:06,920
0,90 90,480 480,600 600,1230
the supply of tokens.

2286
01:14:06,920 --> 01:14:07,980
0,510
Good.

2287
01:14:08,920 --> 01:14:10,200
0,420 420,690
Thank you.

2288
01:14:12,310 --> 01:14:13,780
0,210 210,360 360,960
Any other questions.

2289
01:14:19,380 --> 01:14:21,150
0,300 300,510 510,690 690,1140 1170,1770
Okay good, let me summarize

2290
01:14:21,150 --> 01:14:22,520
0,360
now.

2291
01:14:26,730 --> 01:14:28,020
0,720
I'm.

2292
01:14:28,210 --> 01:14:29,950
0,510 570,1050 1080,1500 1500,1650 1650,1740
So, um, basically what we

2293
01:14:29,950 --> 01:14:31,690
0,180 180,900 900,1140 1140,1350 1350,1740
see here is gonna distribute

2294
01:14:31,690 --> 01:14:33,260
0,870
consensus.

2295
01:14:36,640 --> 01:14:39,400
0,540 900,1500 1500,1770 1770,2190 2190,2760
With an open distributed systems

2296
01:14:39,400 --> 01:14:42,880
0,360 1170,1740 1740,2280 2280,2730 2730,3480
with potentially visiting a participants

2297
01:14:43,030 --> 01:14:45,640
0,420 1500,1770 1770,1950 1950,2160 2160,2610
which let's see if my

2298
01:14:45,940 --> 01:14:47,980
0,360 360,780 780,1230 1230,1560
program crash wellness ek.

2299
01:15:10,480 --> 01:15:11,800
0,390 390,540 540,690 690,1110 1110,1320
Um, so this represents is

2300
01:15:11,830 --> 01:15:14,170
0,360 360,780 780,1380 1380,1830 1830,2340
a weave byzantine potentially distant

2301
01:15:14,170 --> 01:15:19,860
0,720
participants.

2302
01:15:23,020 --> 01:15:24,790
0,570 570,1050 1050,1170 1170,1290 1290,1770
Um, and you know the

2303
01:15:25,000 --> 01:15:26,110
0,120 120,270 270,660 660,930 930,1110
you know the the thing

2304
01:15:26,110 --> 01:15:27,310
0,120 120,510 510,660 660,960 960,1200
that actually is being reached

2305
01:15:27,310 --> 01:15:28,930
0,420 420,570 570,810 810,1110 1110,1620
consensus on this public ledger

2306
01:15:29,260 --> 01:15:30,460
0,330 330,630 630,990 990,1080 1080,1200
or public log, if you

2307
01:15:30,460 --> 01:15:31,460
0,390
will.

2308
01:15:33,710 --> 01:15:35,300
0,150 150,480 480,1290 1290,1470 1470,1590
The basic order all the

2309
01:15:35,300 --> 01:15:36,590
0,480 480,750 750,960 960,1050 1050,1290
transactions ever since the beginning

2310
01:15:36,590 --> 01:15:39,980
0,90 90,630 960,1620 1620,3000 3000,3390
of time a anda allow

2311
01:15:39,980 --> 01:15:42,590
0,960 990,1500 1500,1980 1980,2430 2430,2610
people to check what the

2312
01:15:42,620 --> 01:15:45,050
0,510 510,900 900,990 990,1560 1770,2430
bounces are of every public

2313
01:15:45,050 --> 01:15:48,590
0,450 660,1530 1530,2610 2610,3210 3210,3540
key and a avoid double

2314
01:15:48,590 --> 01:15:51,050
0,510 930,1650 1650,2190 2190,2310 2310,2460
spending, um, and you know

2315
01:15:51,050 --> 01:15:52,970
0,450 480,960 960,1350 1350,1500 1500,1920
the particular cools the idea

2316
01:15:52,970 --> 01:15:55,340
0,390 390,690 690,1380 1410,2130 2130,2370
here is to basically just

2317
01:15:55,340 --> 01:15:56,840
0,180 180,270 270,780
proof of work.

2318
01:15:56,870 --> 01:16:00,170
0,300 300,840 840,1560 1560,2040 2520,3300
A idea to um determine

2319
01:16:00,170 --> 01:16:02,420
0,270 270,1230 1320,1530 1530,2070 2070,2250
actually who is allowed to

2320
01:16:02,420 --> 01:16:04,160
0,450 450,510 510,810 810,1260
extend the block shape.

2321
01:16:05,030 --> 01:16:06,200
0,630
Okay.

2322
01:16:06,420 --> 01:16:08,130
0,390 420,540 540,870 870,1080 1080,1710
So it's basically have only

2323
01:16:08,130 --> 01:16:10,710
0,180 180,660 690,1290 2040,2310 2430,2580
one C A so if

2324
01:16:10,710 --> 01:16:12,390
0,300 330,570 570,930 960,1500 1500,1680
you need to run and

2325
01:16:12,390 --> 01:16:13,830
0,420 450,840 840,1020 1020,1200 1200,1440
leave a feel free to

2326
01:16:13,830 --> 01:16:14,940
0,480 480,570 570,720 720,780 780,1110
leave and this is basically

2327
01:16:14,940 --> 01:16:15,840
0,90 90,210 210,270 270,420 420,900
the end of this lecture,

2328
01:16:16,260 --> 01:16:17,670
0,540 540,930 930,1170 1170,1230 1230,1410
a anybody wants to stay

2329
01:16:17,670 --> 01:16:18,600
0,90 90,240 240,330 330,660 660,930
and ask more questions, please

2330
01:16:18,600 --> 01:16:20,130
0,330 330,480 480,570 570,1050 1200,1530
feel free to stay a

2331
01:16:20,130 --> 01:16:21,750
0,210 210,720 720,930 930,1110 1110,1620
on thursday there's no lecture

2332
01:16:21,750 --> 01:16:23,070
0,330 330,510 510,660 660,990 990,1320
or it's a hacking day

2333
01:16:23,070 --> 01:16:24,750
0,570 570,780 780,1020 1020,1260 1260,1680
as you know that friday

2334
01:16:24,750 --> 01:16:27,060
0,120 120,300 300,840 1020,1530 1980,2310
is the deadline for a

2335
01:16:27,060 --> 01:16:28,920
0,300 300,750 750,990 990,1560 1560,1860
final project or lap for

2336
01:16:28,920 --> 01:16:30,240
0,450 450,630 630,840 840,1110 1110,1320
whatever you'll be doing so,

2337
01:16:30,240 --> 01:16:32,190
0,180 180,570 600,1080 1080,1380 1650,1950
good luck trying to get

2338
01:16:32,190 --> 01:16:33,440
0,180 180,360 360,960
that work finished.

2339
01:16:33,440 --> 01:16:35,330
0,390 390,750 780,1140 1140,1650 1650,1890
Um, and um, we'll talk

2340
01:16:35,330 --> 01:16:37,010
0,240 240,750 780,1140 1140,1410 1410,1680
in the next class meeting

2341
01:16:37,010 --> 01:16:38,320
0,300 300,690
next tuesday.

2342
01:16:39,120 --> 01:16:40,400
0,210 210,390 390,720
Okay, thank you.

2343
01:16:43,650 --> 01:16:45,180
0,450 480,690 690,1020 1020,1440 1440,1530
Oh, could you talk a

2344
01:16:45,180 --> 01:16:46,350
0,300 300,510 510,720 720,990 990,1170
little bit more about the

2345
01:16:46,350 --> 01:16:47,980
0,270 270,420 420,1140
proof of stake.

2346
01:16:48,440 --> 01:16:51,980
0,720 1560,2250 2250,2910 2940,3360 3360,3540
I'm a sure I'm not

2347
01:16:51,980 --> 01:16:53,330
0,240 240,630 630,840 840,1080 1080,1350
sure what to say about

2348
01:16:53,330 --> 01:16:54,840
0,180
it.

2349
01:16:56,250 --> 01:16:57,150
0,270 270,480 480,720 720,840 840,900
Um the day you know

2350
01:16:57,150 --> 01:16:57,900
0,60 60,180 180,330 330,480 480,750
if you want to know

2351
01:16:57,900 --> 01:16:58,860
0,150 150,330 330,750 750,840 840,960
any more details, you know

2352
01:16:58,860 --> 01:17:00,630
0,210 210,540 540,810 810,1290 1320,1770
just Google proof stake and

2353
01:17:00,660 --> 01:17:02,100
0,210 210,390 390,660 660,990 990,1440
you'll find a different Bitcoin

2354
01:17:02,100 --> 01:17:04,350
0,510 510,630 630,990 990,1290 1290,2250
currencies that use it and

2355
01:17:04,710 --> 01:17:06,420
0,360 360,570 570,810 810,1290 1320,1710
and I'll tell you more

2356
01:17:06,420 --> 01:17:07,440
0,510
detail.

2357
01:17:07,740 --> 01:17:08,880
0,390 390,510 510,900 900,990 990,1140
Um, but visually you know

2358
01:17:08,880 --> 01:17:11,700
0,390 420,1290 1770,1830 1860,2580 2580,2820
the power of a in

2359
01:17:11,700 --> 01:17:12,960
0,60 60,540 540,690 690,1170 1170,1260
the network is proportional to

2360
01:17:12,960 --> 01:17:14,040
0,120 120,420 420,510 510,570 570,1080
your stake in the network.

2361
01:17:15,240 --> 01:17:16,710
0,510 600,750 750,1050 1050,1380 1380,1470
And the basic idea is

2362
01:17:16,710 --> 01:17:18,420
0,240 240,570 570,990 990,1530 1530,1710
that if you own like

2363
01:17:18,420 --> 01:17:19,920
0,390 420,600 600,960 960,1050 1050,1500
whatever {3% {-},or -} 10%

2364
01:17:19,920 --> 01:17:20,820
0,90 90,180 180,270 270,810 810,900
of all the bitcoins you

2365
01:17:20,820 --> 01:17:22,110
0,210 210,390 390,810 810,900 900,1290
know you {guys,to -} decide

2366
01:17:22,110 --> 01:17:24,480
0,450 450,570 570,960 1560,2130 2130,2370
10% of the um, the

2367
01:17:24,480 --> 01:17:26,940
0,180 180,810 990,1800 1800,2280 2280,2460
new blocks a and you're

2368
01:17:26,940 --> 01:17:28,020
0,120 120,240 240,390 390,990 1020,1080
going to have incentive you

2369
01:17:28,020 --> 01:17:29,100
0,210 210,330 330,540 540,660 660,1080
know the higher your stake,

2370
01:17:29,100 --> 01:17:30,330
0,90 90,210 210,360 360,690 690,1230
you know the higher incentives

2371
01:17:30,330 --> 01:17:31,770
0,330 330,870 900,1110 1110,1200 1200,1440
actually to play the game

2372
01:17:31,770 --> 01:17:32,660
0,450
correctly.

2373
01:17:35,110 --> 01:17:36,910
0,210 210,360 360,1020 1110,1620 1620,1800
So the struggle becomes more

2374
01:17:36,910 --> 01:17:38,770
0,810 810,960 960,1200 1200,1530 1530,1860
deterministic in that case, right.

2375
01:17:40,500 --> 01:17:43,530
0,1440 1440,2460 2460,2640 2640,2940 2940,3030
And all all depends on

2376
01:17:43,530 --> 01:17:44,610
0,60 60,360 360,450 450,510 510,1080
the details of the protocol.

2377
01:17:45,940 --> 01:17:47,530
0,510 510,870 870,1410 1410,1500 1500,1590
Um in algorithms, you know

2378
01:17:47,530 --> 01:17:49,000
0,510 510,750 750,810 810,1320 1320,1470
basically there's a periodical in

2379
01:17:49,000 --> 01:17:50,200
0,390 390,690 690,870 870,900 900,1200
meter and there's a committee

2380
01:17:50,200 --> 01:17:51,490
0,660 660,750 750,870 870,930 930,1290
election and then the committee

2381
01:17:51,490 --> 01:17:52,780
0,390 390,600 600,960 960,1200 1200,1290
decides someone like what the

2382
01:17:52,780 --> 01:17:54,460
0,450 510,900 900,1260 1260,1380 1380,1680
next block is and then

2383
01:17:54,460 --> 01:17:55,180
0,120 120,300 300,480 480,510 510,720
you know there's a new

2384
01:17:55,180 --> 01:17:56,530
0,360 360,450 450,510 510,1080 1080,1350
leader and the new committee

2385
01:17:56,530 --> 01:17:58,120
0,390 390,660 660,1140
elections etc etc.

2386
01:17:58,820 --> 01:18:00,890
0,570 780,1200 1200,1620 1620,2010 2010,2070
Um, and many aspects of

2387
01:18:00,890 --> 01:18:02,660
0,210 210,480 480,600 600,1380 1380,1770
that, are you know probably

2388
01:18:02,660 --> 01:18:05,180
0,450 450,840 840,1680 2010,2340 2340,2520
stick and randomized, um so

2389
01:18:05,180 --> 01:18:06,680
0,180 180,300 300,690 690,1290 1290,1500
that the attacker can win

2390
01:18:06,680 --> 01:18:07,700
0,60 60,480
the game.

2391
01:18:15,170 --> 01:18:17,360
0,330 330,720 720,1080 1110,1470 1470,2190
These vehicles are quite sophisticated.

2392
01:18:26,110 --> 01:18:27,940
0,540 660,1320 1320,1440 1440,1560 1560,1830
I'm also to be able

2393
01:18:27,940 --> 01:18:30,040
0,480 600,1140 1140,1320 1320,1620 1620,2100
to mine you have to

2394
01:18:30,160 --> 01:18:32,560
0,660 780,1170 1170,1290 1290,1890
half of the log.

2395
01:18:32,960 --> 01:18:35,180
0,180 180,840 840,990 990,1800 1800,2220
To verify the transactions, right.

2396
01:18:35,760 --> 01:18:36,780
0,510
Yes.

2397
01:18:37,010 --> 01:18:38,030
0,240 240,480 480,750 750,930 930,1020
Yeah, so the man is

2398
01:18:38,030 --> 01:18:38,870
0,120 120,420 420,660 660,750 750,840
a complete copy of the

2399
01:18:38,870 --> 01:18:40,920
0,300 300,780 780,870 870,1560
walk which is gigabyte.

2400
01:18:42,080 --> 01:18:43,940
0,480 480,660 660,780 780,1380
Isn't that a lot.

2401
01:18:43,970 --> 01:18:46,490
0,720 720,1080 1080,1230 1230,2430 2460,2520
Michael turned out to be

2402
01:18:46,580 --> 01:18:47,990
0,510 510,900 900,1080 1080,1140 1140,1410
totally doable for a reasonable

2403
01:18:47,990 --> 01:18:49,040
0,480
computer.

2404
01:18:49,100 --> 01:18:50,200
0,690
Okay.

2405
01:18:51,110 --> 01:18:52,440
0,300 300,810
Thank you.

2406
01:18:52,440 --> 01:18:53,600
0,240 240,630
You're welcome.

2407
01:18:59,310 --> 01:19:00,480
0,210 210,390 390,990 990,1080 1080,1170
This is unrelated to the

2408
01:19:00,480 --> 01:19:02,190
0,570 570,870 1110,1410 1410,1560 1560,1710
lecture, but do you think,

2409
01:19:02,190 --> 01:19:04,410
0,120 120,210 210,750 750,1320 1620,2220
it'd be possible to talk

2410
01:19:04,410 --> 01:19:05,640
0,240 240,420 420,480 480,900 900,1230
about during the classroom time

2411
01:19:05,640 --> 01:19:07,500
0,240 240,360 360,900 900,1230 1260,1860
like the design that tac

2412
01:19:07,500 --> 01:19:09,210
0,180 180,330 330,570 570,960 1110,1710
that you had four labs

2413
01:19:09,210 --> 01:19:10,860
0,210 210,360 360,780 810,1170 1470,1650
three and four like because

2414
01:19:10,860 --> 01:19:13,470
0,210 210,420 420,1080 1350,2100 2100,2610
there's more open-ended, so yeah

2415
01:19:13,470 --> 01:19:16,100
0,390 390,600 600,810 810,1950
afterwards more open at.

2416
01:19:16,340 --> 01:19:18,140
0,180 180,390 390,780 780,1230 1230,1800
I was not planning to

2417
01:19:18,140 --> 01:19:19,100
0,420 420,540 540,690 690,840 840,960
I don't know we have

2418
01:19:19,100 --> 01:19:20,720
0,270 270,900 900,990 990,1140 1140,1620
time left to do so,

2419
01:19:21,110 --> 01:19:22,670
0,810 840,1050 1050,1110 1110,1320 1320,1560
um, first of all, not

2420
01:19:22,670 --> 01:19:23,930
0,300 300,390 390,570 570,780 780,1260
everybody has done that for

2421
01:19:24,230 --> 01:19:26,750
0,810 810,1290 1290,1710 1710,2370 2400,2520
um, and so, um I

2422
01:19:26,750 --> 01:19:27,770
0,360 360,450 450,600 600,960 960,1020
currently have no intention to

2423
01:19:27,770 --> 01:19:29,180
0,120 120,390 390,1080 1080,1170 1170,1410
do so, but of course

2424
01:19:29,180 --> 01:19:29,930
0,90 90,390 390,600 600,690 690,750
you can reach out to

2425
01:19:29,930 --> 01:19:31,460
0,60 60,300 300,630 630,1290 1320,1530
our office hours and talk

2426
01:19:31,460 --> 01:19:33,380
0,90 90,210 210,480 480,930 1080,1920
to the ta soon, um

2427
01:19:33,380 --> 01:19:34,640
0,270 270,750 750,930 930,1050 1050,1260
or again reach out later

2428
01:19:34,640 --> 01:19:36,230
0,90 90,420 690,1410 1410,1500 1500,1590
to meet and we can

2429
01:19:36,230 --> 01:19:37,220
0,180 180,540 540,780 780,870 870,990
talk about three and one

2430
01:19:37,220 --> 01:19:38,020
0,540
fourth.

2431
01:19:38,850 --> 01:19:41,400
0,360 360,600 600,810 810,1140
Sounds good, thank you.

2432
01:19:45,100 --> 01:19:47,830
0,870 1710,1950 1950,2430 2430,2610 2610,2730
So, so I I had

2433
01:19:47,830 --> 01:19:49,580
0,60 60,420 420,1230
a question about.

2434
01:19:49,670 --> 01:19:51,260
0,420 780,930 930,1230 1230,1410 1410,1590
Like it says it says

2435
01:19:51,260 --> 01:19:53,280
0,90 90,180 180,480 480,1410
in the paper like.

2436
01:19:54,870 --> 01:19:57,100
0,480 540,1080 1080,1560
Or rather, sorry.

2437
01:19:57,280 --> 01:20:00,400
0,990 1020,1950 1950,2760 2760,2820 2820,3120
Um, yeah, once the latest

2438
01:20:00,400 --> 01:20:02,500
0,600 600,1200 1230,1530 1530,1890 1890,2100
transaction coin is burried under

2439
01:20:02,500 --> 01:20:04,510
0,300 300,810 1320,1590 1590,1800 1800,2010
enough block a that's been

2440
01:20:04,510 --> 01:20:06,130
0,780 780,1200 1200,1320 1320,1470 1470,1620
transaction before it can be

2441
01:20:06,130 --> 01:20:08,020
0,600 600,690 690,1020 1020,1440 1440,1890
discarded to shape disk space.

2442
01:20:10,560 --> 01:20:12,810
0,90 90,630 660,960 960,1620 1620,2250
I I I I understood

2443
01:20:12,810 --> 01:20:14,670
0,240 240,540 600,750 750,1110 1350,1860
though that you know a

2444
01:20:14,670 --> 01:20:16,160
0,960
blockchain.

2445
01:20:16,310 --> 01:20:19,400
0,540 540,930 930,1260 1260,2610
I'm never really like.

2446
01:20:19,430 --> 01:20:22,010
0,330 330,960 960,1950 1950,2160 2160,2580
A discards transactions, it keeps

2447
01:20:22,010 --> 01:20:23,030
0,210 210,420 420,780 780,900 900,1020
a whole log of all

2448
01:20:23,030 --> 01:20:26,090
0,90 90,870 1350,2400 2400,2490 2490,3060
the transactions, why is this,

2449
01:20:26,120 --> 01:20:27,410
0,270 270,600 600,780 780,1050 1050,1290
like why was this done

2450
01:20:27,410 --> 01:20:28,860
0,150 150,1020
in practice.

2451
01:20:28,860 --> 01:20:30,930
0,750 750,870 870,1380 1410,1890 1890,2070
Because to save space on

2452
01:20:30,930 --> 01:20:34,440
0,150 1920,2250 2250,2580 2580,2820 2820,3510
the she stays on the

2453
01:20:34,470 --> 01:20:37,140
0,750 750,1020 1020,1800 1800,2130 2130,2670
wow, it's a space compaction.

2454
01:20:37,720 --> 01:20:39,730
0,360 360,1590 1590,1890 1890,1950 1950,2010
On ze nodes in the

2455
01:20:39,730 --> 01:20:40,800
0,570
minors.

2456
01:20:41,100 --> 01:20:42,030
0,240 240,420 420,540 540,810 810,930
And so they don't have

2457
01:20:42,030 --> 01:20:43,470
0,60 60,270 270,570 570,720 720,1440
to keep track of every

2458
01:20:43,470 --> 01:20:45,660
0,690 1020,1290 1290,1740 1740,1920 1920,2190
transaction name login over every

2459
01:20:45,660 --> 01:20:47,490
0,360 360,1140 1230,1530 1530,1740 1740,1830
basically Bitcoin they have to

2460
01:20:47,490 --> 01:20:48,540
0,300 300,540 540,630 630,720 720,1050
keep track of the last

2461
01:20:48,540 --> 01:20:49,440
0,360
one.

2462
01:20:49,470 --> 01:20:52,440
0,720 870,1590 1620,2250 2550,2730 2730,2970
Um and efficient and so

2463
01:20:52,440 --> 01:20:53,520
0,450 450,600 600,690 690,840 840,1080
one way to think about

2464
01:20:53,520 --> 01:20:54,390
0,120 120,300 300,360 360,750 750,870
is sort of like you

2465
01:20:54,390 --> 01:20:55,380
0,90 90,360 360,390 390,900 900,990
can compute a snapshot in

2466
01:20:55,380 --> 01:20:57,120
0,480 810,990 990,1200 1200,1290 1290,1740
time of all the values

2467
01:20:57,120 --> 01:21:01,110
0,60 60,480 480,2040 2070,3210 3210,3990
of voltages a points and

2468
01:21:01,110 --> 01:21:02,130
0,300 300,420 420,630 630,870 870,1020
then you don't really have

2469
01:21:02,130 --> 01:21:03,390
0,90 90,390 390,480 480,660 660,1260
to remember the whole past.

2470
01:21:03,720 --> 01:21:04,950
0,240 240,570 570,900 900,990 990,1230
Who does keep the whole

2471
01:21:04,950 --> 01:21:06,420
0,390 390,810
pass then.

2472
01:21:07,040 --> 01:21:09,140
0,480 480,750 750,1230 1740,2010 2010,2100
I'll buy yeah there's two

2473
01:21:09,140 --> 01:21:10,460
0,360 360,750 750,990 990,1230 1230,1320
things, one is like you

2474
01:21:10,460 --> 01:21:12,380
0,540 540,750 750,900 900,1380 1380,1920
know when you check whether

2475
01:21:12,380 --> 01:21:14,000
0,480 480,900 900,1260 1260,1560 1560,1620
transaction's valid go scan the

2476
01:21:14,000 --> 01:21:15,140
0,180 180,630 660,870 870,1020 1020,1140
whole log people don't do

2477
01:21:15,140 --> 01:21:17,000
0,270 360,780 780,960 960,1530 1710,1860
that you take forever and

2478
01:21:17,000 --> 01:21:18,500
0,270 270,480 480,510 510,750 750,1500
basically build a data structure

2479
01:21:18,500 --> 01:21:19,850
0,270 270,420 420,660 660,1200 1200,1350
is no quite impact and

2480
01:21:19,850 --> 01:21:22,250
0,330 330,750 900,1350 1350,1890 1890,2400
has the last transaction for

2481
01:21:22,250 --> 01:21:24,500
0,630 960,1830
a every.

2482
01:21:24,500 --> 01:21:26,720
0,660 690,870 870,1380 1440,1680 1680,2220
Um who spent a coin,

2483
01:21:27,140 --> 01:21:29,990
0,660 1020,1800 1830,2040 2040,2460 2550,2850
um the you know you

2484
01:21:29,990 --> 01:21:31,250
0,300 330,660 660,1020 1020,1080 1080,1260
can totally download the whole

2485
01:21:31,250 --> 01:21:32,960
0,450 480,630 630,900 900,1170 1170,1710
log, you know from you

2486
01:21:32,960 --> 01:21:34,220
0,240 240,390 390,480 480,900 930,1260
want from the Internet, um,

2487
01:21:34,220 --> 01:21:36,710
0,180 180,300 300,900 1290,1860 1860,2490
it is maintained and notes

2488
01:21:36,710 --> 01:21:37,920
0,90 90,480 480,750
to store it.

2489
01:21:38,120 --> 01:21:39,680
0,210 210,360 360,930 930,1230 1230,1560
Yeah to basically they lose

2490
01:21:39,680 --> 01:21:40,880
0,120 120,240 240,510 510,780 780,1200
all their data, they can

2491
01:21:41,480 --> 01:21:43,250
0,360 360,480 480,570 570,1200 1200,1770
compute all the balances basically

2492
01:21:43,250 --> 01:21:44,390
0,150 150,480 480,630 630,780 780,1140
from running all that rejection

2493
01:21:44,390 --> 01:21:45,740
0,120 120,360 360,450 450,810
from beginning of time.

2494
01:21:47,910 --> 01:21:50,310
0,540 570,1140 1170,1470 1470,1800 1800,2400
Um, but so so like.

2495
01:21:50,840 --> 01:21:52,820
0,210 210,570 570,1440 1620,1830 1830,1980
If people are like who

2496
01:21:52,820 --> 01:21:54,470
0,660 660,720 720,960 960,1440 1470,1650
maintains the whole block, the

2497
01:21:54,470 --> 01:21:58,010
0,480 510,1680 1680,2130 2130,2730 3120,3540
whole transactions replicated everywhere where

2498
01:21:58,010 --> 01:21:59,780
0,900 900,1230 1230,1380 1380,1740 1740,1770
everybody wants to get a

2499
01:21:59,780 --> 01:22:01,140
0,300 300,360 360,450 450,870
copy of the log.

2500
01:22:01,610 --> 01:22:02,860
0,780
Right.

2501
01:22:02,860 --> 01:22:04,120
0,450 450,660 660,750 750,990 990,1260
But, but if most people

2502
01:22:04,120 --> 01:22:05,620
0,120 120,420 420,690 690,930 930,1500
are doing this it's carling

2503
01:22:05,620 --> 01:22:08,080
0,1110 1320,1560 1560,1830 1830,2070 2070,2460
transactions like why would someone

2504
01:22:08,080 --> 01:22:11,080
0,450 450,720 720,2760 2760,2910 2910,3000
keep like z this is

2505
01:22:11,080 --> 01:22:12,640
0,240 240,360 360,750 750,1140 1140,1560
not good enough to actually

2506
01:22:12,640 --> 01:22:13,900
0,210 210,540 540,960 1020,1170 1170,1260
keep track of you know,

2507
01:22:13,900 --> 01:22:15,100
0,180 180,480 480,570 570,660 660,1200
this allows you to decide

2508
01:22:15,310 --> 01:22:17,530
0,570 570,630 630,1440 1440,1620 1620,2220
where the transaction was actually

2509
01:22:17,530 --> 01:22:18,880
0,540 540,900 900,990 990,1080 1080,1350
a happened in the past

2510
01:22:18,880 --> 01:22:19,720
0,120 120,240 240,480 480,750 750,840
but it doesn't allow you

2511
01:22:19,720 --> 01:22:21,010
0,90 90,510 510,1050 1050,1170 1170,1290
to validate transactions so you

2512
01:22:21,010 --> 01:22:22,060
0,120 120,180 180,570 570,990 990,1050
want to validate transactions you

2513
01:22:22,060 --> 01:22:23,020
0,150 150,210 210,360 360,420 420,960
have to keep the past.

2514
01:22:23,390 --> 01:22:24,580
0,660
Okay.

2515
01:22:25,290 --> 01:22:26,440
0,600
Okay.

2516
01:22:26,760 --> 01:22:29,100
0,1080 1260,1830
Thanks, wow.

2517
01:22:32,810 --> 01:22:34,520
0,210 210,420 420,1140
Any more questions.

2518
01:22:35,580 --> 01:22:36,500
0,360
Pak.

2519
01:22:36,960 --> 01:22:39,960
0,690 810,1380
Okay, thanks.
