1
00:00:06,030 --> 00:00:07,940
0,540 540,720 720,1320
Okay, good afternoon,|

2
00:00:08,470 --> 00:00:11,080
0,720 720,960 960,1500 1530,2070 2070,2610
{} sound check sound checking,|

3
00:00:12,790 --> 00:00:14,260
0,360 360,480 480,630 630,900
people can hear me?|

4
00:00:16,760 --> 00:00:20,150
0,1410 1470,1770 1770,2160 2700,3000 3000,3390
Yeah.| Thank you,| okay, good,

5
00:00:20,150 --> 00:00:21,470
0,90 90,240 240,780 780,960 960,1320
so good afternoon, good evening,

6
00:00:21,470 --> 00:00:22,850
0,150 150,600 600,720 720,990 990,1380
good morning, good night, wherever

7
00:00:22,850 --> 00:00:24,560
0,90 90,390 720,1320 1320,1650 1650,1710
you are,| I'm going to

8
00:00:24,560 --> 00:00:25,970
0,150 150,480 480,750 750,900 900,1410
talk today more about raft|

9
00:00:27,110 --> 00:00:29,000
0,420 420,660 660,990 990,1200 1200,1890
and we want to cover

10
00:00:29,000 --> 00:00:31,580
0,330 330,690 690,1560 1860,2340 2340,2580
following different topics,| {} which

11
00:00:31,580 --> 00:00:32,810
0,180 180,330 330,540 600,930 930,1230
are going to be relevant

12
00:00:32,810 --> 00:00:34,500
0,420 420,1290
to labs.|

13
00:00:34,790 --> 00:00:35,630
0,360 360,600 600,660 660,750 750,840
So, first of all, I

14
00:00:35,630 --> 00:00:36,170
0,150 150,210 210,360 360,390 390,540
want to talk a little

15
00:00:36,170 --> 00:00:38,180
0,150 150,450 450,840 840,1110 1110,2010
bit more about log divergence,|

16
00:00:39,120 --> 00:00:40,260
0,480 540,720 720,900 900,960 960,1140
{} we sort of had

17
00:00:40,260 --> 00:00:41,400
0,150 180,750 750,870 870,960 960,1140
a cliffhanger at the end

18
00:00:41,400 --> 00:00:42,660
0,120 120,420 420,900 930,1140 1140,1260
of last lecture,| where we

19
00:00:42,660 --> 00:00:43,560
0,210 210,300 300,360 360,780 780,900
got in a discussion that

20
00:00:43,560 --> 00:00:45,060
0,240 240,600 600,810 810,1020 1020,1500
figure six,| {I,want} to resume

21
00:00:45,060 --> 00:00:46,680
0,390 390,1020
that discussion.|

22
00:00:46,710 --> 00:00:47,700
0,150 150,360 360,420 420,540 540,990
I want to talk about

23
00:00:47,760 --> 00:00:49,650
0,390 390,690 690,1050 1560,1710 1710,1890
log catch up and what

24
00:00:49,650 --> 00:00:51,840
0,600 630,1080 1080,1590
happens,| if {}

25
00:00:52,040 --> 00:00:54,350
0,240 240,450 450,1410 1440,1680 1680,2310
how do followers {} {catch,up},|

26
00:00:54,980 --> 00:00:56,480
0,870 930,1080 1080,1290 1290,1410 1410,1500
then a little bit of

27
00:00:56,480 --> 00:00:57,890
0,120 120,690 690,840 840,1020 1020,1410
a persistence like what state

28
00:00:57,890 --> 00:01:00,800
0,330 330,750 1440,2280
must be {},|

29
00:01:01,240 --> 00:01:02,500
0,330 330,390 390,810 810,1020 1020,1260
what's {} raft state must

30
00:01:02,500 --> 00:01:04,150
0,90 90,570 570,690 690,1200 1200,1650
be persistent in storage| which

31
00:01:04,150 --> 00:01:05,680
0,90 90,720 720,1200 1200,1350 1350,1530
is really relevant for {2c

32
00:01:05,680 --> 00:01:07,720
0,210 210,330 330,450 450,870 1410,2040
-} and {2d -}, {}|

33
00:01:07,720 --> 00:01:10,240
0,570 570,1290 1290,1800 1830,2070 2070,2520
and also {} talk about

34
00:01:10,270 --> 00:01:13,460
0,540 540,720 720,810 810,1530
[] out to snapshots.|

35
00:01:13,580 --> 00:01:14,640
0,570
Yeah,

36
00:01:14,940 --> 00:01:15,990
0,150 150,300 300,450 450,780 780,1050
if there's any questions, please

37
00:01:15,990 --> 00:01:18,210
0,240 240,330 330,870 1950,2100 2100,2220
{feel,free} to ask| and then

38
00:01:18,210 --> 00:01:18,810
0,300 300,330 330,450 450,510 510,600
finally I want to talk

39
00:01:18,810 --> 00:01:19,890
0,180 180,420 420,570 570,960 960,1080
about {linearizability - -}| and

40
00:01:19,890 --> 00:01:23,040
0,1140 1140,1950 1950,2760 2760,2970 2970,3150
correct criterion that comes up

41
00:01:23,040 --> 00:01:24,870
0,450 450,780 780,1410 1410,1500 1500,1830
quite often in the paper|

42
00:01:24,870 --> 00:01:26,070
0,300 300,660 660,840 840,1020 1020,1200
used also in a bunch

43
00:01:26,070 --> 00:01:27,720
0,90 90,630 1230,1380 1380,1530 1530,1650
of places,| and this will

44
00:01:27,720 --> 00:01:28,830
0,510 510,630 630,780 780,1080 1080,1110
allow us to talk a

45
00:01:28,830 --> 00:01:30,180
0,210 210,390 390,690 690,1170 1170,1350
little bit again about how

46
00:01:30,180 --> 00:01:31,170
0,180 180,300 300,630 630,720 720,990
does this {server -} use

47
00:01:31,170 --> 00:01:32,060
0,480
raft.|

48
00:01:32,490 --> 00:01:34,290
0,510 900,1260 1260,1530 1530,1710 1710,1800
{} So, those are the

49
00:01:34,290 --> 00:01:35,430
0,360 360,540 540,720 720,900 900,1140
topics we plan to talk

50
00:01:35,430 --> 00:01:37,440
0,480 570,1020 1020,1230 1260,1500 1500,2010
about,| {} {you,have} any questions

51
00:01:37,440 --> 00:01:38,430
0,210 210,390 390,630 630,840 840,990
right now, please feel free

52
00:01:38,430 --> 00:01:39,520
0,60 60,540
to ask,|

53
00:01:39,520 --> 00:01:40,510
0,240 240,390 390,450 450,720 720,990
{} and of course always

54
00:01:40,510 --> 00:01:41,770
0,240 240,510 510,720 720,870 870,1260
jump in at any point.|

55
00:01:47,470 --> 00:01:49,600
0,540 630,1050 1050,1680
Okay, so um.

56
00:01:49,720 --> 00:01:50,800
0,240 240,540 540,690 690,780 780,1080
So we saw it last

57
00:01:50,800 --> 00:01:51,850
0,210 210,480 480,720 720,930 930,1050
year we started talking about

58
00:01:51,850 --> 00:01:53,020
0,480 480,570 570,870 870,1020 1020,1170
draft you know we saw

59
00:01:53,020 --> 00:01:53,920
0,180 180,270 270,540 540,690 690,900
that the leader has served

60
00:01:53,920 --> 00:01:55,420
0,210 210,630 630,810 810,1320 1320,1500
this job of replicating its

61
00:01:55,420 --> 00:01:59,080
0,510 750,1350 1350,2310 2730,3120 3120,3660
wall onto the onto followers

62
00:01:59,440 --> 00:02:01,510
0,840 840,1230 1230,1590 1620,1800 1800,2070
and um, but you know,

63
00:02:01,510 --> 00:02:02,860
0,240 240,420 420,510 510,1140 1140,1350
um due to crashes in

64
00:02:02,860 --> 00:02:04,810
0,240 240,840 1020,1440 1440,1710 1710,1950
leader election, um, the state

65
00:02:04,810 --> 00:02:05,620
0,90 90,150 150,630 630,720 720,810
of the system, you know

66
00:02:05,620 --> 00:02:06,790
0,120 120,360 360,480 480,690 690,1170
the laws can actually quite

67
00:02:06,790 --> 00:02:08,680
0,660 660,1140 1140,1560 1590,1860 1860,1890
an diverse quite quite a

68
00:02:08,680 --> 00:02:10,020
0,270
bit.

69
00:02:11,280 --> 00:02:13,260
0,360 360,600 600,1230 1470,1920 1920,1980
In figure six is an

70
00:02:13,260 --> 00:02:16,800
0,870 1500,1620 1620,1710 1710,2490 2520,3540
illustration, you know why, how,

71
00:02:16,890 --> 00:02:18,180
0,300 300,570 570,690 690,1200 1200,1290
how that could happen you

72
00:02:18,180 --> 00:02:19,860
0,150 150,480 510,870 870,1170 1500,1680
know the leaders can go

73
00:02:19,860 --> 00:02:21,090
0,510 510,630 630,810 810,1080 1080,1230
down they may offend some

74
00:02:21,090 --> 00:02:22,500
0,270 270,720 720,930 930,1170 1170,1410
more entries and so there's

75
00:02:22,500 --> 00:02:23,280
0,60 60,240 240,420 420,510 510,780
a whole bunch of different

76
00:02:23,280 --> 00:02:26,640
0,810 1140,1920 1950,2490 2490,2760 3060,3360
scenarios, um, yeah that our

77
00:02:26,640 --> 00:02:27,720
0,270 270,420 420,570 570,780 780,1080
system can end up in

78
00:02:27,720 --> 00:02:29,040
0,150 150,420 420,570 570,1230 1230,1320
and so the figure a

79
00:02:29,040 --> 00:02:31,110
0,360 360,750 750,990 990,1380 1680,2070
six fifty seven actually a

80
00:02:31,110 --> 00:02:32,160
0,300 300,360 360,540 540,600 600,1050
shows a bunch of those

81
00:02:32,280 --> 00:02:34,540
0,810 1050,1740
and the.

82
00:02:34,690 --> 00:02:36,430
0,150 150,210 210,450 450,960 960,1740
And the main reason, um

83
00:02:36,640 --> 00:02:38,020
0,180 180,270 270,660 660,960 960,1380
for the figure is that,

84
00:02:38,020 --> 00:02:40,150
0,660 690,960 960,1260 1260,1800 1800,2130
um, it actually sharpens up

85
00:02:40,360 --> 00:02:42,560
0,570 570,930 930,1290 1290,1650
the loser election rule.

86
00:02:49,940 --> 00:02:51,110
0,330 330,660 660,720 720,990 990,1170
So once the leader goes

87
00:02:51,110 --> 00:02:52,340
0,600 600,900 900,1050 1050,1170 1170,1230
down and we need to

88
00:02:52,340 --> 00:02:54,110
0,270 270,300 300,540 540,1080 1350,1770
Elect a new leader, um,

89
00:02:54,110 --> 00:02:56,600
0,360 360,600 600,780 780,1530 1560,2490
there's actually some restrictions that

90
00:02:56,600 --> 00:02:58,700
0,210 210,300 300,930 1170,1590 1590,2100
must be applied to actually

91
00:02:58,730 --> 00:03:00,680
0,540 720,1260 1260,1680 1680,1830 1830,1950
a make sure that we

92
00:03:00,680 --> 00:03:02,180
0,120 120,450 450,1170 1170,1380 1380,1500
can get converged on the

93
00:03:02,180 --> 00:03:03,380
0,270 270,630 630,720 720,870 870,1200
right log in the end.

94
00:03:04,040 --> 00:03:05,030
0,180 180,330 330,540 540,600 600,990
And so, first of all,

95
00:03:05,060 --> 00:03:06,200
0,360 360,630 630,720 720,1020 1020,1140
one part of that is

96
00:03:06,200 --> 00:03:07,660
0,150 150,360 360,900
that any leader.

97
00:03:07,660 --> 00:03:09,280
0,240 240,510 510,960 960,1020 1020,1620
Need to achieve a majority.

98
00:03:10,620 --> 00:03:11,640
0,300 300,420 420,540 540,720 720,1020
And this is a part

99
00:03:11,640 --> 00:03:12,810
0,180 180,240 240,750 750,900 900,1170
of the idea to actually

100
00:03:12,810 --> 00:03:15,270
0,570 600,1110 1110,1260 1260,1860 2160,2460
avoid a just bringing a

101
00:03:15,270 --> 00:03:16,800
0,360 360,930 930,1050 1050,1290 1290,1530
split syndrome or split brain

102
00:03:16,800 --> 00:03:18,090
0,480 510,930 930,1080 1080,1170 1170,1290
syndrome a sort of we

103
00:03:18,090 --> 00:03:19,230
0,150 150,510 510,660 660,930 930,1140
can actually make sure that

104
00:03:19,230 --> 00:03:20,760
0,120 120,330 330,540 540,1140 1260,1530
you know in any two

105
00:03:20,760 --> 00:03:22,800
0,630 630,1380 1620,1860 1860,1980 1980,2040
subsequent elections there's going to

106
00:03:22,800 --> 00:03:24,090
0,90 90,210 210,420 420,750 750,1290
be at least one note,

107
00:03:24,150 --> 00:03:26,250
0,210 210,390 390,1080 1080,1500 1500,2100
um that participated in um

108
00:03:26,280 --> 00:03:29,250
0,630 780,2070 2070,2430 2430,2550 2820,2970
both majorities because you can

109
00:03:29,250 --> 00:03:31,050
0,480 900,960 960,1230 1230,1590 1590,1800
only do two majority must

110
00:03:31,050 --> 00:03:32,940
0,630 660,930 930,1230 1230,1590 1590,1890
overlap and that node must

111
00:03:32,940 --> 00:03:35,160
0,420 420,900 930,1020 1020,1560 1590,2220
actually have you know operations

112
00:03:35,160 --> 00:03:36,900
0,180 180,270 270,870 1140,1590 1590,1740
from a recent um from

113
00:03:36,900 --> 00:03:37,980
0,90 90,360 360,780
the recent term.

114
00:03:38,520 --> 00:03:39,900
0,180 180,480 480,540 540,1050 1110,1380
The majority is important but

115
00:03:39,900 --> 00:03:41,340
0,210 210,510 510,750 750,1290 1290,1440
turns out it's actually a

116
00:03:41,340 --> 00:03:43,920
0,420 420,870 1260,2040 2160,2340 2340,2580
little shuttle, um, you might

117
00:03:43,920 --> 00:03:45,690
0,840 840,1080 1080,1260 1260,1380 1380,1770
think that like the lawyers

118
00:03:45,690 --> 00:03:47,400
0,570 570,780 780,960 960,1050 1050,1710
locked that should be sufficient

119
00:03:47,400 --> 00:03:49,230
0,390 390,480 480,840 840,1140 1140,1830
because the lawyers log house,

120
00:03:49,230 --> 00:03:51,180
0,270 270,810 810,1290 1440,1800 1800,1950
most information so we're just

121
00:03:51,180 --> 00:03:51,990
0,210 210,390 390,510 510,570 570,810
picked out as the next

122
00:03:51,990 --> 00:03:53,070
0,330 330,450 450,900 900,1020 1020,1080
leader and then we're in

123
00:03:53,070 --> 00:03:54,810
0,150 150,570 810,1230 1350,1560 1560,1740
good shape and that turns

124
00:03:54,810 --> 00:03:55,350
0,120 120,180 180,270 270,480 480,540
out to be not the

125
00:03:55,350 --> 00:03:56,300
0,600
case.

126
00:03:56,300 --> 00:03:59,120
0,900 900,1440 1440,2040 2160,2430 2430,2820
Um, and um, and so,

127
00:03:59,330 --> 00:04:01,430
0,360 360,720 720,1740 1740,2040 2040,2100
um and zero rules a

128
00:04:01,430 --> 00:04:02,510
0,210 210,360 360,540 540,990 990,1080
little bit more subtle, you

129
00:04:02,510 --> 00:04:05,990
0,150 150,900 900,1650 1860,3090 3090,3480
know essays majority bloc plus

130
00:04:05,990 --> 00:04:07,130
0,210 210,450 450,630 630,750 750,1140
at least as of date

131
00:04:07,130 --> 00:04:09,120
0,60 210,960
at least.

132
00:04:09,720 --> 00:04:11,860
0,570 660,930 930,1080 1080,1530
But up to date.

133
00:04:13,680 --> 00:04:14,740
0,360
Yes.

134
00:04:15,430 --> 00:04:17,740
0,570 720,1380 1440,1680 1680,2190 2190,2310
So, um, so to um,

135
00:04:17,740 --> 00:04:18,820
0,120 120,270 270,420 420,840 840,1080
you know the real action

136
00:04:18,820 --> 00:04:22,600
0,90 90,570 780,2220 2550,3600 3600,3780
is running a follower, so

137
00:04:22,600 --> 00:04:23,800
0,210 210,720 720,810 810,1110 1110,1200
the candidate is starting to

138
00:04:23,800 --> 00:04:25,630
0,150 150,240 240,450 450,990 990,1830
run a leader election approaches

139
00:04:25,630 --> 00:04:27,490
0,420 420,600 600,660 660,1200 1560,1860
a bunch of followers and

140
00:04:27,490 --> 00:04:29,890
0,90 90,630 630,1110 1140,1770 2130,2400
the followers, um response, um,

141
00:04:29,890 --> 00:04:32,110
0,240 240,300 300,780 780,1260 1560,2220
with a positive vote, um,

142
00:04:32,110 --> 00:04:35,110
0,390 390,1590 1590,2280 2280,2700 2700,3000
if z candidate actually is

143
00:04:35,110 --> 00:04:36,010
0,180 180,420 420,600 600,690 690,900
at least up to date

144
00:04:36,010 --> 00:04:37,100
0,120 120,330 330,690
as they are.

145
00:04:37,480 --> 00:04:38,470
0,240 240,390 390,570 570,840 840,990
And what that means is

146
00:04:38,470 --> 00:04:40,390
0,390 480,660 660,1050 1050,1350 1350,1920
that the last log entry,

147
00:04:40,420 --> 00:04:42,850
0,600 630,1050 1050,1380 1380,1920 2130,2430
a must actually have, um

148
00:04:42,850 --> 00:04:45,340
0,120 120,480 480,1050 1260,2040 2040,2490
the same term or in

149
00:04:45,340 --> 00:04:47,170
0,480 480,1200 1230,1380 1380,1680 1680,1830
a if they actually have

150
00:04:47,170 --> 00:04:49,300
0,90 90,300 300,750 780,1620 1650,2130
the same term the longest

151
00:04:49,300 --> 00:04:51,020
0,390 420,630 630,720 720,1290
one sort of wins.

152
00:04:51,680 --> 00:04:53,720
0,600 930,1470
And so.

153
00:04:53,990 --> 00:04:54,650
0,180 180,330 330,420 420,600 600,660
So that would leave the

154
00:04:54,650 --> 00:04:55,940
0,330 330,870 870,990 990,1110 1110,1290
election ruin you know we

155
00:04:55,940 --> 00:04:57,680
0,240 240,390 390,930 930,1410 1410,1740
look at this problem, last

156
00:04:57,680 --> 00:04:58,910
0,390 420,930 930,1110 1110,1170 1170,1230
week as part of the

157
00:04:58,910 --> 00:05:00,830
0,510 510,720 720,930 930,1440 1440,1920
homework and what happens if

158
00:05:01,100 --> 00:05:02,540
0,90 90,420 480,810 810,1350 1350,1440
you know this note you

159
00:05:02,540 --> 00:05:03,800
0,210 210,450 450,810 840,1170 1170,1260
know what's worse about the

160
00:05:03,800 --> 00:05:06,080
0,510 510,780 780,870 870,1350 1680,2280
reader actually is dead, um,

161
00:05:06,080 --> 00:05:07,580
0,210 210,810 990,1140 1140,1320 1320,1500
it's gone, you know and

162
00:05:07,580 --> 00:05:09,260
0,180 180,330 330,690 690,1230
who could become leaders.

163
00:05:09,590 --> 00:05:10,640
0,120 120,330 330,450 450,600 600,1050
I mean you know quickly

164
00:05:10,640 --> 00:05:12,230
0,540 540,930 960,1050 1050,1200 1200,1590
discovered that you know there

165
00:05:12,350 --> 00:05:13,100
0,270 270,330 330,510 510,570 570,750
there's a bunch of them

166
00:05:13,100 --> 00:05:14,720
0,150 150,480 480,810 810,1290 1380,1620
that cannot become leader, um,

167
00:05:14,720 --> 00:05:16,010
0,120 120,300 300,540 540,1200 1200,1290
but then there's potentially a

168
00:05:16,010 --> 00:05:17,930
0,360 360,1020 1020,1170 1170,1410 1410,1920
numerous scenarios in which some

169
00:05:17,960 --> 00:05:19,400
0,150 150,420 420,930
can become leaders.

170
00:05:19,430 --> 00:05:20,870
0,540 540,690 690,780 780,1350 1350,1440
And so, in particular you

171
00:05:20,870 --> 00:05:22,130
0,90 90,360 360,900 900,1200 1200,1260
know we identify that a

172
00:05:22,130 --> 00:05:24,470
0,180 180,510 510,1020 1290,2070 2070,2340
can become leader a she

173
00:05:24,470 --> 00:05:26,390
0,180 180,510 510,1080 1140,1560 1560,1920
can become leader, indeed became

174
00:05:26,390 --> 00:05:28,320
0,450
complete.

175
00:05:28,700 --> 00:05:30,890
0,540 780,930 930,1200 1200,1710 1770,2190
Um, and so then, um,

176
00:05:30,890 --> 00:05:32,150
0,330 330,450 450,900 900,1170 1170,1260
and so there's probably the

177
00:05:32,150 --> 00:05:33,380
0,330 330,720 720,990 990,1080 1080,1230
most important part of this

178
00:05:33,380 --> 00:05:34,730
0,150 150,630 660,900 900,1200 1200,1350
whole discussion right, who can

179
00:05:34,730 --> 00:05:37,010
0,420 420,780 810,1320 1320,1710 1710,2280
become leader at this question

180
00:05:37,310 --> 00:05:39,380
0,990 990,1410 1440,1620 1620,1800 1800,2070
eyes there let me hold

181
00:05:39,380 --> 00:05:40,220
0,300
on.

182
00:05:43,110 --> 00:05:44,160
0,510
Okay.

183
00:05:44,160 --> 00:05:45,570
0,180 180,330 330,570 570,1200 1230,1410
So who became a that's

184
00:05:45,570 --> 00:05:46,440
0,90 90,300 300,600 600,750 750,870
the most important part, so

185
00:05:46,440 --> 00:05:47,400
0,240 240,420 420,630 630,720 720,960
there's a bunch of different

186
00:05:47,400 --> 00:05:49,020
0,630 630,750 750,1230 1260,1470 1470,1620
scenarios in which a can

187
00:05:49,020 --> 00:05:50,040
0,240 240,300 300,720 750,990 990,1020
become a leader, there's a

188
00:05:50,040 --> 00:05:51,240
0,360 360,480 480,660 660,780 780,1200
scenario where see you become

189
00:05:51,240 --> 00:05:52,170
0,60 60,360 360,480 480,570 570,930
a leader in the scenario

190
00:05:52,170 --> 00:05:53,430
0,150 150,330 330,570 570,900 900,1260
where you become a leader.

191
00:05:54,580 --> 00:05:55,660
0,360 360,450 450,840 840,1050 1050,1080
Then the discussion folks a

192
00:05:55,660 --> 00:05:57,730
0,240 240,510 510,780 870,1500 1860,2070
little bit like well at

193
00:05:57,730 --> 00:05:59,410
0,150 150,270 270,840 870,1320 1320,1680
least there's one particular scenario

194
00:05:59,410 --> 00:06:00,010
0,60 60,210 210,330 330,420 420,600
in which one of these

195
00:06:00,010 --> 00:06:02,800
0,390 390,870 930,1620 1620,2250 2250,2790
becomes leader others multiple scenarios

196
00:06:02,800 --> 00:06:03,640
0,60 60,330 330,570 570,720 720,840
in which take over the

197
00:06:03,640 --> 00:06:05,380
0,300 300,720 720,1140 1140,1290 1290,1740
leader particularly focus this discussion

198
00:06:05,380 --> 00:06:08,080
0,360 360,750 1140,1710 1710,1710
focused on, um a.

199
00:06:09,060 --> 00:06:10,620
0,480 480,750 750,930 930,1260 1260,1560
Um, because like one way

200
00:06:10,620 --> 00:06:11,460
0,120 120,300 300,480 480,780 780,840
that they can become a

201
00:06:11,460 --> 00:06:14,940
0,420 420,1140 1140,1950 2130,2850
leader is when um.

202
00:06:14,940 --> 00:06:16,400
0,240 240,900
She indeed.

203
00:06:16,520 --> 00:06:17,740
0,180 180,720
Or down.

204
00:06:21,540 --> 00:06:22,920
0,360 360,780 780,1050 1050,1290 1290,1380
Right, because um c and

205
00:06:22,920 --> 00:06:24,510
0,180 180,270 270,870 1140,1590 1590,1590
d are down, um, a

206
00:06:24,510 --> 00:06:26,280
0,360 360,660 660,1080 1110,1530 1530,1770
will talk to B E

207
00:06:26,280 --> 00:06:28,410
0,420 420,540 540,1080 1350,1740 1740,2130
E N F A former

208
00:06:28,410 --> 00:06:30,930
0,720 810,1350 1350,1650 1650,1920 1920,2520
majority a with a four

209
00:06:31,230 --> 00:06:33,390
0,390 390,690 690,1020 1020,1560 1590,2160
a it has the most

210
00:06:33,390 --> 00:06:34,650
0,120 120,210 210,450 450,960 1020,1260
up to date lock you

211
00:06:34,650 --> 00:06:36,450
0,420 420,720 720,840 840,1470 1500,1800
notice that you know even

212
00:06:36,450 --> 00:06:37,410
0,180 180,420 420,540 540,600 600,960
though f is a longer

213
00:06:37,410 --> 00:06:39,300
0,450 780,1020 1020,1290 1290,1410 1410,1890
blog that actually is not

214
00:06:39,330 --> 00:06:40,260
0,330 330,480 480,720 720,840 840,930
a the most up to

215
00:06:40,260 --> 00:06:42,150
0,210 210,630 840,1290 1290,1500 1500,1890
date one so a actual

216
00:06:42,150 --> 00:06:44,040
0,480 480,570 570,1230 1260,1470 1470,1890
succeed in becoming the leader.

217
00:06:44,590 --> 00:06:45,730
0,240 240,480 480,720 720,990 990,1140
And then things proceed from

218
00:06:45,730 --> 00:06:46,640
0,360
there.

219
00:06:47,170 --> 00:06:47,890
0,270 270,420 420,540 540,660 660,720
Um, but there was an

220
00:06:47,890 --> 00:06:49,450
0,270 270,720 720,1020 1020,1200 1200,1560
interesting question that came office

221
00:06:49,450 --> 00:06:51,160
0,300 300,630 630,1320 1320,1410 1410,1710
are other scenarios in which

222
00:06:51,190 --> 00:06:52,960
0,360 360,510 510,900 900,1110 1110,1770
a can become very particular

223
00:06:52,990 --> 00:06:54,520
0,360 360,510 510,570 570,1080 1080,1530
are in a scenario where

224
00:06:54,580 --> 00:06:55,900
0,450 450,660 660,960 960,1110 1110,1320
even if c and d

225
00:06:55,900 --> 00:06:57,080
0,180 180,540
are up.

226
00:06:59,270 --> 00:07:01,430
0,180 180,240 240,960 1110,1350 1350,2160
What are reachable or participate

227
00:07:01,520 --> 00:07:03,260
0,60 90,360 360,690 690,1440 1440,1740
in a isn't possibility becomes

228
00:07:03,260 --> 00:07:04,280
0,60 60,450
a leader.

229
00:07:05,140 --> 00:07:06,760
0,720 810,1080 1080,1290 1290,1470 1470,1620
Um, um, so we see

230
00:07:06,760 --> 00:07:08,080
0,60 60,540 540,750 750,1110 1170,1320
in DNA and so the

231
00:07:08,080 --> 00:07:09,910
0,300 300,510 510,780 780,1350 1350,1830
question is does c&d always

232
00:07:09,910 --> 00:07:11,110
0,330 330,540 540,780 780,960 960,1200
vote for a if a

233
00:07:11,110 --> 00:07:12,440
0,120 120,180 180,810
is the candidate.

234
00:07:12,810 --> 00:07:14,250
0,270 270,450 450,1050 1050,1290 1290,1440
Um, and it turns out

235
00:07:14,250 --> 00:07:16,350
0,90 90,360 360,750 750,1470 1560,2100
is actually slightly complicated, um,

236
00:07:16,350 --> 00:07:17,640
0,240 240,330 330,540 540,990 990,1290
it is not completely straight

237
00:07:17,640 --> 00:07:19,590
0,300 300,450 870,1170 1170,1560 1590,1950
for it, so if a

238
00:07:19,590 --> 00:07:21,690
0,330 330,480 480,1080 1110,1950 1950,2100
starts this election, presumably it

239
00:07:21,690 --> 00:07:23,190
0,120 120,420 420,480 480,930 930,1500
will start the election into

240
00:07:23,280 --> 00:07:24,500
0,630
seven.

241
00:07:27,310 --> 00:07:28,900
0,270 270,390 390,690 720,1290 1290,1590
And so if context c

242
00:07:28,900 --> 00:07:30,640
0,120 120,630 690,1290 1290,1470 1470,1740
and D A you see

243
00:07:30,640 --> 00:07:31,570
0,150 150,270 270,600 600,840 840,930
will be perfectly fine with

244
00:07:31,570 --> 00:07:34,900
0,270 270,780 1140,2040 2790,3330 3330,3330
that because {the's -} a

245
00:07:34,900 --> 00:07:36,250
0,840 840,960 960,1170 1170,1260 1260,1350
age at least up to

246
00:07:36,250 --> 00:07:37,180
0,450
date.

247
00:07:37,210 --> 00:07:40,220
0,780 810,1770 1800,2430
Um, can um.

248
00:07:40,250 --> 00:07:42,110
0,540 690,870 870,990 990,1710 1710,1860
Um, and so we'll be

249
00:07:42,110 --> 00:07:43,820
0,270 270,570 570,930 930,1260 1260,1710
able to achieve a majority,

250
00:07:43,820 --> 00:07:45,020
0,330 420,570 570,780 780,1050 1050,1200
but you know it is

251
00:07:45,020 --> 00:07:47,390
0,450 450,870 870,1410 1650,2100 2100,2370
possible corrective de um there's

252
00:07:47,390 --> 00:07:50,510
0,510 510,930 930,1260 1260,1650 1650,3120
one additional rule that if

253
00:07:51,170 --> 00:07:53,690
0,990 990,1290 1290,1650 1650,2130 2130,2520
de actually has, if a

254
00:07:53,900 --> 00:07:56,570
0,1380 1710,2130 2130,2310 2310,2370 2370,2670
follower follower has a higher

255
00:07:56,570 --> 00:07:57,710
0,360 360,510 510,780 780,840 840,1140
term as seen in higher

256
00:07:57,710 --> 00:07:59,330
0,540 570,810 810,1200 1200,1500 1500,1620
term, its current term is

257
00:07:59,330 --> 00:08:00,440
0,690
higher.

258
00:08:00,440 --> 00:08:02,420
0,600 600,930 930,1200 1200,1350 1350,1980
Then the or the candidate

259
00:08:02,540 --> 00:08:04,280
0,270 270,840 900,1110 1110,1230 1230,1740
then actually it can stop

260
00:08:04,280 --> 00:08:06,080
0,120 120,570 570,1080 1350,1680 1680,1800
the election because, um it

261
00:08:06,080 --> 00:08:07,730
0,180 180,780 810,1320 1320,1470 1470,1650
will respond saying like hey

262
00:08:07,730 --> 00:08:09,320
0,180 180,510 510,1110 1110,1350 1350,1590
my terms higher than your

263
00:08:09,320 --> 00:08:10,910
0,390 390,540 540,1110 1170,1320 1320,1590
higher my term, my current

264
00:08:10,910 --> 00:08:12,350
0,210 210,450 450,600 600,900 900,1440
terms higher than your term

265
00:08:12,470 --> 00:08:13,340
0,120 120,210 210,630 630,720 720,870
and so therefore you have

266
00:08:13,340 --> 00:08:14,360
0,60 60,300 300,390 390,840 870,1020
to become a follower so

267
00:08:14,360 --> 00:08:16,610
0,270 270,420 420,960 1110,1710 1710,2250
a will then be changed

268
00:08:16,610 --> 00:08:18,260
0,390 390,690 690,1140 1140,1200 1200,1650
back from candidate to follower.

269
00:08:18,760 --> 00:08:19,990
0,180 180,330 330,450 450,900 900,1230
And this can happen correctly

270
00:08:19,990 --> 00:08:21,490
0,90 90,360 360,480 480,930 1200,1500
in case of d this

271
00:08:21,490 --> 00:08:23,140
0,390 390,630 630,870 870,990 990,1650
d might actually have seen

272
00:08:23,290 --> 00:08:24,580
0,330 330,690 690,990 1020,1170 1170,1290
a term a and we

273
00:08:24,580 --> 00:08:25,720
0,240 240,420 420,810 810,990 990,1140
can't really tell from this

274
00:08:25,720 --> 00:08:27,010
0,330 330,540 540,810 810,960 960,1290
picture, what actually the outcome

275
00:08:27,010 --> 00:08:28,180
0,60 60,180 180,240 240,630 840,1170
is going to be let's

276
00:08:28,180 --> 00:08:30,640
0,420 420,600 600,1260 1470,2220 2220,2460
assume that example, um, you

277
00:08:30,640 --> 00:08:33,280
0,150 150,570 1410,1950 1950,2160 2160,2640
know the it has run

278
00:08:33,310 --> 00:08:37,060
0,870 900,1590 1770,2460 2460,3150 3150,3750
a once, um and accidents,

279
00:08:37,060 --> 00:08:39,190
0,600 600,930 930,1050 1050,1470 1560,2130
increases turned to eight meet

280
00:08:39,190 --> 00:08:40,960
0,210 210,480 480,960 960,1500 1560,1770
didn't become succeeded leader and

281
00:08:40,960 --> 00:08:41,890
0,90 90,210 210,450 450,660 660,930
then its current term we

282
00:08:41,890 --> 00:08:42,670
0,300 300,420 420,540 540,660 660,780
ate and so it will

283
00:08:42,670 --> 00:08:45,160
0,600 600,870 870,1230 1260,2010 2010,2490
vote when a ask too.

284
00:08:45,680 --> 00:08:47,090
0,210 210,330 330,810 960,1320 1320,1410
For its vote, nobody will

285
00:08:47,090 --> 00:08:48,350
0,210 210,690 690,780 780,990 990,1260
say no I won't vote

286
00:08:48,350 --> 00:08:49,970
0,120 120,480 660,1080 1080,1500 1500,1620
for you, and furthermore by

287
00:08:49,970 --> 00:08:51,470
0,330 330,540 540,690 690,1170 1290,1500
current term is eighty so

288
00:08:51,470 --> 00:08:52,730
0,180 180,360 360,570 570,780 780,1260
a we'll see that message,

289
00:08:52,730 --> 00:08:54,290
0,210 210,510 510,720 720,990 990,1560
it's higher than a seven

290
00:08:54,440 --> 00:08:55,820
0,150 150,360 360,540 540,840 840,1380
and so a will actually

291
00:08:55,820 --> 00:08:57,620
0,510 540,870 870,1380 1380,1530 1530,1800
a step down and become

292
00:08:57,620 --> 00:08:58,700
0,180 180,240 240,660 750,960 960,1080
just a follower and then

293
00:08:58,700 --> 00:09:00,170
0,360 360,720 720,1140 1140,1260 1260,1470
support later Julie you know

294
00:09:00,170 --> 00:09:02,030
0,270 270,480 480,870 1260,1650 1650,1860
d will run a its

295
00:09:02,030 --> 00:09:03,380
0,330 330,720 720,840 840,1050 1050,1350
election timer will go off

296
00:09:03,380 --> 00:09:04,460
0,120 120,390 390,540 540,750 750,1080
and actually it will run.

297
00:09:05,740 --> 00:09:07,420
0,150 150,510 750,1020 1020,1290 1290,1680
And so the short story

298
00:09:07,420 --> 00:09:09,160
0,90 90,420 420,540 540,990 1110,1740
of this you know morale

299
00:09:09,160 --> 00:09:10,390
0,270 270,450 450,750 750,870 870,1230
is gonna really this picture

300
00:09:10,390 --> 00:09:12,160
0,210 210,540 840,1080 1080,1350 1350,1770
is that a it's absolutely

301
00:09:12,160 --> 00:09:13,660
0,480 480,720 720,810 810,1350 1350,1500
possible that a cd can

302
00:09:13,660 --> 00:09:14,950
0,240 240,600 600,840 840,1080 1080,1290
become leader in different types

303
00:09:14,950 --> 00:09:17,230
0,60 60,840 1110,1650 1650,2010 2010,2280
of scenarios, um, and that's

304
00:09:17,230 --> 00:09:18,370
0,300 300,390 390,750 750,1050 1050,1140
probably the main thing to

305
00:09:18,370 --> 00:09:19,600
0,210 210,360 360,450 450,870
get out of this.

306
00:09:19,660 --> 00:09:23,950
0,480 600,1290 1440,2550 2910,3660 3720,4290
I'm professor yeah so, um

307
00:09:23,950 --> 00:09:24,970
0,210 210,660 660,810 810,960 960,1020
I I just want to

308
00:09:24,970 --> 00:09:26,320
0,300 300,450 450,720 720,1080 1170,1350
ask because I think I

309
00:09:26,320 --> 00:09:27,130
0,330 330,510 510,660 660,720 720,810
I'm not sure if I

310
00:09:27,130 --> 00:09:28,870
0,330 330,840 840,1230 1350,1620 1620,1740
understood correctly, but then you

311
00:09:28,870 --> 00:09:30,610
0,420 480,750 750,1170 1170,1260 1260,1740
said a might be elected

312
00:09:30,610 --> 00:09:32,230
0,90 90,360 360,870 1290,1500 1500,1620
in terms seven it is

313
00:09:32,230 --> 00:09:33,760
0,270 270,450 450,570 570,720 720,1530
not true that it cannot

314
00:09:34,150 --> 00:09:35,530
0,240 240,480 480,870 870,960 960,1380
for any reason be elected

315
00:09:35,530 --> 00:09:36,880
0,90 90,390 390,930
in terms seven.

316
00:09:37,580 --> 00:09:40,010
0,1050 1200,1530 1530,2010 2040,2220 2220,2430
Um, even if it was

317
00:09:40,010 --> 00:09:42,770
0,420 450,810 810,1290 1740,2460 2490,2760
down right because people like

318
00:09:42,770 --> 00:09:45,220
0,270 300,810 1200,1950
um, like d.

319
00:09:45,220 --> 00:09:46,420
0,420 450,480 510,930 930,1110 1110,1200
Like I already got a

320
00:09:46,420 --> 00:09:48,980
0,540 540,1050 1080,1290 1290,1890
majority right in seven.

321
00:09:50,260 --> 00:09:51,880
0,360 360,570 570,750 750,1500 1500,1620
D got a majority in

322
00:09:51,880 --> 00:09:53,380
0,360 360,720 720,1080 1080,1350 1350,1500
seven because it actually was

323
00:09:53,380 --> 00:09:55,810
0,330 330,630 630,1740 1770,2220 2220,2430
able to um get something

324
00:09:55,810 --> 00:09:57,460
0,270 270,510 510,1110 1110,1500 1500,1650
done so presumably right, you're

325
00:09:57,460 --> 00:09:59,470
0,330 330,450 450,600 600,990 1620,2010
right, you know the great

326
00:09:59,470 --> 00:10:00,820
0,570 870,1020 1020,1080 1080,1260 1260,1350
observation, so it has to

327
00:10:00,820 --> 00:10:02,080
0,90 90,150 150,510 510,870 870,1260
be the case that there's

328
00:10:02,080 --> 00:10:02,860
0,30 30,330 330,390 390,630 630,780
a number of people that

329
00:10:02,860 --> 00:10:04,210
0,240 240,660 660,780 780,1020 1020,1350
actually already in turn seven.

330
00:10:05,800 --> 00:10:06,940
0,330 330,480 480,690 690,930 930,1140
Um, and the picture is

331
00:10:06,940 --> 00:10:08,710
0,690 720,990 990,1170 1170,1440 1440,1770
incomplete, we don't really know

332
00:10:08,710 --> 00:10:09,910
0,270 270,330 330,720 720,1050 1050,1200
what the current term is

333
00:10:09,910 --> 00:10:10,810
0,120 120,360 360,480 480,690 690,900
that people have seen so

334
00:10:10,810 --> 00:10:11,720
0,390
far.

335
00:10:11,720 --> 00:10:12,700
0,510
Yeah.

336
00:10:12,850 --> 00:10:13,840
0,450
Right.

337
00:10:14,340 --> 00:10:16,380
0,570 570,900 900,1080 1080,1560 1830,2040
Well yeah I mean the

338
00:10:16,380 --> 00:10:17,580
0,210 210,360 360,540 540,810 990,1200
only thing is like I

339
00:10:17,580 --> 00:10:19,410
0,330 360,750 810,1200 1200,1320 1320,1830
think like um, a majority

340
00:10:19,410 --> 00:10:21,180
0,90 90,180 180,600 600,1020 1020,1770
of the servers already voted

341
00:10:21,510 --> 00:10:22,770
0,240 240,600 600,690 690,900 900,1260
for someone in term seven

342
00:10:22,770 --> 00:10:24,570
0,330 330,1230 1230,1440 1440,1650 1650,1800
so absolutely a will go

343
00:10:24,570 --> 00:10:25,860
0,120 120,390 390,810
to term eight.

344
00:10:25,950 --> 00:10:27,720
0,840 840,1380 1380,1470 1470,1590 1590,1770
Um, and you know we'll

345
00:10:27,720 --> 00:10:29,370
0,420 420,510 510,1020 1020,1230 1230,1650
run the electric motor made

346
00:10:29,580 --> 00:10:30,240
0,210 210,330 330,480 480,570 570,660
but you know for the

347
00:10:30,240 --> 00:10:31,500
0,240 240,600 600,780 780,960 960,1260
same reason d might already

348
00:10:31,500 --> 00:10:32,910
0,120 120,270 270,720 840,1260 1260,1410
be in an right and

349
00:10:32,910 --> 00:10:34,530
0,450 600,810 810,960 960,1440 1440,1620
so it all depends on

350
00:10:34,530 --> 00:10:36,720
0,210 210,660 900,1740 1740,2100 2100,2190
what the current term is

351
00:10:36,720 --> 00:10:38,190
0,150 150,420 420,750 750,960 960,1470
what these actually these participants

352
00:10:38,190 --> 00:10:39,120
0,180 180,390
are in.

353
00:10:40,910 --> 00:10:42,350
0,270 270,360 360,600 600,1080 1080,1440
But the main conclusion, correct

354
00:10:42,350 --> 00:10:43,670
0,60 60,330 330,630 630,840 840,1320
the main top level conclusion

355
00:10:43,670 --> 00:10:44,900
0,120 120,420 660,900 900,1080 1080,1230
is that a can be

356
00:10:44,900 --> 00:10:46,820
0,450 450,750 990,1560 1560,1710 1710,1920
complete or certainly even c

357
00:10:46,820 --> 00:10:48,420
0,90 90,270 270,510 510,1050
and d are offline.

358
00:10:48,420 --> 00:10:49,980
0,360 360,600 600,900 900,1170 1170,1560
A she can become leader

359
00:10:49,980 --> 00:10:51,180
0,300 300,510 510,840 840,930 930,1200
Andy can become a leader.

360
00:10:54,100 --> 00:10:55,540
0,660
Thanks.

361
00:10:57,430 --> 00:11:00,080
0,1890
Okay.

362
00:11:00,230 --> 00:11:02,480
0,570 750,1200 1230,1830 1830,2100 2100,2250
Um, then, let's so so

363
00:11:02,480 --> 00:11:03,890
0,120 120,240 240,600 600,900 900,1410
we now know that the

364
00:11:03,950 --> 00:11:06,710
0,1050 1500,1920 1920,2280 2280,2580 2580,2760
za raf concert ended in

365
00:11:06,710 --> 00:11:09,080
0,420 420,1050 1290,1860 1860,2010 2010,2370
states where, um the logs

366
00:11:09,080 --> 00:11:11,540
0,360 360,1110 1170,1890 1890,2130 2130,2460
are diverged and so that

367
00:11:11,540 --> 00:11:12,830
0,180 180,270 270,420 420,1050 1080,1290
needs to be repaired and

368
00:11:12,830 --> 00:11:13,910
0,390 390,510 510,750 750,840 840,1080
it's like one a key

369
00:11:13,910 --> 00:11:15,770
0,570 570,750 750,990 990,1260 1260,1860
component of the wrap vertical

370
00:11:15,860 --> 00:11:18,320
0,270 270,390 390,990 1020,1470 1500,2460
is to do the blacklock

371
00:11:18,320 --> 00:11:19,370
0,420 420,510 510,630 630,900 900,1050
ketchup as they call it.

372
00:11:20,280 --> 00:11:22,020
0,630 930,1170 1170,1290 1290,1560 1560,1740
Um, so I talked a

373
00:11:22,020 --> 00:11:23,440
0,180 180,300 300,480 480,840
little bit about that.

374
00:11:30,700 --> 00:11:31,810
0,120 120,210 210,270 270,870 870,1110
And this is basically what

375
00:11:31,810 --> 00:11:33,430
0,240 240,780 780,1140 1140,1290 1290,1620
you're for half to deal

376
00:11:33,430 --> 00:11:36,130
0,360 360,1110 1140,1620 1620,2070 2280,2700
with in part b of

377
00:11:36,130 --> 00:11:37,200
0,90 90,540
the lab.

378
00:11:37,560 --> 00:11:39,810
0,780 1140,1650 1710,1860 1860,2010 2010,2250
Um, so I may be

379
00:11:39,810 --> 00:11:43,860
0,300 300,390 390,840 840,2220 3780,4050
easier to illustrate zip so

380
00:11:43,860 --> 00:11:45,180
0,180 180,900 900,1080 1080,1230 1230,1320
it's going to make it

381
00:11:45,180 --> 00:11:46,830
0,60 60,210 210,300 300,840 1140,1650
a little bit simple, let's

382
00:11:46,830 --> 00:11:48,400
0,210 210,420 420,1050
have free servers.

383
00:11:49,790 --> 00:11:51,480
0,510 510,1080
Here's one.

384
00:11:51,480 --> 00:11:53,190
0,330 330,600 600,1200 1200,1350 1350,1710
Yeah it has, you know.

385
00:11:54,200 --> 00:11:56,960
0,450 450,900 900,1710 1740,2250 2250,2760
Turn free in next ten

386
00:11:57,170 --> 00:11:59,360
0,300 330,630 630,1290 1770,2040 2040,2190
the next eleven has no

387
00:11:59,360 --> 00:12:02,200
0,510 510,1020 1050,1320 1320,2010
entries in a ten.

388
00:12:02,350 --> 00:12:05,080
0,150 150,300 300,1860 1860,2040 2040,2730
I'd like {1213,,here} we have

389
00:12:05,170 --> 00:12:06,680
0,330 330,930
s two.

390
00:12:09,270 --> 00:12:11,190
0,570 570,840 840,1110 1110,1770 1770,1920
S two has entries you

391
00:12:11,190 --> 00:12:14,200
0,210 210,720 720,1320 1740,2460
know three three five.

392
00:12:15,380 --> 00:12:16,610
0,210 210,450 450,600 600,750 750,1230
And so this is index

393
00:12:16,610 --> 00:12:20,690
0,420 420,960 990,1710 1950,2340 2340,4080
ten eleven twelve and {1313,used}

394
00:12:20,690 --> 00:12:22,080
0,90 90,210 210,330 330,870
to make it complete.

395
00:12:22,280 --> 00:12:24,200
0,360 360,750 750,1080 1080,1320 1320,1920
And here is s four.

396
00:12:24,900 --> 00:12:26,720
0,270 270,540 540,750 750,1260
That's right that's free.

397
00:12:26,980 --> 00:12:28,360
0,390 390,570 570,810 810,1320 1320,1380
And let's do wherein the

398
00:12:28,360 --> 00:12:31,400
0,780 810,1020 1020,1770 1830,2490
scenario three three four.

399
00:12:31,400 --> 00:12:34,700
0,300 300,900 930,1800 1920,2550 2580,3300
And ten eleven twelve thirteen.

400
00:12:36,080 --> 00:12:37,190
0,180 180,270 270,480 480,870 870,1110
And I'm not showing like

401
00:12:37,190 --> 00:12:40,490
0,300 300,810 810,1140 1140,1560 3000,3300
the indexes before ten would

402
00:12:40,520 --> 00:12:42,060
0,210 210,450 450,1020
be very relevant.

403
00:12:42,280 --> 00:12:44,380
0,510 510,750 750,1110 1110,1410 1410,2100
Yeah unless usually time Lang.

404
00:12:44,950 --> 00:12:46,680
0,180 180,450 450,1170
These different services.

405
00:12:46,710 --> 00:12:48,300
0,480 480,660 660,810 810,1110 1110,1590
And just let's start out

406
00:12:48,300 --> 00:12:49,650
0,540 540,750 750,930 930,1140 1140,1350
assuming that the s two

407
00:12:49,650 --> 00:12:51,000
0,300 300,390 390,810
becomes the leader.

408
00:12:51,460 --> 00:12:52,960
0,480 480,660 660,900 900,990 990,1500
Because it has the highest,

409
00:12:52,960 --> 00:12:54,080
0,0
um.

410
00:12:54,300 --> 00:12:56,250
0,600 630,1110 1110,1260 1260,1560 1560,1950
A it is mostly today

411
00:12:56,280 --> 00:12:58,020
0,240 240,510 510,630 630,1080 1080,1740
it has the highest turnover

412
00:12:58,020 --> 00:12:59,220
0,210 210,300 300,660 660,900 900,1200
in the last log entry,

413
00:12:59,220 --> 00:13:00,720
0,120 120,240 240,510 510,990
so it becomes leader.

414
00:13:00,750 --> 00:13:01,680
0,150 150,570 570,690 690,750 750,930
And now, when you need

415
00:13:01,680 --> 00:13:04,080
0,270 1440,2040 2040,2160 2160,2340 2340,2400
to understand how about the

416
00:13:04,080 --> 00:13:05,730
0,450 450,540 540,660 660,1260 1260,1650
protocol is to synchronize these

417
00:13:05,730 --> 00:13:07,680
0,360 360,810 1200,1500 1500,1560 1560,1950
particular blocks in the way

418
00:13:07,680 --> 00:13:08,850
0,90 90,180 180,390 390,720 720,1170
you know this almost happens

419
00:13:08,850 --> 00:13:10,080
0,360 360,420 420,750 750,1140 1140,1230
across a side effect of

420
00:13:10,200 --> 00:13:11,910
0,150 150,360 360,930 930,1170 1170,1710
you know either the append

421
00:13:11,910 --> 00:13:13,770
0,540 570,870 870,1140 1140,1650 1650,1860
entries because new log entries

422
00:13:13,770 --> 00:13:14,820
0,120 120,540 540,720 720,990 990,1050
are appended or because of

423
00:13:14,820 --> 00:13:16,500
0,600 600,840 840,1230 1230,1320 1320,1680
heartbeats which basically are repent

424
00:13:16,500 --> 00:13:19,200
0,540 570,840 840,1470 1500,2130 2130,2700
entries with zero new entries.

425
00:13:19,600 --> 00:13:20,740
0,120 120,270 270,510 510,660 660,1140
So let's assume that the

426
00:13:20,770 --> 00:13:21,790
0,240 240,450 450,630 630,690 690,1020
leader actually sends a heartbeat

427
00:13:21,790 --> 00:13:23,080
0,180 180,270 270,540 540,870 870,1290
out, in fact dot correct

428
00:13:23,080 --> 00:13:24,760
0,450 450,870 870,1260 1260,1530 1530,1680
thereafter election immediately sends out

429
00:13:24,760 --> 00:13:25,980
0,60 60,660
a heartbeat.

430
00:13:25,980 --> 00:13:26,670
0,120 120,240 240,330 330,480 480,690
And so it will sit

431
00:13:26,670 --> 00:13:28,180
0,240 240,300 300,540 540,960
at the heart beach.

432
00:13:28,240 --> 00:13:29,410
0,150 150,210 210,390 390,870 870,1170
And the heart between basically

433
00:13:29,410 --> 00:13:31,480
0,150 150,480 480,900 900,1500
has no log entries.

434
00:13:31,630 --> 00:13:33,730
0,570 570,780 780,870 870,1440 1440,2100
Um, but it also indicates

435
00:13:33,730 --> 00:13:35,170
0,180 180,390 390,630 630,750 750,1440
to other pieces of information,

436
00:13:35,260 --> 00:13:37,280
0,450 450,540 540,960 960,1500
namely the previous term.

437
00:13:37,820 --> 00:13:39,860
0,240 240,360 360,750 750,1290 1620,2040
So the previous term which

438
00:13:39,860 --> 00:13:40,610
0,90 90,240 240,510 510,630 630,750
in this case it's going

439
00:13:40,610 --> 00:13:43,340
0,60 60,180 180,750 2220,2640 2640,2730
to be five in the

440
00:13:43,340 --> 00:13:44,880
0,390 390,1050
previous index.

441
00:13:45,500 --> 00:13:47,240
0,330 330,510 510,630 630,1200
It's gonna be twelve.

442
00:13:47,960 --> 00:13:49,640
0,720 990,1080 1080,1290 1290,1410 1410,1680
So it sends it off

443
00:13:49,640 --> 00:13:51,020
0,420 480,750 750,1080 1080,1230 1230,1380
to the {leader's -} too

444
00:13:51,020 --> 00:13:52,100
0,330 330,510 510,660 660,990 990,1080
sensitive to s three and

445
00:13:52,100 --> 00:13:53,180
0,120 120,300 300,570 570,630 630,1080
s three looks at this

446
00:13:53,540 --> 00:13:55,790
0,120 120,450 450,1620 1620,1980 1980,2250
and says well look my

447
00:13:55,790 --> 00:13:59,450
0,330 330,600 600,1170 1170,2640 3030,3660
previous terms, actually eyes not

448
00:13:59,480 --> 00:14:01,700
0,540 540,720 720,1080 1080,1710
five because actually before.

449
00:14:01,850 --> 00:14:03,350
0,330 330,570 570,1110 1170,1380 1380,1500
Um, and so, um, it

450
00:14:03,350 --> 00:14:04,460
0,210 210,420 420,720 720,750 750,1110
actually sends back a message

451
00:14:04,460 --> 00:14:06,100
0,570 570,1020
saying no.

452
00:14:06,990 --> 00:14:08,610
0,630 630,780 780,1080 1080,1290 1290,1620
Um, you know I'm I'm

453
00:14:08,610 --> 00:14:10,080
0,390 390,480 480,960 960,1320 1320,1470
alive in principle, but you

454
00:14:10,080 --> 00:14:11,310
0,150 150,420 420,840 870,1110 1110,1230
know I I know I

455
00:14:11,310 --> 00:14:13,140
0,510 510,600 600,1170
cannot do Europeans.

456
00:14:13,280 --> 00:14:14,360
0,330 330,510 510,780 780,990 990,1080
Um, so I'm not up

457
00:14:14,360 --> 00:14:15,340
0,60 60,420
to date.

458
00:14:15,340 --> 00:14:18,370
0,660 900,1530 2010,2490 2490,2670 2670,3030
And I'm now as to

459
00:14:18,370 --> 00:14:19,570
0,360 360,480 480,870 870,960 960,1200
have some information to actually

460
00:14:19,570 --> 00:14:20,440
0,210 210,300 300,420 420,510 510,870
bring it up to date

461
00:14:20,590 --> 00:14:22,810
0,540 690,1110 1110,1500 1500,1620 1620,2220
and the way it works

462
00:14:22,840 --> 00:14:23,710
0,210 210,360 360,480 480,570 570,870
is there's sort of two

463
00:14:23,710 --> 00:14:25,390
0,570 570,690 690,780 780,870 870,1680
variables that are of importance

464
00:14:25,450 --> 00:14:29,080
0,780 990,1380 1380,1920 2070,2910 3000,3630
one for every a note

465
00:14:29,080 --> 00:14:31,180
0,150 150,570 570,870 870,1410 1410,2100
as to for a variable

466
00:14:31,210 --> 00:14:32,960
0,510 510,1140
next index.

467
00:14:36,760 --> 00:14:38,350
0,390 390,510 510,810 810,1260 1260,1590
And a next index when

468
00:14:38,350 --> 00:14:40,300
0,120 120,720 720,1110 1110,1440 1440,1950
it initialize it becomes leader,

469
00:14:40,450 --> 00:14:41,290
0,330 330,510 510,660 660,750 750,840
it is sort of an

470
00:14:41,290 --> 00:14:42,680
0,840
optimistic.

471
00:14:42,710 --> 00:14:45,620
0,870 1320,1530 1530,1710 1710,2550 2670,2910
Variable it just assumes that

472
00:14:45,620 --> 00:14:46,670
0,90 90,360 360,600 600,870 870,1050
the laws are actually up

473
00:14:46,670 --> 00:14:47,720
0,90 90,510
to date.

474
00:14:47,900 --> 00:14:50,390
0,150 150,660 660,1050 1050,1770 1800,2490
And so, um, when a

475
00:14:50,540 --> 00:14:51,890
0,360 360,570 570,630 630,1110 1140,1350
student becomes a leader, it

476
00:14:51,890 --> 00:14:52,640
0,240 240,390 390,570 570,660 660,750
actually just sets it to

477
00:14:52,640 --> 00:14:53,800
0,600
thirteen.

478
00:14:53,800 --> 00:14:54,790
0,120 120,240 240,330 330,570 570,990
You have the same value

479
00:14:54,790 --> 00:14:56,110
0,180 180,660 660,900 900,1170 1170,1320
that actually it has for

480
00:14:56,110 --> 00:14:57,180
0,540
itself.

481
00:14:57,870 --> 00:15:00,000
0,270 270,660 660,1140 1440,1890 1890,2130
That's perfectly fine, um, because

482
00:15:00,000 --> 00:15:00,960
0,120 120,270 270,330 330,810 840,960
it's just a guess, if

483
00:15:00,960 --> 00:15:02,970
0,360 360,780 780,1290 1320,1860 1860,2010
one actually the were as

484
00:15:02,970 --> 00:15:03,870
0,180 180,390 390,660 660,750 750,900
free might be and that

485
00:15:03,870 --> 00:15:05,010
0,120 120,300 300,390 390,930 930,1140
we might be behind, and

486
00:15:05,010 --> 00:15:06,210
0,360 360,450 450,600 600,1020 1020,1200
then you know because there's

487
00:15:06,210 --> 00:15:08,970
0,210 210,810 1080,1740 2040,2520 2520,2760
no message the leader actually

488
00:15:08,970 --> 00:15:09,980
0,240 240,510
learns that.

489
00:15:10,130 --> 00:15:10,910
0,150 150,330 330,390 390,690 690,780
And so, in fact you

490
00:15:10,910 --> 00:15:12,410
0,90 90,390 390,570 570,900 900,1500
know what gets your message.

491
00:15:13,740 --> 00:15:16,350
0,240 240,510 660,1710 1710,2280 2370,2610
In the unoptimized version, so

492
00:15:16,350 --> 00:15:17,130
0,150 150,270 270,330 330,600 600,780
I'm going to first talk

493
00:15:17,130 --> 00:15:19,120
0,210 210,270 270,930 930,1380
about the unoptimized version.

494
00:15:22,650 --> 00:15:24,330
0,300 300,540 540,780 780,1380 1380,1680
The leader just documents, um

495
00:15:24,330 --> 00:15:25,710
0,150 150,420 420,840 840,990 990,1380
the next index by one

496
00:15:25,830 --> 00:15:27,480
0,210 210,480 480,630 630,1110 1110,1650
and so it decorates thirteen

497
00:15:27,480 --> 00:15:28,680
0,90 90,690
to twelve.

498
00:15:29,060 --> 00:15:30,110
0,150 150,480 480,570 570,900 900,1050
And then we got some

499
00:15:30,110 --> 00:15:31,460
0,240 240,360 360,540 540,1050 1080,1350
point will send another no

500
00:15:31,460 --> 00:15:33,080
0,930
entries.

501
00:15:33,170 --> 00:15:34,340
0,180 180,300 300,510 510,1020 1020,1170
And this time around you

502
00:15:34,340 --> 00:15:35,690
0,210 210,330 330,510 510,1050 1050,1350
know it will actually say

503
00:15:35,690 --> 00:15:36,500
0,180 180,270 270,450 450,570 570,810
okay we'll make some news

504
00:15:36,500 --> 00:15:38,030
0,660 690,900 900,1050 1050,1080 1080,1530
twelve I've got a sense

505
00:15:38,030 --> 00:15:39,590
0,90 90,270 270,660 660,900 900,1560
you know login three five.

506
00:15:40,880 --> 00:15:42,200
0,540 540,660 660,780 780,900 900,1320
And you know the previous

507
00:15:42,200 --> 00:15:43,400
0,660
term.

508
00:15:43,740 --> 00:15:46,080
0,240 240,450 450,1110 1260,1740 1740,2340
It's gonna be a three.

509
00:15:47,160 --> 00:15:49,440
0,450 450,630 630,990 990,1740
And the previous index.

510
00:15:49,500 --> 00:15:51,780
0,600 600,750 750,810 810,1380 1800,2280
Is going to be eleven.

511
00:15:53,700 --> 00:15:56,140
0,300 300,540 540,1140 1170,1860
And so when a.

512
00:15:56,520 --> 00:15:58,020
0,390 390,630 630,930 930,1050 1050,1500
Esprit actually received this message,

513
00:15:58,020 --> 00:15:59,040
0,120 120,300 300,630 630,720 720,1020
you know check the previous

514
00:15:59,040 --> 00:16:00,480
0,330 330,750 750,840 840,1110 1110,1440
term free the previous index

515
00:16:00,480 --> 00:16:01,650
0,90 90,600 600,720 720,900 900,1170
is eleven that all works

516
00:16:01,650 --> 00:16:03,090
0,390 720,870 870,1110 1110,1290 1290,1440
out it seems that it

517
00:16:03,090 --> 00:16:04,890
0,330 360,660 660,1230 1260,1500 1500,1800
has spent five and so

518
00:16:04,890 --> 00:16:07,680
0,150 150,480 480,1140 1410,2100 2490,2790
it will erase before and

519
00:16:07,680 --> 00:16:08,880
0,240 240,300 300,630 630,750 750,1200
stick a five in there

520
00:16:09,300 --> 00:16:11,820
0,930 930,1560 1560,1860 1860,2310 2310,2520
and a basic response saying

521
00:16:11,820 --> 00:16:12,640
0,420
yep.

522
00:16:12,640 --> 00:16:13,640
0,450
Good.

523
00:16:16,300 --> 00:16:17,980
0,210 210,270 270,390 390,930 990,1680
So at this point, um

524
00:16:18,010 --> 00:16:20,280
0,480 990,1680
the um.

525
00:16:20,370 --> 00:16:22,380
0,540 540,990 990,1140 1140,1560 1560,2010
Leader knows that actually the

526
00:16:22,410 --> 00:16:23,280
0,300 300,390 390,540 540,600 600,870
log is up to date

527
00:16:23,280 --> 00:16:24,750
0,240 240,360 360,540 540,1110 1110,1470
because you've got a an

528
00:16:24,750 --> 00:16:26,220
0,240 240,570 570,990
OK message back.

529
00:16:27,340 --> 00:16:28,870
0,300 300,450 450,510 510,1020 1050,1530
Then there's the second variable

530
00:16:28,870 --> 00:16:30,130
0,180 180,420 420,510 510,900 900,1260
that plays an important role

531
00:16:30,130 --> 00:16:31,930
0,210 210,420 420,870 1110,1680 1680,1800
in all this which is

532
00:16:31,930 --> 00:16:33,340
0,270 270,930
match index.

533
00:16:34,950 --> 00:16:36,660
0,210 210,540 540,780 780,1200 1200,1710
Which raft also maintains for

534
00:16:36,690 --> 00:16:38,940
0,720 870,1230 1230,1650 1650,1770 1770,2250
leader also maintains for every

535
00:16:38,970 --> 00:16:40,320
0,780
follower.

536
00:16:40,440 --> 00:16:41,460
0,150 150,300 300,420 420,600 600,1020
So there's an X index,

537
00:16:41,460 --> 00:16:42,540
0,120 120,240 240,660 660,780 780,1080
you know for s three

538
00:16:42,540 --> 00:16:43,500
0,180 180,450 450,720 720,840 840,960
years next index for f

539
00:16:43,500 --> 00:16:44,580
0,330 330,420 420,690 690,930 930,1080
one the same learn, there's

540
00:16:44,580 --> 00:16:45,600
0,30 30,270 270,780 780,870 870,1020
a match index, you know

541
00:16:45,600 --> 00:16:46,860
0,660 660,750 750,990 990,1110 1110,1260
for s one s two

542
00:16:46,860 --> 00:16:48,020
0,120 120,300 300,600
s three two.

543
00:16:48,560 --> 00:16:49,250
0,150 150,270 270,480 480,570 570,690
And this one is sort

544
00:16:49,250 --> 00:16:50,060
0,60 60,180 180,360 360,570 570,810
of if you think about

545
00:16:50,060 --> 00:16:51,640
0,120 120,270 270,1050
this as pessimistic.

546
00:16:52,520 --> 00:16:54,480
0,330 330,630 630,1020
Or lower bound.

547
00:16:55,140 --> 00:16:56,370
0,180 180,360 360,450 450,810 810,1230
So when the leader actually

548
00:16:56,370 --> 00:16:58,470
0,90 90,330 330,1230 1260,1620 1620,2100
you know, um becomes leader,

549
00:16:58,500 --> 00:16:59,580
0,180 180,390 390,630 630,780 780,1080
it actually sets the value

550
00:16:59,580 --> 00:17:01,140
0,240 240,780
just zero.

551
00:17:01,850 --> 00:17:03,560
0,690 690,780 780,1170 1170,1290 1290,1710
And to indicate that basically

552
00:17:03,560 --> 00:17:06,350
0,270 270,480 480,1020 1230,2040 2100,2790
afar yet knows A S

553
00:17:06,350 --> 00:17:08,060
0,210 210,450 450,690 690,1230 1230,1710
three doesn't really have any

554
00:17:08,090 --> 00:17:09,700
0,300 300,600 600,690 690,1110
log entries at all.

555
00:17:09,840 --> 00:17:11,070
0,570 570,750 750,870 870,960 960,1230
Um, and so it hasn't

556
00:17:11,070 --> 00:17:13,350
0,570 600,930 930,1200 1200,1620 1620,2280
delivered any log entries to

557
00:17:13,380 --> 00:17:15,840
0,630 630,1080 1080,1890 2190,2340 2340,2460
A Z application, and so

558
00:17:15,840 --> 00:17:16,950
0,390 390,480 480,690 690,960 960,1110
for s two also has

559
00:17:16,950 --> 00:17:18,120
0,90 90,180 180,450 450,960 960,1170
to be very careful about

560
00:17:18,120 --> 00:17:18,960
0,210 210,510 510,630 630,750 750,840
what actually it can be

561
00:17:18,960 --> 00:17:20,700
0,420 420,480 480,570 570,1260 1380,1740
delivered to the application there

562
00:17:20,700 --> 00:17:22,050
0,420 450,630 630,1050 1050,1260 1260,1350
goes if he needs to

563
00:17:22,050 --> 00:17:22,740
0,240 240,390 390,450 450,630 630,690
know that at least a

564
00:17:22,740 --> 00:17:24,990
0,750 750,990 990,1560 1590,2010 2010,2250
majority of the followers actually

565
00:17:24,990 --> 00:17:25,890
0,330 330,390 390,750 750,840 840,900
has a copy of a

566
00:17:25,890 --> 00:17:27,150
0,300 300,600 600,900 900,1200 1200,1260
particular blog entry before it

567
00:17:27,150 --> 00:17:28,280
0,150 150,540
can deliver.

568
00:17:29,460 --> 00:17:31,320
0,540 600,930 930,1080 1080,1290 1290,1860
Um, so just start to

569
00:17:31,350 --> 00:17:34,290
0,540 570,1710 2010,2400 2400,2610 2610,2940
be pessimistic, but then once

570
00:17:34,290 --> 00:17:35,640
0,150 150,780 780,930 930,1050 1050,1350
it learns you know that

571
00:17:35,640 --> 00:17:37,950
0,90 90,600 600,1410 1920,2190 2190,2310
your example, um, one sith

572
00:17:37,950 --> 00:17:41,130
0,300 300,570 570,840 840,1170 2340,3180
lords actually got the follower,

573
00:17:41,160 --> 00:17:42,960
0,150 150,360 360,1020 1020,1290 1290,1800
a is okay and we've

574
00:17:42,960 --> 00:17:44,370
0,270 270,540 540,720 720,990 990,1410
gotten okay, the event message

575
00:17:44,400 --> 00:17:45,690
0,210 210,330 330,630 630,1200 1200,1290
I can actually update you

576
00:17:45,690 --> 00:17:48,180
0,120 120,600 690,1440 1440,2130 2160,2490
know the pessimistic, a lower

577
00:17:48,180 --> 00:17:49,410
0,270 270,360 360,420 420,690 690,1230
bound or the match index

578
00:17:49,740 --> 00:17:52,350
0,150 150,810 990,1290 1290,1650 1650,2610
from zero to actually thirteen

579
00:17:52,650 --> 00:17:53,880
0,300 300,540 540,630 630,780 780,1230
a because it has learned

580
00:17:53,880 --> 00:17:56,320
0,570 570,1140 1290,1980
that, um the.

581
00:17:56,410 --> 00:17:57,820
0,270 270,750 750,840 840,1230 1230,1410
A follower is actually up

582
00:17:57,820 --> 00:18:00,190
0,90 90,540 570,1140 1170,2070 2070,2370
to date, a {1213,and} that's

583
00:18:00,190 --> 00:18:01,780
0,120 120,420 420,750 750,1020 1020,1590
the next index that expect

584
00:18:01,810 --> 00:18:03,420
0,330 330,450 450,540 540,1050
is you know thirteen.

585
00:18:03,770 --> 00:18:04,430
0,150 150,240 240,390 390,600 600,660
And at this point in

586
00:18:04,430 --> 00:18:06,260
0,780 780,1170 1170,1290 1290,1500 1500,1830
time, basically it has learned

587
00:18:06,260 --> 00:18:08,840
0,180 180,480 480,1080 1500,1860 1860,2580
from two different knows that,

588
00:18:08,840 --> 00:18:11,390
0,330 330,930 930,1560 1770,2160 2160,2550
that particular a log entry

589
00:18:11,390 --> 00:18:12,830
0,390 390,510 510,720 720,900 900,1440
five is actually now replicated

590
00:18:12,830 --> 00:18:14,440
0,120 120,360 360,600 600,1050
at least into notes.

591
00:18:16,780 --> 00:18:17,920
0,360 360,480 480,600 600,900 900,1140
And so you might think

592
00:18:17,920 --> 00:18:18,970
0,300 300,600 630,780 780,930 930,1050
well good, it has been

593
00:18:18,970 --> 00:18:20,830
0,510 510,600 600,780 780,1410 1560,1860
replicated in two notes, we

594
00:18:20,830 --> 00:18:22,240
0,90 90,570 570,720 720,870 870,1410
can deliver to the application

595
00:18:22,240 --> 00:18:23,740
0,210 210,270 270,810 810,1260 1260,1500
because the majority clearly has

596
00:18:23,740 --> 00:18:25,780
0,270 630,1080 1080,1710 1710,1860 1860,2040
it, um and um, we're

597
00:18:25,780 --> 00:18:26,940
0,60 60,240 240,720
in good shape.

598
00:18:27,410 --> 00:18:29,630
0,450 570,1230 1260,1770 1770,2010 2010,2220
And unfortunately a that actually

599
00:18:29,630 --> 00:18:30,410
0,210 210,390 390,600 600,660 660,780
turned out not to be

600
00:18:30,410 --> 00:18:32,030
0,90 90,690 750,1020 1020,1170 1170,1620
the case, um, it's close

601
00:18:32,030 --> 00:18:33,230
0,90 90,420 420,540 540,720 720,1200
to true but not completely

602
00:18:33,230 --> 00:18:35,000
0,330 1050,1200 1200,1350 1350,1620 1620,1770
true, and this actually has

603
00:18:35,000 --> 00:18:37,010
0,90 90,690 840,1380 1380,1800 1800,2010
to do a wis, a

604
00:18:37,010 --> 00:18:38,540
0,390 390,720 1200,1290 1290,1470 1470,1530
figure eight I want to

605
00:18:38,540 --> 00:18:39,260
0,120 120,150 150,390 390,510 510,720
talk a little bit about

606
00:18:39,260 --> 00:18:40,460
0,300 300,570 570,810 810,930 930,1200
figure eight and the real

607
00:18:40,460 --> 00:18:41,750
0,270 270,450 450,690 690,960 960,1290
reason what's going on here

608
00:18:41,750 --> 00:18:43,070
0,90 90,330 330,450 450,750 750,1320
to make this slightly complicated

609
00:18:43,070 --> 00:18:44,300
0,120 120,540 540,780 780,930 930,1230
and you also should think

610
00:18:44,300 --> 00:18:45,640
0,90 90,300 300,420 420,900
a little bit fishy.

611
00:18:45,670 --> 00:18:47,200
0,180 180,390 390,900 930,1140 1140,1530
So this {leader's -} to

612
00:18:47,230 --> 00:18:49,420
0,360 390,1110 1110,1230 1230,1920 1920,2190
just raised the value out

613
00:18:49,420 --> 00:18:52,510
0,150 150,300 300,930 1260,2310 2550,3090
of the log of s

614
00:18:52,510 --> 00:18:54,100
0,390 390,870 960,1110 1110,1200 1200,1590
three and you know somebody

615
00:18:54,100 --> 00:18:55,200
0,120 120,270 270,540
put that in.

616
00:18:55,200 --> 00:18:57,510
0,690 690,1050 1080,1470 1470,2040 2040,2310
And you know raising it,

617
00:18:57,510 --> 00:18:58,860
0,90 90,480 540,960 960,1110 1110,1350
you know, yeah it seems

618
00:18:58,860 --> 00:18:59,970
0,30 30,240 240,810 810,900 900,1110
a little bit, you know

619
00:18:59,970 --> 00:19:02,910
0,750 750,1170 1260,1920 2190,2610 2610,2940
dangerous and as in and

620
00:19:03,240 --> 00:19:04,380
0,240 240,630 630,840 840,990 990,1140
so it turns out there

621
00:19:04,380 --> 00:19:06,240
0,90 90,150 150,510 510,1020 1260,1860
is a corner case, um,

622
00:19:06,240 --> 00:19:08,700
0,780 840,1530 2040,2280 2280,2400 2400,2460
where, um, you have to

623
00:19:08,700 --> 00:19:09,840
0,90 90,180 180,390 390,900 900,1140
be a bit careful by

624
00:19:09,840 --> 00:19:11,730
0,600 600,810 810,1470 1500,1770 1770,1890
when you deliver when you

625
00:19:11,730 --> 00:19:13,590
0,690 690,810 810,1140 1140,1380 1380,1860
declare a message actually committed.

626
00:19:14,740 --> 00:19:15,730
0,210 210,300 300,570 570,870 870,990
And it turns out that

627
00:19:15,730 --> 00:19:20,020
0,630 990,1620 2040,3570 3570,3840 3840,4290
visually, um, yeah, if figure

628
00:19:20,020 --> 00:19:21,680
0,270 270,780 780,1110
eight illustrates that.

629
00:19:22,210 --> 00:19:22,990
0,300 300,480 480,570 570,750 750,780
So let me talk a

630
00:19:22,990 --> 00:19:25,000
0,210 210,330 330,540 540,960 990,2010
little bit about this raising.

631
00:19:26,550 --> 00:19:28,660
0,390 390,870
Long entries.

632
00:19:31,430 --> 00:19:32,360
0,210 210,330 330,510 510,810 810,930
And we will see is

633
00:19:32,360 --> 00:19:33,860
0,210 210,480 480,1050 1050,1290 1290,1500
that the rule for actually

634
00:19:33,860 --> 00:19:34,760
0,240 240,330 330,660 660,780 780,900
when the message can be

635
00:19:34,760 --> 00:19:37,550
0,570 840,1170 1170,1620 1620,2400 2400,2790
delivered to the application is

636
00:19:37,940 --> 00:19:40,730
0,810 810,1170 1200,2100 2100,2310 2310,2790
a is slightly more subtle

637
00:19:40,730 --> 00:19:43,430
0,300 300,630 630,1380 1590,2280 2280,2700
than just counting, um the

638
00:19:43,460 --> 00:19:44,540
0,600
replicates.

639
00:19:44,890 --> 00:19:46,080
0,690
Persian.

640
00:19:47,100 --> 00:19:48,570
0,330 330,600 600,780 780,1080 1080,1470
She actually gets figure eight

641
00:19:48,630 --> 00:19:50,380
0,810 810,1140
loaded in.

642
00:19:50,800 --> 00:19:51,940
0,180 180,330 330,450 450,780 780,1140
Okay so you figure eight

643
00:19:52,000 --> 00:19:55,000
0,810 1620,2040 2040,2220 2220,2370 2370,3000
a and so as usual

644
00:19:55,000 --> 00:19:56,220
0,660
structure.

645
00:19:58,810 --> 00:19:59,620
0,240 240,390 390,450 450,600 600,810
Okay, let me get back

646
00:19:59,620 --> 00:20:03,100
0,120 120,300 300,660 660,2820 3000,3480
to the question inch playing

647
00:20:03,100 --> 00:20:04,450
0,360 420,750 750,930 930,990 990,1350
the chat in a second,

648
00:20:04,960 --> 00:20:06,940
0,450 900,1230 1260,1620 1620,1710 1710,1980
um, so usually a figure

649
00:20:06,940 --> 00:20:08,470
0,420 420,720 720,840 840,1020 1020,1530
eight and so let's walk

650
00:20:08,470 --> 00:20:10,240
0,330 330,510 510,960 960,1470 1470,1770
through what the scenario here

651
00:20:10,240 --> 00:20:12,400
0,270 270,840 840,1230 1230,1710
is correcting figure a.

652
00:20:12,400 --> 00:20:13,930
0,480 480,600 600,750 750,1080 1080,1530
Um, you know what everyone

653
00:20:13,930 --> 00:20:16,030
0,210 210,420 420,930 1020,1410 1410,2100
has been committed by everybody,

654
00:20:16,360 --> 00:20:19,240
0,840 840,1140 1140,1260 1260,1890 2640,2880
um, you know the as

655
00:20:19,240 --> 00:20:21,310
0,510 600,1170 1170,1560 1560,1740 1740,2070
one or as two became

656
00:20:21,310 --> 00:20:23,950
0,330 330,870 870,1440 1440,2190 2190,2640
leader in a entry in

657
00:20:23,980 --> 00:20:26,230
0,270 270,750 1080,1470 1470,1620 1620,2250
term to a they committed

658
00:20:26,320 --> 00:20:27,700
0,210 210,450 450,630 630,1020 1020,1380
a or they started appending

659
00:20:27,700 --> 00:20:29,180
0,90 90,480 480,1020
an entry too.

660
00:20:29,180 --> 00:20:30,830
0,540 540,840 840,960 960,1290 1290,1650
Um hasn't been committed yet

661
00:20:30,860 --> 00:20:32,300
0,450 450,570 570,780 780,930 930,1440
because it's not a majority

662
00:20:32,300 --> 00:20:34,070
0,120 120,600 960,1170 1170,1410 1410,1770
for sure, um, then indeed

663
00:20:34,070 --> 00:20:35,210
0,150 150,360 360,930 930,1020 1020,1140
what actually happens, you know

664
00:20:35,210 --> 00:20:37,250
0,150 150,420 420,870 870,1770 1770,2040
as five Muslim disconnected has

665
00:20:37,250 --> 00:20:38,540
0,330 330,420 420,570 570,870 870,1290
word of this term to

666
00:20:38,900 --> 00:20:40,100
0,330 330,630 630,690 690,1050 1050,1200
a became a leader in

667
00:20:40,100 --> 00:20:41,810
0,240 240,780 810,1230 1230,1320 1320,1710
term three appended an entry

668
00:20:41,810 --> 00:20:44,570
0,600 600,1110 1140,2100 2370,2550 2550,2760
to each log, um that

669
00:20:44,570 --> 00:20:45,650
0,300 300,360 360,540 540,870 870,1080
certainly is not committed because

670
00:20:45,650 --> 00:20:47,090
0,150 150,240 240,900 1080,1320 1320,1440
there's no majority then we

671
00:20:47,090 --> 00:20:48,740
0,120 120,240 240,600 630,960 990,1650
end up in a see

672
00:20:48,770 --> 00:20:50,800
0,300 300,870 870,1110 1110,1590
a maybe a the.

673
00:20:50,830 --> 00:20:52,300
0,180 180,510 510,780 780,930 930,1470
As five actually got disconnected

674
00:20:52,300 --> 00:20:54,670
0,510 720,1080 1080,1260 1260,1770 1800,2370
again, um, as one becomes

675
00:20:54,670 --> 00:20:56,830
0,60 60,600 660,1020 1020,1590 1590,2160
a leader a intern for

676
00:20:56,980 --> 00:20:58,630
0,210 210,480 480,1320 1320,1440 1440,1650
their starts replicating you know

677
00:20:58,630 --> 00:21:00,970
0,630 630,1080 1080,1380 1380,1650 1650,2340
entry, this log entry to

678
00:21:00,970 --> 00:21:02,220
0,120 120,330 330,810
two other notes.

679
00:21:02,620 --> 00:21:04,690
0,540 870,1380 1380,1710 1710,1980 1980,2070
And, um, in fact you

680
00:21:04,690 --> 00:21:06,190
0,150 150,630 630,810 810,900 900,1500
know deliver it, you know

681
00:21:06,190 --> 00:21:07,360
0,480 480,660 660,990 990,1050 1050,1170
it gets back, you know

682
00:21:07,360 --> 00:21:08,620
0,510 540,810 810,870 870,930 930,1260
like shown in the previous

683
00:21:08,620 --> 00:21:11,170
0,450 810,1650 1650,1860 1860,2190 2190,2550
slide, um, in those actually

684
00:21:11,170 --> 00:21:12,190
0,150 150,330 330,570 570,750 750,1020
on s two and those

685
00:21:12,190 --> 00:21:13,090
0,240 240,360 360,450 450,600 600,900
actually use an s three.

686
00:21:14,230 --> 00:21:16,960
0,660 840,1560 1950,2190 2190,2430 2430,2730
And um, it turns out

687
00:21:16,960 --> 00:21:18,430
0,90 90,240 240,420 420,1080 1140,1470
you know that actually you

688
00:21:18,430 --> 00:21:19,840
0,210 210,510 510,720 720,1230 1230,1410
might think okay, well you

689
00:21:19,840 --> 00:21:21,610
0,300 300,510 510,960 960,1650 1650,1770
know as one knows you

690
00:21:21,610 --> 00:21:23,950
0,120 120,390 390,960 960,1680 1830,2340
know that actually a free

691
00:21:24,130 --> 00:21:25,450
0,330 330,720 720,990 990,1230 1230,1320
free nodes actually have a

692
00:21:25,450 --> 00:21:27,730
0,630 900,1110 1110,1260 1260,1860 1860,2280
copy of this particular entry

693
00:21:27,730 --> 00:21:28,450
0,120 120,330 330,390 390,630 630,720
and so I might be

694
00:21:28,450 --> 00:21:29,380
0,180 180,270 270,630 630,840 840,930
able to deliver it and

695
00:21:29,380 --> 00:21:30,280
0,60 60,300 300,390 390,630 630,900
it turns out that's not

696
00:21:30,280 --> 00:21:32,000
0,990
true.

697
00:21:32,000 --> 00:21:36,460
0,300 300,2400 2400,2610 2610,3240
And z more subtle.

698
00:21:36,490 --> 00:21:37,720
0,240 240,330 330,750 750,1050 1050,1230
Um, um, reasoning that needs

699
00:21:37,720 --> 00:21:39,820
0,90 90,570 840,1110 1110,1680 1680,2100
to happen to actually a

700
00:21:39,820 --> 00:21:41,440
0,480 480,630 630,1230 1260,1500 1500,1620
commit and namely, you can

701
00:21:41,440 --> 00:21:43,760
0,270 270,780 930,1470 1470,1710
only commit that's right.

702
00:21:46,750 --> 00:21:48,400
0,180 180,330 330,930
You can commit.

703
00:21:50,230 --> 00:21:52,040
0,1140
After.

704
00:21:52,180 --> 00:21:53,720
0,240 240,900
The leader.

705
00:21:55,410 --> 00:21:56,900
0,300 300,900
Has committed.

706
00:22:00,240 --> 00:22:01,920
0,330 330,1020
One entry.

707
00:22:02,920 --> 00:22:04,400
0,180 180,300 300,480 480,900
In its own terms.

708
00:22:09,990 --> 00:22:11,010
0,210 210,300 300,630 630,810 810,1020
And if we think about

709
00:22:11,010 --> 00:22:13,230
0,240 480,810 810,1320 1560,2070 2070,2220
this number two, um, it

710
00:22:13,230 --> 00:22:14,730
0,270 270,450 450,930 960,1410 1410,1500
actually isn't from leaders in

711
00:22:14,730 --> 00:22:16,950
0,240 240,780 1020,1620 1620,1860 1860,2220
term four and and so

712
00:22:16,950 --> 00:22:19,230
0,480 570,1020 1140,1440 1440,1770 1770,2280
the the the committee rule,

713
00:22:19,380 --> 00:22:21,300
0,330 330,660 660,1110 1110,1770 1770,1920
um wouldn't allow actually, um

714
00:22:21,300 --> 00:22:23,490
0,390 390,630 630,1350 1560,1980 1980,2190
committing to immediately to the

715
00:22:23,490 --> 00:22:26,040
0,540 750,1440 1440,1650 1650,2400 2400,2550
surface because that actually is

716
00:22:26,040 --> 00:22:27,420
0,390 390,570 570,660 660,1050 1050,1380
one from a previous term

717
00:22:27,420 --> 00:22:28,170
0,90 90,270 270,390 390,450 450,750
and not from the current

718
00:22:28,170 --> 00:22:29,550
0,270 390,600 600,720 720,810 810,1380
term and so for example

719
00:22:29,580 --> 00:22:31,680
0,300 300,900 990,1230 1230,1770 1770,2100
your code to decide whether

720
00:22:31,680 --> 00:22:32,880
0,240 240,540 540,690 690,840 840,1200
actually something can be delivered

721
00:22:32,880 --> 00:22:34,260
0,120 120,210 210,570 570,1110 1110,1380
on the applied channel needs

722
00:22:34,260 --> 00:22:35,430
0,90 90,270 270,330 330,630 630,1170
to take to his account.

723
00:22:35,900 --> 00:22:36,770
0,210 210,300 300,630 630,720 720,870
And the reason you need

724
00:22:36,770 --> 00:22:38,060
0,210 210,270 270,660 660,750 750,1290
take to account is illustrated

725
00:22:38,060 --> 00:22:39,340
0,150 150,690
by DNA.

726
00:22:39,510 --> 00:22:41,610
0,720 750,1380 1380,1530 1530,1620 1620,2100
Um, basically what can happen

727
00:22:41,610 --> 00:22:42,980
0,360 360,810
is that.

728
00:22:42,980 --> 00:22:46,010
0,120 120,450 570,1440 1500,2280 2640,3030
You know for a bs

729
00:22:46,010 --> 00:22:48,440
0,240 240,660 660,1020 1020,1620 1980,2430
one actually might um might

730
00:22:48,440 --> 00:22:49,880
0,630 630,780 780,900 900,960 960,1440
actually end up in a

731
00:22:49,880 --> 00:22:51,560
0,240 240,690 690,1170
different situation where.

732
00:22:51,620 --> 00:22:55,010
0,660 990,1680 1680,1980 1980,2580 2610,3390
A D actually becomes the

733
00:22:55,370 --> 00:22:56,440
0,510
um.

734
00:22:56,440 --> 00:22:58,500
0,630 1050,1530
After a.

735
00:23:00,420 --> 00:23:02,850
0,270 270,540 540,870 870,1110 1770,2430
D actually becomes the leader

736
00:23:02,910 --> 00:23:04,650
0,360 360,930 930,1050 1050,1350 1350,1740
after example as one example

737
00:23:04,650 --> 00:23:07,170
0,120 120,870 870,1530 1770,2310 2310,2520
is particularly disconnected, and it

738
00:23:07,170 --> 00:23:09,300
0,240 240,450 450,990 1020,1470 1470,2130
might actually start a connecting

739
00:23:09,300 --> 00:23:10,890
0,450 450,660 660,900 900,960 960,1590
it can form a majority

740
00:23:11,040 --> 00:23:12,750
0,180 180,450 450,570 570,900 900,1710
and actually it starts copying

741
00:23:12,840 --> 00:23:15,330
0,300 300,1110 1260,1800 1800,2070 2070,2490
its particular um, its entries

742
00:23:15,330 --> 00:23:17,260
0,150 150,660 690,1470
to actually, um.

743
00:23:17,350 --> 00:23:19,420
0,510 510,570 570,780 1170,1590 1590,2070
Yeah all right, it raises

744
00:23:19,420 --> 00:23:20,620
0,120 120,240 240,360 360,960 1020,1200
you know the twos and

745
00:23:20,620 --> 00:23:22,600
0,210 210,600 600,840 840,1380 1410,1980
actually copies, it's free in

746
00:23:22,660 --> 00:23:23,950
0,270 270,630 630,840 840,990 990,1290
the entry for each term

747
00:23:23,950 --> 00:23:26,500
0,480 540,1410 1560,1740 1740,2400 2400,2550
three into a whatever has

748
00:23:26,500 --> 00:23:27,370
0,90 90,210 210,510 570,750 750,870
to be two and this

749
00:23:27,370 --> 00:23:29,110
0,240 240,870 870,1410 1410,1500 1500,1740
is raising that we talked

750
00:23:29,110 --> 00:23:30,220
0,270 270,360 360,420 420,780 780,1110
about on the previous slide.

751
00:23:31,700 --> 00:23:33,600
0,630 720,1350
In um.

752
00:23:33,660 --> 00:23:34,590
0,150 150,270 270,390 390,630 630,930
And so we'll see, actually

753
00:23:34,590 --> 00:23:36,450
0,270 300,600 600,1230 1260,1680 1680,1860
though even though it was

754
00:23:36,450 --> 00:23:37,500
0,120 120,180 180,840 840,960 960,1050
on the majority of the

755
00:23:37,500 --> 00:23:38,880
0,420 420,780 780,900 900,1020 1020,1380
notes right on the majority

756
00:23:38,880 --> 00:23:40,470
0,60 60,420 450,690 690,960 960,1590
of notes that got erased.

757
00:23:41,370 --> 00:23:42,870
0,180 180,390 390,510 510,1290 1290,1500
And so the rule and

758
00:23:42,870 --> 00:23:44,700
0,390 390,480 480,840 840,1440 1440,1830
therefore the rules Sai stated

759
00:23:44,700 --> 00:23:48,300
0,510 630,1980 2250,2580 2580,3450 3480,3600
here because now once you

760
00:23:48,300 --> 00:23:49,410
0,120 120,270 270,360 360,840 840,1110
know this is illustrated by

761
00:23:49,410 --> 00:23:52,410
0,510 750,1380 1380,1980 1980,2670 2670,3000
e once actually s three

762
00:23:52,410 --> 00:23:53,850
0,180 180,540 540,960 960,1080 1080,1440
s one commits an entry

763
00:23:53,850 --> 00:23:55,540
0,120 120,300 300,630 630,1230
in its own term.

764
00:23:55,830 --> 00:23:57,330
0,420 420,720 720,900 900,1080 1080,1500
Um, and so it knows

765
00:23:57,330 --> 00:23:58,620
0,210 210,690 720,1050 1050,1260 1260,1290
that every no there's a

766
00:23:58,620 --> 00:24:00,060
0,510 510,600 600,720 720,900 900,1440
majority in its own term,

767
00:24:00,210 --> 00:24:01,380
0,360 360,450 450,630 630,990 990,1170
so at this point it

768
00:24:01,380 --> 00:24:03,060
0,120 120,390 390,900 900,1530 1560,1680
can actually deliver for you

769
00:24:03,060 --> 00:24:04,920
0,240 240,360 360,1110 1500,1710 1710,1860
through the application and as

770
00:24:04,920 --> 00:24:06,270
0,30 30,480 480,570 570,1110 1170,1350
a result of that now,

771
00:24:06,270 --> 00:24:07,590
0,360 360,720 720,840 840,930 930,1320
any notes that were committed

772
00:24:07,590 --> 00:24:09,450
0,150 150,750 750,1260 1290,1500 1500,1860
in previous terms can also

773
00:24:09,450 --> 00:24:11,910
0,120 120,690 960,1350 1350,1800 1800,2460
be delivered to the application.

774
00:24:13,040 --> 00:24:14,390
0,420 450,600 600,780 780,1050 1050,1350
So you see here that

775
00:24:14,390 --> 00:24:15,710
0,150 150,510 510,630 630,870 870,1320
this raising of log entries

776
00:24:15,740 --> 00:24:17,390
0,240 240,570 570,930 930,1560 1560,1650
that basic commits makes the

777
00:24:17,390 --> 00:24:19,250
0,300 300,600 600,1170 1230,1710 1710,1860
committee rule quite slightly more

778
00:24:19,250 --> 00:24:20,400
0,660
complicated.

779
00:24:20,460 --> 00:24:21,420
0,120 120,270 270,450 450,510 510,960
And that's just the design

780
00:24:21,420 --> 00:24:23,040
0,570 570,780 780,1050 1050,1530 1530,1620
decisions that the designers a

781
00:24:23,040 --> 00:24:25,950
0,540 900,2250 2280,2730 2730,2850 2850,2910
raft a mate, you know

782
00:24:25,950 --> 00:24:26,610
0,120 120,300 300,390 390,570 570,660
they could have done it

783
00:24:26,610 --> 00:24:28,260
0,600 840,1230 1230,1350 1350,1530 1530,1650
differently, um, they could have

784
00:24:28,260 --> 00:24:30,750
0,510 600,1260 1290,1560 1560,2250 2280,2490
counted and made basically to

785
00:24:30,750 --> 00:24:32,100
0,570 570,690 690,780 780,1080 1080,1350
survive if they wanted to

786
00:24:32,220 --> 00:24:33,210
0,180 180,300 300,720 720,810 810,990
but they decided to go

787
00:24:33,210 --> 00:24:34,680
0,90 90,240 240,600 600,1110 1110,1470
for this particular approach on

788
00:24:34,680 --> 00:24:35,520
0,90 90,450 450,540 540,660 660,840
the grounds that they think

789
00:24:35,520 --> 00:24:36,520
0,120 120,570
it's simpler.

790
00:24:39,600 --> 00:24:41,040
0,210 210,360 360,540 540,810 810,1440
Okay, so this is suddenly

791
00:24:41,040 --> 00:24:43,050
0,240 240,720 750,1260 1290,1680 1680,2010
that will a show up,

792
00:24:43,080 --> 00:24:44,790
0,180 180,420 420,840 840,1350 1380,1710
you know in a test

793
00:24:44,790 --> 00:24:46,230
0,330 330,480 480,570 570,1050 1290,1440
cases for the labs so

794
00:24:46,230 --> 00:24:48,450
0,150 150,300 300,630 990,1680 1680,2220
you have to you careful

795
00:24:48,450 --> 00:24:49,920
0,300 300,420 420,720 720,990
with your committee room.

796
00:24:51,860 --> 00:24:52,610
0,150 150,240 240,330 330,660 660,750
And then you implement it

797
00:24:52,610 --> 00:24:53,620
0,420
correctly.

798
00:24:55,910 --> 00:24:57,640
0,570 600,1170
Okay, I'm.

799
00:24:58,030 --> 00:24:59,200
0,630
Joe.

800
00:24:59,570 --> 00:25:01,160
0,300 300,780 810,900 900,1140 1140,1590
So far, you know if

801
00:25:01,160 --> 00:25:01,850
0,90 90,180 180,450 450,540 540,690
you go back to this

802
00:25:01,850 --> 00:25:04,100
0,330 330,750 750,1140 1500,1950 2010,2250
particular picture, the um, an

803
00:25:04,100 --> 00:25:06,200
0,480 480,900 900,1050 1050,1320 1350,2100
optimized version of this protocol

804
00:25:07,880 --> 00:25:10,160
0,750 780,1620 1830,2100 2100,2190 2190,2280
is a little bit of

805
00:25:10,160 --> 00:25:12,410
0,90 90,570 600,960 960,1140 1140,2250
a bummer right like if

806
00:25:12,440 --> 00:25:13,340
0,180 180,510 510,570 570,780 780,900
you think a little bit

807
00:25:13,340 --> 00:25:14,720
0,240 240,630 660,960 960,1140 1140,1380
about this let's look at

808
00:25:14,900 --> 00:25:17,750
0,300 300,450 450,900 900,1470 1740,2850
actually what happens with s

809
00:25:17,840 --> 00:25:19,200
0,570
one.

810
00:25:19,230 --> 00:25:21,690
0,570 690,1440 1890,2070 2070,2280 2280,2460
Um, so let's say let

811
00:25:21,690 --> 00:25:23,610
0,240 270,840 840,1230 1230,1530 1530,1920
me switch things let's {say's

812
00:25:23,610 --> 00:25:24,750
0,240 240,480 480,690 690,1020 1020,1140
-} to try something as

813
00:25:24,750 --> 00:25:25,770
0,210 210,300 300,720 720,870 870,1020
one of today I will

814
00:25:25,770 --> 00:25:27,450
0,120 120,240 240,510 510,930 1440,1680
do the same thing, they'll

815
00:25:27,450 --> 00:25:29,010
0,270 270,510 510,1290 1290,1380 1380,1560
send up entries, you know

816
00:25:29,010 --> 00:25:31,290
0,180 180,540 540,1290 1530,1890 1890,2280
with no entries a past

817
00:25:31,290 --> 00:25:33,330
0,660 690,1290 1290,1620 1620,1710 1710,2040
term previous term to be

818
00:25:33,330 --> 00:25:34,380
0,630
five.

819
00:25:36,400 --> 00:25:38,380
0,420 420,750 750,1440
And previous index.

820
00:25:38,500 --> 00:25:40,100
0,1110
Twelve.

821
00:25:40,160 --> 00:25:42,440
0,210 210,330 330,630 630,1320 1530,2280
It will say no mercury.

822
00:25:43,340 --> 00:25:44,750
0,210 210,630 630,840 840,1200 1200,1410
Um, actually the index you

823
00:25:44,750 --> 00:25:46,430
0,270 270,660 660,780 780,1320 1320,1680
previous index is actually a

824
00:25:46,430 --> 00:25:48,410
0,360 360,540 540,780 780,1260 1590,1980
ten with turn free, um,

825
00:25:48,410 --> 00:25:50,420
0,180 180,360 360,810 900,1470
so it will a.

826
00:25:50,450 --> 00:25:52,160
0,270 270,630 630,1080 1080,1560 1560,1710
This guy will decrease its

827
00:25:52,160 --> 00:25:54,980
0,270 270,720 720,1230 1230,1620 1980,2820
next index go from thirteen

828
00:25:55,010 --> 00:25:56,400
0,150 150,870
to twelve.

829
00:25:56,730 --> 00:25:57,900
0,300 300,450 450,570 570,870 870,1170
Then we'll do the same

830
00:25:57,900 --> 00:26:00,060
0,180 180,750 1230,1350 1350,1560 1560,2160
thing again, you know sent

831
00:26:00,630 --> 00:26:01,740
0,540 540,540 540,840 840,930 930,1110
A I guess it's gonna

832
00:26:01,740 --> 00:26:04,350
0,360 360,1140 1260,1860 1860,2130 2130,2610
extent five block entry five

833
00:26:04,350 --> 00:26:05,160
0,120 120,210 210,390 390,510 510,810
it will set the previous

834
00:26:05,160 --> 00:26:07,100
0,330 330,420 420,690 690,1410
term to be three.

835
00:26:07,220 --> 00:26:08,990
0,570 570,1140 1140,1260 1260,1440 1440,1770
And index for each index

836
00:26:08,990 --> 00:26:10,560
0,180 180,900
v eleven.

837
00:26:10,740 --> 00:26:11,250
0,180 180,300 300,360 360,480 480,510
It's going to get a

838
00:26:11,250 --> 00:26:12,800
0,270 270,870
note back.

839
00:26:13,050 --> 00:26:13,980
0,150 150,300 300,510 510,600 600,930
You know, then the index

840
00:26:13,980 --> 00:26:15,180
0,240 240,600 600,750 750,1110 1110,1200
goes through from twelve to

841
00:26:15,180 --> 00:26:16,360
0,600
eleven.

842
00:26:16,880 --> 00:26:18,590
0,570 570,1080 1080,1470 1470,1590 1590,1710
And now basically it's going

843
00:26:18,590 --> 00:26:19,610
0,90 90,480 510,690 690,840 840,1020
to work and so will

844
00:26:19,610 --> 00:26:20,900
0,240 240,510 510,630 630,1050 1050,1290
she hear that basically for

845
00:26:20,900 --> 00:26:22,730
0,510 510,900 900,1470 1500,1710 1710,1830
every log entry, we're going

846
00:26:22,730 --> 00:26:23,660
0,60 60,240 240,300 300,570 570,930
to have a round trip

847
00:26:23,870 --> 00:26:25,280
0,120 120,300 300,390 390,630 630,1410
for one of these entries.

848
00:26:26,020 --> 00:26:27,610
0,480 600,1020 1020,1080 1080,1350 1350,1590
And um, it turns out

849
00:26:27,610 --> 00:26:28,930
0,270 270,450 450,570 570,750 750,1320
that that can be expensive

850
00:26:28,960 --> 00:26:30,730
0,240 240,630 630,1050 1380,1680 1680,1770
and left and and the

851
00:26:30,730 --> 00:26:31,690
0,150 150,450 450,600 600,810 810,960
real question is like you

852
00:26:31,690 --> 00:26:33,400
0,330 330,690 690,840 840,1350 1350,1710
can follow or be far

853
00:26:33,400 --> 00:26:34,760
0,240 240,630
far behind.

854
00:26:35,310 --> 00:26:36,600
0,600 600,720 720,960 960,1080 1080,1290
Yeah, and let me ask

855
00:26:36,600 --> 00:26:37,560
0,210 210,360 360,780 780,930 930,960
that were positive for a

856
00:26:37,560 --> 00:26:39,000
0,450 450,570 570,720 720,840 840,1440
second so you can reflect

857
00:26:39,000 --> 00:26:40,770
0,660 660,870 870,1050 1050,1230 1230,1770
and think about that case,

858
00:26:41,070 --> 00:26:41,940
0,150 150,270 270,660 660,780 780,870
is it possible that a

859
00:26:41,940 --> 00:26:43,380
0,390 390,540 540,660 660,1200 1200,1440
follower can be far far

860
00:26:43,380 --> 00:26:45,690
0,570 1050,1380 1380,1710 1710,1950 1950,2310
behind for a given leader.

861
00:26:49,110 --> 00:26:50,400
0,300 300,540 540,570 570,750 750,1290
A if a new machine

862
00:26:50,400 --> 00:26:52,060
0,300 300,390 390,1110
joins the cluster.

863
00:26:52,060 --> 00:26:54,520
0,1110 1140,1920 1920,2130 2130,2400 2400,2460
Yeah new James cluster is

864
00:26:54,520 --> 00:26:55,420
0,60 60,180 180,570 570,720 720,900
a good example, any other

865
00:26:55,420 --> 00:26:56,440
0,510
cases.

866
00:26:57,820 --> 00:26:59,080
0,120 120,510 510,1050 1050,1140 1140,1260
A machine crashed and is

867
00:26:59,080 --> 00:27:00,490
0,240 240,450 450,690 690,1140 1140,1410
only coming back online after

868
00:27:00,490 --> 00:27:03,310
0,330 330,1020 1140,1830 1830,2220 2220,2820
several terms, yeah exactly it

869
00:27:03,310 --> 00:27:04,420
0,180 180,390 390,600 600,690 690,1110
comes back after a date

870
00:27:04,990 --> 00:27:06,460
0,180 180,360 360,720 720,1170 1170,1470
it might be far behind

871
00:27:06,940 --> 00:27:08,290
0,210 210,570 570,720 720,1170 1170,1350
so that would mean like

872
00:27:08,290 --> 00:27:09,550
0,240 240,390 420,900 900,1080 1080,1260
in the vertical and an

873
00:27:09,550 --> 00:27:10,720
0,450 450,750 750,900 900,1020 1020,1170
optimized version that you're gonna

874
00:27:10,720 --> 00:27:11,800
0,150 150,420 420,630 630,750 750,1080
go back one by one

875
00:27:11,800 --> 00:27:13,140
0,150 150,240 240,570
from the locker.

876
00:27:13,260 --> 00:27:13,860
0,180 180,330 330,360 360,510 510,600
So that's a little bit

877
00:27:13,860 --> 00:27:15,810
0,630 990,1470 1470,1590 1590,1680 1680,1950
expensive and so the paper

878
00:27:15,810 --> 00:27:18,330
0,270 270,750 750,840 840,1800 2100,2520
actually discusses an optimization a

879
00:27:18,330 --> 00:27:19,590
0,210 210,330 330,630 630,750 750,1260
so to catch up quickly.

880
00:27:30,740 --> 00:27:32,360
0,360 360,1020
And, um.

881
00:27:32,940 --> 00:27:34,860
0,240 240,1020 1020,1380 1380,1800 1800,1920
And z idea basically is

882
00:27:34,860 --> 00:27:37,080
0,390 390,570 570,900 900,1710 1710,2220
instead of like a backing

883
00:27:37,080 --> 00:27:39,510
0,510 1710,1860 1860,1920 1920,2100 2100,2430
off as I said earlier

884
00:27:39,510 --> 00:27:40,950
0,180 180,600 600,930 930,1050 1050,1440
the next index is basically

885
00:27:40,950 --> 00:27:42,900
0,690 690,960 960,1350 1350,1650 1650,1950
optimistic, just guess right and

886
00:27:43,260 --> 00:27:44,340
0,270 270,510 510,780 780,990 990,1080
it doesn't really have to

887
00:27:44,340 --> 00:27:46,980
0,180 180,450 450,990 1320,2010 2010,2640
be that accurate, um and

888
00:27:47,070 --> 00:27:48,180
0,300 300,420 420,510 510,1020 1020,1110
and so the observation is

889
00:27:48,180 --> 00:27:49,200
0,150 150,240 240,660 720,900 900,1020
that you know we don't

890
00:27:49,200 --> 00:27:50,010
0,120 120,240 240,330 330,450 450,810
really have to go one

891
00:27:50,010 --> 00:27:51,150
0,120 120,450 450,840 870,960 960,1140
by one back, you know

892
00:27:51,150 --> 00:27:52,230
0,120 120,480 480,720 720,780 780,1080
it's perfectly fine for example

893
00:27:52,230 --> 00:27:52,950
0,60 60,180 180,240 240,450 450,720
to go a whole term

894
00:27:52,950 --> 00:27:53,720
0,420
back.

895
00:27:53,810 --> 00:27:55,130
0,390 390,840 840,1050 1050,1230 1230,1320
And in fact there's a

896
00:27:55,130 --> 00:27:56,870
0,570 570,840 840,1050 1050,1260 1260,1740
logical maybe that's just a

897
00:27:56,900 --> 00:27:58,250
0,570 570,660 660,960 1050,1230 1230,1350
note, you know you know

898
00:27:58,250 --> 00:27:59,450
0,420 480,660 660,840 840,900 900,1200
it's a couple of terms

899
00:27:59,450 --> 00:28:00,590
0,300 300,420 420,750 750,1050 1050,1140
back and we back off

900
00:28:00,590 --> 00:28:01,340
0,60 60,240 240,300 300,630 630,750
a couple of terms and

901
00:28:01,340 --> 00:28:03,260
0,480 480,870 960,1410 1410,1560 1560,1920
then we'll skin from there.

902
00:28:04,050 --> 00:28:05,280
0,300 300,570 570,720 720,1080 1080,1230
Alright, so to illustrate a

903
00:28:05,340 --> 00:28:06,570
0,360 360,510 510,660 660,780 780,1230
little bit how it works

904
00:28:06,930 --> 00:28:08,100
0,540 540,780 780,960 960,1110 1110,1170
a let me use the

905
00:28:08,100 --> 00:28:10,140
0,180 180,930 1230,1800 1800,1950 1950,2040
full example, um, and I'm

906
00:28:10,140 --> 00:28:11,730
0,120 120,300 300,540 810,990 990,1590
just gonna do two servers

907
00:28:11,880 --> 00:28:12,810
0,330 330,510 510,660 660,750 750,930
a even though they might

908
00:28:12,810 --> 00:28:13,950
0,270 270,360 360,600 600,840 840,1140
be you know meat free

909
00:28:13,950 --> 00:28:14,910
0,120 120,300 300,510 510,570 570,960
to enjoy half a majority

910
00:28:14,910 --> 00:28:16,230
0,270 510,840 840,1080 1080,1260 1260,1320
but let's assume there's a

911
00:28:16,230 --> 00:28:17,460
0,240 240,690 690,930 930,1020 1020,1230
third one and it just

912
00:28:17,460 --> 00:28:18,960
0,240 240,570 570,1020
plays happily along.

913
00:28:19,260 --> 00:28:21,270
0,390 390,510 510,990 990,1500 1530,2010
Um, so here's one here's

914
00:28:21,270 --> 00:28:22,420
0,570
two.

915
00:28:23,320 --> 00:28:25,150
0,780 930,1170 1170,1590 1590,1680 1680,1830
And let's see you know

916
00:28:25,150 --> 00:28:27,140
0,330 360,630 630,900 900,1350
we this guy has.

917
00:28:27,910 --> 00:28:30,180
0,480 480,960 960,1740
Five five five.

918
00:28:30,400 --> 00:28:33,520
0,900 1770,2040 2040,2460
Oops for Fox.

919
00:28:33,640 --> 00:28:35,890
0,450 480,750 750,1110 1230,1710 1710,2250
And this is one two

920
00:28:35,890 --> 00:28:39,040
0,690 720,1110 1110,1770 1830,2580
three four five indexes.

921
00:28:39,070 --> 00:28:40,630
0,450 450,1140 1140,1260 1260,1350 1350,1560
Um, and you know let's

922
00:28:40,630 --> 00:28:41,740
0,540
say.

923
00:28:42,090 --> 00:28:44,670
0,540 990,1260 1260,1470 1470,1860 1860,2580
Yes, that's two has four.

924
00:28:45,610 --> 00:28:47,830
0,600 600,810 810,1470 1650,1860 1860,2220
Basically all success, so basically

925
00:28:47,830 --> 00:28:48,820
0,120 120,330 330,540 540,660 660,990
as one is you know

926
00:28:49,030 --> 00:28:51,730
0,630 660,1410 1440,2190 2310,2640 2640,2700
quite behind, because that's the

927
00:28:51,730 --> 00:28:52,960
0,300 300,540 540,720 720,960 960,1230
only place where they actually

928
00:28:52,960 --> 00:28:53,830
0,240 240,450 450,630 630,780 780,870
line up is in the

929
00:28:53,830 --> 00:28:55,000
0,270 270,630
first entry.

930
00:28:55,030 --> 00:28:57,100
0,420 420,1200 1230,1440 1440,1980 1980,2070
First, um four which is

931
00:28:57,100 --> 00:28:58,300
0,630
34.

932
00:28:58,390 --> 00:29:00,370
0,270 270,390 390,870 900,1500 1500,1980
So in the unoptimized scheme,

933
00:29:00,370 --> 00:29:01,540
0,180 180,300 300,570 570,840 840,1170
we would back off one

934
00:29:01,540 --> 00:29:02,530
0,120 120,390 390,570 570,690 690,990
by one one by one

935
00:29:02,530 --> 00:29:03,550
0,270 270,390 390,660 660,870 870,1020
until we finally got there.

936
00:29:04,860 --> 00:29:07,410
0,390 1110,1290 1290,1740 1740,2280 2340,2550
And to optimize this a

937
00:29:07,410 --> 00:29:09,660
0,450 480,840 840,1290 1290,1350 1350,2250
the paper describes an optimization,

938
00:29:09,840 --> 00:29:11,970
0,600 660,1170 1170,1440 1440,2040 2040,2130
um, unfortunately the opposition is

939
00:29:11,970 --> 00:29:13,080
0,210 210,480 540,930 930,1020 1020,1110
not as described in the

940
00:29:13,080 --> 00:29:14,160
0,300 300,480 480,540 540,930 930,1080
same amount of detail as

941
00:29:14,160 --> 00:29:15,300
0,210 210,570 570,870 870,990 990,1140
a figure too and so

942
00:29:15,300 --> 00:29:17,400
0,60 60,420 420,780 780,1170 1170,2100
in fact you will inch

943
00:29:17,490 --> 00:29:18,750
0,180 180,360 360,720 720,960 960,1260
for two seed actually pass

944
00:29:18,750 --> 00:29:19,830
0,150 150,420 420,570 570,750 750,1080
through c you do actually

945
00:29:19,830 --> 00:29:21,100
0,240 240,360 360,780
have to have.

946
00:29:21,100 --> 00:29:23,110
0,570 570,750 750,1170 1170,1740 1740,2010
Um, and this optimization a

947
00:29:23,110 --> 00:29:24,910
0,300 300,390 390,540 540,1200 1200,1800
form of this optimization implemented

948
00:29:25,090 --> 00:29:26,440
0,300 300,600 600,930 930,1200 1200,1350
your reasonable free actually how

949
00:29:26,440 --> 00:29:27,490
0,60 60,420 420,510 510,720 720,1050
to implement it because paper

950
00:29:27,580 --> 00:29:29,050
0,240 240,660 660,870 870,1380 1380,1470
doesn't describe very precisely you

951
00:29:29,050 --> 00:29:30,100
0,120 120,510 510,810 810,900 900,1050
know which how you should

952
00:29:30,100 --> 00:29:30,790
0,150 150,240 240,360 360,480 480,690
do it, then you have

953
00:29:30,790 --> 00:29:31,360
0,90 90,180 180,240 240,450 450,570
to do a little bit

954
00:29:31,360 --> 00:29:32,890
0,90 90,450 660,1110 1110,1200 1200,1530
of work, but the basic

955
00:29:32,890 --> 00:29:35,060
0,600 870,1050 1050,1140 1140,1770
idea is as follows.

956
00:29:35,060 --> 00:29:36,410
0,180 180,660 720,1020 1020,1110 1110,1350
And just instead of just

957
00:29:36,410 --> 00:29:37,970
0,570 570,750 750,930 930,1200 1200,1560
voting or just saying no

958
00:29:37,970 --> 00:29:39,290
0,120 120,600 600,780 780,960 960,1320
or yes as we know

959
00:29:39,290 --> 00:29:41,180
0,180 180,330 330,630 630,1020 1170,1890
on the previous slide, the

960
00:29:41,510 --> 00:29:43,280
0,1200
rejection.

961
00:29:43,280 --> 00:29:45,120
0,270 270,420 420,600 600,1200
So you say no.

962
00:29:45,150 --> 00:29:46,350
0,180 180,570 570,990 990,1020 1020,1200
The project includes a little

963
00:29:46,350 --> 00:29:47,760
0,120 120,210 210,420 420,960 1230,1410
bit of more information and

964
00:29:47,760 --> 00:29:49,410
0,750 750,900 900,1410 1410,1530 1530,1650
then that information is going

965
00:29:49,410 --> 00:29:50,640
0,60 60,480 480,780 780,1110 1110,1230
to help the leader to

966
00:29:50,640 --> 00:29:52,460
0,390 390,660 660,870 870,1290
basically back off quicker.

967
00:29:52,700 --> 00:29:54,980
0,420 420,660 660,930 930,1560
Um, and so important.

968
00:29:54,980 --> 00:29:56,540
0,240 240,450 450,600 600,1170 1200,1560
Something what they call the

969
00:29:56,570 --> 00:29:58,260
0,480 480,990
conflicting term.

970
00:29:58,940 --> 00:30:00,380
0,270 270,750 750,930 930,990 990,1440
In response and the conflicting

971
00:30:00,380 --> 00:30:02,040
0,690
index.

972
00:30:03,920 --> 00:30:06,830
0,480 480,1020 1650,2280 2310,2520 2520,2910
And there a the conflicting

973
00:30:06,830 --> 00:30:09,650
0,360 360,630 630,1080 1080,1650 1950,2820
term is basically the um,

974
00:30:09,800 --> 00:30:11,180
0,300 300,420 420,960 990,1230 1230,1380
you know if let me

975
00:30:11,180 --> 00:30:12,680
0,330 330,540 540,750 750,1080 1110,1500
actually make this a more

976
00:30:12,680 --> 00:30:14,060
0,360 360,570 570,930 930,1170 1200,1380
clear let's say we're s

977
00:30:14,060 --> 00:30:17,440
0,510 990,1860 1860,2100 2100,2820
one timeline, here's x2.

978
00:30:17,620 --> 00:30:19,180
0,540 540,1020 1020,1200 1200,1350 1350,1560
Um, so as to sense

979
00:30:19,180 --> 00:30:20,770
0,330 330,570 600,1140 1140,1500 1500,1590
you know elected leader in

980
00:30:20,770 --> 00:30:22,090
0,510 540,810 810,1020 1020,1110 1110,1320
seven correct because it has

981
00:30:22,090 --> 00:30:23,410
0,300 300,630 630,780 780,870 870,1320
the most up to date,

982
00:30:23,440 --> 00:30:25,180
0,270 270,780 1230,1410 1410,1680 1680,1740
a lord it sends a

983
00:30:25,180 --> 00:30:27,040
0,660 840,1080 1080,1200 1200,1620 1620,1860
message to s one here

984
00:30:27,040 --> 00:30:28,220
0,90 90,330 330,750
a heart beat.

985
00:30:28,220 --> 00:30:29,990
0,780 780,1050 1050,1260 1260,1290 1290,1770
And, um, in a heartbeat,

986
00:30:29,990 --> 00:30:31,100
0,150 150,480 480,870 870,960 960,1110
it will say you know

987
00:30:31,100 --> 00:30:32,880
0,120 120,570 570,1200
the previous term.

988
00:30:33,110 --> 00:30:36,770
0,930 960,1890 1890,2490 2970,3330 3330,3660
A was six and previous

989
00:30:36,770 --> 00:30:38,120
0,750
index.

990
00:30:38,120 --> 00:30:41,320
0,930 990,1800 2040,2640
Was a fuck.

991
00:30:42,620 --> 00:30:43,610
0,300 300,480 480,660 660,780 780,990
And now, when this one

992
00:30:43,610 --> 00:30:45,050
0,210 210,750 780,1140 1140,1320 1320,1440
gets this unit looks at

993
00:30:45,050 --> 00:30:46,490
0,270 270,780 780,1020 1020,1170 1170,1440
this login sees that actually

994
00:30:46,490 --> 00:30:47,960
0,90 90,480 480,810 810,960 960,1470
the previous term was five.

995
00:30:48,840 --> 00:30:50,640
0,180 180,600 810,1200 1200,1320 1320,1800
And so instead of action

996
00:30:50,640 --> 00:30:51,900
0,510 510,660 660,750 750,870 870,1260
and so it will include

997
00:30:51,900 --> 00:30:53,340
0,150 150,690 690,810 810,900 900,1440
in response you know conflicting

998
00:30:53,340 --> 00:30:56,340
0,480 570,2100 2190,2490 2490,2850 2850,3000
term term conflicts on in

999
00:30:56,340 --> 00:30:57,420
0,210 210,630 630,750 750,870 870,1080
that index and that was

1000
00:30:57,420 --> 00:30:58,440
0,540
five.

1001
00:30:58,630 --> 00:30:59,380
0,150 150,270 270,390 390,480 480,750
We're going to the final

1002
00:30:59,380 --> 00:31:01,420
0,480 810,960 960,1470 1650,1920 1920,2040
entry and then, um, it

1003
00:31:01,420 --> 00:31:03,010
0,210 210,660 660,840 840,960 960,1590
also includes what the first

1004
00:31:03,040 --> 00:31:04,750
0,570 570,810 810,1110 1110,1530 1530,1710
index of that term is

1005
00:31:04,750 --> 00:31:05,770
0,120 120,300 300,660 690,930 930,1020
in this lock, so we

1006
00:31:05,770 --> 00:31:07,330
0,180 180,300 300,600 600,1200 1230,1560
look at this a term

1007
00:31:07,330 --> 00:31:08,590
0,240 240,570 570,1050 1050,1200 1200,1260
like five five and the

1008
00:31:08,590 --> 00:31:09,880
0,270 270,660 660,900 900,960 960,1290
first time like the index

1009
00:31:09,880 --> 00:31:11,050
0,270 270,480 480,600 600,750 750,1170
five showed up its log

1010
00:31:11,050 --> 00:31:12,220
0,120 120,240 240,690 690,960 1020,1170
is at index two and

1011
00:31:12,220 --> 00:31:13,690
0,180 180,540 570,900 900,1110 1110,1470
so will include that too,

1012
00:31:14,020 --> 00:31:15,340
0,210 210,300 300,510 510,750 750,1320
and we'll send that back

1013
00:31:15,670 --> 00:31:16,930
0,90 90,240 240,570 570,840 870,1260
you know to the leader,

1014
00:31:16,930 --> 00:31:18,820
0,150 150,810 810,1140 1140,1260 1260,1890
so here's what our leader.

1015
00:31:19,160 --> 00:31:20,030
0,300 300,570 570,690 690,810 810,870
And so we're going to

1016
00:31:20,030 --> 00:31:21,560
0,180 180,630 660,750 750,900 900,1530
send back, you know five.

1017
00:31:22,830 --> 00:31:24,870
0,330 330,840 960,1500 1500,1590 1590,2040
About to that's the conflicting

1018
00:31:24,870 --> 00:31:28,260
0,780 1200,1830 1830,2640 2670,3180 3180,3390
information and a leader uses

1019
00:31:28,260 --> 00:31:30,720
0,210 210,930 1140,1410 1410,1890 1890,2460
that information to basically skip

1020
00:31:30,720 --> 00:31:32,370
0,360 360,900 900,1110 1110,1410 1410,1650
back reporter, in fact it

1021
00:31:32,370 --> 00:31:34,530
0,330 330,930 930,1290 1290,1530 1530,2160
skips back thrown so initially

1022
00:31:34,530 --> 00:31:35,980
0,180 180,510 510,1050
it's guess was.

1023
00:31:35,980 --> 00:31:37,840
0,390 390,1170
Next index.

1024
00:31:38,780 --> 00:31:41,510
0,630 660,870 870,1500 1560,2130 2130,2730
For s one a was

1025
00:31:41,510 --> 00:31:42,680
0,630
six.

1026
00:31:42,680 --> 00:31:44,210
0,330 330,540 540,630 630,780 780,1530
And based on this information

1027
00:31:44,210 --> 00:31:45,650
0,150 150,390 390,750 750,1110 1110,1440
and extra scales back to

1028
00:31:45,650 --> 00:31:46,970
0,570 660,870 870,960 960,1200 1200,1320
two so it turns it

1029
00:31:46,970 --> 00:31:48,350
0,210 210,720 1050,1200 1200,1320 1320,1380
into two and then the

1030
00:31:48,350 --> 00:31:50,040
0,240 240,570 570,1230
next depend entries.

1031
00:31:50,160 --> 00:31:51,330
0,180 180,450 450,570 570,630 630,1170
Um, it's going to include

1032
00:31:51,330 --> 00:31:53,180
0,630 630,960 960,1260
everything from to.

1033
00:31:53,820 --> 00:31:55,170
0,420 420,570 570,780 780,930 930,1350
So its gonna go clean,

1034
00:31:55,170 --> 00:31:57,200
0,210 210,540 540,840 840,1470
go five five five.

1035
00:31:58,140 --> 00:32:01,020
0,390 390,750 750,1650 1830,2160 2160,2880
And previous term is four

1036
00:32:01,020 --> 00:32:03,340
0,210 210,540 540,1260 1260,1710
and previous indexes one.

1037
00:32:04,650 --> 00:32:05,970
0,150 150,450 450,600 600,960 960,1320
And now, as one can

1038
00:32:06,000 --> 00:32:07,770
0,270 270,750 750,960 960,1350 1350,1770
one small fall swoop, basically

1039
00:32:07,770 --> 00:32:08,820
0,570 570,660 660,780 780,900 900,1050
copy you know the new

1040
00:32:08,820 --> 00:32:10,950
0,300 300,720 720,1590 1590,1800 1800,2130
lock entries over the entries,

1041
00:32:10,950 --> 00:32:11,940
0,120 120,300 300,510 510,570 570,990
two three four or five

1042
00:32:11,940 --> 00:32:13,020
0,330 330,570 570,660 660,750 750,1080
actions back up to date.

1043
00:32:14,200 --> 00:32:15,970
0,270 270,420 420,1080 1080,1650 1650,1770
So this basically reduces the

1044
00:32:15,970 --> 00:32:17,740
0,420 420,840 840,1530 1530,1650 1650,1770
number of heartbeats, you know

1045
00:32:17,740 --> 00:32:20,350
0,330 330,840 840,1230 1470,1860 1860,2610
to catch up a follower

1046
00:32:20,380 --> 00:32:22,090
0,330 330,690 690,810 810,1350 1350,1710
by one per term instead

1047
00:32:22,090 --> 00:32:23,520
0,90 90,390 390,540 540,930
of one per entry.

1048
00:32:30,850 --> 00:32:32,200
0,240 240,840
Any questions.

1049
00:32:33,430 --> 00:32:34,390
0,180 180,270 270,390 390,600 600,960
How do we make sure

1050
00:32:34,390 --> 00:32:36,700
0,150 150,630 1020,1380 1560,1860 1860,2310
that we don't know overload

1051
00:32:36,700 --> 00:32:38,110
0,90 90,660 660,840 840,1290 1290,1410
the bandwidth because imagine if

1052
00:32:38,110 --> 00:32:39,940
0,150 150,390 390,750 750,1470 1680,1830
you have like a you're

1053
00:32:39,940 --> 00:32:41,440
0,180 180,270 270,570 570,1110 1140,1500
trying to send back all

1054
00:32:41,440 --> 00:32:42,490
0,90 90,270 270,570 570,930 930,1050
of these log entries cause

1055
00:32:42,490 --> 00:32:43,840
0,210 210,510 510,1020 1020,1110 1110,1350
that caused problems in terms

1056
00:32:43,840 --> 00:32:44,680
0,60 60,240 240,630 630,780 780,840
of like packets that are

1057
00:32:44,680 --> 00:32:46,060
0,150 150,810
too large.

1058
00:32:46,060 --> 00:32:47,290
0,180 180,300 300,420 420,600 600,1230
Yeah, so a great question

1059
00:32:47,290 --> 00:32:49,030
0,480 540,1020 1020,1410 1410,1680 1680,1740
like um, and because it

1060
00:32:49,030 --> 00:32:50,920
0,180 180,270 270,780 1140,1320 1320,1890
sort of indicates an alternative

1061
00:32:50,920 --> 00:32:52,330
0,600 630,900 900,1080 1080,1230 1230,1410
scheme right, but you know

1062
00:32:52,330 --> 00:32:54,400
0,390 420,780 780,1020 1020,1530 1560,2070
the go back here, um,

1063
00:32:54,820 --> 00:32:56,230
0,180 180,600 600,960 960,1320 1320,1410
um is that instead of

1064
00:32:56,230 --> 00:32:57,940
0,270 270,570 570,690 690,1260 1260,1710
actually making this optimistic guess

1065
00:32:57,940 --> 00:32:58,600
0,90 90,180 180,390 390,600 600,660
you know why, make a

1066
00:32:58,600 --> 00:33:00,070
0,210 210,300 300,780 900,1260 1260,1470
guess at all, just send

1067
00:33:00,070 --> 00:33:01,570
0,510 750,960 960,1080 1080,1200 1200,1500
everything you know the leader

1068
00:33:01,570 --> 00:33:02,560
0,150 150,300 300,600 600,810 810,990
could have sounds like though

1069
00:33:02,560 --> 00:33:03,940
0,180 180,390 390,990 1110,1290 1290,1380
it's whole log, it would

1070
00:33:03,940 --> 00:33:04,960
0,120 120,510 510,810 810,900 900,1020
be perfectly fine and then

1071
00:33:04,960 --> 00:33:05,980
0,450 450,510 510,720 720,930 930,1020
basically you know any of

1072
00:33:05,980 --> 00:33:07,630
0,60 60,630 630,810 810,1260 1260,1650
the followers can fish out

1073
00:33:07,840 --> 00:33:09,130
0,120 120,330 330,480 480,840 870,1290
the ones they need, right.

1074
00:33:10,850 --> 00:33:13,430
0,720 720,990 990,1890 1890,2070 2070,2580
Um and oblivion, an alternative

1075
00:33:13,430 --> 00:33:15,440
0,750 750,1260 1290,1650 1650,1770 1770,2010
implementation and presumably we don't

1076
00:33:15,440 --> 00:33:17,360
0,210 210,450 450,1230 1410,1860 1860,1920
like the implementation because the

1077
00:33:17,360 --> 00:33:19,520
0,240 240,450 450,540 540,1200 1410,2160
law might be large and

1078
00:33:19,520 --> 00:33:21,410
0,660 660,1020 1020,1140 1140,1230 1230,1890
um that would be problematic.

1079
00:33:22,260 --> 00:33:23,550
0,330 330,510 510,570 570,960 990,1290
Um, so I think you

1080
00:33:23,550 --> 00:33:24,810
0,90 90,210 210,630 630,900 900,1260
know the basic guess here

1081
00:33:24,810 --> 00:33:26,190
0,240 240,450 450,750 750,1020 1020,1380
that's going on is that

1082
00:33:26,460 --> 00:33:30,540
0,930 1080,1500 1590,2610 2610,3210 3210,4080
um in enormous typical situations,

1083
00:33:30,570 --> 00:33:32,430
0,870 900,1320 1320,1680 1680,1740 1740,1860
the followers or you know

1084
00:33:32,430 --> 00:33:34,410
0,540 540,900 900,1230 1230,1770 1770,1980
hopefully reasonable close together and

1085
00:33:34,410 --> 00:33:35,550
0,360 360,720 720,870 870,930 930,1140
so backing off a couple

1086
00:33:35,550 --> 00:33:37,480
0,450 450,540 540,780 780,1440
entries is actually sufficient.

1087
00:33:37,630 --> 00:33:39,190
0,450 450,570 570,930 930,1200 1200,1560
And if not, then we

1088
00:33:39,190 --> 00:33:41,050
0,210 210,390 390,630 630,1200 1230,1860
might go back one term

1089
00:33:41,380 --> 00:33:43,220
0,180 180,450 450,720 720,1350
but not all terms.

1090
00:33:43,340 --> 00:33:44,510
0,240 240,390 390,660 660,900 900,1170
And so we'll send the

1091
00:33:44,510 --> 00:33:46,490
0,270 270,600 600,840 840,1380 1440,1980
log entries for one term

1092
00:33:46,490 --> 00:33:47,270
0,90 90,360 360,570 570,720 720,780
and that might be a

1093
00:33:47,270 --> 00:33:48,560
0,390 420,750 780,1020 1020,1170 1170,1290
lot right that might be

1094
00:33:48,560 --> 00:33:49,130
0,60 60,270 270,360 360,450 450,570
a lot and we'll see

1095
00:33:49,130 --> 00:33:49,970
0,60 60,90 90,480 480,660 660,840
in a second like how

1096
00:33:49,970 --> 00:33:52,190
0,90 90,240 240,540 540,780 1500,2220
we get around that snapshot

1097
00:33:52,190 --> 00:33:53,600
0,150 150,270 270,540 720,1170 1170,1410
is going to help we're

1098
00:33:53,600 --> 00:33:55,010
0,570 570,690 690,1050 1050,1140 1140,1410
reducing the number of log

1099
00:33:55,010 --> 00:33:55,880
0,300 300,480 480,630 630,780 780,870
entries that we have to

1100
00:33:55,880 --> 00:33:56,740
0,420
send.

1101
00:33:59,460 --> 00:34:00,330
0,210 210,300 300,300 300,750 750,870
There was a question do

1102
00:34:00,330 --> 00:34:01,170
0,120 120,270 270,330 330,720 720,840
you need to implement this

1103
00:34:01,170 --> 00:34:02,670
0,150 150,240 240,1050 1050,1410 1410,1500
sort of a version of

1104
00:34:02,670 --> 00:34:04,560
0,120 120,840 840,1080 1080,1500 1500,1890
these {optimization's -} scheming lap

1105
00:34:04,560 --> 00:34:05,820
0,210 210,480 480,570 570,750 750,1260
to see, and yes yes.

1106
00:34:06,860 --> 00:34:08,390
0,270 270,480 480,570 570,1230 1320,1530
At least I believe, um

1107
00:34:08,390 --> 00:34:09,290
0,240 240,450 450,570 570,810 810,900
I haven't been able to

1108
00:34:09,290 --> 00:34:10,850
0,240 240,330 330,570 570,1170 1170,1560
pass the test without implementing

1109
00:34:10,850 --> 00:34:12,340
0,240 240,900
some optimization.

1110
00:34:13,970 --> 00:34:15,230
0,240 240,330 330,480 480,600 600,1260
So I have a question,

1111
00:34:15,260 --> 00:34:17,120
0,480 510,690 690,1080 1470,1650 1650,1860
um, so I in my

1112
00:34:17,120 --> 00:34:18,980
0,360 360,630 630,870 870,930 930,1860
code I did the optimization

1113
00:34:18,980 --> 00:34:20,960
0,480 510,870 870,1170 1200,1530 1530,1980
by backing off to the

1114
00:34:20,960 --> 00:34:22,850
0,480 690,900 900,960 960,1260 1260,1890
committee, so I made the.

1115
00:34:23,600 --> 00:34:25,130
0,270 270,480 480,840 840,1320 1320,1530
Um the reply include the

1116
00:34:25,130 --> 00:34:26,570
0,300 300,660 660,1140 1140,1290 1290,1440
last commit index and then

1117
00:34:26,570 --> 00:34:28,260
0,90 90,510 510,690 690,1080
I started from there.

1118
00:34:28,920 --> 00:34:31,020
0,150 150,540 840,1080 1080,1500 1830,2100
Is that much worse I

1119
00:34:31,020 --> 00:34:32,370
0,270 270,480 480,720 720,900 900,1350
you might run into trouble

1120
00:34:32,370 --> 00:34:35,160
0,360 360,510 510,1440 1620,2190 2220,2790
and so the the test

1121
00:34:35,190 --> 00:34:36,450
0,300 300,720 720,870 870,1050 1050,1260
keep track of how many

1122
00:34:36,450 --> 00:34:37,880
0,300 300,450 450,960
bytes you sent.

1123
00:34:37,880 --> 00:34:39,200
0,120 120,270 270,450 450,1050 1050,1320
And gives your budget and

1124
00:34:39,200 --> 00:34:41,660
0,120 120,450 450,1440 1530,2160 2160,2460
if you're like go across

1125
00:34:41,660 --> 00:34:43,370
0,90 90,450 450,570 570,1380 1470,1710
the budget you know by

1126
00:34:43,370 --> 00:34:45,830
0,180 180,720 990,1740 1740,2160 2160,2460
too much, then the testing

1127
00:34:45,830 --> 00:34:46,850
0,90 90,330 330,720 720,840 840,1020
will say well you're just

1128
00:34:46,850 --> 00:34:48,900
0,180 180,300 300,750 840,1530
sending too much data.

1129
00:34:50,800 --> 00:34:52,150
0,480 480,780 780,1080 1080,1170 1170,1350
Because your scheme it might

1130
00:34:52,150 --> 00:34:52,840
0,60 60,150 150,390 390,540 540,690
be the case that I

1131
00:34:52,840 --> 00:34:53,770
0,210 210,390 390,540 540,750 750,930
think you will send more

1132
00:34:53,770 --> 00:34:55,720
0,270 270,540 540,750 750,1410
data than really necessary.

1133
00:34:55,750 --> 00:34:57,980
0,540 540,1050 1050,1380 1380,1650
Whatever necessary means but.

1134
00:35:00,990 --> 00:35:01,890
0,180 180,330 330,390 390,780 780,900
There is a question in

1135
00:35:01,890 --> 00:35:04,650
0,570 900,1860 1860,1950 2460,2700 2700,2760
chat, yeah, and then I

1136
00:35:04,650 --> 00:35:05,940
0,510 510,720 720,840 840,1050 1050,1290
said draw the wrong thing,

1137
00:35:05,940 --> 00:35:07,440
0,540 540,810 810,1020 1020,1230 1230,1500
yeah six six six six

1138
00:35:07,440 --> 00:35:08,500
0,510
sorry.

1139
00:35:08,530 --> 00:35:09,700
0,300 300,630
Thank you.

1140
00:35:10,490 --> 00:35:13,310
0,720 720,1320 1350,1890 2520,2640 2640,2820
Six six six I don't

1141
00:35:13,310 --> 00:35:15,080
0,120 120,180 180,480 480,1050 1200,1770
want to follow or overriding

1142
00:35:15,080 --> 00:35:18,080
0,120 120,630
the leaders.

1143
00:35:18,230 --> 00:35:19,970
0,300 300,690 990,1290 1290,1410 1410,1740
Log entries, sorry about that.

1144
00:35:20,540 --> 00:35:21,780
0,300 300,690
Good guy.

1145
00:35:24,880 --> 00:35:26,160
0,180 180,750
Any questions.

1146
00:35:32,510 --> 00:35:33,680
0,600
Okay.

1147
00:35:33,770 --> 00:35:35,060
0,750
Wow.

1148
00:35:40,300 --> 00:35:42,040
0,300 300,1050 1080,1260 1260,1440 1440,1740
Okay, so let me talk

1149
00:35:42,040 --> 00:35:43,120
0,30 30,180 180,360 360,630 630,1080
a little bit about the

1150
00:35:43,150 --> 00:35:46,450
0,750 2220,2400 2400,2670 2670,2940 2940,3300
persistence, we have one question

1151
00:35:46,450 --> 00:35:48,700
0,90 90,210 210,630 630,1140 1560,2250
in the chat first okay

1152
00:35:48,700 --> 00:35:50,100
0,90 90,840
there wondering.

1153
00:35:50,130 --> 00:35:51,540
0,420 420,510 510,630 630,1200 1200,1410
Why does the {rejection's -}

1154
00:35:51,540 --> 00:35:53,220
0,390 390,660 660,750 750,1380 1380,1680
send back the rejected term

1155
00:35:53,220 --> 00:35:54,300
0,450 450,630 630,840 840,960 960,1080
number as well as the

1156
00:35:54,300 --> 00:35:55,560
0,780
index.

1157
00:35:55,850 --> 00:35:57,620
0,1200
I'm.

1158
00:35:58,640 --> 00:36:00,530
0,690 690,1140 1140,1290 1290,1650 1650,1890
Um, well that depends very

1159
00:36:00,530 --> 00:36:01,880
0,210 210,390 390,480 480,810 810,1350
much how you actually implement

1160
00:36:01,940 --> 00:36:03,380
0,660 660,900 900,1170 1170,1350 1350,1440
the how, what kind of

1161
00:36:03,380 --> 00:36:05,330
0,330 330,450 450,1140 1140,1560 1560,1950
state you maintain on the

1162
00:36:05,360 --> 00:36:06,650
0,450 450,720 720,900 900,1020 1020,1290
leader and how the leader

1163
00:36:06,650 --> 00:36:08,460
0,510 510,630 630,960 960,1350
decides to back off.

1164
00:36:08,730 --> 00:36:10,180
0,900
I'm.

1165
00:36:10,180 --> 00:36:11,170
0,120 120,330 330,570 570,660 660,990
Do you need to know

1166
00:36:11,170 --> 00:36:13,000
0,360 360,630 630,1230 1260,1620 1620,1830
send some terms back because

1167
00:36:13,000 --> 00:36:14,560
0,150 150,420 420,510 510,1080 1290,1560
you need a Tory in

1168
00:36:14,560 --> 00:36:15,790
0,420 420,630 630,1080 1080,1170 1170,1230
response get delayed for a

1169
00:36:15,790 --> 00:36:17,440
0,210 210,450 450,510 510,960 1380,1650
long period of time, um,

1170
00:36:17,440 --> 00:36:18,760
0,120 120,420 420,630 630,1200 1200,1320
you certainly should reject you

1171
00:36:18,760 --> 00:36:20,440
0,630 630,1140 1140,1260 1260,1560 1560,1680
know information from terms that

1172
00:36:20,440 --> 00:36:22,060
0,120 120,600 600,750 750,1140 1140,1620
are completely not relevant anymore.

1173
00:36:22,860 --> 00:36:24,860
0,1410
Zhu.

1174
00:36:25,410 --> 00:36:26,550
0,270 270,450 450,630 630,690 690,1140
I know this is slightly

1175
00:36:26,550 --> 00:36:28,260
0,270 270,690 690,810 810,1440 1440,1710
vague answer but it's really

1176
00:36:28,260 --> 00:36:29,460
0,210 210,420 420,780 780,840 840,1200
very much dependent on exactly

1177
00:36:29,460 --> 00:36:30,920
0,150 150,270 270,660 660,870
how you implement it.

1178
00:36:37,480 --> 00:36:40,780
0,510 540,1380 1710,2460
Okay, I'm persistence.

1179
00:36:45,970 --> 00:36:47,170
0,270 270,510 510,810 810,870 870,1200
We talked about the system's

1180
00:36:47,170 --> 00:36:49,340
0,60 60,240 240,570 630,1620
a little bit, um.

1181
00:36:49,370 --> 00:36:51,050
0,270 270,810 840,1230 1230,1470 1470,1680
Um, in last year after

1182
00:36:51,050 --> 00:36:52,430
0,60 60,300 300,570 570,900 900,1380
the first half lecture, we're

1183
00:36:52,430 --> 00:36:54,560
0,120 120,240 240,930 1110,1830 1830,2130
you know we noted that

1184
00:36:54,560 --> 00:36:56,150
0,60 60,240 240,780 810,1230 1230,1590
you know the and follower

1185
00:36:56,150 --> 00:36:57,890
0,150 150,840 960,1410 1410,1500 1500,1740
can only vote for one

1186
00:36:57,890 --> 00:37:00,020
0,630 900,990 990,1440 1440,1590 1590,2130
candidate per term and therefore

1187
00:37:00,020 --> 00:37:01,370
0,120 120,270 270,360 360,1050 1140,1350
it needs to remember, um,

1188
00:37:01,370 --> 00:37:03,410
0,540 930,1200 1200,1500 1500,1800 1800,2040
it's um, who'd voted for

1189
00:37:03,410 --> 00:37:04,250
0,90 90,240 240,510 510,570 570,840
and what actually the current

1190
00:37:04,250 --> 00:37:05,220
0,270 270,600
term is.

1191
00:37:05,590 --> 00:37:07,540
0,450 510,840 840,1320 1320,1530 1530,1950
Um, but there's a larger

1192
00:37:07,540 --> 00:37:12,520
0,720 840,2910 3030,3990 4200,4890 4890,4980
issue around persistence and that

1193
00:37:12,520 --> 00:37:13,240
0,180 180,300 300,420 420,630 630,720
came up in one of

1194
00:37:13,240 --> 00:37:14,710
0,480 510,1020 1020,1230 1230,1320 1320,1470
the questions one of you

1195
00:37:14,710 --> 00:37:16,720
0,180 180,510 510,690 690,990 1350,2010
just asked which is a

1196
00:37:16,720 --> 00:37:17,470
0,120 120,180 180,360 360,630 630,750
you know what happens on

1197
00:37:17,470 --> 00:37:18,520
0,540
reboot.

1198
00:37:21,640 --> 00:37:23,200
0,240 240,360 360,480 480,570 570,1560
And there's sort of two

1199
00:37:23,230 --> 00:37:24,460
0,450 450,840 840,930 930,1020 1020,1230
possible strategy, you can think

1200
00:37:24,460 --> 00:37:26,710
0,180 210,630 630,1050 1050,1860 1860,2250
of like one strategy is.

1201
00:37:30,470 --> 00:37:32,120
0,270 270,600 600,750 750,1110 1110,1650
What strength you want is.

1202
00:37:32,790 --> 00:37:34,380
0,270 270,360 360,900 900,1020 1020,1590
You know basically the note

1203
00:37:34,620 --> 00:37:36,930
0,780 780,1410 1440,1650 1650,1710 1710,2310
a joins sort of freshly.

1204
00:37:37,830 --> 00:37:39,580
0,450 450,1020
Oh, George.

1205
00:37:39,900 --> 00:37:42,900
0,540 540,780 780,900 900,1620 1890,3000
Basically when a note crashes

1206
00:37:43,200 --> 00:37:44,640
0,240 240,450 450,690 690,1110 1260,1440
and comes back up, um,

1207
00:37:44,640 --> 00:37:46,080
0,180 180,330 330,540 540,1170 1170,1440
it just doesn't participate anymore,

1208
00:37:46,080 --> 00:37:47,430
0,90 90,240 240,420 420,1230 1260,1350
it has to rejoin you

1209
00:37:47,430 --> 00:37:48,880
0,150 150,900
know the.

1210
00:37:49,880 --> 00:37:52,220
0,540 540,630 630,1170 1200,1770
Rejoin the raft cluster.

1211
00:37:52,410 --> 00:37:54,480
0,630 870,1230 1230,1620 1620,1710 1710,2070
And that means you know

1212
00:37:54,570 --> 00:37:56,220
0,600 600,1080 1080,1320 1320,1500 1500,1650
when rejoins you reach you

1213
00:37:56,220 --> 00:37:58,220
0,270 270,630 630,1440
have to replay.

1214
00:37:58,250 --> 00:37:59,930
0,420 420,570 570,990 1020,1320 1320,1680
A the log where basically

1215
00:37:59,930 --> 00:38:01,430
0,240 240,330 330,840 840,1170 1170,1500
has to receive every entry

1216
00:38:01,430 --> 00:38:03,080
0,90 90,150 150,750 870,1110 1110,1650
in the log and then.

1217
00:38:04,000 --> 00:38:05,460
0,120 120,570 570,900
I replay that.

1218
00:38:05,680 --> 00:38:06,490
0,150 150,210 210,510 510,600 600,810
And of course you know

1219
00:38:06,490 --> 00:38:09,310
0,210 210,750 1110,1290 1290,1920 1950,2820
like if a note has

1220
00:38:09,310 --> 00:38:11,200
0,450 450,840 840,990 990,1260 1470,1890
been down for a node

1221
00:38:11,200 --> 00:38:12,550
0,660 660,930 930,1050 1050,1110 1110,1350
crashes down for a day

1222
00:38:12,550 --> 00:38:14,110
0,120 120,240 240,720 720,1200 1230,1560
or two days or even

1223
00:38:14,110 --> 00:38:14,980
0,120 120,240 240,450 450,630 630,870
if it just goes down

1224
00:38:14,980 --> 00:38:16,300
0,150 150,210 210,750
for a second.

1225
00:38:16,300 --> 00:38:17,410
0,210 210,570 570,660 660,780 780,1110
Um, but you know the

1226
00:38:17,410 --> 00:38:18,400
0,330 330,450 450,600 600,810 810,990
system has been up for

1227
00:38:18,400 --> 00:38:19,960
0,60 60,510 600,870 870,1110 1110,1560
a year that number means

1228
00:38:19,960 --> 00:38:20,980
0,120 120,270 270,450 450,870 870,1020
you have to replay a

1229
00:38:20,980 --> 00:38:22,540
0,240 240,330 330,600 600,1170 1380,1560
lot of log entries, so

1230
00:38:22,540 --> 00:38:23,650
0,180 180,240 240,390 390,510 510,1110
there's a little bit annoying

1231
00:38:23,650 --> 00:38:25,540
0,360 360,630 630,900 900,1470 1470,1890
and so people prefer that

1232
00:38:25,810 --> 00:38:28,380
0,570 570,1140 1230,1590 1590,2070
strategy too which is.

1233
00:38:28,960 --> 00:38:29,680
0,90 90,180 180,360 360,450 450,720
You know you can back

1234
00:38:29,680 --> 00:38:30,800
0,540
up.

1235
00:38:31,820 --> 00:38:33,620
0,540 540,720 720,900 900,1320 1320,1800
And you just basically participate

1236
00:38:33,620 --> 00:38:34,560
0,390
together.

1237
00:38:35,070 --> 00:38:36,390
0,330 330,600 600,780 780,1080 1080,1320
Um, so you catch up

1238
00:38:36,390 --> 00:38:38,490
0,510 690,1500 1500,1560 1560,1890 1890,2100
from basically you start from

1239
00:38:38,490 --> 00:38:40,520
0,390 450,930 930,1350
your persistent state.

1240
00:38:49,460 --> 00:38:51,500
0,570 900,1170 1170,1350 1350,1710 1710,2040
Um, yeah the idea being

1241
00:38:51,500 --> 00:38:52,400
0,180 180,240 240,600 600,750 750,900
that you know it's just

1242
00:38:52,400 --> 00:38:53,960
0,60 60,330 330,900 930,1230 1230,1560
a quick reboot you crash

1243
00:38:53,960 --> 00:38:55,310
0,90 90,210 210,420 420,510 510,1350
you can back up whatever

1244
00:38:55,340 --> 00:38:57,350
0,330 330,660 660,1260 1500,1800 1800,2010
quick network failure, um, and

1245
00:38:57,350 --> 00:38:58,400
0,120 120,570 570,720 720,870 870,1050
so maybe you know the

1246
00:38:58,400 --> 00:38:59,900
0,330 330,480 480,930 930,1200 1200,1500
rest can move one term

1247
00:38:59,900 --> 00:39:02,180
0,630 810,1350 1350,1770 1770,2010 2010,2280
along you basically have all

1248
00:39:02,180 --> 00:39:03,980
0,90 90,660 810,1440 1440,1620 1620,1800
the state and you should

1249
00:39:03,980 --> 00:39:05,570
0,60 60,270 270,360 360,720 720,1590
be used for quick catchup.

1250
00:39:06,070 --> 00:39:07,000
0,180 180,330 330,420 420,600 600,930
So then, the real question

1251
00:39:07,000 --> 00:39:08,380
0,120 120,510 510,810 810,900 900,1380
is what needs to be

1252
00:39:08,530 --> 00:39:09,460
0,150 150,360 360,630 630,840 840,930
at what state needs to

1253
00:39:09,460 --> 00:39:12,480
0,240 240,960 1110,1920 1920,2520
be persisted across reboots.

1254
00:39:12,870 --> 00:39:14,340
0,510 540,840 840,1110 1110,1200 1200,1470
Um, now where he talked

1255
00:39:14,340 --> 00:39:16,170
0,210 210,480 480,990 1350,1620 1620,1830
about voting for that needs

1256
00:39:16,170 --> 00:39:17,800
0,60 60,360 360,1110
to be persistent.

1257
00:39:19,510 --> 00:39:21,010
0,450 450,630 630,720 720,960 960,1500
Because you are not allowed

1258
00:39:21,220 --> 00:39:23,440
0,120 120,450 450,750 750,1290 1680,2220
to vote for another a

1259
00:39:23,440 --> 00:39:25,510
0,720 720,1110 1110,1170 1170,1560 1560,2070
candidate in the same term.

1260
00:39:26,260 --> 00:39:28,450
0,540 720,1320 1320,1530 1530,1710 1710,2190
Um and but the rafting

1261
00:39:28,450 --> 00:39:29,380
0,300 300,360 360,570 570,720 720,930
maintains a little bit more

1262
00:39:29,380 --> 00:39:31,960
0,690 810,960 960,1230 1230,2040 2340,2580
information and also maintains the

1263
00:39:31,960 --> 00:39:34,090
0,660 720,1140 1140,1650 1800,2040 2040,2130
log on disk or in

1264
00:39:34,090 --> 00:39:35,560
0,450 450,930
persistent state.

1265
00:39:35,560 --> 00:39:37,630
0,840 870,1110 1110,1230 1230,1470 1470,2070
And um the current terms.

1266
00:39:42,820 --> 00:39:43,690
0,360 360,480 480,570 570,750 750,870
And for each one we

1267
00:39:43,690 --> 00:39:45,460
0,360 360,660 660,1050 1050,1110 1110,1770
should ask ourselves a question,

1268
00:39:45,670 --> 00:39:47,180
0,930
um.

1269
00:39:47,210 --> 00:39:49,730
0,960 960,1560 1590,1800 1800,2160 2160,2520
Why maintain a persistent state

1270
00:39:49,730 --> 00:39:51,770
0,270 270,660 660,990 990,1380 1530,2040
because it means that whenever

1271
00:39:51,770 --> 00:39:53,960
0,180 180,660 660,870 870,1320 1320,2190
we update that state whenever

1272
00:39:53,960 --> 00:39:55,220
0,240 240,660 660,750 750,1110 1110,1260
we append an entry to

1273
00:39:55,220 --> 00:39:57,380
0,90 90,630 720,1350 1350,1710 1710,2160
the blog whenever we increment

1274
00:39:57,380 --> 00:39:59,990
0,60 60,690 900,1500 1500,2190 2190,2610
the term or whenever we

1275
00:39:59,990 --> 00:40:01,280
0,240 240,690 690,810 810,1170 1170,1290
change forward we actually have

1276
00:40:01,280 --> 00:40:02,870
0,90 90,300 300,360 360,870 1290,1590
to write to disk, or

1277
00:40:02,870 --> 00:40:04,160
0,120 120,480 480,900 900,1020 1020,1290
to stable storage and stable

1278
00:40:04,160 --> 00:40:06,230
0,360 360,480 480,1260 1440,1590 1590,2070
storage is expensive and so,

1279
00:40:06,410 --> 00:40:07,760
0,240 240,420 420,660 660,1170 1170,1350
um, it's very likely the

1280
00:40:07,760 --> 00:40:11,180
0,870 870,1500 1650,2250 2490,3150 3150,3420
example the the writing or

1281
00:40:11,180 --> 00:40:12,260
0,150 150,420 420,780 780,900 900,1080
to stable storage could be

1282
00:40:12,260 --> 00:40:14,120
0,390 720,1080 1080,1290 1290,1380 1380,1860
the could become a bottleneck.

1283
00:40:15,800 --> 00:40:16,730
0,330 330,510 510,630 630,810 810,930
So we're only talking about

1284
00:40:16,730 --> 00:40:18,200
0,450 450,540 540,600 600,990 990,1470
34, so I'm going program

1285
00:40:18,200 --> 00:40:19,370
0,240 270,750 750,930 930,1080 1080,1170
but let's talk about the

1286
00:40:19,370 --> 00:40:20,810
0,450 450,900 900,1080 1080,1170 1170,1440
walk, why does the log

1287
00:40:20,810 --> 00:40:21,620
0,150 150,240 240,420 420,660 660,810
have to be written to

1288
00:40:21,620 --> 00:40:23,180
0,420 420,1080
persistent storage.

1289
00:40:24,580 --> 00:40:26,320
0,240 240,390 390,1200
Can we reintegrate.

1290
00:40:38,760 --> 00:40:39,480
0,240 240,360 360,450 450,690 690,720
Another way, you've got a

1291
00:40:39,480 --> 00:40:40,650
0,330 330,510 510,690 690,930 930,1170
question let's say we don't

1292
00:40:40,650 --> 00:40:41,610
0,180 180,300 300,420 420,660 660,960
try to use table storage,

1293
00:40:41,610 --> 00:40:42,960
0,180 180,300 300,810
what we break.

1294
00:40:55,300 --> 00:40:57,820
0,990 990,1140 1140,1350 1350,1530 1530,2520
Yeah, if someone needed to

1295
00:40:57,940 --> 00:40:58,960
0,60 60,300 300,570 570,690 690,1020
do to answer this question

1296
00:40:58,960 --> 00:40:59,800
0,210 210,420 420,510 510,780 780,840
which you could lose the

1297
00:40:59,800 --> 00:41:00,850
0,360 360,450 450,510 510,810 810,1050
majority on the committee write

1298
00:41:00,850 --> 00:41:02,300
0,480 510,900
entries, right.

1299
00:41:02,420 --> 00:41:05,030
0,510 540,960 960,1020 1020,1740 1980,2610
So here's the scenario a

1300
00:41:05,060 --> 00:41:06,820
0,570 570,1170
we're the.

1301
00:41:06,820 --> 00:41:09,140
0,480 480,1050 1050,1740
Raft replicated the.

1302
00:41:09,230 --> 00:41:11,600
0,960 960,1620 1650,1830 1830,2310 2310,2370
Operation on a majority of

1303
00:41:11,600 --> 00:41:12,720
0,90 90,630
the notes.

1304
00:41:12,780 --> 00:41:14,520
0,420 420,690 690,1440 1440,1560 1560,1740
Um, so somebody you know

1305
00:41:14,550 --> 00:41:16,350
0,420 420,600 600,720 720,1140 1170,1800
majority, no it's actually a

1306
00:41:16,380 --> 00:41:19,020
0,600 630,810 810,1350 1350,1890 1920,2640
committed to actually um delivering

1307
00:41:19,770 --> 00:41:22,050
0,330 330,750 750,1050 1050,1530 1530,2280
have delivered having accepted a

1308
00:41:22,080 --> 00:41:23,540
0,420 420,840
log entry.

1309
00:41:23,570 --> 00:41:25,820
0,300 300,660 660,1200 1230,1890 1920,2250
So the leader, um sees

1310
00:41:25,820 --> 00:41:28,010
0,120 120,810 1020,1470 1470,1740 1740,2190
the commitments it um delivers

1311
00:41:28,010 --> 00:41:29,180
0,90 90,420 420,570 570,660 660,1170
the message when their operation

1312
00:41:29,180 --> 00:41:30,170
0,150 150,240 240,570 570,870 870,990
on the applied channel to

1313
00:41:30,170 --> 00:41:32,600
0,90 90,660 840,1560 1560,2340 2340,2430
the surface serves executes the

1314
00:41:32,600 --> 00:41:34,340
0,720 870,1110 1110,1320 1320,1410 1410,1740
operation and lets the client

1315
00:41:34,340 --> 00:41:36,020
0,330 330,450 450,870 870,1020 1020,1680
know the operation has succeeded.

1316
00:41:37,550 --> 00:41:39,860
0,450 480,960 960,1170 1170,1620 1620,2310
So now go basically exposed

1317
00:41:39,860 --> 00:41:40,700
0,60 60,390 390,510 510,570 570,840
the fact that the sexual

1318
00:41:40,700 --> 00:41:43,250
0,810 810,1110 1110,1620 1620,2040 2070,2550
operation was actually a replicated

1319
00:41:43,250 --> 00:41:44,120
0,60 60,390 390,450 450,780 780,870
the majority of notice to

1320
00:41:44,120 --> 00:41:45,240
0,90 90,600
the client.

1321
00:41:45,390 --> 00:41:47,220
0,270 270,810 870,1140 1140,1320 1320,1830
And so if we're not

1322
00:41:47,220 --> 00:41:48,780
0,240 240,360 360,1050 1050,1290 1290,1560
if the followers that actually

1323
00:41:48,780 --> 00:41:50,310
0,570 570,780 780,1110 1110,1320 1320,1530
received that entry did not

1324
00:41:50,310 --> 00:41:51,270
0,120 120,240 240,540 540,750 750,960
put it on put on

1325
00:41:51,270 --> 00:41:53,880
0,540 780,1410 1410,1950 1950,2400 2400,2610
desk a and a so

1326
00:41:53,880 --> 00:41:55,290
0,180 180,420 420,870 900,1290 1290,1410
that when the reboot they

1327
00:41:55,290 --> 00:41:56,760
0,270 270,570 570,780 1170,1380 1380,1470
still have it, um, we

1328
00:41:56,760 --> 00:41:57,930
0,120 120,390 390,690 690,780 780,1170
could run into the case,

1329
00:41:57,930 --> 00:41:59,400
0,180 180,930 930,1080 1080,1200 1200,1470
the exactly that's the answer

1330
00:41:59,400 --> 00:42:00,840
0,60 60,150 150,510 510,1080 1080,1440
in the chat that we

1331
00:42:00,840 --> 00:42:02,430
0,360 360,450 450,1050 1050,1260 1260,1590
lose the majority on committed

1332
00:42:02,430 --> 00:42:03,720
0,360 360,630 630,810 810,1110 1110,1290
entry and that entry will

1333
00:42:03,720 --> 00:42:04,890
0,270 270,360 360,780 780,930 930,1170
not be delivered on the

1334
00:42:04,980 --> 00:42:07,620
0,720 720,1170 1170,1380 1650,1980 1980,2640
remaining replica 's, um to

1335
00:42:07,620 --> 00:42:08,940
0,210 210,780 780,1110 1110,1230 1230,1320
the surface and so the

1336
00:42:08,940 --> 00:42:10,350
0,450 450,540 540,720 720,990 990,1410
client will see something strange

1337
00:42:10,350 --> 00:42:11,460
0,420 480,660 660,900 900,1020 1020,1110
where it sees that an

1338
00:42:11,460 --> 00:42:12,660
0,420 420,540 540,660 660,930 930,1200
operation that it did actually

1339
00:42:12,660 --> 00:42:14,310
0,360 720,810 810,1020 1020,1140 1140,1650
happen a little bit later

1340
00:42:14,400 --> 00:42:16,110
0,330 330,510 510,1020 1110,1200 1200,1710
actually goes into the operation

1341
00:42:16,110 --> 00:42:17,180
0,330 330,720
hasn't happened.

1342
00:42:17,700 --> 00:42:18,450
0,150 150,330 330,420 420,690 690,750
And so it actually is

1343
00:42:18,450 --> 00:42:19,740
0,450 450,600 600,750 750,1080 1080,1290
important that this actually isn't

1344
00:42:19,740 --> 00:42:21,900
0,330 330,780 780,1080 1080,1410 1410,2160
stable storage, we basically promised

1345
00:42:21,900 --> 00:42:23,980
0,120 120,660 690,930 930,1410
the leader to commit.

1346
00:42:28,490 --> 00:42:29,540
0,180 180,240 240,630 630,870 870,1050
And we cannot back out

1347
00:42:29,540 --> 00:42:30,820
0,90 90,240 240,780
of that promise.

1348
00:42:33,420 --> 00:42:34,440
0,540
Good.

1349
00:42:34,930 --> 00:42:36,600
0,270 270,630 630,810 810,1170
Any questions about this.

1350
00:42:43,660 --> 00:42:45,370
0,240 240,330 330,1020 1290,1620 1620,1710
Why do we need to

1351
00:42:45,370 --> 00:42:46,900
0,270 270,330 330,600 600,990 1140,1530
remember the current term for

1352
00:42:46,900 --> 00:42:48,100
0,180 180,480 480,720 720,990 990,1200
on disk one it does

1353
00:42:48,100 --> 00:42:48,880
0,180 180,300 300,390 390,480 480,780
not need to be stored

1354
00:42:48,880 --> 00:42:49,900
0,480
stably.

1355
00:42:53,020 --> 00:42:55,340
0,300 300,810 810,990 990,1770
A well the term.

1356
00:42:55,370 --> 00:42:56,580
0,630
I'm.

1357
00:42:57,320 --> 00:42:58,310
0,240 240,480 480,600 600,660 660,990
You vote for a different

1358
00:42:58,310 --> 00:42:59,450
0,300 300,450 450,660 660,990 990,1140
person in every term, so

1359
00:42:59,450 --> 00:43:00,410
0,120 120,240 240,570 570,720 720,960
if you don't keep track

1360
00:43:00,410 --> 00:43:01,160
0,60 60,210 210,420 420,510 510,750
of what term it is

1361
00:43:01,160 --> 00:43:02,720
0,240 240,360 360,630 630,1140 1410,1560
then you don't really you

1362
00:43:02,720 --> 00:43:03,830
0,270 300,720 720,840 840,1020 1020,1110
don't actually know who you

1363
00:43:03,830 --> 00:43:05,660
0,360 360,600 600,930 960,1350 1380,1830
voted for right yeah exactly

1364
00:43:05,660 --> 00:43:06,860
0,120 120,690 690,780 780,1020 1020,1200
you know you voted for

1365
00:43:06,860 --> 00:43:08,330
0,180 180,390 390,810 810,1170 1170,1470
that's one problem also current

1366
00:43:08,330 --> 00:43:09,380
0,330 330,630 630,810 810,900 900,1050
terms always have to go

1367
00:43:09,380 --> 00:43:11,210
0,300 690,930 930,1320 1320,1470 1470,1830
up, you cannot go down

1368
00:43:11,210 --> 00:43:12,830
0,120 120,600 870,1380 1380,1500 1500,1620
in term because you're going

1369
00:43:12,830 --> 00:43:14,270
0,60 60,390 390,690 690,840 840,1440
to use that to detect

1370
00:43:14,270 --> 00:43:16,640
0,210 210,570 570,1050 1380,1860 1860,2370
our PCs from state leaders

1371
00:43:16,640 --> 00:43:18,740
0,180 180,1080 1080,1740
and stale candidates.

1372
00:43:19,790 --> 00:43:20,540
0,180 180,300 300,510 510,660 660,750
But it always has to

1373
00:43:20,540 --> 00:43:21,600
0,150 150,480
go up.

1374
00:43:30,690 --> 00:43:31,840
0,630
Okay.

1375
00:43:34,550 --> 00:43:36,600
0,240 240,570 570,810 810,1560
Any questions about persistence.

1376
00:43:45,360 --> 00:43:51,630
0,3570 4380,4740 4740,5190 5310,5910 5910,6270
Yeah, which is more about

1377
00:43:51,630 --> 00:43:52,470
0,90 90,240 240,360 360,600 600,840
the way you laid out

1378
00:43:52,470 --> 00:43:54,090
0,480 480,1020 1050,1230 1230,1410 1410,1620
stuff but you say there's

1379
00:43:54,090 --> 00:43:56,670
0,180 180,780 780,1230 1470,1530 1800,2580
two strategies right they need

1380
00:43:56,670 --> 00:43:57,860
0,90 90,750
a log.

1381
00:43:57,990 --> 00:43:59,820
0,570 570,810 810,1290 1290,1590 1590,1830
And a starting from a

1382
00:43:59,820 --> 00:44:04,080
0,660 660,1440 1890,2850 3360,3570 3570,4260
persistent state, yeah and so

1383
00:44:04,200 --> 00:44:05,850
0,150 150,540 1200,1350 1350,1530 1530,1650
I mean the way you

1384
00:44:05,850 --> 00:44:07,560
0,570 570,930 930,1080 1080,1200 1200,1710
describe starting from a persistent

1385
00:44:07,560 --> 00:44:08,740
0,690
state.

1386
00:44:08,770 --> 00:44:10,040
0,750
OH.

1387
00:44:11,030 --> 00:44:12,700
0,150 150,480 510,1050
Do you like.

1388
00:44:13,440 --> 00:44:15,120
0,150 150,540 540,1230
Do you are.

1389
00:44:15,730 --> 00:44:17,920
0,960 990,1590
Replay like.

1390
00:44:18,600 --> 00:44:20,400
0,810 840,1050 1050,1350 1350,1500 1500,1800
Like I guess it doesn't

1391
00:44:20,400 --> 00:44:21,540
0,180 180,270 270,420 420,870 870,1140
say in this slide like

1392
00:44:21,540 --> 00:44:23,130
0,270 270,480 480,810 990,1440 1440,1590
if you have does that

1393
00:44:23,130 --> 00:44:24,990
0,420 420,630 630,930 930,1170 1170,1860
assume you also have like

1394
00:44:25,020 --> 00:44:28,100
0,420 720,1740 1800,2070 2070,2550
a snapshot of a.

1395
00:44:28,100 --> 00:44:30,050
0,600 1080,1200 1200,1350 1350,1770 1770,1950
Obviously I have not talked

1396
00:44:30,050 --> 00:44:31,280
0,210 210,630 630,750 750,930 930,1230
about snapshots at all yet

1397
00:44:31,310 --> 00:44:32,180
0,210 210,360 360,570 570,780 780,870
which we'll talk about in

1398
00:44:32,180 --> 00:44:33,470
0,30 30,480 510,720 720,1230 1230,1290
a second it's actually the

1399
00:44:33,470 --> 00:44:35,080
0,420 450,1080
next topic.

1400
00:44:35,080 --> 00:44:36,700
0,270 270,750 750,960 960,1260 1260,1620
Okay, but the point is

1401
00:44:36,820 --> 00:44:38,680
0,360 390,510 510,720 720,1260 1260,1860
OK, the shoe strategy after

1402
00:44:38,680 --> 00:44:40,390
0,150 150,540 540,1140 1170,1500 1500,1710
a note crashes there's two

1403
00:44:40,390 --> 00:44:41,830
0,360 360,570 570,900 900,1080 1080,1440
ways to treat that note

1404
00:44:41,920 --> 00:44:42,940
0,300 300,450 450,480 480,840 840,1020
one has a complete new

1405
00:44:42,940 --> 00:44:44,380
0,480 510,690 690,930 930,1350 1350,1440
note that never existed in

1406
00:44:44,380 --> 00:44:46,330
0,60 60,600 750,1320 1710,1860 1860,1950
the system ever and so

1407
00:44:46,330 --> 00:44:48,040
0,120 120,180 180,390 390,720 720,1710
when it comes up you

1408
00:44:48,040 --> 00:44:49,450
0,420 420,780 780,870 870,930 930,1410
you added to the cluster

1409
00:44:49,450 --> 00:44:50,290
0,330 330,480 480,600 600,720 720,840
as if it's in your

1410
00:44:50,290 --> 00:44:51,520
0,300 300,450 450,780 780,870 870,1230
news, so basically the cluster

1411
00:44:51,520 --> 00:44:52,640
0,270 270,690
goes from.

1412
00:44:52,830 --> 00:44:54,210
0,150 150,480 810,1170 1170,1320 1320,1380
You know, let's say you

1413
00:44:54,210 --> 00:44:55,590
0,240 240,330 330,600 600,1110 1140,1380
started with seven nodes, one

1414
00:44:55,590 --> 00:44:56,790
0,180 180,690 690,780 780,1080 1080,1200
guy crashes the cluster has

1415
00:44:56,790 --> 00:44:58,530
0,270 270,900 1050,1200 1200,1380 1380,1740
six notes, it just happily

1416
00:44:58,530 --> 00:44:59,730
0,570 570,660 660,780 780,1140 1140,1200
pursuits, you know, whatever the

1417
00:44:59,730 --> 00:45:01,380
0,180 180,480 480,570 570,750 750,1650
other nodes do their application

1418
00:45:01,380 --> 00:45:02,010
0,210 210,330 330,420 420,570 570,630
and all that kind of

1419
00:45:02,010 --> 00:45:04,260
0,420 570,780 780,1290 1410,1920 1920,2250
stuff and then the second

1420
00:45:04,260 --> 00:45:05,850
0,330 330,840 840,1050 1050,1290 1290,1590
node actually comes back up.

1421
00:45:06,360 --> 00:45:07,710
0,390 390,540 540,720 720,870 870,1350
And so there's two ways

1422
00:45:07,710 --> 00:45:09,570
0,180 180,630 660,1050 1050,1560 1560,1860
you know then joint one

1423
00:45:09,570 --> 00:45:10,380
0,180 180,270 270,360 360,540 540,810
way is to say like

1424
00:45:10,380 --> 00:45:11,610
0,360 390,540 540,690 690,960 960,1230
well I just forget everything

1425
00:45:11,610 --> 00:45:14,250
0,90 90,360 360,810 990,2400 2400,2640
I did ever I'll join

1426
00:45:14,250 --> 00:45:15,390
0,90 90,420 420,780 780,1050 1050,1140
the cluster again and the

1427
00:45:15,390 --> 00:45:16,350
0,180 180,420 420,630 630,750 750,960
other six notes will bring

1428
00:45:16,350 --> 00:45:17,220
0,90 90,210 210,270 270,600 720,870
me up to date and

1429
00:45:17,220 --> 00:45:18,210
0,270 270,480 480,570 570,900 900,990
they'll send the log to

1430
00:45:18,210 --> 00:45:20,280
0,360 360,540 540,930 930,1350 1350,2070
me and I'll redo operations.

1431
00:45:21,700 --> 00:45:23,170
0,510 510,720 720,810 810,900 900,1470
And that can be costly,

1432
00:45:23,230 --> 00:45:24,840
0,300 300,420 420,1080
even with snapshots.

1433
00:45:25,080 --> 00:45:26,730
0,480 630,780 780,1080 1080,1560 1560,1650
So the second strategy is

1434
00:45:26,730 --> 00:45:28,020
0,120 120,330 330,690 1050,1200 1200,1290
to say well you know

1435
00:45:28,020 --> 00:45:29,340
0,330 330,450 450,780 780,1050 1050,1320
if the same note seven

1436
00:45:29,340 --> 00:45:30,720
0,180 180,420 420,570 570,990 1200,1380
comes back up again, it

1437
00:45:30,720 --> 00:45:32,610
0,240 240,330 330,1170 1200,1470 1470,1890
tries to reintegrate with its

1438
00:45:32,610 --> 00:45:34,230
0,510 510,720 720,1230 1230,1530 1530,1620
with its persistent state that

1439
00:45:34,230 --> 00:45:35,300
0,120 120,630
it has.

1440
00:45:35,960 --> 00:45:37,790
0,480 690,1140 1140,1350 1350,1740 1740,1830
Um, you know basically the

1441
00:45:37,790 --> 00:45:39,230
0,270 270,450 450,570 570,720 720,1440
hope that you know example

1442
00:45:39,230 --> 00:45:40,490
0,150 150,330 330,600 600,870 870,1260
you went down for a

1443
00:45:40,490 --> 00:45:42,080
0,240 240,870 870,930 930,1170 1170,1590
couple nanoseconds or micro seconds

1444
00:45:42,080 --> 00:45:43,730
0,30 30,630 870,1170 1170,1500 1500,1650
or milliseconds, there's basically not

1445
00:45:43,730 --> 00:45:44,570
0,180 180,480 480,630 630,690 690,840
much catching up to do

1446
00:45:44,570 --> 00:45:45,770
0,90 90,300 300,630 630,1020 1020,1200
at all, because our he

1447
00:45:45,770 --> 00:45:47,180
0,300 300,450 450,540 540,930
has on the state.

1448
00:45:48,700 --> 00:45:50,760
0,570 720,990 990,1500
Um, but it.

1449
00:45:50,760 --> 00:45:52,160
0,210 210,780
Would like.

1450
00:45:52,160 --> 00:45:54,140
0,630 660,1110 1260,1740 1740,1860 1860,1980
Um the aside from the

1451
00:45:54,140 --> 00:45:55,520
0,390 390,600 600,900 900,1080 1080,1380
log, there's also a state

1452
00:45:55,520 --> 00:45:56,600
0,390 390,600 600,720 720,900 900,1080
machine right that you've been

1453
00:45:56,600 --> 00:45:58,490
0,300 480,720 720,1080 1080,1560 1560,1890
like a blind changes too,

1454
00:45:58,520 --> 00:46:00,590
0,510 510,1050 1050,1350 1350,1770 1770,2070
yeah yeah, so yeah let's

1455
00:46:00,590 --> 00:46:01,640
0,240 240,450 450,690 690,870 870,1050
talk about that so there's

1456
00:46:01,640 --> 00:46:02,810
0,210 210,390 390,480 480,720 720,1170
nothing that's the next topic.

1457
00:46:05,610 --> 00:46:07,830
0,210 210,390 390,1110 1110,1530 1770,2220
I think yeah so now

1458
00:46:07,830 --> 00:46:09,840
0,360 360,540 540,840 840,1440
what about service recovery.

1459
00:46:16,120 --> 00:46:17,440
0,480 480,630 630,930 930,1050 1050,1320
Sorry I actually have another

1460
00:46:17,440 --> 00:46:20,440
0,390 390,510 510,1410 1770,2190 2490,3000
question on persistence, yep, um,

1461
00:46:20,500 --> 00:46:22,630
0,780 870,1260 1260,1380 1380,1710 1710,2130
when does the server decide

1462
00:46:22,630 --> 00:46:23,900
0,90 90,780
to persist.

1463
00:46:24,170 --> 00:46:26,630
0,510 510,900 900,1110 1110,1560 1800,2460
A good great question, um,

1464
00:46:26,630 --> 00:46:27,470
0,120 120,180 180,300 300,390 390,840
you know what you think.

1465
00:46:28,790 --> 00:46:29,630
0,210 210,390 390,480 480,660 660,840
I'm sure you've thought about

1466
00:46:29,630 --> 00:46:30,560
0,270
this.

1467
00:46:33,190 --> 00:46:35,260
0,120 120,600 630,720 720,1080 1080,2070
I mean I think a

1468
00:46:35,260 --> 00:46:37,000
0,360 360,690 690,990 1200,1440 1440,1740
simple answer would be every

1469
00:46:37,000 --> 00:46:38,980
0,420 420,660 660,780 780,1350 1380,1980
time one of these variables

1470
00:46:38,980 --> 00:46:41,500
0,600 600,810 810,1140 1470,2010 2010,2520
changes but that seems like

1471
00:46:41,770 --> 00:46:43,330
0,180 180,450 450,1230 1230,1440 1440,1560
a very costly thing to

1472
00:46:43,330 --> 00:46:45,070
0,390 750,960 960,1320 1320,1590 1590,1740
do I I think that

1473
00:46:45,070 --> 00:46:46,380
0,150 150,210 210,480 480,840
is the correct answer.

1474
00:46:46,770 --> 00:46:47,850
0,270 270,690 690,870 870,960 960,1080
A whenever one of these

1475
00:46:47,850 --> 00:46:49,560
0,330 330,720 720,900 900,1410 1410,1710
variable changes you actually a

1476
00:46:49,560 --> 00:46:51,090
0,300 300,690 690,870 870,1230 1260,1530
flush to a desk or

1477
00:46:51,090 --> 00:46:52,380
0,330 330,450 450,870 870,1020 1020,1290
write to in our case

1478
00:46:52,380 --> 00:46:54,150
0,270 270,720 720,1200 1200,1500 1500,1770
correct in labs you right

1479
00:46:54,150 --> 00:46:56,780
0,480 540,690 690,1290 1470,2130
to the persistent module.

1480
00:46:57,960 --> 00:46:59,490
0,270 270,720 990,1170 1170,1230 1230,1530
Okay, and so for example

1481
00:46:59,490 --> 00:47:00,870
0,120 120,210 210,810 840,960 960,1380
when the leader you know

1482
00:47:00,870 --> 00:47:02,370
0,780 780,870 870,1290 1290,1380 1380,1500
accepts an entry, you know

1483
00:47:02,370 --> 00:47:04,470
0,210 210,750 1110,1530 1530,1890 1890,2100
through start and offensive to

1484
00:47:04,470 --> 00:47:06,540
0,330 330,1050 1050,1350 1350,1860 1890,2070
its local its log it

1485
00:47:06,540 --> 00:47:08,310
0,210 210,390 390,480 480,780 780,1770
actually has to persist zat

1486
00:47:08,310 --> 00:47:09,220
0,390
entry.

1487
00:47:13,480 --> 00:47:14,680
0,360 360,510 510,780 780,1050 1050,1200
Right, and so does the

1488
00:47:14,680 --> 00:47:17,800
0,1050 1080,1380 1380,2310 2340,2880 2880,3120
persisting work incrementally so it

1489
00:47:17,800 --> 00:47:18,580
0,300 300,540 540,630 630,720 720,780
like once you get a

1490
00:47:18,580 --> 00:47:20,860
0,180 180,450 450,1020 1260,1680 1680,2280
new log entry, you append.

1491
00:47:21,440 --> 00:47:22,850
0,210 210,540 810,990 990,1050 1050,1410
Or to take the entire

1492
00:47:22,850 --> 00:47:23,930
0,240 240,450 450,690 690,870 870,1080
state and like we buy

1493
00:47:23,930 --> 00:47:25,430
0,330 330,450 450,900 900,1200 1200,1500
into the fight but OK

1494
00:47:25,430 --> 00:47:27,290
0,420 420,660 660,1020 1020,1260 1260,1860
in real life you repent

1495
00:47:27,320 --> 00:47:28,280
0,270 270,450 450,570 570,720 720,960
right then you would not

1496
00:47:28,280 --> 00:47:29,390
0,360 360,420 420,600 600,990 990,1110
rewrite the whole log, you

1497
00:47:29,390 --> 00:47:30,620
0,120 120,270 270,660 660,930 930,1230
would just repent one entry

1498
00:47:30,620 --> 00:47:31,340
0,120 120,210 210,480 480,570 570,720
to the log and that's

1499
00:47:31,340 --> 00:47:32,240
0,240 240,420 420,510 510,600 600,900
actually one of the reasons

1500
00:47:32,240 --> 00:47:34,430
0,120 120,480 480,1020 1260,1800 1800,2190
that launcher cool, um, because

1501
00:47:34,430 --> 00:47:35,420
0,120 120,210 210,360 360,480 480,990
you know you can just

1502
00:47:35,540 --> 00:47:37,220
0,330 330,420 420,540 540,930 1110,1680
append at the end and

1503
00:47:37,250 --> 00:47:38,480
0,780
incrementally.

1504
00:47:38,480 --> 00:47:41,300
0,510 750,1050 1050,1230 1230,2730 2730,2820
Um, in a rockin, the

1505
00:47:41,300 --> 00:47:42,980
0,180 180,390 390,510 510,960 990,1680
whole thing is fake, the

1506
00:47:43,010 --> 00:47:44,780
0,420 420,660 660,900 900,1170 1170,1770
persistent actually doesn't really persist

1507
00:47:45,080 --> 00:47:47,510
0,1080 1080,1530 1560,2160 2160,2310 2310,2430
a, um, you know it

1508
00:47:47,510 --> 00:47:48,830
0,210 210,330 330,630 630,1110 1110,1320
keeps the object around in

1509
00:47:48,830 --> 00:47:51,680
0,930 1050,2010 2010,2280 2280,2670 2670,2850
between crashes because crashes are

1510
00:47:51,680 --> 00:47:52,760
0,330 330,510 510,600 600,960 960,1080
also sort of fake you

1511
00:47:52,760 --> 00:47:54,650
0,120 120,360 360,690 690,1320 1410,1890
know that Esther basically stops

1512
00:47:54,650 --> 00:47:56,450
0,480 480,1080 1080,1410 1410,1530 1530,1800
notes restart them and basically

1513
00:47:56,450 --> 00:47:57,620
0,240 240,480 480,600 600,750 750,1170
gives them the new state.

1514
00:47:59,840 --> 00:48:00,920
0,210 210,330 330,390 390,600 600,1080
But in the real system

1515
00:48:00,950 --> 00:48:02,780
0,450 450,660 660,780 780,1260
a you would depend.

1516
00:48:02,970 --> 00:48:03,660
0,150 150,270 270,480 480,600 600,690
So the log would be

1517
00:48:03,660 --> 00:48:04,950
0,120 120,780 810,990 990,1080 1080,1290
your file, and you would

1518
00:48:04,950 --> 00:48:05,640
0,150 150,240 240,480 480,600 600,690
end an entry to the

1519
00:48:05,640 --> 00:48:06,580
0,390
file.

1520
00:48:07,500 --> 00:48:08,740
0,210 210,510
Thank you.

1521
00:48:14,260 --> 00:48:15,460
0,210 210,660 690,900 900,1050 1050,1200
And yes, you know we

1522
00:48:15,460 --> 00:48:16,660
0,420 420,510 510,690 690,900 900,1200
actually you will have to

1523
00:48:16,660 --> 00:48:18,400
0,600 630,900 900,1350 1350,1650 1650,1740
a real system, if you

1524
00:48:18,400 --> 00:48:19,660
0,240 240,330 330,600 600,990 990,1260
append the log entry, your

1525
00:48:19,660 --> 00:48:20,980
0,270 270,510 510,750 750,1080 1080,1320
first penta log entering then

1526
00:48:20,980 --> 00:48:23,170
0,120 120,690 900,1050 1050,1710 1710,2190
your response so independent trees,

1527
00:48:23,350 --> 00:48:24,550
0,120 120,240 240,480 480,570 570,1200
if you update the log

1528
00:48:24,760 --> 00:48:27,130
0,780 1080,1230 1230,1410 1410,2160 2160,2370
independent, so if entries on

1529
00:48:27,130 --> 00:48:27,980
0,360
the.

1530
00:48:27,980 --> 00:48:29,750
0,810 840,1350 1350,1410 1410,1560 1560,1770
Follower receives a new set

1531
00:48:29,750 --> 00:48:31,130
0,90 90,360 360,840 840,1020 1020,1380
of log entries, it upends

1532
00:48:31,130 --> 00:48:33,170
0,150 150,570 570,1020 1050,1680 1680,2040
them to its local assistant

1533
00:48:33,170 --> 00:48:34,490
0,510 570,780 780,1080 1080,1200 1200,1320
log and then it can

1534
00:48:34,490 --> 00:48:36,320
0,480 480,780 780,1290 1440,1710 1710,1830
respond because you would be

1535
00:48:36,320 --> 00:48:38,540
0,450 450,600 600,1080 1080,1770 1770,2220
bad to respond before appending

1536
00:48:38,540 --> 00:48:40,970
0,390 540,1290 1320,1680 1680,2010 2010,2430
because then you might loose,

1537
00:48:40,970 --> 00:48:42,170
0,90 90,210 210,690 960,1110 1110,1200
you know the if you

1538
00:48:42,170 --> 00:48:43,550
0,420 420,660 660,1020 1020,1200 1200,1380
responded before appending you might

1539
00:48:43,550 --> 00:48:44,960
0,60 60,360 360,420 420,930 930,1410
be running a situation where

1540
00:48:45,170 --> 00:48:46,610
0,360 390,810 810,1170 1170,1350 1350,1440
a just before actually the

1541
00:48:46,610 --> 00:48:48,080
0,270 270,450 450,810 810,930 930,1470
actual pen happens your crashes

1542
00:48:48,290 --> 00:48:49,520
0,180 180,420 420,720 720,990 990,1230
and so you actually did

1543
00:48:49,520 --> 00:48:51,710
0,360 360,750 750,990 990,1500 1680,2190
not persist, walk entries and

1544
00:48:51,710 --> 00:48:52,820
0,210 210,330 330,540 540,720 720,1110
so you would you know,

1545
00:48:52,940 --> 00:48:54,830
0,330 330,1080 1080,1200 1200,1530 1530,1890
um, you could lose committed

1546
00:48:54,830 --> 00:48:55,640
0,510
entries.

1547
00:49:00,250 --> 00:49:01,300
0,540
Okay.

1548
00:49:02,620 --> 00:49:04,060
0,210 210,360 360,540 540,930 1020,1440
Okay, so how about service

1549
00:49:04,060 --> 00:49:05,920
0,630 1110,1230 1230,1320 1320,1650 1650,1860
recovery, so the service keeps

1550
00:49:05,920 --> 00:49:07,450
0,120 120,720 720,1380 1410,1530 1530,1530
his own state, um I

1551
00:49:08,170 --> 00:49:09,880
0,690 690,1020 1020,1200 1200,1620 1620,1710
example opry you're implementing a

1552
00:49:09,880 --> 00:49:11,890
0,120 120,510 510,1050 1440,1890 1890,2010
key value store and so

1553
00:49:11,890 --> 00:49:13,390
0,90 90,210 210,540 540,900 900,1500
the key value store maintains,

1554
00:49:13,390 --> 00:49:15,460
0,240 270,990 990,1380 1380,1650 1650,2070
um basically Ash map from

1555
00:49:15,670 --> 00:49:17,800
0,210 210,780 780,1260 1260,1500 1500,2130
a key to a value

1556
00:49:17,950 --> 00:49:19,630
0,270 270,630 630,1140 1170,1590 1590,1680
and you um need to

1557
00:49:19,630 --> 00:49:20,980
0,360 360,570 570,960
replay that state.

1558
00:49:21,160 --> 00:49:22,840
0,240 240,660 870,1500 1500,1620 1620,1680
And again a there are

1559
00:49:22,840 --> 00:49:24,880
0,390 390,870 870,1380 1410,1800 1800,2040
two possible ways of going

1560
00:49:24,880 --> 00:49:27,340
0,300 300,600 990,1290 1290,1920 2010,2460
about it, um one strategy

1561
00:49:27,340 --> 00:49:29,320
0,300 300,420 420,1290 1290,1380 1380,1980
want to replay, the log

1562
00:49:29,350 --> 00:49:30,970
0,150 150,420 420,1020 1020,1170 1170,1620
to actually reconstruct that state.

1563
00:49:34,190 --> 00:49:37,550
0,600 630,1380 1380,1560 1560,2070 2070,3360
So basically if you're a

1564
00:49:37,700 --> 00:49:38,540
0,270 270,330 330,660 660,750 750,840
sort of similar to the

1565
00:49:38,540 --> 00:49:39,830
0,450 450,750 750,870 870,960 960,1290
strategy one on the previous

1566
00:49:39,830 --> 00:49:41,420
0,390 660,810 810,1260 1260,1470 1470,1590
slide, you just take the

1567
00:49:41,420 --> 00:49:43,670
0,540 570,1050 1050,1620 1620,2100 2100,2250
log users, replay all the

1568
00:49:43,670 --> 00:49:44,960
0,330 330,450 450,510 510,960 960,1290
entries in the log and

1569
00:49:45,020 --> 00:49:47,360
0,720 750,1410 1410,1680 1680,2220 2220,2340
shoot basically create exactly the

1570
00:49:47,360 --> 00:49:50,540
0,240 240,780 1140,1980 2310,2700 2700,3180
same state, um, as if

1571
00:49:50,750 --> 00:49:53,330
0,870 870,1080 1080,1650 1680,2460 2460,2580
um as before, because you

1572
00:49:53,330 --> 00:49:55,310
0,270 270,510 510,870 870,1350 1650,1980
know the whole point of

1573
00:49:55,340 --> 00:49:56,870
0,210 210,630 630,870 870,1110 1110,1530
this replicated state machine approach

1574
00:49:56,870 --> 00:49:59,660
0,210 210,570 960,1620 1620,2370 2580,2790
is that, um, the all

1575
00:49:59,660 --> 00:50:00,830
0,90 90,540 540,660 660,1110 1110,1170
the operations are executed in

1576
00:50:00,830 --> 00:50:02,360
0,300 300,840 840,1290 1290,1410 1410,1530
total order operations have no

1577
00:50:02,360 --> 00:50:03,530
0,270 270,720 810,990 990,1080 1080,1170
side effect, so if you

1578
00:50:03,530 --> 00:50:04,610
0,300 300,360 360,420 420,690 690,1080
start in the same stage

1579
00:50:04,610 --> 00:50:06,740
0,180 180,660 900,1470 1470,1620 1620,2130
with nothing, and you replay

1580
00:50:06,740 --> 00:50:07,790
0,150 150,240 240,780 780,900 900,1050
all the operations, you should

1581
00:50:07,790 --> 00:50:08,960
0,150 150,300 300,870 870,960 960,1170
end up exactly the same

1582
00:50:08,960 --> 00:50:10,490
0,450 570,930 930,1140 1140,1350 1350,1530
state, a is any other

1583
00:50:10,490 --> 00:50:11,160
0,390
note.

1584
00:50:12,480 --> 00:50:13,890
0,150 150,270 270,420 420,690 690,1410
And so that's one possible,

1585
00:50:14,100 --> 00:50:15,300
0,450 450,750 750,870 870,1080 1080,1200
um, and so that was

1586
00:50:15,300 --> 00:50:16,500
0,330 330,540 540,690 690,1140 1140,1200
one way to recreate the

1587
00:50:16,500 --> 00:50:17,540
0,480
state.

1588
00:50:24,400 --> 00:50:25,540
0,210 210,270 270,480 480,990 990,1140
And you know obviously this

1589
00:50:25,540 --> 00:50:27,400
0,120 120,720 780,990 990,1170 1170,1860
is expensive, you know if

1590
00:50:27,430 --> 00:50:28,390
0,90 90,420 420,660 660,780 780,960
the surgeon actually has been

1591
00:50:28,390 --> 00:50:30,100
0,720 720,870 870,990 990,1200 1200,1710
running for a couple years

1592
00:50:30,460 --> 00:50:31,720
0,240 240,510 510,930 930,1140 1140,1260
and then you have to

1593
00:50:31,720 --> 00:50:33,250
0,480 480,780 780,1320 1320,1410 1410,1530
replay the logs, you know

1594
00:50:33,250 --> 00:50:34,540
0,270 270,480 480,750 750,840 840,1290
from the beginning of time

1595
00:50:34,540 --> 00:50:35,410
0,60 60,180 180,390 390,480 480,870
you know that is not

1596
00:50:35,410 --> 00:50:36,970
0,180 180,300 300,810 810,990 990,1560
you know so a desirable.

1597
00:50:37,570 --> 00:50:39,370
0,180 180,420 420,810 1080,1410 1410,1800
And so yeah people do

1598
00:50:39,400 --> 00:50:41,200
0,360 360,570 570,990 990,1080 1080,1800
don't really follow a strategy

1599
00:50:41,200 --> 00:50:43,240
0,480 480,990 1110,1560 1560,1710 1710,2040
a one button call, another

1600
00:50:43,240 --> 00:50:44,980
0,600 600,870 870,1080 1080,1350 1350,1740
strategy and we just basically

1601
00:50:44,980 --> 00:50:46,920
0,270 270,780 780,1470
making periodic snapshots.

1602
00:50:47,350 --> 00:50:48,490
0,300 300,540 540,600 600,780 780,1140
And there are two reasons

1603
00:50:48,490 --> 00:50:50,770
0,120 120,300 300,750 1020,1800 1890,2280
for doing that one database

1604
00:50:50,770 --> 00:50:51,940
0,120 120,870 870,930 930,1080 1080,1170
will reconstruct you know the

1605
00:50:51,940 --> 00:50:53,020
0,330 330,570 570,660 660,750 750,1080
service date in the past

1606
00:50:53,020 --> 00:50:54,400
0,510 630,780 780,840 840,1140 1140,1380
manner and the second reason

1607
00:50:54,400 --> 00:50:55,720
0,90 90,210 210,570 570,780 780,1320
to do that is to

1608
00:50:55,840 --> 00:50:57,910
0,660 660,930 930,1410 1410,1980 1980,2070
be able to compact the

1609
00:50:57,910 --> 00:50:59,740
0,510 540,720 720,810 810,1230 1230,1830
law, you know even the

1610
00:50:59,770 --> 00:51:02,440
0,390 390,660 660,1320 1530,2190 2190,2670
raf state itself can be

1611
00:51:03,610 --> 00:51:05,620
0,630 630,900 900,1350 1440,1650 1650,2010
a cut off from the

1612
00:51:05,620 --> 00:51:06,670
0,240 240,450 450,540 540,900 900,1050
front of the prefix can

1613
00:51:06,670 --> 00:51:07,620
0,90 90,270 270,570
be cut off.

1614
00:51:07,830 --> 00:51:09,060
0,240 240,300 300,540 540,1080 1080,1230
And the basic observation is

1615
00:51:09,060 --> 00:51:11,670
0,420 720,1530 1530,1590 1950,2190 2190,2610
that um, if the application

1616
00:51:11,670 --> 00:51:12,570
0,60 60,300 300,420 420,420 420,900
is running for a while,

1617
00:51:12,570 --> 00:51:13,860
0,150 150,390 390,750 780,1200 1200,1290
then it has it the

1618
00:51:13,860 --> 00:51:15,210
0,240 240,570 570,1170 1170,1290 1290,1350
first thousand operations or the

1619
00:51:15,210 --> 00:51:17,790
0,240 240,570 570,1380 1620,2280 2310,2580
first million operations a then

1620
00:51:17,790 --> 00:51:19,680
0,90 90,750 870,1200 1200,1650 1650,1890
the state does constructive debt

1621
00:51:19,680 --> 00:51:20,700
0,420
coins.

1622
00:51:21,420 --> 00:51:24,380
0,630 960,1470 1470,1680 1680,2400
The states will contain.

1623
00:51:26,100 --> 00:51:27,560
0,270 270,900
I'll watch.

1624
00:51:28,180 --> 00:51:30,080
0,270 270,540 540,750 750,1260
No change through AI.

1625
00:51:30,900 --> 00:51:32,280
0,240 240,240 240,810 810,870 870,1380
Where I maybe a thousand

1626
00:51:32,280 --> 00:51:33,780
0,30 30,420 420,810 810,1230 1260,1500
or a million whatever you

1627
00:51:33,780 --> 00:51:36,630
0,360 360,900 1290,1650 1980,2520 2640,2850
whatever you so, um, so

1628
00:51:36,630 --> 00:51:37,650
0,240 240,390 390,480 480,660 660,1020
one way to think about

1629
00:51:37,650 --> 00:51:40,230
0,420 420,840 1080,1710 1710,1920 1920,2580
is that there's a duality

1630
00:51:40,230 --> 00:51:43,920
0,450 450,1020 1050,1860 1860,2670 2940,3690
between state replication and log

1631
00:51:43,920 --> 00:51:47,100
0,540 540,690 690,1320 1410,2100 2490,3180
replication or replay, um the

1632
00:51:47,280 --> 00:51:48,390
0,240 240,360 360,690 690,780 780,1110
you could save the state

1633
00:51:48,390 --> 00:51:49,860
0,270 270,330 330,630 630,1320 1320,1470
after a thousand operations and

1634
00:51:49,860 --> 00:51:50,820
0,210 210,300 300,420 420,870 870,960
then you've got exactly the

1635
00:51:50,820 --> 00:51:52,530
0,270 270,540 540,750 750,1410 1440,1710
same thing as actually {re-applying

1636
00:51:52,530 --> 00:51:55,530
0,540 540,1260 1260,1560 1560,2280 2700,3000
-} redoing, every operation from

1637
00:51:55,530 --> 00:51:56,860
0,360 360,450 450,570 570,1050
zero to the fast.

1638
00:51:57,640 --> 00:51:59,770
0,330 330,780 1050,1350 1350,1620 1620,2130
And so this means that

1639
00:51:59,770 --> 00:52:01,030
0,270 270,510 510,660 660,720 720,1260
once you have a snapshot

1640
00:52:01,030 --> 00:52:02,740
0,150 150,450 450,930 930,1470 1470,1710
you stored snapshots tabling on

1641
00:52:02,740 --> 00:52:05,410
0,510 900,1050 1050,1500 1500,2040 2370,2670
disk in persistent state, you

1642
00:52:05,410 --> 00:52:07,080
0,330 330,630 630,1110
can cut off.

1643
00:52:07,630 --> 00:52:08,620
0,210 210,360 360,750 750,870 870,990
You can log you can

1644
00:52:08,620 --> 00:52:10,140
0,240 240,300 300,870
cut the log.

1645
00:52:12,300 --> 00:52:13,660
0,180 180,390 390,870
Now through I.

1646
00:52:16,790 --> 00:52:17,780
0,150 150,240 240,390 390,810 810,990
And so, this allows you

1647
00:52:17,780 --> 00:52:19,160
0,90 90,780 780,870 870,1260 1260,1380
to control the size of

1648
00:52:19,160 --> 00:52:22,790
0,120 120,540 600,1350 1350,1950 2250,3630
the law basically by periodic

1649
00:52:22,790 --> 00:52:24,350
0,300 300,900 900,990 990,1440 1440,1560
Lee asking the servers to

1650
00:52:24,350 --> 00:52:26,090
0,240 240,420 420,1110 1110,1230 1230,1740
actually take snapshots and then

1651
00:52:26,120 --> 00:52:27,560
0,390 390,690 690,780 780,1050 1050,1440
deserves telling the rap library

1652
00:52:27,560 --> 00:52:28,910
0,300 300,480 480,750 750,810 810,1350
yes I've taken a snapshot

1653
00:52:28,910 --> 00:52:30,380
0,210 210,720 750,1080 1080,1350 1350,1470
through I then raf can

1654
00:52:30,380 --> 00:52:31,640
0,240 240,450 450,810 870,1080 1080,1260
say okay good I just

1655
00:52:31,640 --> 00:52:32,630
0,90 90,180 180,300 300,390 390,990
know we have to remember

1656
00:52:32,630 --> 00:52:34,430
0,420 420,780 780,1110 1440,1650 1650,1800
anything from I so, um

1657
00:52:34,430 --> 00:52:35,380
0,510
july.

1658
00:52:35,580 --> 00:52:36,450
0,210 210,390 390,570 570,630 630,870
Um that means of course

1659
00:52:36,450 --> 00:52:37,440
0,90 90,180 180,720 720,900 900,990
that the snapshot has to

1660
00:52:37,440 --> 00:52:38,850
0,90 90,420 420,510 510,810 810,1410
be stored on stable storage.

1661
00:52:45,050 --> 00:52:45,740
0,120 120,210 210,330 330,540 540,690
And this is also good

1662
00:52:45,740 --> 00:52:47,030
0,120 120,630 630,990 990,1170 1170,1290
for recovery, correct and so

1663
00:52:47,030 --> 00:52:48,110
0,180 180,390 390,510 510,870 870,1080
it makes our recovery scheme

1664
00:52:48,110 --> 00:52:49,310
0,300 300,450 450,930 930,1050 1050,1200
slightly more complicated than I

1665
00:52:49,310 --> 00:52:50,540
0,270 270,660 660,720 720,810 810,1230
just described in the previous

1666
00:52:50,540 --> 00:52:51,500
0,360 360,600 600,690 690,900 900,960
like what it has to

1667
00:52:51,500 --> 00:52:53,780
0,360 360,600 600,990 1380,1770 1770,2280
happen is that a when

1668
00:52:53,810 --> 00:52:55,880
0,330 360,1170 1230,1500 1500,1740 1740,2070
a follower comes back up

1669
00:52:55,910 --> 00:52:58,580
0,420 420,540 540,930 1050,1740 2070,2670
after a quick reboot a

1670
00:52:58,580 --> 00:53:00,440
0,390 420,930 930,1080 1080,1500 1500,1860
it loads its persistent state,

1671
00:53:00,440 --> 00:53:01,340
0,120 120,210 210,360 360,810 810,900
you know that includes you

1672
00:53:01,340 --> 00:53:02,420
0,120 120,240 240,660 660,960 960,1080
know the persistent state that

1673
00:53:02,420 --> 00:53:03,290
0,90 90,420 420,690 690,780 780,870
we talked about on the

1674
00:53:03,290 --> 00:53:05,060
0,300 300,660 660,840 840,1050 1050,1770
previous life knows this information.

1675
00:53:05,600 --> 00:53:08,210
0,540 780,1050 1050,1530 1530,1950 1950,2610
Um, but also its last

1676
00:53:08,210 --> 00:53:10,760
0,120 120,630 630,1440 1830,2400 2400,2550
you know snapshot installs, that

1677
00:53:10,760 --> 00:53:12,830
0,540 570,1140 1140,1440 1440,1590 1590,2070
last basically loads that snapshot

1678
00:53:12,830 --> 00:53:14,240
0,240 240,540 540,630 630,990 990,1410
into memory, the surface dust.

1679
00:53:14,720 --> 00:53:16,550
0,150 150,930 930,1050 1050,1350 1350,1830
And then we can replay

1680
00:53:16,550 --> 00:53:18,050
0,300 300,630 630,1020 1020,1110 1110,1500
any log entries to basically

1681
00:53:18,050 --> 00:53:19,100
0,270 270,360 360,870 870,960 960,1050
bring the follower up to

1682
00:53:19,100 --> 00:53:20,020
0,360
date.

1683
00:53:20,630 --> 00:53:21,940
0,780
Okay.

1684
00:53:29,350 --> 00:53:30,960
0,270 270,600 600,780 780,1110
Any questions about this.

1685
00:53:31,560 --> 00:53:34,440
0,420 420,960 1440,1860 1860,2340 2340,2880
Um I have one question

1686
00:53:34,440 --> 00:53:35,370
0,330 330,570 570,720 720,810 810,930
I'm not sure if I'm

1687
00:53:35,370 --> 00:53:36,780
0,240 270,690 690,870 870,1140 1140,1410
gonna be able phrase super

1688
00:53:36,780 --> 00:53:39,740
0,570 870,1710 1860,2070 2070,2460
clearly, um I guess.

1689
00:53:40,060 --> 00:53:41,560
0,210 210,300 300,480 480,720 720,1500
Like I was under impression,

1690
00:53:41,560 --> 00:53:42,880
0,180 180,300 300,480 480,750 930,1320
so I guess like does

1691
00:53:42,880 --> 00:53:44,860
0,270 270,660 840,1350 1350,1680 1680,1980
this not break some layer

1692
00:53:44,860 --> 00:53:47,590
0,60 60,1260 1740,1950 1950,2280 2280,2730
of abstraction that previously existed

1693
00:53:47,590 --> 00:53:49,840
0,660 690,1200 1230,1860 1860,1980 1980,2250
between the application on top

1694
00:53:49,840 --> 00:53:51,520
0,120 120,720 780,990 990,1290 1290,1680
of rafts and raft itself,

1695
00:53:51,520 --> 00:53:52,450
0,120 120,210 210,450 450,810 810,930
for it now needs to

1696
00:53:52,450 --> 00:53:54,730
0,870 900,1080 1080,1170 1170,1530 1530,2280
understand how the state machine

1697
00:53:54,820 --> 00:53:56,050
0,240 240,390 390,480 480,780 780,1230
like how to apply commands

1698
00:53:56,050 --> 00:53:57,040
0,60 60,150 150,420 420,750 750,990
to the state machine instead

1699
00:53:57,040 --> 00:53:58,870
0,90 90,390 390,960 960,1290 1290,1830
of just like giving commands

1700
00:53:58,870 --> 00:54:01,390
0,300 300,570 570,1320 1500,1980 1980,2520
to some external state machine,

1701
00:54:01,570 --> 00:54:09,190
0,1680 1710,2190 2190,2760 2790,6330 6570,7620
yeah great occupation, Zheng a.

1702
00:54:10,140 --> 00:54:10,710
0,120 120,240 240,330 330,480 480,570
We have to play to

1703
00:54:10,710 --> 00:54:12,300
0,570 570,870 870,1170 1170,1530 1530,1590
get the raft library in

1704
00:54:12,300 --> 00:54:13,460
0,90 90,660
the surface.

1705
00:54:13,520 --> 00:54:15,110
0,720 750,990 990,1350 1350,1410 1410,1590
A because first of all

1706
00:54:15,110 --> 00:54:16,580
0,90 90,390 390,750 750,1200 1200,1470
the service lies about it

1707
00:54:16,580 --> 00:54:17,930
0,210 210,270 270,510 510,990 990,1350
gives the wrong information about

1708
00:54:17,930 --> 00:54:18,800
0,180 180,540 540,690 690,810 810,870
how far it has to

1709
00:54:18,800 --> 00:54:21,050
0,390 390,1140 1140,1470 1470,1830 1830,2250
apply then we getting consistent

1710
00:54:21,050 --> 00:54:22,190
0,330 330,480 480,720 720,870 870,1140
results, but anyway so we

1711
00:54:22,400 --> 00:54:24,020
0,330 330,690 690,1080 1080,1470 1470,1620
don't assume wires anyway but

1712
00:54:24,020 --> 00:54:25,910
0,180 180,630 630,690 690,1290 1410,1890
it's clearly the case that

1713
00:54:25,910 --> 00:54:28,400
0,510 660,1230 1230,2010 2040,2280 2280,2490
the surface and red light,

1714
00:54:28,400 --> 00:54:29,940
0,150 150,330 330,420 420,1140
we have to cooperate.

1715
00:54:30,240 --> 00:54:31,800
0,750 750,1020 1020,1260 1260,1350 1350,1560
And, um, you can go

1716
00:54:31,800 --> 00:54:34,230
0,450 540,840 840,1320 1320,2040 2280,2430
with an abstraction violation, um

1717
00:54:34,230 --> 00:54:36,540
0,1290 1320,1650 1650,1800 1800,2100 2100,2310
I think the reason they

1718
00:54:36,540 --> 00:54:38,700
0,270 270,420 420,690 690,1200 1200,2160
do it is to a

1719
00:54:38,730 --> 00:54:39,780
0,390 390,450 450,630 630,720 720,1050
limit, the amount of state

1720
00:54:39,780 --> 00:54:40,530
0,90 90,150 150,390 390,630 630,750
of the raf flight, we

1721
00:54:40,530 --> 00:54:41,760
0,150 150,240 240,720
have to maintain.

1722
00:54:41,790 --> 00:54:43,110
0,480 480,570 570,780 780,990 990,1320
Otherwise, the rap line wouldn't

1723
00:54:43,110 --> 00:54:44,250
0,240 240,540 540,690 690,810 810,1140
know when it can cut

1724
00:54:44,250 --> 00:54:45,360
0,90 90,570
the lock.

1725
00:54:45,560 --> 00:54:46,910
0,300 300,480 480,750 750,1170 1170,1350
And so there's basically no

1726
00:54:46,910 --> 00:54:48,200
0,210 210,570 570,720 720,960 960,1290
way around it that the

1727
00:54:48,200 --> 00:54:49,580
0,540 540,780 780,1110 1110,1200 1200,1380
servers actually tells it like

1728
00:54:49,580 --> 00:54:50,930
0,420 450,630 630,750 750,810 810,1350
wow I got a Snapchat

1729
00:54:50,930 --> 00:54:52,100
0,270 270,750 780,930 930,1050 1050,1170
through AI and so it's

1730
00:54:52,100 --> 00:54:54,260
0,240 240,330 330,600 600,1140 1410,2160
okay for you to remove

1731
00:54:54,260 --> 00:54:55,790
0,300 300,600 600,750 750,1110 1110,1530
log entry from zero five.

1732
00:54:57,840 --> 00:54:59,100
0,210 210,390 390,660 660,1080 1080,1260
And you'll see that and

1733
00:54:59,100 --> 00:55:00,960
0,330 1200,1440 1440,1560 1560,1740 1740,1860
so this will mean a

1734
00:55:00,960 --> 00:55:02,520
0,330 330,750 750,1290 1290,1440 1440,1560
good {point's -} is going

1735
00:55:02,520 --> 00:55:03,450
0,60 60,180 180,330 330,600 600,930
to come up into d

1736
00:55:03,480 --> 00:55:04,710
0,270 270,750 750,900 900,1110 1110,1230
great lap, two d is

1737
00:55:04,710 --> 00:55:06,870
0,450 450,570 570,750 750,1230 1320,2160
gonna is all about snapshots

1738
00:55:06,870 --> 00:55:10,350
0,330 330,1890 2520,3210 3210,3360 3360,3480
and laca compassion as it's

1739
00:55:10,350 --> 00:55:11,940
0,240 240,450 450,630 630,1110
also called window paper.

1740
00:55:11,940 --> 00:55:14,640
0,390 630,1410 1830,2250 2280,2640 2640,2700
Um, there there has to

1741
00:55:14,640 --> 00:55:16,620
0,90 90,390 390,1350 1380,1890 1890,1980
be some API between the

1742
00:55:16,620 --> 00:55:18,360
0,690 690,1110 1110,1530 1530,1650 1650,1740
servers and wrath to be

1743
00:55:18,360 --> 00:55:20,400
0,180 180,240 240,840 870,1470 1530,2040
able to collaborate and basically

1744
00:55:20,400 --> 00:55:21,720
0,300 300,630 630,750 750,930 930,1320
into a and two b

1745
00:55:21,720 --> 00:55:23,520
0,450 480,1200 1200,1290 1290,1500 1500,1800
dot API, in fact even

1746
00:55:23,520 --> 00:55:24,420
0,120 120,360 360,570 570,810 810,900
to see that API is

1747
00:55:24,420 --> 00:55:26,850
0,600 600,1050 1350,1890 1890,2070 2070,2430
extremely simple, um, the only

1748
00:55:26,850 --> 00:55:28,470
0,420 420,540 540,1080 1080,1230 1230,1620
API that exists, is this

1749
00:55:28,470 --> 00:55:29,880
0,570 570,870 870,1200 1200,1320 1320,1410
delivering lock message on the

1750
00:55:29,880 --> 00:55:30,940
0,270 270,630
apply channel.

1751
00:55:31,250 --> 00:55:33,290
0,270 270,540 810,1230 1230,1680 1680,2040
Right, and almost nothing flows

1752
00:55:33,290 --> 00:55:34,520
0,450 450,630 630,690 690,1080 1080,1230
down from the service to

1753
00:55:34,520 --> 00:55:35,900
0,390 390,600 600,840 840,1230 1230,1380
graph it other than the

1754
00:55:35,900 --> 00:55:38,480
0,360 360,540 540,1200 1470,2250 2250,2580
service may start a and

1755
00:55:38,510 --> 00:55:40,940
0,600 630,1530 1620,2070 2070,2160 2160,2430
draft a trying to append

1756
00:55:40,940 --> 00:55:41,750
0,60 60,360 360,450 450,540 540,810
an entry to the one

1757
00:55:41,750 --> 00:55:43,200
0,210 210,420 420,480 480,990
using where I start.

1758
00:55:43,440 --> 00:55:44,790
0,240 240,510 510,660 660,1020 1020,1350
Um, and you know and

1759
00:55:44,790 --> 00:55:46,830
0,90 90,330 330,870 1020,1740 1770,2040
so into d, um there

1760
00:55:46,830 --> 00:55:47,460
0,180 180,270 270,390 390,450 450,630
has to be a little

1761
00:55:47,460 --> 00:55:49,200
0,180 180,420 420,540 540,1140 1140,1740
bit more of an API

1762
00:55:49,200 --> 00:55:52,410
0,420 420,930 930,1890 2310,2730 2730,3210
between surface and grass library.

1763
00:55:53,040 --> 00:55:54,510
0,270 270,420 420,660 660,1050 1290,1470
And after Jack plug, you

1764
00:55:54,510 --> 00:55:55,890
0,210 210,690 690,870 870,1260 1260,1380
can design that API in

1765
00:55:55,890 --> 00:55:57,210
0,360 390,930 930,1140 1140,1290 1290,1320
any possible way, there are

1766
00:55:57,210 --> 00:55:57,960
0,180 180,240 240,420 420,480 480,750
quite a number of ways

1767
00:55:57,960 --> 00:55:59,010
0,90 90,330 330,540 570,720 720,1050
of doing it now there's

1768
00:55:59,010 --> 00:56:00,120
0,120 120,540 540,780 780,1020 1020,1110
no particular one and the

1769
00:56:00,120 --> 00:56:01,440
0,300 300,600 600,780 780,1080 1080,1320
paper doesn't lay out what

1770
00:56:01,440 --> 00:56:03,600
0,420 420,570 570,750 750,1260 1680,2160
API you should use a

1771
00:56:03,600 --> 00:56:05,160
0,600 630,900 900,1110 1110,1290 1290,1560
the papers actually just nothing

1772
00:56:05,160 --> 00:56:07,260
0,270 270,630 1080,1890 1890,1980 1980,2100
about this and so it's

1773
00:56:07,260 --> 00:56:09,150
0,120 120,180 180,540 540,1350 1470,1890
up to you to sometimes

1774
00:56:09,150 --> 00:56:09,870
0,150 150,240 240,570 570,660 660,720
up to us, you know

1775
00:56:09,870 --> 00:56:10,830
0,90 90,330 330,480 480,570 570,960
to figure out the {API's

1776
00:56:10,830 --> 00:56:12,300
0,90 90,330 630,930 930,1050 1050,1470
-} and to be able

1777
00:56:12,300 --> 00:56:14,220
0,270 270,540 540,780 780,1350 1440,1920
to do two d, um,

1778
00:56:14,220 --> 00:56:14,820
0,60 60,180 180,330 330,510 510,600
you know, we have to

1779
00:56:14,820 --> 00:56:16,650
0,600 600,690 690,1320 1320,1740 1740,1830
declare an API between the

1780
00:56:16,650 --> 00:56:18,500
0,570 570,930 930,1500
servers and raft.

1781
00:56:18,650 --> 00:56:19,970
0,330 330,480 480,570 570,810 810,1320
And you know you'll see,

1782
00:56:19,970 --> 00:56:21,470
0,270 270,480 480,600 600,780 780,1500
um what you do today,

1783
00:56:21,470 --> 00:56:23,300
0,120 120,240 240,810 960,1650 1650,1830
you know that, um, the

1784
00:56:23,300 --> 00:56:25,160
0,660 660,750 750,930 930,1110 1110,1860
API, you have some funny

1785
00:56:25,160 --> 00:56:27,170
0,450 1500,1740 1740,1800 1800,1860 1860,2010
you might be a little

1786
00:56:27,170 --> 00:56:28,430
0,120 120,750 780,1050 1050,1170 1170,1260
bit more different than you

1787
00:56:28,430 --> 00:56:31,190
0,180 180,780 1530,2010 2010,2640 2670,2760
might expect, um and you

1788
00:56:31,190 --> 00:56:31,760
0,120 120,240 240,330 330,390 390,570
know we had to pick

1789
00:56:31,760 --> 00:56:34,250
0,180 180,570 570,1560 1560,1950 1950,2490
one particular API in a

1790
00:56:34,640 --> 00:56:37,460
0,450 450,1410 1410,1620 1620,2280 2310,2820
um, in that {API's -}

1791
00:56:37,460 --> 00:56:38,630
0,60 60,180 180,600 600,960 990,1170
as an operation called a

1792
00:56:38,630 --> 00:56:41,600
0,600 600,1320 1560,2130 2160,2820 2850,2970
conditional install that, um, you

1793
00:56:41,600 --> 00:56:43,700
0,120 120,1080 1110,1710 1710,1950 1950,2100
know has semantics that you

1794
00:56:43,700 --> 00:56:45,890
0,150 150,630 630,870 870,1380 1500,2190
know allows you to change

1795
00:56:45,890 --> 00:56:47,360
0,210 210,540 540,1080 1080,1380 1380,1470
the raf state and the

1796
00:56:47,360 --> 00:56:48,770
0,300 300,690 690,1110 1110,1290 1290,1410
server state atomic lea in

1797
00:56:48,770 --> 00:56:50,280
0,270 270,660 660,1200
one single operation.

1798
00:56:51,060 --> 00:56:53,310
0,540 540,1140 1170,1560 1560,2100 2100,2250
Um, and um, and that

1799
00:56:53,310 --> 00:56:54,810
0,600 600,720 720,870 870,1110 1110,1500
partly you know that operation

1800
00:56:54,810 --> 00:56:57,900
0,570 810,1710 1710,2160 2160,2730 2760,3090
exists, um, yeah you try

1801
00:56:57,900 --> 00:56:59,980
0,120 120,480 480,1230
to limit the.

1802
00:56:59,980 --> 00:57:01,580
0,450 450,1080
Abstraction batteries.

1803
00:57:03,300 --> 00:57:04,340
0,510
Okay.

1804
00:57:04,460 --> 00:57:05,150
0,150 150,270 270,480 480,630 630,690
And it turns out you

1805
00:57:05,150 --> 00:57:05,780
0,90 90,210 210,300 300,360 360,630
can do it in different

1806
00:57:05,780 --> 00:57:06,860
0,270 270,360 360,540 540,780 780,1080
ways you don't really need

1807
00:57:06,890 --> 00:57:08,270
0,660 660,780 780,960 960,1080 1080,1380
a you could have written

1808
00:57:08,270 --> 00:57:09,140
0,120 120,210 210,450 450,720 720,870
it in different ways, but

1809
00:57:09,140 --> 00:57:10,880
0,120 120,300 300,810 1170,1350 1350,1740
you know we are performing

1810
00:57:10,880 --> 00:57:11,570
0,120 120,390 390,510 510,600 600,690
is actually one of the

1811
00:57:11,570 --> 00:57:12,440
0,150 150,420 420,600 600,660 660,870
more simple ways of doing

1812
00:57:12,440 --> 00:57:13,140
0,240
it.

1813
00:57:13,550 --> 00:57:14,540
0,360 360,450 450,570 570,810 810,990
But it will become more

1814
00:57:14,540 --> 00:57:15,470
0,270 270,390 390,540 540,840 840,930
clear in two d and

1815
00:57:15,470 --> 00:57:16,550
0,210 210,450 450,780 780,930 930,1080
you'll see indeed that there's

1816
00:57:16,550 --> 00:57:18,170
0,120 120,240 240,600 630,1260 1260,1620
sort of an interaction between

1817
00:57:18,170 --> 00:57:20,810
0,330 360,1080 1080,1530 1530,2070 2070,2640
the surface and draft a

1818
00:57:20,810 --> 00:57:21,590
0,270 270,330 330,510 510,660 660,780
in a way that they

1819
00:57:21,590 --> 00:57:22,900
0,120 120,210 210,390 390,810
have to play along.

1820
00:57:28,700 --> 00:57:29,630
0,120 120,270 270,390 390,690 690,930
How could you repeat when

1821
00:57:29,630 --> 00:57:31,040
0,300 300,810 810,930 930,990 990,1410
raf communicates with the serbs

1822
00:57:31,040 --> 00:57:32,810
0,90 90,180 180,630 630,1200 1440,1770
in the snapshot process, so

1823
00:57:32,810 --> 00:57:35,450
0,120 120,930 930,1200 1200,1950 1980,2640
the snapshots are driven by

1824
00:57:35,450 --> 00:57:36,840
0,270 270,930
the surface.

1825
00:57:37,020 --> 00:57:38,190
0,240 240,360 360,750 750,930 930,1170
So the server just says

1826
00:57:38,190 --> 00:57:39,120
0,210 210,270 270,330 330,780 780,930
once in a while to

1827
00:57:39,120 --> 00:57:41,370
0,540 930,1380 1380,1590 1590,1620 1620,2250
raft, I've made a snapshot,

1828
00:57:41,370 --> 00:57:43,530
0,270 270,390 390,1110 1470,1830 1830,2160
here's my snapshot, um, and

1829
00:57:43,530 --> 00:57:44,610
0,150 150,240 240,270 270,750 750,1080
this is a snapshot includes

1830
00:57:44,610 --> 00:57:46,050
0,210 210,300 300,810 810,1020 1020,1440
all the operations through I.

1831
00:57:46,800 --> 00:57:48,210
0,210 210,390 390,840 840,1020 1020,1410
And then raft you writes

1832
00:57:48,210 --> 00:57:51,600
0,180 180,1020 1020,2250 2280,2790 2790,3390
the snapshots and truncates blog,

1833
00:57:51,630 --> 00:57:53,010
0,120 120,270 270,480 480,1020 1170,1380
you know to I and

1834
00:57:53,010 --> 00:57:54,390
0,210 210,330 330,480 480,990 990,1380
writes all that information to

1835
00:57:54,390 --> 00:57:55,940
0,450 510,1110
the disk.

1836
00:57:57,500 --> 00:57:58,850
0,240 240,360 360,480 480,900 900,1350
Um, and that's basically all

1837
00:57:58,850 --> 00:57:59,750
0,150 150,510 510,690 690,780 780,900
what happens sort of a

1838
00:57:59,750 --> 00:58:01,790
0,210 210,270 270,660 660,1170 1290,2040
sort of regular operation periodically

1839
00:58:01,790 --> 00:58:03,940
0,480 480,720 720,1170 1170,1620
snapshots happen snapshot habits.

1840
00:58:04,130 --> 00:58:06,020
0,330 330,510 510,1140 1140,1350 1350,1890
Then there's a other case,

1841
00:58:06,020 --> 00:58:07,100
0,450 450,570 570,660 660,960 960,1080
you have to consider is

1842
00:58:07,100 --> 00:58:09,140
0,150 150,630 660,1110 1110,1440 1440,2040
like when a reboot happens.

1843
00:58:09,650 --> 00:58:10,790
0,360 360,480 480,690 690,750 750,1140
And so when a follower

1844
00:58:10,790 --> 00:58:14,450
0,570 570,870 870,1650 1680,2760 3150,3660
reboots it actually reboots from

1845
00:58:14,450 --> 00:58:16,190
0,300 300,750 750,1230 1230,1530 1530,1740
its persistent state and so

1846
00:58:16,190 --> 00:58:17,900
0,450 450,570 570,1170
including its snapshot.

1847
00:58:18,080 --> 00:58:20,090
0,420 420,600 600,840 840,930 930,2010
And so when the follower

1848
00:58:20,090 --> 00:58:21,530
0,390 390,570 570,930 930,1350 1350,1440
reboots, go basically loads, you

1849
00:58:21,530 --> 00:58:23,750
0,120 120,930 1290,1650 1650,1890 1890,2220
know snapshot, um from um

1850
00:58:23,750 --> 00:58:25,130
0,270 270,450 450,870 870,1200 1200,1380
from a persistent disk and

1851
00:58:25,130 --> 00:58:27,260
0,330 330,1050 1050,1350 1350,1860 1860,2130
actually reconstructs the application state,

1852
00:58:27,260 --> 00:58:28,730
0,90 90,240 240,600 600,1020 1230,1470
the key value store and

1853
00:58:28,730 --> 00:58:29,600
0,270 270,390 390,570 570,630 630,870
you'll do this in lab

1854
00:58:29,600 --> 00:58:30,440
0,360 360,510 510,570 570,720 720,840
freezer, this is not going

1855
00:58:30,440 --> 00:58:31,010
0,60 60,180 180,240 240,510 510,570
to be an issue of

1856
00:58:31,010 --> 00:58:32,020
0,420
laptop.

1857
00:58:32,140 --> 00:58:33,010
0,150 150,390 390,570 570,660 660,870
The only thing that there's

1858
00:58:33,010 --> 00:58:33,610
0,120 120,180 180,270 270,330 330,600
going to be an issue

1859
00:58:33,610 --> 00:58:35,320
0,180 180,360 360,540 540,870 1140,1710
like too is that um,

1860
00:58:35,350 --> 00:58:38,950
0,1020 1170,1320 1320,2070 2250,2760 2760,3600
because the followers because the

1861
00:58:39,310 --> 00:58:40,720
0,660
um.

1862
00:58:42,290 --> 00:58:43,880
0,390 390,690 720,1230 1230,1440 1440,1590
Because the log has been

1863
00:58:43,880 --> 00:58:45,320
0,390 480,780 780,990 990,1080 1080,1440
caught right like you know

1864
00:58:45,380 --> 00:58:46,640
0,450 450,570 570,780 780,1080 1080,1260
instead of like having all

1865
00:58:46,640 --> 00:58:47,780
0,120 120,480 480,630 630,990 990,1140
the entries from zero to

1866
00:58:47,780 --> 00:58:49,260
0,270 270,390 390,480 480,930
I in the log.

1867
00:58:49,260 --> 00:58:51,090
0,510 510,780 780,1140 1140,1350 1350,1830
Yeah, plus more so I

1868
00:58:51,090 --> 00:58:52,680
0,150 150,390 390,930
you know in.

1869
00:58:52,680 --> 00:58:53,880
0,360 360,690 690,960 960,1080 1080,1200
A the log is me,

1870
00:58:53,880 --> 00:58:54,960
0,360 360,480 480,630 630,870 870,1080
caught, you know from I

1871
00:58:54,960 --> 00:58:56,660
0,330 330,600 690,1170
to n Rec.

1872
00:58:57,760 --> 00:58:59,620
0,750 780,1200 1200,1470 1470,1650 1650,1860
And um those are part

1873
00:58:59,620 --> 00:59:00,520
0,60 60,210 210,480 480,540 540,900
of the walk of action

1874
00:59:01,030 --> 00:59:02,860
0,420 420,660 660,870 870,1320 1320,1830
but that also means that

1875
00:59:02,890 --> 00:59:04,030
0,360 360,510 510,600 600,990 990,1140
a if a follower is

1876
00:59:04,030 --> 00:59:05,530
0,360 360,840 870,1080 1080,1140 1140,1500
far behind like for example

1877
00:59:05,530 --> 00:59:07,180
0,330 330,660 660,1020 1020,1110 1110,1650
new node joins the system

1878
00:59:07,360 --> 00:59:09,520
0,180 180,480 480,750 750,1410 1620,2160
and doesn't actually have a

1879
00:59:09,520 --> 00:59:11,200
0,630 660,1170 1170,1290 1290,1380 1380,1680
the beginning of the log

1880
00:59:11,200 --> 00:59:13,200
0,870 870,1560
Nord snapshots.

1881
00:59:13,350 --> 00:59:16,110
0,360 360,990 1050,1710 1740,2490 2520,2760
Um, then the raft has

1882
00:59:16,110 --> 00:59:17,820
0,60 60,600 600,660 660,1440 1560,1710
to communicate the snapshot to

1883
00:59:17,820 --> 00:59:19,100
0,180 180,780
that follower.

1884
00:59:19,460 --> 00:59:20,210
0,180 180,270 270,330 330,630 630,750
So in the case that

1885
00:59:20,210 --> 00:59:21,230
0,90 90,480 480,780 780,900 900,1020
the follower is you know

1886
00:59:21,230 --> 00:59:23,480
0,630 630,1050 1380,1650 1650,1800 1800,2250
before I because we rejoined

1887
00:59:23,480 --> 00:59:27,080
0,510 660,870 870,1380 1380,2610 2640,3600
lab and rejoins a draft

1888
00:59:27,080 --> 00:59:29,200
0,450 570,990 990,1560
posture, um the.

1889
00:59:29,610 --> 00:59:30,780
0,510 510,720 720,870 870,960 960,1170
Leader actually has to set

1890
00:59:30,780 --> 00:59:32,580
0,60 60,810 840,930 930,1050 1050,1800
the snapshot, you know to

1891
00:59:32,610 --> 00:59:33,840
0,390 390,600 600,1050 1050,1170 1170,1230
um the follower and the

1892
00:59:33,840 --> 00:59:35,310
0,360 360,660 660,960 960,1080 1080,1470
follower basically start from there.

1893
00:59:36,280 --> 00:59:37,120
0,150 150,330 330,450 450,720 720,840
And that will show up

1894
00:59:37,120 --> 00:59:38,080
0,90 90,270 270,660 660,840 840,960
in two d and so

1895
00:59:38,080 --> 00:59:40,510
0,240 240,330 330,1140 1380,1740 1740,2430
there's an additional r PC

1896
00:59:40,540 --> 00:59:42,130
0,270 270,330 330,870 870,1020 1020,1590
called the snapshot our PC,

1897
00:59:42,490 --> 00:59:44,170
0,300 300,480 480,900 900,1650 1650,1680
um, or install snapshot a

1898
00:59:44,170 --> 00:59:45,970
0,900 900,1110 1110,1320 1320,1740 1740,1800
RBC and that's described in

1899
00:59:45,970 --> 00:59:47,290
0,60 60,720 750,1080 1080,1200 1200,1320
the paper, and then you

1900
00:59:47,290 --> 00:59:48,370
0,120 120,330 330,420 420,840 840,1080
will have to implement into

1901
00:59:48,370 --> 00:59:51,190
0,420 1440,1980 2310,2490 2490,2700 2700,2820
deep fact, which brings me

1902
00:59:51,190 --> 00:59:52,140
0,480
to.

1903
00:59:52,370 --> 00:59:53,980
0,420 420,570 570,1050
A good point.

1904
00:59:54,040 --> 00:59:55,360
0,420 420,540 540,630 630,990 990,1320
Actually, let me go to.

1905
00:59:56,840 --> 00:59:58,010
0,390 390,750 750,990 990,1080 1080,1170
Consumer basically brings me to

1906
00:59:58,010 --> 01:00:00,080
0,90 90,390 390,1050 1200,1620 1620,2070
the homework question, which is.

1907
01:00:00,620 --> 01:00:01,700
0,540
AH.

1908
01:00:02,830 --> 01:00:04,480
0,390 390,1050
Years death.

1909
01:00:04,780 --> 01:00:07,270
0,630 690,1230 1230,1530 1530,2070 2070,2490
Um, instill Snap sharpie seashore

1910
01:00:07,270 --> 01:00:10,240
0,660 660,1260 1260,1260 1950,2460 2640,2970
equivalent figure, um to, um

1911
01:00:10,240 --> 01:00:12,040
0,120 120,330 330,600 600,1170 1350,1800
would then just a snapshot

1912
01:00:12,040 --> 01:00:13,780
0,450 450,930 930,1110 1110,1500 1500,1740
autocracy and you actually have

1913
01:00:13,780 --> 01:00:15,060
0,120 120,510 510,780
to implement that.

1914
01:00:15,460 --> 01:00:18,550
0,510 750,1020 1020,1740 2100,2310 2310,3090
I'm an interviewee and one

1915
01:00:18,550 --> 01:00:19,930
0,630 660,900 900,1110 1110,1230 1230,1380
issue that came up in

1916
01:00:19,930 --> 01:00:21,550
0,810 840,1110 1110,1230 1230,1320 1320,1620
the which was the homework

1917
01:00:21,550 --> 01:00:24,010
0,330 330,450 450,990 1230,2070 2220,2460
question for today is is

1918
01:00:24,010 --> 01:00:26,530
0,270 270,1080 1350,1710 1710,2160 2160,2520
every possible um in raft,

1919
01:00:26,530 --> 01:00:28,900
0,1290 1290,1680 1680,1890 1890,2160 2160,2370
what avoids it it's not

1920
01:00:28,900 --> 01:00:31,060
0,600 750,1410 1410,1560 1560,1830 1830,2160
possible, then the state machine

1921
01:00:31,060 --> 01:00:32,260
0,270 270,750
rolls back.

1922
01:00:32,290 --> 01:00:34,090
0,150 150,360 360,1140 1140,1350 1350,1800
Yeah, so example, a leader

1923
01:00:34,090 --> 01:00:35,650
0,420 420,900 900,1020 1020,1290 1290,1560
since maybe you know a

1924
01:00:35,650 --> 01:00:37,210
0,330 330,450 450,780 780,1320 1320,1560
maybe an old snapshot shows

1925
01:00:37,210 --> 01:00:38,080
0,270 300,450 450,660 660,810 810,870
up you know at a

1926
01:00:38,080 --> 01:00:40,450
0,540 930,1170 1170,1410 1410,1530 1530,2370
follower, um, is it possible

1927
01:00:41,110 --> 01:00:43,240
0,600 630,750 750,1080 1770,2040 2040,2130
that you know if it's

1928
01:00:43,240 --> 01:00:45,700
0,570 570,840 840,2070 2070,2310 2310,2460
possible if z follow would

1929
01:00:45,700 --> 01:00:46,930
0,360 360,450 450,990 990,1080 1080,1230
install the snapshot and then

1930
01:00:46,930 --> 01:00:49,000
0,630 630,1200 1230,1740 1740,2010 2010,2070
implicitly basically roll back the

1931
01:00:49,000 --> 01:00:50,500
0,240 240,690 750,1200 1200,1290 1290,1500
state machine, maybe it already

1932
01:00:50,500 --> 01:00:52,180
0,120 120,360 360,630 630,1290
has seen more information.

1933
01:00:52,390 --> 01:00:53,350
0,390 390,450 450,540 540,810 810,960
Um, you know clear that

1934
01:00:53,350 --> 01:00:54,940
0,240 240,540 630,1260 1260,1500 1500,1590
seems not right and so

1935
01:00:54,940 --> 01:00:57,100
0,330 330,660 660,1050 1350,1500 1500,2160
the question is you knowhow

1936
01:00:57,100 --> 01:00:59,230
0,180 180,660 660,990 990,1290 1620,2130
does wrapping around it and

1937
01:00:59,590 --> 01:01:00,700
0,450 450,630 630,870 870,1020 1020,1110
um, so maybe this is

1938
01:01:00,700 --> 01:01:01,630
0,60 60,270 270,480 480,750 750,930
a great place next to

1939
01:01:01,630 --> 01:01:03,940
0,0 780,1170 1170,1380 1380,1830 1830,2310
a quick break out, and

1940
01:01:03,940 --> 01:01:07,000
0,120 120,240 240,720 720,2790 2790,3060
you can debate zat homework

1941
01:01:07,000 --> 01:01:08,170
0,270 270,390 390,450 450,630 630,1170
question for a couple minutes

1942
01:01:08,410 --> 01:01:10,300
0,450 450,960 1170,1380 1380,1770 1770,1890
five minutes and then we'll

1943
01:01:10,300 --> 01:01:12,520
0,150 150,630 810,1440 1440,1890 1890,2220
come back and we'll talk

1944
01:01:12,520 --> 01:01:13,870
0,510 510,870 870,1080 1080,1200 1200,1350
about a little bit more

1945
01:01:13,870 --> 01:01:15,000
0,180 180,750
about snapshots.

1946
01:01:16,790 --> 01:01:18,560
0,390 390,630 630,990 990,1230 1230,1770
Really will be a twenty.

1947
01:01:19,470 --> 01:01:21,360
0,330 330,660 660,1350 1350,1710 1710,1890
No lily, how about I

1948
01:01:21,360 --> 01:01:25,080
0,480 570,1980 1980,2730 3000,3390 3390,3720
try you on hold on

1949
01:01:25,080 --> 01:01:25,890
0,180 180,420 420,540 540,600 600,810
I'll probably have to make

1950
01:01:25,890 --> 01:01:27,120
0,690
you.

1951
01:01:27,610 --> 01:01:28,920
0,750
AH.

1952
01:01:31,420 --> 01:01:33,160
0,480 480,1200 1230,1440 1440,1620 1620,1740
A host and then you

1953
01:01:33,160 --> 01:01:34,160
0,90 90,210 210,450
can do it.

1954
01:01:35,320 --> 01:01:36,670
0,270 270,360 360,480 480,720 720,1350
Okay, you should be hotel,

1955
01:01:37,060 --> 01:01:38,740
0,1260
awesome.

1956
01:02:06,930 --> 01:02:09,300
0,480 480,780 780,1380 1470,1710 1740,2370
Alright should be sure nothing

1957
01:02:09,300 --> 01:02:10,560
0,330 330,450 450,810 810,960 960,1260
gets more expensive to do.

1958
01:08:06,790 --> 01:08:07,750
0,330 330,540 540,630 630,840 840,960
And I'll go ahead and

1959
01:08:07,750 --> 01:08:09,430
0,240 240,1050 1110,1320 1320,1440 1440,1680
make you make you host

1960
01:08:09,430 --> 01:08:10,840
0,360 390,660 660,750 750,1020 1140,1410
again, that'd be great, thank

1961
01:08:10,840 --> 01:08:11,660
0,270
you.

1962
01:08:35,730 --> 01:08:37,320
0,420 420,870 870,1140 1140,1260 1260,1590
Should I share my screen

1963
01:08:37,320 --> 01:08:38,520
0,720
movie.

1964
01:08:41,350 --> 01:08:44,420
0,900 930,2430 2430,2550
Yeah she added.

1965
01:08:50,630 --> 01:08:52,180
0,300
HMM.

1966
01:08:54,160 --> 01:08:57,000
0,1110 1110,1440 1440,1650 1650,2070
Yeah everybody back online.

1967
01:08:59,980 --> 01:09:00,880
0,210 210,330 330,390 390,810 840,900
We're good to go, I

1968
01:09:00,880 --> 01:09:02,710
0,510 750,1140 1140,1380 1380,1710 1710,1830
mean somebody can respond would

1969
01:09:02,710 --> 01:09:08,200
0,60 60,390 2370,4500 4920,5160 5160,5490
be great okay, okay great

1970
01:09:08,260 --> 01:09:09,280
0,330 330,510 510,720 720,870 870,1020
I hear it I go

1971
01:09:09,280 --> 01:09:11,350
0,510 510,1050 1290,1770 1770,2010 2010,2070
sometimes to people because of

1972
01:09:11,350 --> 01:09:12,580
0,90 90,450 450,720 720,930 930,1230
the breakout rooms here just

1973
01:09:12,580 --> 01:09:15,910
0,330 330,810 810,1020 1020,1470 2700,3330
learning dropped out soon, unfortunately.

1974
01:09:18,330 --> 01:09:20,720
0,570 600,1140 1170,1980
Past a rouge.

1975
01:09:20,720 --> 01:09:22,040
0,270 270,420 420,570 570,960 960,1320
Break up but hopefully yeah.

1976
01:09:23,080 --> 01:09:24,100
0,390 390,480 480,600 600,930 930,1020
And I know exactly what

1977
01:09:24,100 --> 01:09:26,020
0,60 60,180 180,360 360,600 1350,1920
to do about that alright

1978
01:09:26,320 --> 01:09:28,180
0,720 720,1050 1050,1260 1260,1650 1650,1860
guesswork last fault tolerance is

1979
01:09:28,180 --> 01:09:29,350
0,60 60,240 240,360 360,870 870,1170
a little bit unfortunate that

1980
01:09:29,380 --> 01:09:31,040
0,420 420,540 540,690 690,1140
people could just drop.

1981
01:09:32,590 --> 01:09:35,890
0,450 450,810 840,1530 1980,2730 2730,3300
Okay, so um, any I

1982
01:09:35,920 --> 01:09:37,240
0,630 630,720 720,960 960,1230 1230,1320
think the homework question this

1983
01:09:37,240 --> 01:09:38,890
0,210 210,480 480,810 990,1500 1500,1650
time around was reasonable sort

1984
01:09:38,890 --> 01:09:40,090
0,60 60,630 630,690 690,1110 1110,1200
of straightforward you know it

1985
01:09:40,090 --> 01:09:40,840
0,210 210,270 270,360 360,450 450,750
has to be the case

1986
01:09:40,840 --> 01:09:42,370
0,330 330,450 450,690 690,930 930,1530
that you know you cannot,

1987
01:09:42,730 --> 01:09:44,620
0,480 480,990 990,1080 1080,1230 1230,1890
um install an old snapshot

1988
01:09:44,650 --> 01:09:46,960
0,600 600,720 720,870 870,1560 1590,2310
because you know a service

1989
01:09:46,960 --> 01:09:47,950
0,240 240,510 510,750 750,930 930,990
that might have had a

1990
01:09:47,950 --> 01:09:49,270
0,240 240,510 510,990 990,1170 1170,1320
more recent snapshot might have

1991
01:09:49,270 --> 01:09:50,590
0,450 450,510 510,600 600,1050 1050,1320
responded to the client saying,

1992
01:09:50,590 --> 01:09:52,580
0,360 360,450 450,900 900,1500
yeah the operation succeeded.

1993
01:09:52,640 --> 01:09:53,630
0,420 420,600 600,780 780,870 870,990
Um, and then if you

1994
01:09:53,630 --> 01:09:55,310
0,180 180,720 720,900 900,1110 1110,1680
would restore an old snapshot,

1995
01:09:55,310 --> 01:09:56,990
0,510 540,900 900,1080 1080,1410 1410,1680
then a you basically back

1996
01:09:56,990 --> 01:09:57,680
0,120 120,180 180,240 240,600 600,690
out to the state and

1997
01:09:57,680 --> 01:09:58,820
0,60 60,480 480,660 660,810 810,1140
the climate c there's certainly

1998
01:09:58,820 --> 01:09:59,870
0,90 90,330 330,690 690,810 810,1050
an old version of the

1999
01:09:59,870 --> 01:10:01,190
0,300 300,420 420,600 600,930 930,1320
surface, so that's certainly not

2000
01:10:01,220 --> 01:10:03,470
0,150 180,840 1590,2010 2010,2130 2130,2250
a legit, um, and so

2001
01:10:03,470 --> 01:10:04,790
0,150 150,180 180,330 330,1020 1080,1320
there's a little bit, you

2002
01:10:04,790 --> 01:10:06,260
0,90 90,390 390,750 750,870 870,1470
should definitely reject all snapshots,

2003
01:10:06,260 --> 01:10:06,770
0,150 150,210 210,300 300,420 420,510
but you have to be

2004
01:10:06,770 --> 01:10:08,540
0,60 60,210 210,330 330,930 1230,1770
a little bit careful, um,

2005
01:10:08,540 --> 01:10:10,670
0,990 990,1110 1110,1380 1380,1740 1770,2130
if you know the follower

2006
01:10:10,670 --> 01:10:11,660
0,180 180,240 240,630 630,780 780,990
has a log that goes

2007
01:10:11,660 --> 01:10:13,490
0,540 540,630 630,1290 1290,1620 1620,1830
beyond the snapshot, you have

2008
01:10:13,490 --> 01:10:16,430
0,360 390,930 960,1530 1920,2730 2730,2940
to keep that remained a

2009
01:10:16,430 --> 01:10:17,720
0,240 240,330 330,420 420,960
part of the log.

2010
01:10:17,720 --> 01:10:18,890
0,180 180,480 480,840 840,990 990,1170
Um, because basically you have

2011
01:10:18,890 --> 01:10:20,510
0,330 330,450 450,510 510,1050 1260,1620
promised to a leader a

2012
01:10:20,510 --> 01:10:21,860
0,330 330,540 540,660 660,1140 1140,1350
that you have accepted a

2013
01:10:21,860 --> 01:10:23,060
0,360 360,450 450,570 570,720 720,1200
message and so you can't

2014
01:10:23,060 --> 01:10:25,400
0,660 660,750 750,1320 1530,1980 2010,2340
delete you know the rest

2015
01:10:25,400 --> 01:10:26,660
0,90 90,180 180,570 570,1140 1140,1260
of the law that was

2016
01:10:26,660 --> 01:10:28,820
0,240 240,690 720,1200 1200,1620
not covered by the.

2017
01:10:28,910 --> 01:10:30,560
0,510 510,1080
A snapshot.

2018
01:10:30,710 --> 01:10:31,760
0,510
Okay.

2019
01:10:35,210 --> 01:10:36,440
0,240 240,360 360,990 990,1110 1110,1230
Okay, so then let me

2020
01:10:36,440 --> 01:10:38,780
0,810 1050,1770
return a.

2021
01:10:41,220 --> 01:10:42,960
0,420 420,570 570,630 630,1080 1080,1740
We had a question actually

2022
01:10:42,990 --> 01:10:44,860
0,690 720,930 930,1290
okay, go ahead.

2023
01:10:44,890 --> 01:10:46,870
0,780 810,1320 1320,1680 1680,1800 1800,1980
So it says it says

2024
01:10:46,870 --> 01:10:48,160
0,90 90,210 210,600 600,990 1020,1290
in the paper right, if

2025
01:10:48,160 --> 01:10:50,290
0,780 780,930 930,1260 1260,1320 1320,2130
z one receives a snapshot,

2026
01:10:50,470 --> 01:10:51,790
0,360 360,450 450,960 960,1110 1110,1320
that's a prefix of its

2027
01:10:51,790 --> 01:10:53,620
0,570
log.

2028
01:10:53,620 --> 01:10:57,490
0,570 1020,2310 2430,3210 3210,3570 3570,3870
I'm the log entries covered

2029
01:10:57,490 --> 01:10:58,900
0,120 120,210 210,840 840,900 900,1410
by the snapshot are deleted,

2030
01:10:58,900 --> 01:10:59,950
0,150 150,240 240,480 480,540 540,1050
but the rest are kept

2031
01:11:00,010 --> 01:11:03,250
0,870 1140,1290 1290,1530 1530,2190 2340,3240
yep in that case, um.

2032
01:11:04,480 --> 01:11:07,420
0,300 300,420 420,2520 2520,2820 2820,2940
It is z wouldn't be

2033
01:11:07,420 --> 01:11:09,250
0,660 660,1050 1050,1140 1140,1320 1320,1830
overwritten right in this case.

2034
01:11:09,920 --> 01:11:11,360
0,360 360,510 510,810 810,1140 1140,1440
Okay, so the interesting question

2035
01:11:11,360 --> 01:11:12,380
0,120 120,270 270,510 510,690 690,1020
is like how does a

2036
01:11:12,380 --> 01:11:14,810
0,810 840,1290 1290,1500 1500,2100 2100,2430
um snaps get communicated to

2037
01:11:14,810 --> 01:11:18,500
0,1020 2160,2430 2430,2820 2820,3420 3450,3690
the state machine and as

2038
01:11:18,500 --> 01:11:19,640
0,180 180,420 420,510 510,780 780,1140
you'll see in lap three

2039
01:11:19,640 --> 01:11:20,240
0,90 90,150 150,360 360,510 510,600
and it goes over the

2040
01:11:20,240 --> 01:11:21,480
0,360 360,750
applied channel.

2041
01:11:22,080 --> 01:11:24,720
0,390 390,660 660,1320 1950,2340 2340,2640
And so the state machine

2042
01:11:24,720 --> 01:11:25,800
0,120 120,300 300,330 330,900 900,1080
will get a snapshot over

2043
01:11:25,800 --> 01:11:28,020
0,90 90,450 450,840 1290,1770 1770,2220
the applied channel and then

2044
01:11:28,020 --> 01:11:29,190
0,330 330,480 480,630 630,1050 1050,1170
it's up to it to

2045
01:11:29,190 --> 01:11:30,440
0,120 120,270 270,450 450,660
do the right thing.

2046
01:11:32,030 --> 01:11:33,060
0,540
Oops.

2047
01:11:33,060 --> 01:11:34,000
0,360
Okay.

2048
01:11:34,350 --> 01:11:35,620
0,660
Oops.

2049
01:11:36,370 --> 01:11:37,780
0,450 450,780 870,1140 1140,1320 1320,1410
Okay good, so just a

2050
01:11:37,780 --> 01:11:39,970
0,450 450,540 540,750 750,1230 1290,2190
follow-up on that sorry, um,

2051
01:11:40,270 --> 01:11:41,560
0,360 360,840 840,1020 1020,1080 1080,1290
though I was a little

2052
01:11:41,560 --> 01:11:42,640
0,180 180,360 360,630 630,840 840,1080
bit so that makes sense

2053
01:11:42,640 --> 01:11:43,540
0,90 90,360 420,570 570,810 810,900
to me the part that

2054
01:11:43,540 --> 01:11:44,650
0,60 60,210 210,630 630,780 780,1110
I was confused by is

2055
01:11:44,650 --> 01:11:46,820
0,390 390,840 990,1200 1200,1650
in the in the.

2056
01:11:46,990 --> 01:11:48,490
0,300 300,840 840,990 990,1140 1140,1500
Figure thirteen like the box

2057
01:11:48,490 --> 01:11:50,230
0,150 150,690 690,1050 1050,1590 1590,1740
that describes install snapshot, our

2058
01:11:50,230 --> 01:11:52,580
0,510 1170,1740
PC, um.

2059
01:11:53,000 --> 01:11:55,130
0,300 330,1050 1080,1350 1350,1860 1890,2130
On six it's as if

2060
01:11:55,130 --> 01:11:56,450
0,480 480,750 750,1020 1020,1200 1200,1320
existing log entry has the

2061
01:11:56,450 --> 01:11:57,800
0,390 390,840 840,960 960,1050 1050,1350
same index as the term

2062
01:11:57,800 --> 01:12:00,040
0,690 690,960 960,1230 1230,1680
snapshot last include entry.

2063
01:12:01,000 --> 01:12:02,280
0,720
I'm.

2064
01:12:04,890 --> 01:12:06,140
0,270 270,330 330,630
Well I don't.

2065
01:12:06,610 --> 01:12:07,750
0,210 210,450 450,570 570,810 810,1140
I may have just misread

2066
01:12:07,750 --> 01:12:09,040
0,150 300,690 690,930 930,1020 1020,1290
it okay, why do you

2067
01:12:09,070 --> 01:12:10,120
0,210 210,450 450,630 630,840 840,1050
keep thinking about it, look

2068
01:12:10,120 --> 01:12:12,040
0,330 330,690 690,810 810,1350 1350,1920
if I have a question,

2069
01:12:12,160 --> 01:12:13,660
0,420 420,720 990,1200 1200,1380 1380,1500
I'll ask you take it

2070
01:12:13,660 --> 01:12:14,650
0,420 420,630 630,780 780,900 900,990
offline and we'll do it

2071
01:12:14,650 --> 01:12:15,400
0,180 180,360 360,600 600,660 660,750
right after lecture, if you

2072
01:12:15,400 --> 01:12:16,240
0,150 150,270
want to.

2073
01:12:16,900 --> 01:12:17,710
0,480 510,570 570,690 690,750 750,810
Okay I want to go

2074
01:12:17,710 --> 01:12:18,910
0,240 240,540 540,900 900,990 990,1200
back actually for a couple

2075
01:12:18,910 --> 01:12:19,750
0,450 450,540 540,630 630,750 750,840
minutes you know that we

2076
01:12:19,750 --> 01:12:21,220
0,150 150,600 600,870 870,1170 1170,1470
have remaining and talk about

2077
01:12:21,220 --> 01:12:23,080
0,360 360,660 660,1200 1560,1770 1770,1860
actually using raft which is

2078
01:12:23,080 --> 01:12:24,070
0,210 210,270 270,360 360,870 870,990
sort of a discussion that

2079
01:12:24,070 --> 01:12:25,690
0,120 120,600 600,960 960,1260 1260,1620
we're already basically having here.

2080
01:12:27,500 --> 01:12:29,180
0,330 330,690 690,750 750,1320 1440,1680
Wow for a surface and

2081
01:12:29,180 --> 01:12:30,020
0,120 120,510 510,660 660,780 780,840
so again I'm going to

2082
01:12:30,020 --> 01:12:31,190
0,330 330,480 480,570 570,1020 1020,1170
focus on the replicated key

2083
01:12:31,190 --> 01:12:32,240
0,300 300,660 660,870 870,990 990,1050
value service that's going to

2084
01:12:32,240 --> 01:12:33,170
0,150 150,240 240,570 570,690 690,930
be the topic of lap

2085
01:12:33,170 --> 01:12:33,980
0,270
three.

2086
01:12:34,130 --> 01:12:35,750
0,150 150,570 720,960 960,1350 1380,1620
And so just to go

2087
01:12:35,750 --> 01:12:37,250
0,330 330,870 870,1230 1230,1350 1350,1500
back to almost like one

2088
01:12:37,250 --> 01:12:38,720
0,90 90,180 180,750 840,1320 1320,1470
of the first watch that

2089
01:12:38,720 --> 01:12:40,160
0,330 330,810 810,990 990,1200 1200,1440
I drew at the beginning

2090
01:12:40,160 --> 01:12:41,660
0,60 60,150 150,420 420,810 1230,1500
of the raf lectures, um,

2091
01:12:41,660 --> 01:12:43,550
0,360 360,630 630,1080 1110,1740 1740,1890
here's like our boxes, you

2092
01:12:43,550 --> 01:12:45,590
0,90 90,270 270,780 780,1290 1560,2040
know that correspond to the

2093
01:12:45,830 --> 01:12:47,240
0,270 270,930
three replicas.

2094
01:12:48,680 --> 01:12:50,900
0,570 750,1200 1200,1410 1410,1860 1860,2220
A and each replica correct

2095
01:12:50,900 --> 01:12:51,830
0,90 90,240 240,660 660,720 720,930
you know house a sort

2096
01:12:51,830 --> 01:12:52,980
0,60 60,570
of split.

2097
01:12:53,520 --> 01:12:54,780
0,360 360,810 810,1050 1050,1170 1170,1260
Two pieces, one is the

2098
01:12:54,780 --> 01:12:56,200
0,420 420,870
surface part.

2099
01:12:56,540 --> 01:12:57,940
0,840
Yeah.

2100
01:13:01,180 --> 01:13:02,050
0,210 210,390 390,510 510,600 600,870
When one is the raf

2101
01:13:02,050 --> 01:13:03,140
0,510
library.

2102
01:13:04,070 --> 01:13:04,970
0,210 210,330 330,420 420,720 720,900
Right, then we know that

2103
01:13:04,970 --> 01:13:06,890
0,360 360,630 630,1260 1260,1470 1470,1920
basically days communicate these to

2104
01:13:06,890 --> 01:13:08,990
0,450 450,540 540,900 900,1320 1770,2100
approve the apply channel unless

2105
01:13:08,990 --> 01:13:10,700
0,120 120,270 270,540 900,1440 1440,1710
the way that information flows

2106
01:13:10,700 --> 01:13:12,360
0,120 120,390 390,480 480,1080
from rap to disturbance.

2107
01:13:12,360 --> 01:13:13,460
0,570
Church.

2108
01:13:16,000 --> 01:13:17,800
0,120 120,270 270,900 900,1050 1050,1800
And so clients you interact.

2109
01:13:19,530 --> 01:13:20,820
0,210 210,480 480,570 570,1200 1200,1290
Yeah, with the service you

2110
01:13:20,820 --> 01:13:22,740
0,270 270,630 630,720 720,1320 1620,1920
not directly the draft so

2111
01:13:22,740 --> 01:13:24,030
0,120 120,270 270,330 330,690 690,1290
we have a client here.

2112
01:13:24,580 --> 01:13:25,630
0,90 90,180 180,390 390,960 960,1050
You know that sends you

2113
01:13:25,630 --> 01:13:26,980
0,60 60,570 570,720 720,960 960,1350
an operation like abboud operate

2114
01:13:26,980 --> 01:13:27,880
0,120 120,330 330,750 750,840 840,900
or get operation for the

2115
01:13:27,880 --> 01:13:30,220
0,690 840,990 990,1350 1350,2040 2040,2340
service, the service receives this

2116
01:13:30,220 --> 01:13:32,080
0,750 900,1080 1080,1200 1200,1590 1590,1860
operation and it basically calls

2117
01:13:32,080 --> 01:13:33,180
0,600
start.

2118
01:13:35,520 --> 01:13:36,870
0,180 180,300 300,450 450,1140 1140,1350
Yeah, for that operation, quick

2119
01:13:36,870 --> 01:13:38,850
0,570 570,780 780,1500 1500,1860 1860,1980
draft does it chat you

2120
01:13:38,850 --> 01:13:39,750
0,120 120,510 540,660 660,780 780,900
know with you know the

2121
01:13:39,750 --> 01:13:40,920
0,600
other.

2122
01:13:40,920 --> 01:13:43,530
0,420 420,1140 1680,1800 1800,2100 2130,2610
Raft libraries, you know messages

2123
01:13:43,530 --> 01:13:44,640
0,150 150,390 390,810 810,1020 1020,1110
can flow back in at

2124
01:13:44,640 --> 01:13:45,570
0,150 150,360 360,420 420,840 840,930
some point the operation is

2125
01:13:45,570 --> 01:13:46,890
0,420 420,510 510,690 690,810 810,1320
committed and then it actually

2126
01:13:46,890 --> 01:13:48,360
0,270 270,660 660,1050 1050,1230 1230,1470
is no raft will say

2127
01:13:48,360 --> 01:13:50,220
0,330 330,420 420,870 870,1140 1440,1860
okay this operation is ready

2128
01:13:50,220 --> 01:13:51,570
0,90 90,180 180,630 840,1200 1200,1350
to be committed senses on

2129
01:13:51,570 --> 01:13:53,220
0,90 90,450 450,990 1110,1290 1290,1650
the applied channel and service,

2130
01:13:53,220 --> 01:13:55,020
0,180 180,510 510,930 930,1020 1020,1800
then basically execute the operation

2131
01:13:55,350 --> 01:13:56,880
0,360 360,600 600,660 660,1080 1080,1530
and send the response back

2132
01:13:56,880 --> 01:13:58,590
0,480 480,570 570,1050 1050,1140 1140,1710
after he executed the operation

2133
01:13:58,590 --> 01:13:59,940
0,360 360,570 570,660 660,1080 1080,1350
response back to decline saying

2134
01:13:59,940 --> 01:14:01,950
0,630 690,990 990,1620 1620,1920 1920,2010
well the value or to

2135
01:14:01,950 --> 01:14:03,480
0,390 390,480 480,630 630,900 900,1530
get you know key twenty

2136
01:14:03,480 --> 01:14:04,620
0,90 90,210 210,360 360,810
you know, is this.

2137
01:14:05,220 --> 01:14:05,940
0,240 240,360 360,510 510,630 630,720
Right, so this is a

2138
01:14:05,940 --> 01:14:08,760
0,210 210,900 1410,2340
get operation booth.

2139
01:14:09,500 --> 01:14:10,550
0,300 300,450 450,540 540,960 960,1050
And this is basically the

2140
01:14:10,550 --> 01:14:12,560
0,540 540,1230 1260,1740 1770,1860 1860,2010
value forget or you know

2141
01:14:12,560 --> 01:14:14,660
0,450 450,630 960,1530
OK that succeeded.

2142
01:14:14,660 --> 01:14:15,600
0,390
What.

2143
01:14:15,750 --> 01:14:16,860
0,330 330,450 450,600 600,1020 1020,1110
And we also discovered in

2144
01:14:16,860 --> 01:14:19,590
0,60 60,360 360,960 1440,2190 2400,2730
the last lecture a it

2145
01:14:19,590 --> 01:14:20,700
0,210 210,300 300,360 360,690 690,1110
might be the case that

2146
01:14:20,700 --> 01:14:22,890
0,570 600,1080 1170,1440 1440,1560 1560,2190
the client sends an RBC

2147
01:14:22,890 --> 01:14:25,260
0,540 540,690 690,1170 1170,1980 1980,2370
to a deserves a RBC

2148
01:14:25,260 --> 01:14:26,880
0,660 780,930 930,1020 1020,1290 1290,1620
disappears, so the client muscle

2149
01:14:26,880 --> 01:14:28,420
0,240 240,450 450,1050
yeah which resent.

2150
01:14:28,420 --> 01:14:29,470
0,450 450,660 660,780 780,870 870,1050
Um, and by the time

2151
01:14:29,470 --> 01:14:30,640
0,60 60,480 480,900 900,990 990,1170
the grecians actually you know

2152
01:14:30,640 --> 01:14:31,540
0,210 210,450 450,600 600,780 780,900
the leader might not be

2153
01:14:31,540 --> 01:14:32,900
0,120 120,390 390,810
the leader anymore.

2154
01:14:33,080 --> 01:14:34,160
0,360 360,540 540,600 600,750 750,1080
And so in that case

2155
01:14:34,160 --> 01:14:34,940
0,120 120,360 360,480 480,660 660,780
it has to sort of

2156
01:14:34,940 --> 01:14:36,560
0,510 510,900 900,960 960,1260 1260,1620
redirect itself to another year

2157
01:14:37,070 --> 01:14:37,940
0,210 210,510 510,660 660,780 780,870
so basically when there is

2158
01:14:37,940 --> 01:14:38,930
0,60 60,240 240,360 360,450 450,990
a little bit of code

2159
01:14:38,930 --> 01:14:39,500
0,120 120,150 150,270 270,390 390,570
with a way to think

2160
01:14:39,500 --> 01:14:40,620
0,240 240,630
about this.

2161
01:14:40,620 --> 01:14:41,280
0,270 270,330 330,480 480,600 600,660
There's a little bit of

2162
01:14:41,280 --> 01:14:42,570
0,300 300,390 390,450 450,870 870,1290
code at the client site

2163
01:14:42,690 --> 01:14:44,790
0,240 240,330 330,1260 1260,1890 1890,2100
sort of understands replicated state

2164
01:14:44,790 --> 01:14:46,410
0,270 270,330 330,540 540,870 1260,1620
machines a little bit, um,

2165
01:14:46,410 --> 01:14:48,060
0,360 360,540 540,930 930,1050 1050,1650
and it maintains some information

2166
01:14:48,060 --> 01:14:49,170
0,180 180,600 600,780 780,990 990,1110
it maintains like who's the

2167
01:14:49,170 --> 01:14:50,970
0,510 810,1350 1350,1500 1500,1710 1710,1800
leader and who are the

2168
01:14:50,970 --> 01:14:52,540
0,330 330,1050
other followers.

2169
01:14:52,540 --> 01:14:53,650
0,240 240,360 360,570 570,690 690,1110
And so that can switch

2170
01:14:53,650 --> 01:14:56,020
0,570 570,960 1110,1380 1380,1770 1770,2370
between them, um, if necessary.

2171
01:14:57,690 --> 01:14:59,220
0,210 210,630 630,1140 1170,1440 1440,1530
We also, um last time

2172
01:14:59,220 --> 01:14:59,880
0,90 90,300 300,330 330,510 510,660
we talked a little bit

2173
01:14:59,880 --> 01:15:01,410
0,270 270,510 510,1110 1110,1350 1350,1530
about its possible that you

2174
01:15:01,410 --> 01:15:02,970
0,270 270,720 720,840 840,960 960,1560
know operation can be duplicated

2175
01:15:03,000 --> 01:15:04,740
0,270 270,750 1050,1170 1170,1260 1260,1740
right, because you know the.

2176
01:15:05,420 --> 01:15:07,160
0,930 960,1410 1410,1470 1470,1680 1680,1740
The client may send an

2177
01:15:07,160 --> 01:15:08,360
0,450 450,690 690,1050 1050,1140 1140,1200
operation input operation to the

2178
01:15:08,360 --> 01:15:12,050
0,690 990,2220 2220,2910 2940,3330 3360,3690
service, um, in the you

2179
01:15:12,050 --> 01:15:13,430
0,120 120,750 780,1080 1080,1260 1260,1380
know the client doesn't get

2180
01:15:13,430 --> 01:15:15,380
0,60 60,780 1020,1620 1620,1680 1680,1950
a response, but the surge

2181
01:15:15,380 --> 01:15:16,580
0,180 180,720 720,870 870,960 960,1200
actually received so it went

2182
01:15:16,580 --> 01:15:17,720
0,420 420,480 480,660 660,870 870,1140
through, you know went through

2183
01:15:17,720 --> 01:15:20,750
0,600 600,900 900,1650 1650,2340 2580,3030
the whole operation sequence, um,

2184
01:15:20,750 --> 01:15:24,050
0,90 90,270 900,1560 1560,2250 2280,3300
you know starting the raft

2185
01:15:24,050 --> 01:15:25,310
0,30 30,480 480,660 660,1020 1020,1260
a pants can go through

2186
01:15:25,310 --> 01:15:26,780
0,510 540,870 870,1290 1290,1380 1380,1470
the draft motion and then

2187
01:15:26,780 --> 01:15:27,710
0,300 300,570 570,660 660,780 780,930
basically sending it out to

2188
01:15:27,710 --> 01:15:28,860
0,240 240,600
apply channel.

2189
01:15:28,890 --> 01:15:30,270
0,120 120,360 360,780 780,1080 1080,1380
And so basically decline naturally

2190
01:15:30,270 --> 01:15:31,620
0,420 420,600 600,660 660,930 930,1350
might send a second one.

2191
01:15:33,240 --> 01:15:35,520
0,630 630,780 780,990 990,1620 1710,2280
And you know the basically

2192
01:15:35,520 --> 01:15:37,380
0,120 120,270 270,1020 1020,1620 1650,1860
for the repetition, um, you

2193
01:15:37,380 --> 01:15:38,370
0,60 60,390 390,570 570,810 810,990
know that might actually go

2194
01:15:38,370 --> 01:15:40,320
0,570 600,690 690,810 810,1200 1500,1950
through, you know the raft

2195
01:15:40,320 --> 01:15:41,280
0,270 270,540 540,750 750,900 900,960
library two comes out in

2196
01:15:41,280 --> 01:15:42,420
0,90 90,360 360,750 750,870 870,1140
the apply channel and so

2197
01:15:42,420 --> 01:15:43,500
0,390 390,540 540,630 630,810 810,1080
you have to do some

2198
01:15:43,500 --> 01:15:45,150
0,360 360,750 750,870 870,1350 1350,1650
duplicate detection and detection and

2199
01:15:45,150 --> 01:15:46,140
0,450 450,630 630,690 690,930 930,990
multiple ways of doing it,

2200
01:15:46,140 --> 01:15:46,860
0,120 120,300 300,480 480,600 600,720
but either way you have

2201
01:15:46,860 --> 01:15:48,340
0,60 60,540 540,990
to duplicate detection.

2202
01:15:48,520 --> 01:15:50,590
0,210 210,300 300,600 600,1110 1380,2070
So, in addition to a

2203
01:15:50,620 --> 01:15:52,300
0,210 210,270 270,840 840,1290 1290,1680
sort of maintain state about

2204
01:15:52,300 --> 01:15:54,370
0,210 210,600 630,1350 1380,1920 1920,2070
like what the leader and

2205
01:15:54,370 --> 01:15:56,350
0,60 60,420 420,810 960,1530 1710,1980
the followers are a prudent

2206
01:15:56,350 --> 01:15:57,370
0,180 180,420 420,750 750,930 930,1020
debt also actually have an

2207
01:15:57,370 --> 01:15:58,340
0,480
idea.

2208
01:15:58,340 --> 01:15:59,780
0,360 360,450 450,720 720,1260 1260,1440
Yeah an ID associated with

2209
01:15:59,780 --> 01:16:00,980
0,210 210,570 660,750 750,1080 1080,1200
it and we're going to

2210
01:16:00,980 --> 01:16:02,240
0,480 480,660 660,750 750,840 840,1260
maintain what is the last

2211
01:16:02,270 --> 01:16:03,590
0,570 570,780 780,930 930,1230 1230,1320
ID that it actually is

2212
01:16:03,590 --> 01:16:05,150
0,270 270,330 330,480 480,990 1140,1560
trying to get through and

2213
01:16:05,150 --> 01:16:06,170
0,180 180,270 270,690 690,810 810,1020
that is used to actually

2214
01:16:06,170 --> 01:16:07,660
0,510 510,990
duplicate detection.

2215
01:16:08,560 --> 01:16:09,280
0,120 120,270 270,480 480,660 660,720
And this little piece of

2216
01:16:09,280 --> 01:16:10,510
0,390 390,480 480,690 690,1140 1140,1230
code is often called a

2217
01:16:10,510 --> 01:16:11,660
0,600
clerk.

2218
01:16:11,880 --> 01:16:13,230
0,120 120,300 300,540 750,1230 1230,1350
You know the clerk that

2219
01:16:13,230 --> 01:16:14,880
0,660 720,990 990,1080 1080,1530 1530,1650
interacts with the surface and

2220
01:16:14,880 --> 01:16:15,480
0,90 90,240 240,300 300,510 510,600
it does a little bit

2221
01:16:15,480 --> 01:16:16,950
0,90 90,630 630,750 750,1350 1350,1470
of work to collaborate with

2222
01:16:16,950 --> 01:16:17,760
0,60 60,390 390,480 480,690 690,810
the service you actually get

2223
01:16:17,760 --> 01:16:18,960
0,60 60,450 450,750 750,1020 1020,1200
the writing done and so

2224
01:16:18,960 --> 01:16:20,720
0,90 90,210 210,570 570,1260
we have multiple clients.

2225
01:16:20,870 --> 01:16:23,780
0,300 300,870 870,1680 2220,2820 2820,2910
All half a floor of

2226
01:16:23,780 --> 01:16:27,320
0,630 660,1320 1350,2160 2160,2730 2760,3540
library material user go package,

2227
01:16:27,560 --> 01:16:29,390
0,540 540,630 630,780 780,1350 1350,1830
and you know declines basically

2228
01:16:29,390 --> 01:16:31,140
0,390 390,690 690,1230
talk Putin gets.

2229
01:16:31,170 --> 01:16:33,120
0,90 90,210 210,810 1050,1380 1380,1950
You know over that interface

2230
01:16:33,120 --> 01:16:34,200
0,180 180,510 510,600 600,660 660,1080
and inside of the cleric

2231
01:16:34,200 --> 01:16:36,360
0,240 240,720 720,930 930,1650 1950,2160
actually maintains these IDs or

2232
01:16:36,360 --> 01:16:37,620
0,390 390,630 630,1020 1020,1110 1110,1260
maintains one idea for the

2233
01:16:37,620 --> 01:16:39,030
0,750 750,870 870,990 990,1230 1230,1410
outstanding you know put get

2234
01:16:39,030 --> 01:16:40,470
0,690 690,930 930,1200 1200,1290 1290,1440
operation as well as some

2235
01:16:40,470 --> 01:16:41,940
0,480 480,720 720,1140 1140,1380 1380,1470
information about who's part of

2236
01:16:41,940 --> 01:16:43,060
0,210 210,570
the cluster.

2237
01:16:43,060 --> 01:16:44,080
0,480
Okay.

2238
01:16:44,560 --> 01:16:45,900
0,150 150,330 330,450 450,780
Does that make sense.

2239
01:16:46,090 --> 01:16:46,780
0,240 240,360 360,510 510,570 570,690
So that's sort of the

2240
01:16:46,780 --> 01:16:48,220
0,270 270,690 690,930 930,1230 1230,1440
basic structure, correct, unlike how

2241
01:16:48,220 --> 01:16:49,780
0,420 420,630 630,870 870,930 930,1560
raft fits into a larger

2242
01:16:49,810 --> 01:16:50,880
0,450
picture.

2243
01:16:51,520 --> 01:16:53,080
0,150 150,690 720,1200 1200,1350 1350,1560
The one question that comes

2244
01:16:53,080 --> 01:16:55,390
0,390 390,750 840,1290 1290,1740 1740,2310
always up a is what

2245
01:16:55,390 --> 01:16:55,990
0,120 120,210 210,420 420,510 510,600
you know what is the

2246
01:16:55,990 --> 01:16:57,820
0,960 990,1080 1080,1260 1260,1680 1680,1830
guarantees you know that the

2247
01:16:57,820 --> 01:16:59,410
0,660 660,840 840,930 930,1290 1290,1590
supervisor and the clerk together

2248
01:16:59,410 --> 01:17:01,930
0,540 840,1290 1290,1680 1680,2250 2250,2520
make a two declines about

2249
01:17:01,930 --> 01:17:03,220
0,120 120,270 270,360 360,540 540,1290
these food and get operations.

2250
01:17:05,040 --> 01:17:06,450
0,210 210,390 390,720 720,1080 1080,1410
So this really means what

2251
01:17:06,450 --> 01:17:08,440
0,90 90,180 180,750 750,1350
is the correctness criteria.

2252
01:17:11,940 --> 01:17:14,550
0,450 450,1770 1770,2100 2100,2310 2310,2610
And z way, we always

2253
01:17:14,550 --> 01:17:15,720
0,120 120,570 570,780 780,1020 1020,1170
have described so far we've

2254
01:17:15,720 --> 01:17:17,010
0,180 180,450 450,930 930,1200 1200,1290
been reasonable sloppy about it,

2255
01:17:17,190 --> 01:17:18,690
0,540 540,780 780,900 900,1260 1260,1500
um, I've been sloppy about

2256
01:17:18,690 --> 01:17:20,280
0,150 510,810 810,1020 1020,1320 1320,1590
it, um, and maybe I've

2257
01:17:20,280 --> 01:17:21,330
0,240 240,390 390,540 540,870 870,1050
said is like well should

2258
01:17:21,330 --> 01:17:22,420
0,660
behave.

2259
01:17:22,480 --> 01:17:24,360
0,480 480,510 510,780 780,1290
Like a single machine.

2260
01:17:32,820 --> 01:17:33,690
0,120 120,270 270,480 480,630 630,870
But even now there's a

2261
01:17:33,690 --> 01:17:34,800
0,210 210,330 330,420 420,510 510,1110
little bit of an imprecise

2262
01:17:34,800 --> 01:17:36,300
0,570 570,810 810,1020 1020,1380 1380,1500
definition because what happens if

2263
01:17:36,300 --> 01:17:37,380
0,180 180,630 630,900 900,990 990,1080
two clients basically at the

2264
01:17:37,380 --> 01:17:39,150
0,420 420,1080 1080,1230 1230,1680 1680,1770
same time you execute a

2265
01:17:39,150 --> 01:17:40,290
0,210 210,300 300,360 360,570 570,1140
prude or a get operation

2266
01:17:40,290 --> 01:17:41,610
0,420 480,750 750,930 930,1230 1230,1320
and what one actually is

2267
01:17:41,610 --> 01:17:43,290
0,60 60,450 450,960 1320,1500 1500,1680
the correct outcome of these

2268
01:17:43,290 --> 01:17:44,490
0,450 450,570 570,810 810,1050 1050,1200
operations, so we really need

2269
01:17:44,490 --> 01:17:45,090
0,60 60,240 240,300 300,450 450,600
to sort a little bit

2270
01:17:45,090 --> 01:17:46,200
0,180 180,630 630,870 900,990 990,1110
more precise or you know

2271
01:17:46,200 --> 01:17:47,700
0,120 120,300 300,660 990,1320 1320,1500
I think like maybe like

2272
01:17:47,700 --> 01:17:48,780
0,30 30,240 240,690 690,870 870,1080
a single machines the right

2273
01:17:48,780 --> 01:17:49,770
0,540 540,720 720,780 780,960 960,990
intuition, but we need a

2274
01:17:49,770 --> 01:17:52,050
0,180 180,330 330,810 810,1620 1650,2280
little bit precise a definition.

2275
01:17:52,500 --> 01:17:54,330
0,210 210,720 720,1560 1560,1650 1650,1830
And this definition you saw

2276
01:17:54,330 --> 01:17:55,830
0,120 120,1050 1080,1350 1350,1410 1410,1500
the term used in the

2277
01:17:55,830 --> 01:17:58,260
0,540 630,990 990,1500 1500,2130 2130,2430
paper, this definition is called

2278
01:17:58,260 --> 01:18:00,080
0,840
vulnerability.

2279
01:18:04,410 --> 01:18:07,290
0,480 480,870 870,1230 1230,1890 1950,2880
Literary abilities, basically spec specification

2280
01:18:07,290 --> 01:18:09,870
0,90 90,810 810,1920 2010,2250 2250,2580
of what values a put

2281
01:18:09,870 --> 01:18:11,340
0,180 180,420 420,840 840,990 990,1470
and get operations can return.

2282
01:18:11,870 --> 01:18:15,050
0,510 510,660 660,1050 1080,2640 2640,3180
Particularly those in zen operations

2283
01:18:15,050 --> 01:18:16,160
0,210 210,420 420,660 660,780 780,1110
really what death can actually

2284
01:18:16,160 --> 01:18:17,160
0,390
return.

2285
01:18:17,250 --> 01:18:19,110
0,360 360,600 600,1200 1200,1620 1620,1860
And they successfully, what are

2286
01:18:19,110 --> 01:18:20,730
0,600 660,1050 1050,1140 1140,1260 1260,1620
allowed things to be returned,

2287
01:18:20,730 --> 01:18:21,360
0,180 180,240 240,480 480,570 570,630
what are things that are

2288
01:18:21,360 --> 01:18:22,680
0,300 300,720 720,840 840,960 960,1320
not allowed to be returned

2289
01:18:22,710 --> 01:18:24,030
0,630 630,810 810,1050 1050,1230 1230,1320
independent or actually how you

2290
01:18:24,030 --> 01:18:25,410
0,360 360,540 810,1050 1050,1230 1230,1380
implement it, it's just like

2291
01:18:25,410 --> 01:18:27,060
0,420 420,1140
purely specification.

2292
01:18:27,660 --> 01:18:28,980
0,420 420,630 630,960 960,1110 1110,1320
And it basically has free

2293
01:18:28,980 --> 01:18:31,120
0,480 480,690 690,1110 1110,1560
components to theorize ability.

2294
01:18:31,530 --> 01:18:33,600
0,510 870,1350 1350,1620 1620,1860 1860,2070
Ah minimize ability says, if

2295
01:18:33,600 --> 01:18:34,380
0,120 120,360 360,540 540,630 630,780
you have look at some

2296
01:18:34,380 --> 01:18:36,120
0,360 360,450 450,1290 1320,1560 1560,1740
sequence of operations and some

2297
01:18:36,120 --> 01:18:38,040
0,90 90,240 240,720 720,1470 1770,1920
of them executed currently it

2298
01:18:38,040 --> 01:18:38,820
0,240 240,300 300,390 390,480 480,780
has to be the case

2299
01:18:38,820 --> 01:18:39,930
0,120 120,300 300,330 330,600 600,1110
that there's a total order

2300
01:18:40,080 --> 01:18:41,220
0,210 210,330 330,450 450,900 900,1140
so you can arrange all

2301
01:18:41,220 --> 01:18:42,510
0,120 120,690 690,780 780,1020 1020,1290
the operation in sum total

2302
01:18:42,510 --> 01:18:43,520
0,480
order.

2303
01:18:52,350 --> 01:18:54,220
0,480 480,1320
Recycling operations.

2304
01:18:55,730 --> 01:18:56,920
0,630
Two.

2305
01:18:56,920 --> 01:18:58,140
0,690
I'm.

2306
01:18:58,220 --> 01:18:59,240
0,270 270,450 450,540 540,810 810,1020
It has to match real

2307
01:18:59,240 --> 01:19:00,300
0,480
time.

2308
01:19:06,260 --> 01:19:07,580
0,180 180,630 630,690 690,1080 1080,1320
With that, I mean that

2309
01:19:07,580 --> 01:19:10,100
0,270 270,330 330,1020 1020,1800 2070,2520
if an operation completed before

2310
01:19:10,100 --> 01:19:12,220
0,60 60,390 390,870 870,1590
the second operation started.

2311
01:19:12,520 --> 01:19:14,050
0,720 750,1050 1050,1140 1140,1380 1380,1530
Um, even if those men

2312
01:19:14,050 --> 01:19:15,550
0,510 510,570 570,840 840,1350 1350,1500
operators are different machines, it

2313
01:19:15,550 --> 01:19:16,390
0,210 210,270 270,390 390,480 480,840
has to be the case

2314
01:19:16,390 --> 01:19:17,740
0,180 180,300 300,480 480,780 780,1350
that in this total order,

2315
01:19:17,950 --> 01:19:19,840
0,660 660,900 900,1410 1410,1710 1710,1890
the first operation shows up

2316
01:19:19,840 --> 01:19:21,700
0,330 330,390 390,690 690,1320
before the second operation.

2317
01:19:24,280 --> 01:19:24,910
0,150 150,240 240,390 390,450 450,630
And that sort of makes

2318
01:19:24,910 --> 01:19:25,840
0,240 240,510 510,660 660,810 810,930
sense, great like if it

2319
01:19:25,840 --> 01:19:26,950
0,300 300,420 420,480 480,720 720,1110
behaves like a single machine,

2320
01:19:26,950 --> 01:19:27,880
0,90 90,150 150,390 390,480 480,930
and you start an operation

2321
01:19:27,880 --> 01:19:30,220
0,480 480,810 810,1110 1110,1710 1980,2340
laugh after another operation, then

2322
01:19:30,220 --> 01:19:31,540
0,90 90,330 330,630 630,960 960,1320
the single machine would always

2323
01:19:31,540 --> 01:19:32,860
0,270 270,360 360,810 810,960 960,1320
return the results of the

2324
01:19:32,980 --> 01:19:35,350
0,360 360,990 990,1320 1650,1950 1950,2370
first operation so and finally

2325
01:19:35,350 --> 01:19:37,390
0,120 120,330 330,1020 1740,1890 1890,2040
a read operation, so this

2326
01:19:37,390 --> 01:19:38,560
0,90 90,300 300,480 480,930 930,1170
is like an arcane key

2327
01:19:38,560 --> 01:19:39,790
0,300 300,660 660,870 870,960 960,1230
value server only has one

2328
01:19:39,790 --> 01:19:41,140
0,210 210,660 660,810 810,960 960,1350
read operation, then we get.

2329
01:19:41,560 --> 01:19:43,060
0,150 150,270 270,720 720,1050 1050,1500
Um, but the read operation

2330
01:19:43,060 --> 01:19:44,860
0,180 180,510 510,1110
should always return.

2331
01:19:45,930 --> 01:19:47,340
0,210 210,900
The result.

2332
01:19:49,110 --> 01:19:51,020
0,210 210,300 300,630 630,1080
What's the last right.

2333
01:19:56,040 --> 01:19:57,360
0,420 420,660 660,750 750,870 870,1320
Um, so in our case,

2334
01:19:57,360 --> 01:19:58,560
0,90 90,240 240,570 570,990 990,1200
you know we do get

2335
01:19:58,560 --> 01:20:01,410
0,720 720,1350 1620,2130 2130,2640 2670,2850
operation and um the food

2336
01:20:01,410 --> 01:20:04,170
0,780 1020,1710 1740,2130 2130,2370 2370,2760
operation, a happened well before

2337
01:20:04,170 --> 01:20:06,210
0,360 360,1080 1080,1470 1470,1650 1650,2040
it and completed well before

2338
01:20:06,210 --> 01:20:07,920
0,420 600,840 840,1050 1050,1440 1440,1710
then that get operation should

2339
01:20:07,920 --> 01:20:10,710
0,570 570,660 660,1260 1410,2280 2490,2790
observe the last, um should

2340
01:20:10,710 --> 01:20:12,940
0,330 330,420 420,750 750,1830
observe the last boot.

2341
01:20:12,940 --> 01:20:14,020
0,540
Okay.

2342
01:20:14,020 --> 01:20:15,010
0,120 120,240 240,420 420,510 510,990
So this sort of um,

2343
01:20:15,010 --> 01:20:17,560
0,720 1050,1290 1290,1440 1440,1710 1710,2550
um, these are free conditions

2344
01:20:17,560 --> 01:20:18,370
0,150 150,330 330,540 540,750 750,810
you know that whether to

2345
01:20:18,370 --> 01:20:20,410
0,810 840,1020 1020,1410 1410,1710 1710,2040
determine a whether system actually

2346
01:20:20,410 --> 01:20:21,900
0,450 450,930
summarize ability.

2347
01:20:21,990 --> 01:20:23,130
0,480 480,750 750,840 840,960 960,1140
And you can think about

2348
01:20:23,130 --> 01:20:24,720
0,120 120,720 720,900 900,1380 1380,1590
the reliability as well, just

2349
01:20:24,720 --> 01:20:25,860
0,300 300,450 450,510 510,840 840,1140
behave like a single sheet.

2350
01:20:26,530 --> 01:20:27,730
0,300 300,420 420,840 900,1140 1140,1200
So let me make a

2351
01:20:27,730 --> 01:20:28,750
0,150 150,240 240,390 390,780 780,1020
little bit more concrete because

2352
01:20:28,750 --> 01:20:29,830
0,120 120,210 210,360 360,480 480,1080
there's a little bit abstract.

2353
01:20:30,610 --> 01:20:33,190
0,630 780,1020 1020,1620 1650,2040 2040,2580
And the way basically people

2354
01:20:33,460 --> 01:20:36,160
0,570 570,870 870,1800 1800,2160 2340,2700
think about reliability or argue

2355
01:20:36,160 --> 01:20:37,420
0,150 150,210 210,480 480,630 630,1260
that the system has reliable

2356
01:20:37,420 --> 01:20:39,310
0,210 210,630 630,840 840,1290 1290,1890
is looking at particular histories

2357
01:20:39,310 --> 01:20:42,000
0,240 240,1050 1320,1470 1470,2220
or executions and nc.

2358
01:20:44,850 --> 01:20:45,600
0,270 270,390 390,480 480,570 570,750
See if you can use

2359
01:20:45,600 --> 01:20:47,010
0,630 630,750 750,840 840,1080 1110,1410
histories if you can turn

2360
01:20:47,010 --> 01:20:48,150
0,180 180,390 390,450 450,720 720,1140
that into a total order,

2361
01:20:48,180 --> 01:20:49,560
0,270 270,450 450,570 570,1080 1080,1380
even though the operations actually

2362
01:20:49,560 --> 01:20:52,110
0,210 210,330 330,840 1110,1950 1950,2550
might have actually executed currently.

2363
01:20:52,790 --> 01:20:53,780
0,240 240,630 630,720 720,900 900,990
So let me give you

2364
01:20:53,780 --> 01:20:55,970
0,180 180,870 1020,1050 1050,1560 1560,2190
one example a trivial example,

2365
01:20:56,690 --> 01:20:58,040
0,150 150,360 360,570 570,750 750,1350
so let's say we have

2366
01:20:58,070 --> 01:21:00,110
0,210 210,660 660,840 840,1350 1350,2040
three clients c one c2

2367
01:21:00,110 --> 01:21:01,790
0,810 1140,1350 1350,1470 1470,1620 1620,1680
c3 and they do a

2368
01:21:01,790 --> 01:21:03,200
0,210 210,300 300,480 480,990
bunch of boots against.

2369
01:21:03,390 --> 01:21:05,010
0,300 300,870 960,1080 1080,1260 1260,1620
Um, so you know typically

2370
01:21:05,010 --> 01:21:06,030
0,90 90,450 450,570 570,720 720,1020
the way you know, basically

2371
01:21:06,030 --> 01:21:06,960
0,450 450,600 600,660 660,750 750,930
it has to be some

2372
01:21:06,960 --> 01:21:08,580
0,570 570,900 900,1110 1110,1200 1200,1620
start point where the operation

2373
01:21:08,580 --> 01:21:09,660
0,570
started.

2374
01:21:09,900 --> 01:21:10,920
0,270 270,450 450,510 510,720 720,1020
And there's a main point

2375
01:21:10,920 --> 01:21:12,840
0,210 210,360 360,840 840,1440
where the operation ends.

2376
01:21:12,960 --> 01:21:14,130
0,270 270,360 360,660 660,840 840,1170
So, for example when actually

2377
01:21:14,130 --> 01:21:16,050
0,480 720,1080 1080,1290 1290,1590 1590,1920
the client actually gets the

2378
01:21:16,050 --> 01:21:18,560
0,630 630,1140 1140,1440 1440,2010
return from the surface.

2379
01:21:18,840 --> 01:21:19,860
0,360 360,480 480,630 630,780 780,1020
And so let's say this

2380
01:21:19,860 --> 01:21:21,330
0,360 360,1110 1110,1170 1170,1290 1290,1470
write operation, you know to

2381
01:21:21,330 --> 01:21:23,070
0,510 510,660 660,780 780,1200 1200,1740
value to the variable x..

2382
01:21:23,560 --> 01:21:24,430
0,180 180,300 300,480 480,720 720,870
And we write one to

2383
01:21:24,430 --> 01:21:25,220
0,240
it.

2384
01:21:25,830 --> 01:21:27,090
0,300 300,420 420,660 660,900 900,1260
So the client one started

2385
01:21:27,090 --> 01:21:28,050
0,60 60,240 240,450 450,870 870,960
at some point in the

2386
01:21:28,050 --> 01:21:29,100
0,240 240,600 600,690 690,750 750,1050
write operation to the variable

2387
01:21:29,100 --> 01:21:30,810
0,240 240,360 360,540 540,960 1290,1710
X the right one and

2388
01:21:30,810 --> 01:21:32,580
0,420 420,630 630,750 750,1110 1320,1770
ends at some point here.

2389
01:21:33,330 --> 01:21:35,420
0,540 540,720 720,990 990,1410
Maybe the second one.

2390
01:21:38,400 --> 01:21:39,720
0,480 480,690 690,960 960,1140 1140,1320
A and right to do

2391
01:21:39,720 --> 01:21:40,600
0,360
it.

2392
01:21:40,600 --> 01:21:41,620
0,120 120,270 270,600 600,720 720,1020
And then maybe we have

2393
01:21:41,650 --> 01:21:42,910
0,210 210,330 330,960 960,1080 1080,1260
all the action and we've

2394
01:21:42,910 --> 01:21:44,260
0,240 240,390 390,960 960,1110 1110,1350
linear ized ability is when

2395
01:21:44,260 --> 01:21:45,940
0,420 420,720 720,1230 1230,1560 1560,1680
operation happens currently so all

2396
01:21:45,940 --> 01:21:48,430
0,510 510,1140 1290,1980 1980,2220 2220,2490
operations starts before another one

2397
01:21:48,430 --> 01:21:49,930
0,270 270,690 690,840 840,900 900,1500
actually finishes so for example

2398
01:21:49,960 --> 01:21:51,370
0,270 270,540 540,840 840,900 900,1410
we might have the following

2399
01:21:51,370 --> 01:21:52,930
0,720 720,1020 1020,1140 1140,1350 1350,1560
operation climbed to Dollar, read

2400
01:21:52,930 --> 01:21:54,070
0,510 510,660 660,780 780,990 990,1140
operation in our case would

2401
01:21:54,070 --> 01:21:55,600
0,240 240,480 480,840
be a guess.

2402
01:21:55,600 --> 01:21:57,790
0,120 120,240 240,810 1320,1770 1770,2190
And as Reid of acts

2403
01:21:57,790 --> 01:21:58,870
0,120 120,210 210,540 540,990 990,1080
and the value returned by

2404
01:21:58,870 --> 01:22:00,540
0,150 150,600 600,750 750,1110
this operation is to.

2405
01:22:00,940 --> 01:22:01,960
0,150 150,630 690,870 870,960 960,1020
And then we have a

2406
01:22:01,960 --> 01:22:03,850
0,630 930,1140 1140,1200 1200,1710 1710,1890
similar sort of situation where

2407
01:22:03,850 --> 01:22:04,990
0,270 270,510 510,600 600,810 810,1140
coin free it actually starts

2408
01:22:04,990 --> 01:22:06,640
0,60 60,630 630,690 690,870 870,1650
an operation a read operation.

2409
01:22:07,290 --> 01:22:09,090
0,690 690,900 900,1170 1170,1590 1590,1800
And um, which acts and

2410
01:22:09,090 --> 01:22:10,560
0,120 120,510 510,870
it returns one.

2411
01:22:11,370 --> 01:22:12,720
0,510 510,900 900,960 960,1170 1170,1350
A when you make this

2412
01:22:12,720 --> 01:22:14,520
0,240 240,450 480,720 720,1260
little bit more clean.

2413
01:22:15,660 --> 01:22:17,920
0,150 150,300 300,990 1080,1680
The read operation a.

2414
01:22:17,920 --> 01:22:19,330
0,180 180,540 540,1170 1170,1260 1260,1410
Actually returns before you know

2415
01:22:19,330 --> 01:22:21,160
0,270 270,600 600,780 780,1260 1260,1830
the right to operation starts

2416
01:22:21,220 --> 01:22:23,410
0,300 300,690 960,1440 1440,1740 1740,2190
or ends a and sensing

2417
01:22:23,410 --> 01:22:24,340
0,120 120,420 420,690 690,810 810,930
from march one and then

2418
01:22:24,340 --> 01:22:25,450
0,60 60,390 390,660 660,900 900,1110
the question that always comes

2419
01:22:25,450 --> 01:22:27,910
0,330 570,750 750,930 930,1710 1770,2460
up, is this alliterative eyes,

2420
01:22:27,910 --> 01:22:29,960
0,150 150,810 900,1500
this alliterative execution.

2421
01:22:30,800 --> 01:22:32,480
0,450 600,780 780,870 870,990 990,1680
Um, and if it's irrational

2422
01:22:32,480 --> 01:22:33,680
0,120 120,480 480,570 570,840 840,1200
then basically it means like

2423
01:22:33,710 --> 01:22:34,850
0,270 270,450 450,840 840,1080 1080,1140
this could happen on a

2424
01:22:34,850 --> 01:22:36,300
0,270 270,600 600,870
single machine, too.

2425
01:22:37,000 --> 01:22:38,170
0,420 420,660 660,780 780,1080 1080,1170
So could this happen on

2426
01:22:38,170 --> 01:22:39,540
0,60 60,300 300,750
a single machine.

2427
01:22:39,940 --> 01:22:41,110
0,210 210,330 330,540 540,720 720,1170
We can just like abstract

2428
01:22:41,110 --> 01:22:42,100
0,90 90,300 300,540 540,660 660,990
and think about it without

2429
01:22:42,100 --> 01:22:43,480
0,300 300,570 570,810
actually having one.

2430
01:22:45,220 --> 01:22:46,600
0,150 150,330 330,750 750,1140 1140,1380
Is this legit outcome from

2431
01:22:46,600 --> 01:22:47,380
0,180 180,360 360,570 570,720 720,780
this book, we need to

2432
01:22:47,380 --> 01:22:48,400
0,180 180,330 330,480 480,660 660,1020
look at is the outcomes

2433
01:22:48,400 --> 01:22:49,600
0,150 150,450 450,750 750,1080 1080,1200
of our two and four

2434
01:22:49,600 --> 01:22:51,460
0,390 390,540 540,690 690,1380 1620,1860
c2 and a c3, no

2435
01:22:51,460 --> 01:22:53,710
0,150 150,360 360,1050 1050,1560 1590,2250
is this a legit execution.

2436
01:22:54,520 --> 01:22:56,800
0,750 750,1080 1080,1980 1980,2010 2010,2280
I'm not sure I don't

2437
01:22:56,800 --> 01:22:57,580
0,210 210,330 330,420 420,540 540,780
really know what it means

2438
01:22:57,580 --> 01:22:59,140
0,270 270,690 690,960
for right to.

2439
01:22:59,140 --> 01:23:01,420
0,600 720,1470 1470,1560 1560,1800 1800,2280
Take like a long time.

2440
01:23:03,030 --> 01:23:04,710
0,360 360,540 540,1230 1230,1440 1440,1680
Well take a long time

2441
01:23:04,710 --> 01:23:06,040
0,90 90,240 240,690
for that matter.

2442
01:23:06,070 --> 01:23:06,910
0,270 270,390 390,570 570,750 750,840
If you think about the

2443
01:23:06,910 --> 01:23:09,820
0,0 1920,2100 2100,2160 2160,2430 2430,2910
um from the client perspective

2444
01:23:09,820 --> 01:23:11,800
0,210 210,300 300,750 750,1380 1380,1980
but it sends a request

2445
01:23:11,800 --> 01:23:12,910
0,120 120,180 180,690 690,900 900,1110
to the service, so that's

2446
01:23:12,910 --> 01:23:13,960
0,90 90,450 450,540 540,630 630,1050
the starting of the right.

2447
01:23:14,550 --> 01:23:16,170
0,840 840,1020 1020,1170 1170,1230 1230,1620
And I've got a return

2448
01:23:16,170 --> 01:23:18,030
0,690 690,1350 1350,1530 1530,1770 1770,1860
value at some point from

2449
01:23:18,030 --> 01:23:18,840
0,60 60,420 420,510 510,690 690,810
the service and that's the

2450
01:23:18,840 --> 01:23:20,180
0,210 210,300 300,420 420,810
end of the right.

2451
01:23:20,960 --> 01:23:21,860
0,180 180,300 300,420 420,750 750,900
And so in between all

2452
01:23:21,860 --> 01:23:22,910
0,150 150,210 210,420 420,780 780,1050
kinds of stuff happens great

2453
01:23:22,910 --> 01:23:24,290
0,210 210,630 630,750 750,840 840,1380
wind actually to the servers,

2454
01:23:24,290 --> 01:23:25,940
0,60 60,630 630,930 930,1140 1140,1650
the servers put into draft

2455
01:23:25,940 --> 01:23:27,290
0,360 360,750 750,930 930,1050 1050,1350
rap Ren went to apply

2456
01:23:27,290 --> 01:23:28,670
0,480 480,630 630,780 780,1080 1110,1380
channel blah blah blah lots

2457
01:23:28,670 --> 01:23:29,780
0,60 60,300 300,600 630,930 930,1110
of stuff happened, we really

2458
01:23:29,780 --> 01:23:30,650
0,240 240,390 390,690 690,780 780,870
care about exactly what the

2459
01:23:30,650 --> 01:23:32,090
0,480 480,810 810,930 930,1080 1080,1440
implementation does at some point

2460
01:23:32,090 --> 01:23:33,140
0,30 30,630
a response.

2461
01:23:34,120 --> 01:23:34,870
0,270 270,390 390,510 510,600 600,750
And so you can think

2462
01:23:34,870 --> 01:23:35,770
0,240 240,420 420,480 480,630 630,900
about this, you know there's

2463
01:23:35,770 --> 01:23:37,540
0,420 510,900 900,1110 1110,1680 1680,1770
basically frequent current clients, you

2464
01:23:37,540 --> 01:23:39,160
0,180 180,570 570,1050 1080,1290 1290,1620
know they issued a concurrent

2465
01:23:39,160 --> 01:23:40,570
0,690 690,810 810,930 930,1050 1050,1410
operations and we are wondering

2466
01:23:40,570 --> 01:23:41,590
0,120 120,300 300,390 390,720 720,1020
if this is actually legit

2467
01:23:41,590 --> 01:23:42,440
0,390
outcome.

2468
01:23:44,900 --> 01:23:46,100
0,360 390,510 510,750 750,990 990,1200
Um I don't think this

2469
01:23:46,100 --> 01:23:47,900
0,300 300,990 990,1200 1200,1350 1350,1800
could happen on a single

2470
01:23:47,900 --> 01:23:51,500
0,540 540,1290 1860,2130 2130,2790 2970,3600
machine because the right for

2471
01:23:51,710 --> 01:23:54,200
0,360 360,720 720,1170 1170,2010
for two it finishes.

2472
01:23:54,500 --> 01:23:57,520
0,780 780,1260 1260,2490
After the restart.

2473
01:23:57,750 --> 01:23:59,490
0,480 510,900 900,1200 1200,1560 1560,1740
Oh, sorry, yeah yeah that's

2474
01:23:59,490 --> 01:24:01,260
0,360 450,840 840,1320 1350,1560 1560,1770
right, um, but it seems

2475
01:24:01,260 --> 01:24:02,550
0,150 150,300 300,630 630,780 780,1290
like the right should happen

2476
01:24:02,550 --> 01:24:04,320
0,630 630,780 780,1230
before the read.

2477
01:24:04,350 --> 01:24:07,480
0,600 1350,1500 1500,1680 1680,2610
And in this situation.

2478
01:24:07,480 --> 01:24:08,360
0,270
Yeah.

2479
01:24:09,130 --> 01:24:10,360
0,180 180,390 390,690 690,1050 1050,1230
It couldn't happen if the

2480
01:24:10,360 --> 01:24:12,580
0,480 480,990 990,1650
ride started after.

2481
01:24:12,580 --> 01:24:14,920
0,90 90,1020 1020,1260 1260,1800 1830,2340
If z right finished after

2482
01:24:14,920 --> 01:24:17,320
0,90 90,570 600,1140 1140,1620 2010,2400
they write restart yeah yeah,

2483
01:24:17,320 --> 01:24:19,300
0,180 180,390 390,750 750,1560 1560,1980
so one would think one

2484
01:24:19,300 --> 01:24:20,650
0,90 90,300 300,480 480,990 990,1350
way to think about is

2485
01:24:20,650 --> 01:24:22,240
0,300 510,750 750,870 870,1470 1500,1590
that we can move you

2486
01:24:22,240 --> 01:24:23,680
0,600 720,960 960,1080 1080,1140 1140,1440
know we have to construct

2487
01:24:23,680 --> 01:24:25,210
0,60 60,300 300,690 1020,1230 1230,1530
a total order and we

2488
01:24:25,210 --> 01:24:26,230
0,90 90,420 420,480 480,750 750,1020
can construct a total order

2489
01:24:26,230 --> 01:24:28,000
0,210 210,360 360,990 990,1530 1530,1770
where all the operations line

2490
01:24:28,000 --> 01:24:29,380
0,240 480,990 990,1080 1080,1200 1200,1380
up, then you know it's

2491
01:24:29,380 --> 01:24:31,260
0,30 30,330 330,960 960,1440
a valid hon history.

2492
01:24:31,290 --> 01:24:33,090
0,240 240,660 780,930 930,1440 1440,1800
And so, so let's construct

2493
01:24:33,090 --> 01:24:34,470
0,30 30,300 300,780 900,1050 1050,1380
a total order and then

2494
01:24:34,470 --> 01:24:35,340
0,150 150,390 390,450 450,570 570,870
go back to this question,

2495
01:24:35,340 --> 01:24:37,410
0,210 210,420 420,810 1500,1950 1980,2070
you just asked so a

2496
01:24:37,410 --> 01:24:38,550
0,270 270,630 630,870 870,900 900,1140
total order, here's a total

2497
01:24:38,550 --> 01:24:40,470
0,270 270,450 450,840 870,1590 1590,1920
order that I am coming.

2498
01:24:41,240 --> 01:24:41,840
0,210 210,300 300,420 420,480 480,600
So I'm going to do

2499
01:24:41,840 --> 01:24:43,880
0,420 420,540 540,780 780,1470 1680,2040
first the write operation, then

2500
01:24:43,880 --> 01:24:46,250
0,300 300,480 480,960 1560,2190 2190,2370
read X one then the

2501
01:24:46,250 --> 01:24:48,060
0,360 360,1080
right x2.

2502
01:24:48,060 --> 01:24:49,520
0,300 300,930
And then.

2503
01:24:49,700 --> 01:24:52,160
0,360 360,900 930,1440 1440,1980 2040,2460
Our X zero x2, right.

2504
01:24:52,720 --> 01:24:53,740
0,120 120,180 180,450 450,900 900,1020
It's a total order all

2505
01:24:53,740 --> 01:24:55,270
0,90 90,540 540,660 660,840 840,1530
the operations are now happening

2506
01:24:55,270 --> 01:24:56,600
0,750
sequentially.

2507
01:24:56,660 --> 01:24:57,860
0,480 480,600 600,720 720,810 810,1200
And you know we need

2508
01:24:57,860 --> 01:24:59,870
0,60 60,360 360,660 660,1500 1680,2010
to check whether a total

2509
01:24:59,870 --> 01:25:01,760
0,210 210,330 330,750 1110,1800 1800,1890
order is correct corresponding to

2510
01:25:01,760 --> 01:25:03,800
0,90 90,450 450,810 810,1530 1740,2040
the literacy ability definitions, well,

2511
01:25:03,800 --> 01:25:04,280
0,90 90,240 240,330 330,420 420,480
it has to be the

2512
01:25:04,280 --> 01:25:06,080
0,300 300,480 480,1050 1050,1230 1230,1800
case that operations that start.

2513
01:25:06,700 --> 01:25:09,250
0,450 660,930 930,1290 1290,1860 1950,2550
A UN operation starts after

2514
01:25:09,250 --> 01:25:10,480
0,180 180,390 390,810 810,1080 1080,1230
some under operation ends it

2515
01:25:10,480 --> 01:25:11,560
0,240 240,300 300,510 510,990 990,1080
needs to be after in

2516
01:25:11,560 --> 01:25:12,670
0,60 60,330 330,720 720,930 930,1110
the total order, and so

2517
01:25:12,670 --> 01:25:14,280
0,360 360,630 630,720 720,1170
we look at this.

2518
01:25:14,370 --> 01:25:15,240
0,210 210,360 360,420 420,480 480,870
Let's look at the issue,

2519
01:25:15,240 --> 01:25:16,740
0,420 420,900
this one.

2520
01:25:16,740 --> 01:25:18,630
0,180 180,660 660,1320 1350,1710 1710,1890
Must start after W X

2521
01:25:18,630 --> 01:25:20,340
0,420 420,720 720,900 900,1230 1350,1710
one and that is true

2522
01:25:20,340 --> 01:25:22,160
0,390 390,540 540,840 840,1290
correcting, this totally order.

2523
01:25:23,210 --> 01:25:25,020
0,420 420,690 690,1260
A orange one.

2524
01:25:25,020 --> 01:25:28,140
0,900 900,1080 1080,1530 1530,2190
Must you start after.

2525
01:25:28,270 --> 01:25:30,460
0,900 900,1200 1200,1290 1290,1470 1470,2190
Why, because it actually returns

2526
01:25:30,460 --> 01:25:31,690
0,150 150,270 270,360 360,960 990,1230
you know the value right,

2527
01:25:31,690 --> 01:25:32,980
0,150 150,390 390,660 660,930 930,1290
then next act in October

2528
01:25:32,980 --> 01:25:33,820
0,180 180,420 420,510 510,750 750,840
war that is also the

2529
01:25:33,820 --> 01:25:34,760
0,480
case.

2530
01:25:35,360 --> 01:25:37,190
0,210 210,960 990,1140 1140,1470 1470,1830
Our x2, you must start

2531
01:25:37,220 --> 01:25:39,140
0,600 600,990 990,1230 1230,1440 1440,1920
w x2 because it observes

2532
01:25:39,140 --> 01:25:40,360
0,90 90,720
the result.

2533
01:25:40,800 --> 01:25:42,330
0,270 270,480 480,960 990,1380 1380,1530
Of this right and you

2534
01:25:42,330 --> 01:25:43,470
0,90 90,270 270,570 570,810 810,1140
know that's perfectly fine too,

2535
01:25:43,500 --> 01:25:44,480
0,420
right.

2536
01:25:44,750 --> 01:25:45,890
0,240 240,330 330,420 420,810 810,1140
Now we can basically one

2537
01:25:45,890 --> 01:25:46,670
0,120 120,210 210,390 390,660 660,780
way to think about it

2538
01:25:46,670 --> 01:25:48,080
0,180 180,450 450,570 570,990 1170,1410
is that you know even

2539
01:25:48,080 --> 01:25:49,190
0,120 120,240 240,660 660,780 780,1110
though they executed this way

2540
01:25:49,190 --> 01:25:50,600
0,180 180,270 270,450 450,1020 1020,1410
we've got to rearrange things

2541
01:25:50,600 --> 01:25:51,680
0,210 210,450 450,630 630,690 690,1080
now to sort of fit

2542
01:25:52,010 --> 01:25:53,940
0,510 510,960 960,1410
a the order.

2543
01:25:54,140 --> 01:25:55,580
0,360 360,840 900,1230 1230,1350 1350,1440
And so, um, if we

2544
01:25:55,580 --> 01:25:57,200
0,120 120,360 360,810 930,1410 1410,1620
think about this, then this

2545
01:25:57,200 --> 01:25:58,850
0,150 150,210 210,510 510,1050 1380,1650
is a totally legit and

2546
01:25:58,850 --> 01:26:00,080
0,690
execution.

2547
01:26:00,140 --> 01:26:02,120
0,750 840,1170 1170,1620 1620,1800 1800,1980
Where the operation for much

2548
01:26:02,120 --> 01:26:03,290
0,120 120,180 180,720 810,1020 1020,1170
of the order and so

2549
01:26:03,290 --> 01:26:04,430
0,180 180,270 270,480 480,1050 1050,1140
this is like what a

2550
01:26:04,430 --> 01:26:05,540
0,330 330,600 600,720 720,930 930,1110
single machine would do so

2551
01:26:05,540 --> 01:26:06,320
0,0 0,300 300,630 630,720 720,780
a single machine could be

2552
01:26:06,320 --> 01:26:08,270
0,540 540,720 720,930 930,1530 1650,1950
executed right double exon read

2553
01:26:08,270 --> 01:26:09,590
0,150 150,540 570,780 780,990 990,1320
X one right next to

2554
01:26:09,590 --> 01:26:11,390
0,180 180,570 870,1170 1170,1470 1470,1800
read x2 and real perfectly

2555
01:26:11,390 --> 01:26:12,200
0,270
fine.

2556
01:26:14,390 --> 01:26:15,480
0,600
Okay.

2557
01:26:15,710 --> 01:26:16,880
0,150 150,300 300,660 690,1020 1020,1170
So let me make it

2558
01:26:16,880 --> 01:26:17,960
0,420 420,720 720,870 870,1050 1050,1080
helpful to think about a

2559
01:26:17,960 --> 01:26:19,850
0,300 300,450 450,540 540,1050 1080,1890
history that is not generalizable.

2560
01:26:20,720 --> 01:26:21,560
0,210 210,360 360,570 570,750 750,840
So let me look at

2561
01:26:21,560 --> 01:26:22,940
0,60 60,390 390,780
the second one.

2562
01:26:29,360 --> 01:26:31,280
0,510 510,1260 1260,1590 1590,1800 1800,1920
Um, and I'm gonna come

2563
01:26:31,280 --> 01:26:32,030
0,240 240,330 330,480 480,630 630,750
back on this on the

2564
01:26:32,060 --> 01:26:33,620
0,240 240,360 360,690 690,1230 1260,1560
first day anyway, so don't

2565
01:26:33,620 --> 01:26:35,030
0,270 270,390 390,630 630,1050 1080,1410
worry if this a lot

2566
01:26:35,030 --> 01:26:36,530
0,180 180,390 390,690 930,1290 1290,1500
makes sense yet but here's

2567
01:26:36,530 --> 01:26:38,300
0,210 210,630 990,1440 1440,1530 1530,1770
another one, um I got

2568
01:26:38,330 --> 01:26:39,780
0,840
c.

2569
01:26:40,060 --> 01:26:42,760
0,570 600,900 900,1380 1440,2250 2310,2700
Um, same thing right X

2570
01:26:42,760 --> 01:26:43,840
0,480
one.

2571
01:26:43,840 --> 01:26:45,280
0,390 390,480 480,630 630,690 690,1440
A I got a sheet

2572
01:26:45,310 --> 01:26:47,200
0,480 480,810 810,1350
and here right.

2573
01:26:48,010 --> 01:26:49,580
0,450 450,660 660,1020
Next to you.

2574
01:26:49,610 --> 01:26:51,560
0,870 1140,1470 1470,1650 1650,1800 1800,1950
And there's gonna be a

2575
01:26:51,560 --> 01:26:52,620
0,450
rid.

2576
01:26:52,650 --> 01:26:55,500
0,720 870,1500 1620,2190
Direction goose in.

2577
01:26:55,820 --> 01:26:57,340
0,420 420,930
Next one.

2578
01:26:57,730 --> 01:26:59,980
0,750 870,1080 1080,1230 1230,1560 1560,2250
And what's our tree x2.

2579
01:27:00,950 --> 01:27:02,600
0,270 270,450 450,570 570,990 1170,1650
And then I got she

2580
01:27:02,600 --> 01:27:04,640
0,510 510,870 870,1500
two she three.

2581
01:27:04,670 --> 01:27:06,720
0,420 420,510 510,780 780,1470
On the sea free.

2582
01:27:07,110 --> 01:27:09,720
0,600 630,1320 1380,1950 1950,2190 2190,2610
Start after the other reach.

2583
01:27:11,260 --> 01:27:12,920
0,330 330,690 690,1080
And returns one.

2584
01:27:14,610 --> 01:27:16,410
0,570 870,990 990,1260 1260,1530 1530,1800
And the claim here is

2585
01:27:16,410 --> 01:27:18,930
0,450 900,1290 1290,1800 1830,2400 2400,2520
that it's not possible to

2586
01:27:18,930 --> 01:27:20,430
0,330 330,390 390,690 690,1320 1350,1500
construct a total order you

2587
01:27:20,430 --> 01:27:23,420
0,510 660,1350 1380,1860 1860,2490
know mesh minerals ability.

2588
01:27:23,480 --> 01:27:26,120
0,840 1140,1740 1740,1920 1920,2250 2250,2640
And, um, in one way

2589
01:27:26,120 --> 01:27:27,590
0,330 330,810 810,900 900,1230 1230,1470
one indication of this is

2590
01:27:27,590 --> 01:27:29,930
0,210 210,420 420,900 930,1620 1620,2340
that this read returned actual

2591
01:27:30,050 --> 01:27:32,360
0,600 600,1230 1470,1800 1800,2130 2130,2310
started after the read that

2592
01:27:32,360 --> 01:27:33,640
0,360 360,750
returned to.

2593
01:27:33,790 --> 01:27:34,960
0,630 630,840 840,960 960,1080 1080,1170
And I will make this

2594
01:27:34,960 --> 01:27:35,650
0,30 30,180 180,270 270,420 420,690
a little bit more precise

2595
01:27:35,650 --> 01:27:37,240
0,240 240,420 420,570 570,870 930,1590
later, but in a real

2596
01:27:37,300 --> 01:27:39,130
0,150 150,330 330,630 630,1200 1230,1830
you know single machine system

2597
01:27:39,160 --> 01:27:40,210
0,120 120,240 240,390 390,690 690,1050
that could have never happened

2598
01:27:40,420 --> 01:27:42,160
0,330 330,810 1110,1380 1380,1530 1530,1740
right because a that would

2599
01:27:42,160 --> 01:27:43,510
0,120 120,570 570,750 750,840 840,1350
have meant that the value

2600
01:27:43,510 --> 01:27:45,370
0,570 570,900 900,1230 1380,1710 1710,1860
changed between r two and

2601
01:27:45,370 --> 01:27:47,500
0,210 210,780 1080,1320 1320,1980 1980,2130
r one and and you

2602
01:27:47,500 --> 01:27:49,000
0,390 420,1080
know fifties.

2603
01:27:49,000 --> 01:27:50,200
0,210 210,660 660,750 750,900 900,1200
Few operations that we have

2604
01:27:50,200 --> 01:27:51,310
0,90 90,150 150,630 720,870 870,1110
on the board that has

2605
01:27:51,310 --> 01:27:52,270
0,60 60,180 180,270 270,630 630,960
to be the case that.

2606
01:27:53,090 --> 01:27:54,260
0,630
This.

2607
01:27:54,260 --> 01:27:55,700
0,240 240,510 510,870 870,1170 1170,1440
Aren't what happened after that

2608
01:27:55,700 --> 01:27:56,740
0,450
right.

2609
01:27:57,260 --> 01:27:59,660
0,660 660,1290 1290,1770 1770,2220 2220,2400
Um, and this right must

2610
01:27:59,660 --> 01:28:01,820
0,120 120,690 1020,1380 1380,1680 1680,2160
have happened after that right,

2611
01:28:02,090 --> 01:28:03,830
0,420 420,600 600,660 660,1110 1110,1740
because they're in total there,

2612
01:28:03,860 --> 01:28:04,880
0,90 90,210 210,300 300,960 960,1020
we have to respect you

2613
01:28:04,880 --> 01:28:06,050
0,150 150,360 360,840 840,990 990,1170
know the ordering of the

2614
01:28:06,050 --> 01:28:08,020
0,630 630,840 840,1440
single of c.

2615
01:28:08,360 --> 01:28:09,470
0,240 240,390 390,570 570,780 780,1110
And so there's no way

2616
01:28:09,470 --> 01:28:10,730
0,120 120,450 450,1050 1080,1170 1170,1260
to basically slot, you know

2617
01:28:10,730 --> 01:28:12,470
0,630 630,1110 1110,1350 1350,1440 1440,1740
average one in the total

2618
01:28:12,470 --> 01:28:14,810
0,480 540,1170 1380,2040 2040,2130 2130,2340
order you according to this

2619
01:28:14,810 --> 01:28:16,820
0,600 780,1080 1080,1320 1320,1500 1500,2010
picture, um, it should go

2620
01:28:16,850 --> 01:28:19,360
0,810 1170,1350 1350,2010
after our H1.

2621
01:28:19,420 --> 01:28:21,850
0,720 1170,2040 2040,2220 2220,2370 2370,2430
Um, and um, but I

2622
01:28:21,850 --> 01:28:23,230
0,210 210,420 420,630 630,750 750,1380
can really not be true,

2623
01:28:23,560 --> 01:28:25,180
0,600 600,720 720,1110 1110,1350 1350,1620
because if it got our

2624
01:28:25,300 --> 01:28:26,710
0,360 360,510 510,960 960,1080 1080,1410
after our one that names

2625
01:28:26,710 --> 01:28:28,060
0,300 300,720 720,810 810,1140 1140,1350
also after A W X

2626
01:28:28,060 --> 01:28:29,290
0,420 450,600 600,780 780,1080 1080,1230
two so that must have

2627
01:28:29,290 --> 01:28:32,080
0,360 480,1170 1170,1980 2370,2700 2700,2790
written a um two and

2628
01:28:32,080 --> 01:28:33,100
0,180 180,510
not one.

2629
01:28:33,740 --> 01:28:34,850
0,180 180,360 360,480 480,990 990,1110
So this is not a

2630
01:28:34,850 --> 01:28:36,110
0,270 270,450 450,840 870,1200 1200,1260
linear ized ability, not a

2631
01:28:36,110 --> 01:28:37,780
0,300 300,540 540,870
linear ized ble.

2632
01:28:37,870 --> 01:28:40,240
0,750 870,1710
Distribute execution.

2633
01:28:45,820 --> 01:28:46,930
0,300 300,450 450,510 510,840 840,1110
Another way of saying that

2634
01:28:46,930 --> 01:28:48,520
0,210 210,480 660,900 900,960 960,1590
is that this is what,

2635
01:28:48,520 --> 01:28:49,690
0,180 180,270 270,540 540,720 720,1170
what is art in returning

2636
01:28:49,690 --> 01:28:51,940
0,390 420,840 840,1350 1350,1740 1740,2250
here really returning stale value.

2637
01:28:53,100 --> 01:28:54,150
0,330 330,420 420,540 540,660 660,1050
Right, and that is not

2638
01:28:54,150 --> 01:28:55,220
0,540
allowed.

2639
01:28:56,010 --> 01:28:57,380
0,240 240,570
I'm gonna.

2640
01:28:57,940 --> 01:28:59,050
0,180 180,240 240,540 540,960 960,1110
If the machine behaves like

2641
01:28:59,050 --> 01:29:00,130
0,60 60,300 300,570 570,690 690,1080
a single machine or replicated

2642
01:29:00,130 --> 01:29:01,210
0,300 300,600 600,750 750,810 810,1080
server behaves like a single

2643
01:29:01,210 --> 01:29:02,160
0,390
machine.

2644
01:29:02,520 --> 01:29:03,300
0,300 300,420 420,510 510,660 660,780
And so I'm gonna go

2645
01:29:03,300 --> 01:29:04,530
0,390 390,480 480,570 570,840 840,1230
back, you know this too

2646
01:29:04,530 --> 01:29:06,420
0,780 780,870 870,1200 1200,1680 1680,1890
on the lecture when next

2647
01:29:06,420 --> 01:29:07,230
0,240 240,390 390,450 450,630 630,810
week when we talk about

2648
01:29:07,230 --> 01:29:09,000
0,150 150,660 930,1500 1500,1680 1680,1770
zoo keeper because this is

2649
01:29:09,000 --> 01:29:10,260
0,120 120,180 180,390 390,630 630,1260
going to be very important,

2650
01:29:10,260 --> 01:29:11,730
0,90 90,510 510,570 570,960 960,1470
this notion of literacy ability

2651
01:29:11,730 --> 01:29:12,810
0,180 180,240 240,510 510,690 690,1080
sort of thing that shows

2652
01:29:12,810 --> 01:29:14,400
0,390 390,870 870,960 960,1050 1050,1590
up probably in the paper,

2653
01:29:14,550 --> 01:29:15,630
0,270 270,420 420,720 720,780 780,1080
and this notion of stave

2654
01:29:15,630 --> 01:29:17,640
0,540 540,720 720,1020 1020,1200 1200,2010
values also shows up probably.

2655
01:29:19,800 --> 01:29:20,670
0,210 210,390 390,570 570,810 810,870
And since I'm running out

2656
01:29:20,670 --> 01:29:21,600
0,60 60,270 270,360 360,480 480,930
of time and you're gonna

2657
01:29:21,600 --> 01:29:23,370
0,360 360,720 720,1020 1020,1470 1470,1770
I'll resume that next week.

2658
01:29:24,540 --> 01:29:25,760
0,690
Okay.

2659
01:29:26,170 --> 01:29:28,780
0,870 870,1110 1230,1770 1770,2220
S H S H.

2660
01:29:29,260 --> 01:29:31,000
0,630 660,870 870,1260 1260,1440 1440,1740
Any further questions and people

2661
01:29:31,000 --> 01:29:32,290
0,150 150,210 210,450 450,870 900,1290
need to leave, please feel

2662
01:29:32,290 --> 01:29:33,970
0,180 180,270 270,630 750,1500 1500,1680
free to leave a in

2663
01:29:33,970 --> 01:29:34,900
0,240 240,300 300,540 540,630 630,930
fact I hope we did

2664
01:29:35,320 --> 01:29:37,630
0,510 750,1200 1200,1260 1260,1500 1500,2310
you want to make responsible

2665
01:29:37,630 --> 01:29:39,100
0,180 180,300 300,570 570,870 870,1470
that we Miss other classes.

2666
01:29:40,230 --> 01:29:41,960
0,210 210,510 510,1230
Is this a.

2667
01:29:41,960 --> 01:29:43,620
0,600 600,1080
Considered like.

2668
01:29:43,620 --> 01:29:44,940
0,120 120,240 240,300 300,1050 1050,1320
What type of consistency is

2669
01:29:44,940 --> 01:29:46,200
0,480 480,570 570,690 690,870 900,1260
considered to be a strong

2670
01:29:46,200 --> 01:29:50,250
0,1230 1440,3540 3540,3870 3870,3930 3930,4050
consistency eyes considered to be

2671
01:29:50,250 --> 01:29:52,240
0,60 60,450 450,750 750,1380
a basically strong consistency.

2672
01:29:52,360 --> 01:29:53,890
0,300 300,480 480,1020 1020,1110 1110,1530
Um, and what it really

2673
01:29:53,890 --> 01:29:55,000
0,270 270,450 450,510 510,600 600,1110
is sort of a precise

2674
01:29:55,000 --> 01:29:56,830
0,570 570,750 750,930 930,1200 1200,1830
definition of what strong consistency

2675
01:29:56,830 --> 01:29:57,780
0,450
is.

2676
01:29:58,360 --> 01:29:59,920
0,300 300,510 510,780 780,990 990,1560
Um, so like our intuition

2677
01:29:59,920 --> 01:30:01,480
0,210 210,360 360,600 600,1230 1230,1560
about what strong consistency isn't

2678
01:30:01,480 --> 01:30:03,040
0,480 480,660 660,720 720,990 990,1560
behaving like a single machine

2679
01:30:03,040 --> 01:30:04,330
0,180 180,270 270,690 690,1170 1170,1290
that the precise definition that

2680
01:30:04,330 --> 01:30:05,740
0,330 330,660 660,750 750,1020 1050,1410
people use in the technical

2681
01:30:05,740 --> 01:30:07,840
0,600 630,780 780,1050 1050,1560
literature is leaner ability.

2682
01:30:12,420 --> 01:30:14,460
0,330 330,660 660,870 870,1110 1110,2040
Um, how did they decide

2683
01:30:14,490 --> 01:30:17,220
0,600 900,1620 1650,1980 1980,2520 2520,2730
to have that property like

2684
01:30:17,220 --> 01:30:18,540
0,450 450,630 630,780 780,1230 1230,1320
why did they decide to

2685
01:30:18,540 --> 01:30:20,370
0,210 210,420 420,1050 1290,1590 1590,1830
have that property, um, there's

2686
01:30:20,370 --> 01:30:22,140
0,90 90,450 450,900 900,1380 1380,1770
a couple things, one reason

2687
01:30:22,140 --> 01:30:24,750
0,780 1050,1800 1800,2100 2220,2430 2430,2610
to reason okay so it

2688
01:30:24,750 --> 01:30:25,710
0,240 240,390 390,480 480,840 840,960
makes sort of sense, you

2689
01:30:25,710 --> 01:30:26,760
0,120 120,360 360,510 510,810 810,1050
know if you think from

2690
01:30:26,760 --> 01:30:28,220
0,240 240,510 510,570 570,1020
this point of view.

2691
01:30:28,730 --> 01:30:29,780
0,210 210,300 300,480 480,540 540,1050
Like you want to behave

2692
01:30:29,780 --> 01:30:30,620
0,120 120,270 270,330 330,510 510,840
you want to make a

2693
01:30:30,680 --> 01:30:31,940
0,540 540,810 810,1050 1050,1200 1200,1260
replicated system, behave like a

2694
01:30:31,940 --> 01:30:33,520
0,360 360,960
single machine.

2695
01:30:33,700 --> 01:30:35,290
0,240 240,480 480,1020 1020,1290 1320,1590
We're really replicated a machine

2696
01:30:35,290 --> 01:30:36,040
0,120 120,210 210,360 360,420 420,750
and you want to only

2697
01:30:36,040 --> 01:30:37,960
0,420 420,870 870,1050 1050,1350 1350,1920
allow outcomes that actually correspond

2698
01:30:37,960 --> 01:30:39,100
0,120 120,690 690,810 810,870 870,1140
to executions that the single

2699
01:30:39,100 --> 01:30:40,450
0,330 330,450 450,540 540,870 1110,1350
machine could have done the

2700
01:30:40,450 --> 01:30:41,800
0,270 270,540 540,1050 1050,1080 1080,1350
natural inner abilities are very

2701
01:30:41,800 --> 01:30:44,780
0,660 1050,1980 1980,2160 2160,2460
intuitive definition for that.

2702
01:30:45,020 --> 01:30:46,520
0,300 300,720 720,1050 1050,1230 1230,1500
The database world has also

2703
01:30:46,520 --> 01:30:48,830
0,180 180,720 750,1770 1770,1920 1920,2310
some other terminology like sterilize

2704
01:30:48,830 --> 01:30:49,850
0,450 450,600 600,750 750,960 960,1020
ability, this is also a

2705
01:30:49,850 --> 01:30:51,110
0,210 210,360 360,510 510,1140 1140,1260
term that will show up

2706
01:30:51,110 --> 01:30:53,330
0,90 90,690 720,990 990,1440 1800,2220
in the term later and

2707
01:30:53,510 --> 01:30:54,980
0,540 540,600 600,870 870,1200 1200,1470
basically the only difference between

2708
01:30:54,980 --> 01:30:56,180
0,180 180,300 300,510 510,1020 1020,1200
sort of linear accessibility and

2709
01:30:56,180 --> 01:30:57,860
0,510 510,690 690,1260 1260,1380 1380,1680
a civil liability is that

2710
01:30:58,040 --> 01:30:59,870
0,300 300,420 420,900 900,1200 1200,1830
its a liability doesn't require

2711
01:30:59,870 --> 01:31:01,480
0,180 180,630 630,1140
that matters real-time.

2712
01:31:02,980 --> 01:31:04,540
0,510 510,690 690,930 930,1260 1260,1560
And so people have different

2713
01:31:04,540 --> 01:31:06,310
0,510 510,780 780,930 930,1200 1200,1770
definitions of a strong consistency,

2714
01:31:06,310 --> 01:31:07,750
0,120 120,270 270,690 870,1380 1380,1440
if you will and the

2715
01:31:07,750 --> 01:31:09,070
0,210 210,360 360,510 510,900 900,1320
one that will see most

2716
01:31:09,070 --> 01:31:10,720
0,570 570,720 720,1110 1110,1470 1470,1650
probably is literate ability, which

2717
01:31:10,720 --> 01:31:12,220
0,510 510,990 990,1170 1170,1410 1410,1500
corresponds closest to like the

2718
01:31:12,220 --> 01:31:14,080
0,300 300,930 930,1170 1170,1650 1650,1860
machine behaves that replicates or

2719
01:31:14,080 --> 01:31:15,160
0,240 240,390 390,420 420,690 690,1080
behaves like a single machine.

2720
01:31:20,750 --> 01:31:22,980
0,300 300,840 1020,1290 1290,1680
Thank you, you're welcome.

2721
01:31:24,760 --> 01:31:25,900
0,90 90,180 180,240 240,570 570,1140
I have a question about

2722
01:31:25,930 --> 01:31:27,100
0,570
um.

2723
01:31:27,530 --> 01:31:30,170
0,360 360,1380 1530,2010 2010,2220 2220,2640
What happens during a network

2724
01:31:30,170 --> 01:31:32,720
0,690 1710,2010 2010,2100 2100,2340 2340,2550
partition, so I know like

2725
01:31:32,720 --> 01:31:34,130
0,120 120,480 480,600 600,1050 1050,1410
so if a leader gets

2726
01:31:34,130 --> 01:31:35,780
0,570 570,990 990,1110 1110,1290 1290,1650
partitioned completely on their own

2727
01:31:36,020 --> 01:31:37,940
0,390 390,780 780,1020 1020,1320 1320,1920
they'll eventually climb out, but

2728
01:31:37,940 --> 01:31:38,960
0,120 120,270 270,690 690,930 930,1020
if they have sort of

2729
01:31:38,960 --> 01:31:39,820
0,390
like.

2730
01:31:40,280 --> 01:31:42,350
0,150 150,390 390,1230 1410,1680 1680,2070
A few followers with them,

2731
01:31:42,380 --> 01:31:44,480
0,540 570,960 960,1080 1080,1530
they'll say the leader.

2732
01:31:44,480 --> 01:31:45,260
0,360 360,450 450,600 600,660 660,780
And they won't be able

2733
01:31:45,260 --> 01:31:46,130
0,60 60,240 240,570 570,720 720,870
to commit anything because they'll

2734
01:31:46,130 --> 01:31:47,660
0,90 90,180 180,240 240,900 1320,1530
be in a minority and

2735
01:31:47,660 --> 01:31:48,410
0,150 150,270 270,300 300,540 540,750
they'll be a new leader

2736
01:31:48,410 --> 01:31:50,690
0,90 90,210 210,480 570,990 1200,2280
and they'll be so will

2737
01:31:50,690 --> 01:31:52,360
0,210 210,540 540,1140
that leader ever.

2738
01:31:52,420 --> 01:31:54,370
0,360 360,600 630,1350 1350,1500 1500,1950
Sort of recognize that maybe

2739
01:31:54,370 --> 01:31:55,960
0,240 240,300 300,630 630,1050 1260,1590
it's a sale leader or

2740
01:31:55,960 --> 01:31:57,100
0,120 120,240 240,480 480,840 840,1140
do we just assume that

2741
01:31:57,310 --> 01:31:59,110
0,810 810,960 960,1110 1110,1590 1590,1800
eventually if the partition goes

2742
01:31:59,110 --> 01:32:00,160
0,510
away.

2743
01:32:00,160 --> 01:32:01,420
0,690
I'm.

2744
01:32:01,820 --> 01:32:03,200
0,540 540,870 870,990 990,1170 1170,1380
It'll figure out because I'm

2745
01:32:03,200 --> 01:32:04,250
0,270 270,390 390,570 570,660 660,1050
worried if there's a client

2746
01:32:04,250 --> 01:32:05,210
0,180 180,480 480,570 570,660 660,960
that's talking to the sale

2747
01:32:05,210 --> 01:32:06,200
0,390
leader.

2748
01:32:06,320 --> 01:32:07,550
0,270 270,360 360,510 510,900 900,1230
What does that client do.

2749
01:32:09,450 --> 01:32:12,450
0,1410 1440,1980 1980,2130 2130,2580 2760,3000
The no okay so this

2750
01:32:12,450 --> 01:32:13,230
0,60 60,120 120,300 300,630 630,780
is a great question with

2751
01:32:13,230 --> 01:32:14,400
0,180 180,570 570,810 810,1110 1110,1170
this picture here, hopefully it

2752
01:32:14,400 --> 01:32:15,440
0,90 90,540
will help.

2753
01:32:15,560 --> 01:32:17,690
0,570 1170,1350 1350,1440 1440,1740 1740,2130
Um, so the client talks

2754
01:32:17,690 --> 01:32:18,710
0,150 150,450 450,510 510,720 720,1020
to talk to this guy,

2755
01:32:18,710 --> 01:32:19,970
0,300 300,450 450,690 690,780 780,1260
correct like who's the leader.

2756
01:32:20,640 --> 01:32:21,540
0,210 210,330 330,390 390,840 870,900
You see the picture I

2757
01:32:21,540 --> 01:32:22,740
0,270 270,480 480,900 930,1080 1080,1200
just double check, you can

2758
01:32:22,740 --> 01:32:24,270
0,270 270,390 390,510 510,750 1290,1530
see I can see it

2759
01:32:24,360 --> 01:32:25,290
0,210 210,390 390,690 690,780 780,930
so let's say you know

2760
01:32:25,290 --> 01:32:26,190
0,150 150,360 360,690 690,780 780,900
this first box is the

2761
01:32:26,190 --> 01:32:27,600
0,480 600,960 960,1170 1170,1230 1230,1410
leader coin touch a dead

2762
01:32:27,600 --> 01:32:29,610
0,510 720,990 990,1260 1260,1620 1620,2010
leader, the leader can't commit

2763
01:32:29,610 --> 01:32:31,340
0,180 180,840 840,1230
any operations, right.

2764
01:32:31,690 --> 01:32:33,160
0,630 630,810 810,1080 1080,1200 1200,1470
Um, and so it will

2765
01:32:33,160 --> 01:32:34,330
0,450 450,720 720,810 810,870 870,1170
communicate anything on the apply

2766
01:32:34,330 --> 01:32:35,260
0,480 480,600 600,720 720,780 780,930
channel and so it will

2767
01:32:35,260 --> 01:32:36,610
0,240 240,720 720,810 810,870 870,1350
never respond to the client

2768
01:32:36,820 --> 01:32:38,770
0,390 720,930 930,1260 1260,1470 1470,1950
right because there's no operation

2769
01:32:38,770 --> 01:32:40,150
0,300 300,630 630,1080 1080,1170 1170,1380
actually its operations are not

2770
01:32:40,150 --> 01:32:41,460
0,210 210,810
being executed.

2771
01:32:41,660 --> 01:32:42,680
0,180 180,270 270,600 600,840 840,1020
So the client will just

2772
01:32:42,680 --> 01:32:44,780
0,570 600,870 870,1170 1170,1620 1620,2100
retry just keep retrying forever.

2773
01:32:46,230 --> 01:32:48,210
0,180 180,930 1110,1290 1290,1470 1680,1980
Wait until you know until

2774
01:32:48,210 --> 01:32:50,460
0,570 570,1200 1200,1470 1470,1770 1770,2250
declined actually maybe tries another,

2775
01:32:50,460 --> 01:32:53,380
0,0 1740,1920 1920,2370
um, you know.

2776
01:32:53,380 --> 01:32:54,370
0,150 150,210 210,300 300,480 480,990
One of the other followers

2777
01:32:54,370 --> 01:32:55,810
0,330 330,450 450,1200 1200,1320 1320,1440
correct that maintains you know

2778
01:32:55,810 --> 01:32:56,980
0,270 270,510 510,630 630,1020 1020,1170
who else is actually in

2779
01:32:56,980 --> 01:32:58,880
0,570 810,1560
the group.

2780
01:32:58,880 --> 01:33:02,690
0,1590 1620,2040 2040,2130 2130,2760 2760,3810
Ora until the network a

2781
01:33:02,720 --> 01:33:03,800
0,600
heels.

2782
01:33:04,660 --> 01:33:06,250
0,450 450,720 720,990 990,1260 1260,1590
And the leader actually commit

2783
01:33:06,250 --> 01:33:07,960
0,60 60,540 720,1260 1290,1590 1590,1710
an operation asha wait so

2784
01:33:07,960 --> 01:33:09,880
0,510 510,750 750,870 870,1320 1350,1920
doesn't doesn't the leader immediately

2785
01:33:09,880 --> 01:33:11,200
0,450 450,660 660,870 870,1080 1080,1320
reply those saying I got

2786
01:33:11,200 --> 01:33:12,460
0,150 150,840
your request.

2787
01:33:12,680 --> 01:33:14,240
0,270 270,420 420,600 870,1320 1320,1560
Or does it wait until

2788
01:33:14,870 --> 01:33:16,610
0,600 600,870 870,990 990,1200 1200,1740
you're free, it doesn't know

2789
01:33:16,610 --> 01:33:18,560
0,600 600,900 900,1170 1170,1530 1530,1950
communicate with a client who

2790
01:33:18,560 --> 01:33:20,030
0,270 270,450 450,840 840,900 900,1470
actually has processed the request.

2791
01:33:20,640 --> 01:33:21,990
0,210 210,390 390,720 720,930 930,1350
And which means that the

2792
01:33:22,020 --> 01:33:23,460
0,480 480,690 690,810 810,1140 1140,1440
operation actually has run through

2793
01:33:23,460 --> 01:33:24,510
0,390 390,510 510,720 720,900 900,1050
graft and come out of

2794
01:33:24,510 --> 01:33:25,590
0,90 90,450 450,750 750,870 870,1080
the applied channel and ask

2795
01:33:25,590 --> 01:33:26,940
0,150 150,600 600,720 720,810 810,1350
me executed by the surface.

2796
01:33:27,630 --> 01:33:28,860
0,660
Okay.

2797
01:33:33,330 --> 01:33:34,500
0,90 90,240 240,420 420,1020 1020,1170
That makes sense, yeah, so

2798
01:33:34,500 --> 01:33:35,850
0,180 180,630 630,750 750,960 960,1350
the client could just implement

2799
01:33:35,850 --> 01:33:37,020
0,120 120,600 600,840 840,990 990,1170
a timeout where like if

2800
01:33:37,020 --> 01:33:38,340
0,690 690,900 900,1050 1050,1110 1110,1320
a certain amount of time

2801
01:33:38,340 --> 01:33:39,540
0,90 90,180 180,450 510,1110 1110,1200
and they haven't received the

2802
01:33:39,540 --> 01:33:41,160
0,390 480,1110 1110,1320 1320,1530 1530,1620
committee assume that maybe I

2803
01:33:41,160 --> 01:33:42,420
0,150 150,420 420,480 480,870 870,1260
should try a different node,

2804
01:33:42,600 --> 01:33:43,620
0,180 180,540 540,720 720,810 810,1020
and then if it gets

2805
01:33:43,620 --> 01:33:45,060
0,180 210,450 450,810 810,1290 1320,1440
the new leader or a

2806
01:33:45,060 --> 01:33:46,020
0,300 300,360 360,450 450,570 570,960
follower of the new leader

2807
01:33:46,200 --> 01:33:48,570
0,570 810,1200 1200,1500 1500,1860 1890,2370
it'll be back to normal,

2808
01:33:48,570 --> 01:33:50,610
0,90 90,660 660,1200 1200,1800 1830,2040
for example, this clerk that's

2809
01:33:50,610 --> 01:33:52,260
0,390 390,510 510,690 690,1140 1140,1650
exactly what this culture does.

2810
01:33:52,780 --> 01:33:53,890
0,180 180,390 390,480 480,720 720,1110
You know the place along

2811
01:33:53,890 --> 01:33:55,030
0,150 150,240 240,570 570,690 690,1140
with the servers to actually,

2812
01:33:55,030 --> 01:33:56,230
0,390 390,600 600,750 750,990 990,1200
um, do what youre just

2813
01:33:56,230 --> 01:33:58,160
0,240 720,1350
as god.

2814
01:33:59,500 --> 01:34:01,040
0,450 450,720 720,960
Okay, thank you.

2815
01:34:01,070 --> 01:34:02,160
0,180 180,300 300,510
You woke up.

2816
01:34:02,410 --> 01:34:03,370
0,360 360,480 480,540 540,780 780,960
Sorry, can you repeat again,

2817
01:34:03,370 --> 01:34:04,980
0,150 150,240 240,540 540,1110
what the clerk does.

2818
01:34:05,640 --> 01:34:06,750
0,150 150,510 510,630 630,870 870,1110
The clerk is a little

2819
01:34:06,750 --> 01:34:08,370
0,210 210,330 330,810 810,1320 1320,1620
bit of a stop where

2820
01:34:08,370 --> 01:34:10,260
0,150 150,810 840,1260 1260,1680 1680,1890
like a little library that

2821
01:34:10,260 --> 01:34:11,820
0,420 420,690 690,870 1140,1230 1230,1560
decline links me to decline

2822
01:34:11,820 --> 01:34:13,560
0,210 210,420 420,540 540,1020 1350,1740
calls puts and gets and

2823
01:34:13,560 --> 01:34:15,270
0,90 90,480 480,1020 1020,1440 1440,1710
the cleric actually eyes the

2824
01:34:15,270 --> 01:34:16,410
0,360 360,480 480,600 600,870 870,1140
interface that it talks to

2825
01:34:16,410 --> 01:34:17,310
0,120 120,210 210,510 510,690 690,900
and the clerk can keep

2826
01:34:17,310 --> 01:34:18,600
0,150 150,780
some information.

2827
01:34:18,630 --> 01:34:20,580
0,450 450,780 780,1050 1050,1170 1170,1950
Like who's part of the

2828
01:34:21,480 --> 01:34:23,130
0,360 360,930 1080,1260 1260,1410 1410,1650
raf cluster and so we're

2829
01:34:23,130 --> 01:34:24,360
0,420 420,780 780,870 870,1140 1140,1230
only who's the leader and

2830
01:34:24,360 --> 01:34:25,260
0,120 120,240 240,330 330,810 810,900
who are the followers at

2831
01:34:25,260 --> 01:34:26,310
0,180 180,330 330,510 510,840 870,1050
least what it thinks is

2832
01:34:26,310 --> 01:34:27,360
0,120 120,360 360,450 450,510 510,1050
the leader and the followers.

2833
01:34:28,210 --> 01:34:29,800
0,750 750,960 960,1200 1200,1320 1320,1590
And um, when it sends

2834
01:34:29,800 --> 01:34:31,660
0,420 420,570 570,1620 1620,1710 1710,1860
in a RBC, you know

2835
01:34:31,660 --> 01:34:32,590
0,150 150,210 210,600 600,720 720,930
to the service is not

2836
01:34:32,590 --> 01:34:33,550
0,300 300,450 450,570 570,810 810,960
sensitive to the leader what

2837
01:34:33,550 --> 01:34:34,390
0,180 180,420 420,510 510,600 600,840
it thinks is the current

2838
01:34:34,390 --> 01:34:35,240
0,330
leader.

2839
01:34:35,580 --> 01:34:37,470
0,450 450,540 540,1080 1170,1230 1230,1890
And this serves as a

2840
01:34:37,500 --> 01:34:38,790
0,450 450,720 720,780 780,1020 1020,1290
whatever thinks the current leader,

2841
01:34:38,790 --> 01:34:39,900
0,90 90,330 330,510 510,690 690,1110
the leader might actually respond

2842
01:34:39,900 --> 01:34:40,710
0,180 180,330 330,510 510,630 630,810
saying like hey I'm not

2843
01:34:40,710 --> 01:34:41,850
0,120 120,480 480,630 630,870 870,1140
the leader should send somewhere

2844
01:34:41,850 --> 01:34:42,760
0,450
else.

2845
01:34:42,910 --> 01:34:43,750
0,180 180,360 360,450 450,600 600,840
And then it will try

2846
01:34:43,750 --> 01:34:45,340
0,210 210,300 300,390 390,780 900,1590
one of the other updates

2847
01:34:45,340 --> 01:34:46,640
0,720
information.

2848
01:34:46,640 --> 01:34:48,470
0,270 270,480 480,930 930,1230 1230,1830
Um, and also we'll tag

2849
01:34:48,470 --> 01:34:51,230
0,690 1080,1590 1590,1800 1800,2490 2610,2760
every Putin get operation, um

2850
01:34:51,230 --> 01:34:52,850
0,210 210,810 810,1320 1320,1470 1470,1620
that negotiation client and that

2851
01:34:52,850 --> 01:34:53,810
0,240 240,300 300,390 390,720 720,960
sends to the server with

2852
01:34:53,810 --> 01:34:55,640
0,60 60,390 390,900 1320,1650 1650,1830
a unique ID, um, so

2853
01:34:55,640 --> 01:34:57,920
0,420 420,1050 1170,1620 1620,1740 1740,2280
that the service can duplicate

2854
01:34:57,920 --> 01:34:58,940
0,510
detection.

2855
01:34:59,460 --> 01:35:00,240
0,120 120,240 240,420 420,630 630,780
And this all comes up

2856
01:35:00,240 --> 01:35:01,950
0,150 150,420 420,660 660,1050 1080,1710
in lap three so yeah.

2857
01:35:02,550 --> 01:35:04,260
0,510 510,690 690,1140
You'll see there.

2858
01:35:04,690 --> 01:35:05,920
0,180 180,570 570,750 750,990 990,1230
In lecture, there's no real

2859
01:35:05,920 --> 01:35:07,040
0,600
clerk.

2860
01:35:07,070 --> 01:35:08,480
0,270 270,360 360,780 780,1230 1230,1410
Because the tester basically sort

2861
01:35:08,480 --> 01:35:09,230
0,90 90,330 330,420 420,630 630,750
of sits on top of

2862
01:35:09,230 --> 01:35:10,340
0,270 270,630 630,750 750,810 810,1110
the directing of the raft

2863
01:35:10,340 --> 01:35:12,080
0,480 480,600 600,840 840,1140 1140,1740
interface and doesn't really interact

2864
01:35:12,380 --> 01:35:13,340
0,330 330,390 390,750 750,870 870,960
through the clerk, but in

2865
01:35:13,340 --> 01:35:14,750
0,510 510,870 870,1230 1230,1350 1350,1410
watry will interact through the

2866
01:35:14,750 --> 01:35:15,720
0,450
clerk.

2867
01:35:16,320 --> 01:35:17,610
0,240 240,390 390,480 480,630 630,1290
So how do the clients

2868
01:35:17,610 --> 01:35:19,980
0,720 720,1020 1020,1860
generate unique IDs.

2869
01:35:20,100 --> 01:35:21,930
0,750 780,1020 1020,1170 1170,1350 1350,1830
They looked at each other

2870
01:35:22,050 --> 01:35:24,660
0,1140 1140,1350 1350,1590 1590,1950
random big random numbers.

2871
01:35:25,660 --> 01:35:26,920
0,300 300,450 450,570 570,960 960,1260
Alright, so we're just guessing

2872
01:35:26,920 --> 01:35:28,600
0,120 120,600 630,960 960,1170 1170,1680
and hoping rather than actually

2873
01:35:28,600 --> 01:35:29,890
0,630 630,810 810,1020 1020,1080 1080,1290
guaranteeing some sort of like

2874
01:35:29,890 --> 01:35:32,200
0,1200 1410,1770 1770,2010 2010,2130 2130,2310
incremental one way to make

2875
01:35:32,200 --> 01:35:33,550
0,60 60,300 300,930 930,1020 1020,1350
it more guaranteed for example,

2876
01:35:33,550 --> 01:35:35,560
0,210 210,330 330,660 660,1260 1620,2010
take your IP address a

2877
01:35:35,560 --> 01:35:37,030
0,270 270,630 630,810 810,1050 1050,1470
and append a random number.

2878
01:35:37,850 --> 01:35:38,780
0,390
Baby.

2879
01:35:41,070 --> 01:35:42,690
0,180 180,690 690,1080 1080,1200 1200,1620
A question about the homework

2880
01:35:42,690 --> 01:35:44,910
0,750 870,1290 1560,1800 1800,1920 1920,2220
question, yeah, so I thought

2881
01:35:44,910 --> 01:35:46,140
0,150 150,300 300,570 570,750 750,1230
that it could go backwards

2882
01:35:46,140 --> 01:35:47,130
0,120 120,390 390,600 600,720 720,990
in time like I read

2883
01:35:47,130 --> 01:35:48,840
0,120 120,570 570,690 690,840 840,1710
the paper and it says

2884
01:35:48,840 --> 01:35:51,420
0,360 360,900 900,1380 1380,1920 2250,2580
on page twelve point a

2885
01:35:51,420 --> 01:35:52,890
0,150 150,420 420,750 1050,1260 1260,1470
it said that if there's

2886
01:35:52,890 --> 01:35:54,630
0,90 90,930 960,1410 1410,1650 1650,1740
a conflict right then the

2887
01:35:54,630 --> 01:35:56,460
0,420 420,630 630,1170 1170,1350 1350,1830
follower just discards its entire

2888
01:35:56,460 --> 01:35:57,930
0,420 420,540 540,690 690,990 990,1470
log and it's also preceded

2889
01:35:57,930 --> 01:35:59,400
0,150 150,270 270,990
by the snapshot.

2890
01:36:00,110 --> 01:36:03,080
0,240 240,270 270,960 1110,2100 2220,2970
So I wonder why again

2891
01:36:03,080 --> 01:36:06,290
0,180 180,630 1860,2700 2700,2790 2790,3210
let me let me guess

2892
01:36:06,290 --> 01:36:07,520
0,60 60,510 510,720 720,1020 1020,1230
I I don't really know

2893
01:36:07,520 --> 01:36:08,690
0,570 570,720 720,930 930,1080 1080,1170
exactly this is what you're

2894
01:36:08,690 --> 01:36:09,530
0,300 300,480 480,600 600,750 750,840
referring to I have to

2895
01:36:09,530 --> 01:36:11,000
0,150 150,210 210,300 300,630 930,1470
look it up again, oh,

2896
01:36:11,000 --> 01:36:12,470
0,300 300,630 630,930 930,1320 1320,1470
it's on page twelve it's

2897
01:36:12,470 --> 01:36:13,850
0,150 150,420 420,990 990,1260 1260,1380
at the it's towards the

2898
01:36:13,850 --> 01:36:14,870
0,180 180,300 300,600 600,930 930,1020
end of page twelve the

2899
01:36:14,870 --> 01:36:16,370
0,420 420,900 900,1170 1170,1350 1350,1500
second column here, so the

2900
01:36:16,370 --> 01:36:18,410
0,330 330,390 390,750 750,1380 1860,2040
second to last paragraph, so

2901
01:36:18,410 --> 01:36:19,790
0,360 360,630 630,900 900,1050 1050,1380
the law can go back

2902
01:36:19,790 --> 01:36:20,750
0,180 180,330 330,540 540,630 630,960
right but not the state

2903
01:36:20,750 --> 01:36:22,430
0,540 750,1050 1050,1290 1290,1410 1410,1680
machine not oh, the law

2904
01:36:22,430 --> 01:36:23,750
0,570 570,690 690,900 900,1170 1170,1320
can't the law can go

2905
01:36:23,750 --> 01:36:24,740
0,270 270,360 360,570 570,660 660,990
back but not the state

2906
01:36:24,740 --> 01:36:26,210
0,600 720,990 990,1110 1110,1200 1200,1470
machine, what was the state

2907
01:36:26,210 --> 01:36:27,650
0,330 330,540 540,750 750,990 1170,1440
machine like what you the

2908
01:36:27,650 --> 01:36:29,260
0,480 480,900 900,1260
committed entries, right.

2909
01:36:30,320 --> 01:36:32,120
0,390 390,810 810,1230 1230,1530 1530,1800
Yeah the yes the law

2910
01:36:32,120 --> 01:36:32,990
0,180 180,300 300,570 570,780 780,870
can't go back because of

2911
01:36:32,990 --> 01:36:35,330
0,900 1230,1590 1590,1920 1920,2280 2280,2340
z who committed entries we

2912
01:36:35,330 --> 01:36:36,380
0,150 150,390 390,810 810,960 960,1050
can go back, this is

2913
01:36:36,380 --> 01:36:37,280
0,180 180,300 300,570 570,840 840,900
like this whole race or

2914
01:36:37,280 --> 01:36:38,150
0,270 270,360 360,450 450,660 660,870
stuff that we talked about

2915
01:36:38,150 --> 01:36:39,140
0,480
earlier.

2916
01:36:40,560 --> 01:36:42,360
0,660 690,870 870,1230 1230,1380 1380,1800
OK, so actually the log

2917
01:36:42,360 --> 01:36:44,520
0,480 480,690 690,1110 1560,2070 2070,2160
can go back not the

2918
01:36:44,520 --> 01:36:46,260
0,330 330,660 660,930 930,1140 1140,1740
state machine, which is basically

2919
01:36:46,260 --> 01:36:48,660
0,330 330,750 870,1320 1320,1890 2130,2400
what you committed already, yeah

2920
01:36:48,660 --> 01:36:49,830
0,120 120,390 390,750 750,900 900,1170
and the log can never

2921
01:36:49,830 --> 01:36:51,390
0,450 450,630 630,900 900,1020 1020,1560
go will never go back

2922
01:36:51,420 --> 01:36:53,430
0,510 510,900 900,960 960,1470 1470,2010
never bailout of committed operations

2923
01:36:53,430 --> 01:36:55,080
0,270 270,390 390,510 510,1050 1050,1650
correct, it can only bailout

2924
01:36:55,080 --> 01:36:57,480
0,540 540,1020 1020,1680 1710,2070 2070,2400
erased uncommitted operations, yes that's

2925
01:36:57,480 --> 01:37:00,390
0,300 1410,2010 2100,2250 2250,2430 2430,2910
right OK, so that's what

2926
01:37:00,420 --> 01:37:01,440
0,270 270,510
we're sure.

2927
01:37:01,620 --> 01:37:02,400
0,150 150,210 210,360 360,450 450,780
Can I ask a question

2928
01:37:02,400 --> 01:37:04,860
0,270 270,720 750,1200 1200,1800 1980,2460
about the third slide, yes

2929
01:37:04,860 --> 01:37:05,790
0,90 90,270 270,480 480,780 780,930
the one right before this

2930
01:37:05,790 --> 01:37:07,260
0,300 330,870
one, um.

2931
01:37:08,050 --> 01:37:09,490
0,480 540,900 900,990 990,1440 1440,1440
So, could you just, um,

2932
01:37:10,870 --> 01:37:12,100
0,360 360,480 480,690 690,870 870,1230
walk me through real quick,

2933
01:37:12,100 --> 01:37:14,110
0,630 630,990 990,1440 1440,1560 1560,2010
what match index is doing

2934
01:37:14,110 --> 01:37:15,310
0,210 210,360 360,720 750,960 960,1200
on the right, like when

2935
01:37:15,310 --> 01:37:16,600
0,210 210,390 390,540 540,1110 1110,1290
s two is communicating with

2936
01:37:16,600 --> 01:37:17,820
0,270 270,720
us three.

2937
01:37:17,960 --> 01:37:19,340
0,360 390,570 570,660 660,1110 1110,1380
Okay, so it starts out

2938
01:37:19,340 --> 01:37:22,760
0,480 510,960 960,1650 1890,2430 2760,3420
as a zero yep soloman,

2939
01:37:22,760 --> 01:37:23,930
0,210 210,450 450,540 540,1080 1080,1170
this too is communicating with

2940
01:37:23,930 --> 01:37:24,800
0,360
who.

2941
01:37:24,970 --> 01:37:26,890
0,360 360,750 960,1170 1170,1380 1380,1920
S three yeah, so basically

2942
01:37:26,890 --> 01:37:28,930
0,150 150,330 330,1050 1500,1770 1770,2040
okay, so here a match

2943
01:37:28,930 --> 01:37:30,310
0,390 390,510 510,990 990,1230 1230,1380
index is zero right, like

2944
01:37:30,310 --> 01:37:31,540
0,300 300,660 720,960 960,1080 1080,1230
so and when you read

2945
01:37:31,540 --> 01:37:33,120
0,90 90,360 360,450 450,930
the down is zero.

2946
01:37:33,350 --> 01:37:35,510
0,630 1110,1440 1440,1860 1890,2010 2010,2160
Yeah, okay, then you get

2947
01:37:35,510 --> 01:37:36,530
0,60 60,240 240,510 510,660 660,1020
to know back so matching

2948
01:37:36,530 --> 01:37:38,260
0,300 300,390 390,840 840,1170
next a zero right.

2949
01:37:38,940 --> 01:37:40,020
0,570
Okay.

2950
01:37:40,280 --> 01:37:41,570
0,390 420,690 690,990 990,1140 1140,1290
Um, nothing there, but now

2951
01:37:41,570 --> 01:37:42,590
0,270 270,360 360,630 630,900 900,1020
it's an okay back, so

2952
01:37:42,590 --> 01:37:44,080
0,150 150,270 270,420 420,930
what does that imply.

2953
01:37:45,800 --> 01:37:48,080
0,270 270,1020 1110,1560 1560,2130 2130,2280
That implies that what did

2954
01:37:48,080 --> 01:37:49,310
0,120 120,300 300,450 450,870 900,1230
it say that sending a

2955
01:37:49,310 --> 01:37:51,920
0,480 480,930 930,1530 1710,2250 2250,2610
heartbeat correct with four index

2956
01:37:51,920 --> 01:37:53,200
0,780
thirteen.

2957
01:37:53,290 --> 01:37:57,400
0,660 660,1590 1620,2400 2400,3510 3900,4110
Um, and um, including um,

2958
01:37:57,400 --> 01:37:59,480
0,540 690,960 960,1470
and um the.

2959
01:37:59,600 --> 01:38:02,390
0,630 930,1260 1260,1740 1740,2220 2220,2790
A S three responded okay

2960
01:38:02,780 --> 01:38:03,710
0,150 150,270 270,390 390,750 750,930
and so it means that

2961
01:38:03,710 --> 01:38:05,090
0,420 420,570 570,1020 1020,1200 1200,1380
visually as free is up

2962
01:38:05,090 --> 01:38:06,950
0,90 90,360 360,810 840,1320 1320,1860
to date through until thirteen

2963
01:38:07,040 --> 01:38:08,510
0,300 300,570 570,930 930,1320 1320,1470
correct as next index that

2964
01:38:08,510 --> 01:38:10,190
0,120 120,480 480,960 960,1170 1170,1680
it actually has and expects

2965
01:38:10,190 --> 01:38:11,160
0,480
routine.

2966
01:38:11,500 --> 01:38:13,420
0,150 150,630 750,1350 1440,1680 1680,1920
And so the s two

2967
01:38:13,420 --> 01:38:15,220
0,390 390,600 600,870 870,1080 1080,1800
knows now that it's loc

2968
01:38:15,310 --> 01:38:17,860
0,570 630,990 990,1620 1770,2130 2130,2550
metric until thirteenth after this

2969
01:38:17,920 --> 01:38:19,000
0,600
message.

2970
01:38:19,880 --> 01:38:21,020
0,120 120,270 270,540 540,1080 1080,1140
Is it until thirteen or

2971
01:38:21,020 --> 01:38:23,900
0,300 300,900 1350,1650 1650,2370 2400,2880
until twelve it mattress till

2972
01:38:23,900 --> 01:38:25,460
0,510 510,690 690,840 840,1290 1290,1560
thirteen so the next thing

2973
01:38:25,460 --> 01:38:26,480
0,180 180,330 330,450 450,840 840,1020
that will be sent will

2974
01:38:26,480 --> 01:38:28,560
0,90 90,480 480,1050 1050,1560
be going index routine.

2975
01:38:28,940 --> 01:38:29,960
0,510
SO.

2976
01:38:30,020 --> 01:38:31,340
0,210 210,270 270,540 540,960 960,1320
So the next index and

2977
01:38:31,340 --> 01:38:32,300
0,300 300,690 690,780 780,900 900,960
match index are going to

2978
01:38:32,300 --> 01:38:33,770
0,150 150,810 900,1140 1140,1260 1260,1470
be thirteen yeah the next

2979
01:38:33,770 --> 01:38:34,820
0,330 330,420 420,600 600,840 840,1050
index is not used, yet

2980
01:38:34,820 --> 01:38:36,320
0,300 300,540 540,960
correct means empty.

2981
01:38:37,290 --> 01:38:38,560
0,690
Picture.

2982
01:38:38,560 --> 01:38:39,910
0,120 120,300 300,750 750,1200 1200,1350
Yeah, so basically the the

2983
01:38:39,910 --> 01:38:41,380
0,300 300,420 420,540 540,930 1110,1470
way you know they they

2984
01:38:41,740 --> 01:38:43,030
0,180 180,270 270,630 750,1020 1020,1290
you can do either way

2985
01:38:43,030 --> 01:38:43,870
0,300 300,390 390,510 510,690 690,840
correct you can either save

2986
01:38:43,870 --> 01:38:45,070
0,90 90,390 390,630 630,1080 1110,1200
the last one or you

2987
01:38:45,070 --> 01:38:46,450
0,150 150,660 660,840 840,1020 1020,1380
know first, that's gonna be

2988
01:38:46,630 --> 01:38:48,400
0,210 210,930 930,1170 1170,1650 1710,1770
four z first next to

2989
01:38:48,400 --> 01:38:50,170
0,300 300,630 630,1290 1290,1500 1500,1770
no one in this case

2990
01:38:50,170 --> 01:38:51,040
0,180 180,360 360,540 540,660 660,870
they go by the first

2991
01:38:51,040 --> 01:38:51,940
0,180 180,390
next one.

2992
01:38:53,410 --> 01:38:54,460
0,210 210,270 270,420 420,780 780,1050
So in this case, both

2993
01:38:54,460 --> 01:38:56,530
0,120 120,360 360,780 780,1440 1440,2070
of them are thirteen for

2994
01:38:56,740 --> 01:38:58,630
0,120 120,360 360,660 870,1650 1650,1890
the next one yeah, so

2995
01:38:58,630 --> 01:38:59,860
0,600 600,750 750,840 840,1020 1020,1230
basically you can think about

2996
01:38:59,860 --> 01:39:01,780
0,240 240,630 630,1110 1110,1740 1740,1920
this, this stage before, like

2997
01:39:01,780 --> 01:39:02,560
0,90 90,180 180,420 420,690 690,780
all the green stuff has

2998
01:39:02,560 --> 01:39:07,460
0,540 930,1500 2280,3210 3570,4350
happened, the mesh index.

2999
01:39:09,660 --> 01:39:12,920
0,840 1950,2730
Four three.

3000
01:39:13,360 --> 01:39:15,300
0,210 210,600 630,1380
It is thirteen.

3001
01:39:15,300 --> 01:39:16,830
0,330 330,420 420,690 690,1200 1200,1530
And the match index for

3002
01:39:16,830 --> 01:39:18,640
0,720
itself.

3003
01:39:20,770 --> 01:39:22,760
0,360 360,510 510,750 750,1260
Two is also thirteen.

3004
01:39:24,280 --> 01:39:25,600
0,510 510,810
Got it.

3005
01:39:27,090 --> 01:39:29,490
0,600 870,1290 1290,1770 1860,2040 2040,2400
Awesome, thank you you're welcome.

3006
01:39:31,840 --> 01:39:33,940
0,840 870,1200 1200,1650 1650,2010 2010,2100
Actually, can I ask a

3007
01:39:33,940 --> 01:39:35,620
0,210 210,330 330,480 480,840 1020,1680
full out from there, so

3008
01:39:36,220 --> 01:39:39,610
0,780 810,1290 1590,2100 2100,2520 2520,3390
when it sees something matches

3009
01:39:39,820 --> 01:39:42,130
0,300 300,720 870,1470 1470,1620 1620,2310
for them here on position,

3010
01:39:42,400 --> 01:39:44,320
0,390 390,1110 1260,1470 1470,1650 1650,1920
a eleven it saw that

3011
01:39:44,320 --> 01:39:46,440
0,840 900,1770
mattress then.

3012
01:39:47,570 --> 01:39:49,250
0,720 720,840 840,900 900,1410 1410,1680
It is a guarantee that

3013
01:39:49,250 --> 01:39:51,290
0,390 390,810 810,1050 1050,1560 1560,2040
everything before that matches too,

3014
01:39:51,680 --> 01:39:53,270
0,420 420,720 720,1020 1020,1500 1500,1590
yes great because hold on

3015
01:39:53,270 --> 01:39:54,380
0,210 210,360 360,840 840,990 990,1110
let me double check you're

3016
01:39:54,380 --> 01:39:55,800
0,210 210,330 330,480 480,960
talking about this message.

3017
01:39:56,920 --> 01:39:58,240
0,540 540,750 750,960 960,1200 1200,1320
Yeah about like when it

3018
01:39:58,240 --> 01:39:59,920
0,330 330,840 840,1050 1050,1170 1170,1680
says okay if you check,

3019
01:40:00,160 --> 01:40:03,430
0,540 690,1650 1860,2550 2550,2850 2850,3270
um, yeah yeah, because that

3020
01:40:03,430 --> 01:40:04,330
0,150 150,360 360,540 540,780 780,900
is the whole reason that

3021
01:40:04,330 --> 01:40:05,620
0,150 150,510 510,840 840,960 960,1290
the previous term or previous

3022
01:40:05,620 --> 01:40:07,180
0,330 330,390 390,1080 1080,1380 1380,1560
index or communicated correct to

3023
01:40:07,180 --> 01:40:09,400
0,480 510,1110 1470,1830 1830,2040 2040,2220
the follower, um to make

3024
01:40:09,400 --> 01:40:10,450
0,270 270,540 540,780 780,930 930,1050
double check that it can

3025
01:40:10,450 --> 01:40:12,280
0,240 240,630 630,780 780,1410 1590,1830
only respond to okay if

3026
01:40:12,280 --> 01:40:13,480
0,330 330,510 510,600 600,930 930,1200
indeed is the case that

3027
01:40:13,480 --> 01:40:15,490
0,1050 1050,1260 1260,1350 1350,1620 1620,2010
a in the previous index

3028
01:40:15,490 --> 01:40:17,320
0,510 510,810 810,1080 1080,1410
eleven actually turn free.

3029
01:40:18,200 --> 01:40:19,220
0,270 270,330 330,630 630,840 840,1020
And if that's true, that

3030
01:40:19,220 --> 01:40:20,630
0,300 300,420 420,810 810,1140 1140,1410
means that visually everything before

3031
01:40:20,630 --> 01:40:21,950
0,180 180,360 360,810 930,1170 1170,1320
that must match and this

3032
01:40:21,950 --> 01:40:23,930
0,150 150,300 300,450 450,840 840,1980
is like this, whatever their

3033
01:40:24,590 --> 01:40:26,540
0,630 630,840 840,1320 1320,1410 1410,1950
whatever their statement they called

3034
01:40:28,100 --> 01:40:30,200
0,330 330,930 930,1470 1470,1950 1950,2100
this invariant initially maintained that

3035
01:40:30,200 --> 01:40:31,460
0,180 180,540 540,780 780,1140 1140,1260
like if something matches at

3036
01:40:31,460 --> 01:40:33,080
0,210 210,450 450,870 870,1350 1350,1620
like one index, then everything

3037
01:40:33,080 --> 01:40:36,260
0,300 300,630 630,1230 1230,1470
before that match too.

3038
01:40:36,320 --> 01:40:37,340
0,300 300,480 480,750 750,870 870,1020
Oh, okay, okay, this is

3039
01:40:37,340 --> 01:40:39,180
0,210 210,930 930,990
new to you.

3040
01:40:40,530 --> 01:40:42,180
0,540 540,720 720,780 780,990 990,1650
Oh, and I had another

3041
01:40:42,180 --> 01:40:44,310
0,540 540,1230 1320,1680 1680,2010 2010,2130
follow-up question was related to

3042
01:40:44,310 --> 01:40:46,620
0,60 60,420 420,930 1080,1710 2130,2310
the question a um on

3043
01:40:46,620 --> 01:40:47,730
0,60 60,390 390,870 870,990 990,1110
the lecture question that I

3044
01:40:47,730 --> 01:40:49,920
0,450 720,1260 1290,1680 1680,1920 1920,2190
wrote I asked about the

3045
01:40:49,920 --> 01:40:52,530
0,420 420,600 600,1170 1350,2220 2220,2610
copy on write more ASAP

3046
01:40:52,530 --> 01:40:54,720
0,630 720,1290 1590,1920 1920,2160 2160,2190
shots, no I think I

3047
01:40:54,720 --> 01:40:55,860
0,150 150,360 360,810 810,1020 1020,1140
don't really understand what is

3048
01:40:55,860 --> 01:40:58,050
0,450 540,1140 1140,1350 1350,1590 1830,2190
being copied, is it is

3049
01:40:58,050 --> 01:40:59,880
0,150 150,270 270,570 570,1290 1380,1830
it the page tables or

3050
01:40:59,880 --> 01:41:01,590
0,120 120,270 270,600 600,1290 1410,1710
is it something I think

3051
01:41:01,590 --> 01:41:05,310
0,30 30,540 570,2310 2520,3600 3600,3720
I responded I yeah I

3052
01:41:05,310 --> 01:41:06,600
0,480 480,900
email, but.

3053
01:41:06,750 --> 01:41:10,920
0,1200 1230,2130 2160,3630 3750,4080 4080,4170
OK, OK, OK hold on

3054
01:41:10,920 --> 01:41:12,300
0,30 30,450 930,1110 1110,1170 1170,1380
a SEC, let me catch

3055
01:41:12,300 --> 01:41:15,520
0,120 120,810 840,1410 1920,2670
my breath I'm the.

3056
01:41:15,670 --> 01:41:17,100
0,330 330,960
So okay.

3057
01:41:17,320 --> 01:41:19,120
0,180 180,720 720,1260
The scenario is.

3058
01:41:19,180 --> 01:41:21,820
0,870 1260,1890 1890,2010 2010,2100 2100,2640
A snapshot can be expensive

3059
01:41:21,850 --> 01:41:23,860
0,840 840,1290 1290,1440 1440,1500 1500,2010
because Snapchat might be large

3060
01:41:24,280 --> 01:41:26,470
0,810 810,900 900,1260 1530,1980 1980,2190
gigabytes, you know a key

3061
01:41:26,470 --> 01:41:28,600
0,570 570,900 900,1380 1380,1980 2070,2130
values a page table, a

3062
01:41:28,600 --> 01:41:30,940
0,480 1290,1530 1530,1680 1680,1950 1950,2340
short speech, it was a

3063
01:41:30,940 --> 01:41:32,740
0,600 600,780 780,930 930,1260 1260,1800
gigabyte a key value store.

3064
01:41:33,290 --> 01:41:34,310
0,450 450,540 540,690 690,870 870,1020
Then you know you need

3065
01:41:34,310 --> 01:41:36,440
0,90 90,360 360,690 720,1410 1590,2130
to write that gigabyte disk,

3066
01:41:36,470 --> 01:41:37,440
0,390
right.

3067
01:41:37,710 --> 01:41:38,940
0,240 240,630 630,780 780,1020 1020,1230
And while you're running into

3068
01:41:38,940 --> 01:41:40,140
0,390 600,780 780,930 930,1020 1020,1200
this, um, if you don't

3069
01:41:40,140 --> 01:41:42,060
0,90 90,390 390,990 1170,1410 1410,1920
do anything clever, you cannot

3070
01:41:42,060 --> 01:41:43,320
0,390 390,630 630,840 840,1050 1050,1260
process any other put get

3071
01:41:43,320 --> 01:41:45,450
0,720 1050,1380 1380,1560 1560,1830 1830,2130
operations that come in through

3072
01:41:45,450 --> 01:41:48,480
0,720 1140,2070 2100,2820 2820,2940 2940,3030
the um channels, let me

3073
01:41:48,480 --> 01:41:51,420
0,600 660,1020 1020,1260 1260,1260 2460,2940
actually popup this a picture.

3074
01:41:52,010 --> 01:41:53,870
0,360 360,720 900,1260 1260,1560 1560,1860
Great, so basically serves decides

3075
01:41:53,870 --> 01:41:54,470
0,60 60,180 180,390 390,450 450,600
at some point to take

3076
01:41:54,470 --> 01:41:55,940
0,90 90,600 600,960 960,1410 1410,1470
a checkpoint to gigabyte you

3077
01:41:55,940 --> 01:41:56,750
0,120 120,210 210,360 360,390 390,810
have to write a gigabyte

3078
01:41:56,750 --> 01:41:58,480
0,510 510,690 690,1170
disk, that's expensive.

3079
01:41:58,510 --> 01:42:00,670
0,570 930,1140 1140,1680 1680,1770 1770,2160
So the plan you know

3080
01:42:00,670 --> 01:42:01,540
0,150 150,330 330,450 450,720 720,870
I think the plan that

3081
01:42:01,540 --> 01:42:03,340
0,240 240,570 570,900 900,1230
the papers hinting at.

3082
01:42:03,340 --> 01:42:05,050
0,630 630,930 930,1260 1260,1350 1350,1710
Is that what the service

3083
01:42:05,050 --> 01:42:06,140
0,570
does.

3084
01:42:06,320 --> 01:42:07,940
0,540 540,690 690,780 780,1050 1050,1620
It's you know calls fork.

3085
01:42:10,880 --> 01:42:11,930
0,210 210,390 390,810 810,990 990,1050
So when it wants to

3086
01:42:11,930 --> 01:42:13,490
0,150 150,390 390,1110 1230,1350 1350,1560
make a checkpoint, it calls

3087
01:42:13,490 --> 01:42:14,580
0,570
fork.

3088
01:42:15,080 --> 01:42:16,520
0,420 420,660 660,840 840,900 900,1440
And fourth place a copy

3089
01:42:16,520 --> 01:42:17,810
0,90 90,240 240,690 690,1050 1050,1290
of that process right now

3090
01:42:17,810 --> 01:42:18,590
0,120 120,330 330,420 420,540 540,780
we have the eye brain

3091
01:42:18,590 --> 01:42:20,760
0,540 900,1620
system running.

3092
01:42:21,070 --> 01:42:22,330
0,390 390,540 540,750 750,900 900,1260
And we have now basically

3093
01:42:22,330 --> 01:42:25,300
0,480 480,1440 1770,2190 2190,2490 2490,2970
two processes, um that correspond

3094
01:42:25,300 --> 01:42:28,690
0,1200 1230,1380 1380,1950 2280,2850 2850,3390
to this application service raft

3095
01:42:28,690 --> 01:42:30,540
0,420 420,990
surface raft.

3096
01:42:30,930 --> 01:42:32,250
0,390 390,600 600,690 690,810 810,1320
And this is the copy

3097
01:42:32,400 --> 01:42:34,140
0,60 150,450 450,1020
of the child.

3098
01:42:34,520 --> 01:42:36,050
0,120 120,480 480,750 750,1200 1200,1530
The operating system uses copy

3099
01:42:36,050 --> 01:42:37,300
0,120 120,540
on write.

3100
01:42:38,040 --> 01:42:38,760
0,210 210,420 420,510 510,690 690,720
So when it made a

3101
01:42:38,760 --> 01:42:40,230
0,420 420,510 510,660 660,900 900,1470
copy of that second process,

3102
01:42:40,680 --> 01:42:41,940
0,570 570,750 750,900 900,1200 1200,1260
um and just copy the

3103
01:42:41,940 --> 01:42:43,230
0,240 240,600 600,930 930,990 990,1290
page table within a copy

3104
01:42:43,230 --> 01:42:44,460
0,300 300,660
physical memory.

3105
01:42:45,220 --> 01:42:47,140
0,120 120,510 510,900 900,1080 1080,1920
So basically these two processes

3106
01:42:47,170 --> 01:42:48,730
0,510 510,570 570,840 840,1170 1170,1560
share the same physical memory.

3107
01:42:52,420 --> 01:42:53,860
0,180 180,720 720,810 810,960 960,1440
Which holds you know the

3108
01:42:53,890 --> 01:42:55,820
0,240 240,600 600,960 990,1380
art value store, right.

3109
01:42:56,540 --> 01:42:58,340
0,210 210,660 720,1260 1260,1470 1470,1800
And so now the idea

3110
01:42:58,340 --> 01:42:59,540
0,90 90,420 420,570 570,1050 1050,1200
is that the child when

3111
01:42:59,540 --> 01:43:00,770
0,60 60,300 300,720 810,930 930,1230
it starts running, it starts

3112
01:43:00,770 --> 01:43:02,500
0,300 300,630 630,1200
making a checkpoint.

3113
01:43:02,990 --> 01:43:04,430
0,150 150,780 990,1140 1140,1290 1290,1440
Or snapshot I can just

3114
01:43:04,430 --> 01:43:05,480
0,300 300,720 750,870 870,990 990,1050
write out, you know the

3115
01:43:05,480 --> 01:43:07,360
0,180 180,540 540,840 840,1290
key value sort of.

3116
01:43:07,880 --> 01:43:09,470
0,270 270,450 450,750 750,1170 1170,1590
The key value store to

3117
01:43:09,470 --> 01:43:10,580
0,600
disk.

3118
01:43:11,430 --> 01:43:13,260
0,480 480,690 690,1470 1560,1680 1680,1830
And in parallel, you know

3119
01:43:13,260 --> 01:43:15,090
0,330 360,930 1110,1320 1320,1470 1470,1830
the parents, can you start

3120
01:43:15,090 --> 01:43:17,040
0,600 600,1410
processing new.

3121
01:43:17,290 --> 01:43:18,880
0,150 150,360 360,660 660,870 870,1590
You know getting food operations.

3122
01:43:21,860 --> 01:43:22,880
0,360 360,510 510,570 570,810 810,1020
Because if it doesn't boot

3123
01:43:22,880 --> 01:43:24,160
0,750
operation.

3124
01:43:24,220 --> 01:43:25,180
0,210 210,300 300,510 510,570 570,960
And it wants to modify

3125
01:43:25,180 --> 01:43:27,250
0,600 600,870 870,1320 1320,1500 1500,2070
it will write you two

3126
01:43:27,250 --> 01:43:29,500
0,840 870,1440 1440,1590 1590,2100 2100,2250
a pages that correspond to

3127
01:43:29,500 --> 01:43:30,720
0,570
the.

3128
01:43:30,720 --> 01:43:31,950
0,90 90,390 390,900 930,1080 1080,1230
Key value store that will

3129
01:43:31,950 --> 01:43:32,970
0,300 300,390 390,450 450,690 690,1020
result in a page fault

3130
01:43:33,000 --> 01:43:33,990
0,270 270,390 390,510 510,600 600,990
right, and so the o's

3131
01:43:33,990 --> 01:43:34,950
0,120 120,240 240,300 300,540 540,960
will get a page fault

3132
01:43:34,950 --> 01:43:35,850
0,180 180,300 300,450 450,780 780,900
and so the OS will

3133
01:43:35,850 --> 01:43:38,100
0,330 330,480 480,1080 1530,2070 2070,2250
copy that page, um, at

3134
01:43:38,100 --> 01:43:39,930
0,180 180,720 960,1380 1380,1740 1740,1830
that point and then you

3135
01:43:39,930 --> 01:43:41,790
0,150 150,450 450,780 810,1260 1260,1860
know the first repair prosecutors

3136
01:43:41,790 --> 01:43:44,040
0,540 1170,1440 1440,1530 1530,1710 1710,2250
updated, this is all transparent

3137
01:43:44,040 --> 01:43:45,330
0,90 90,180 180,750 780,1170 1170,1290
to the child which the

3138
01:43:45,330 --> 01:43:47,430
0,600 600,930 930,990 990,1410 1410,2100
child had a consistent snapshot

3139
01:43:47,640 --> 01:43:48,660
0,150 150,210 210,420 420,720 720,1020
of the whole address space

3140
01:43:48,660 --> 01:43:49,200
0,60 60,150 150,360 360,420 420,540
at the point of the

3141
01:43:49,200 --> 01:43:50,000
0,420
fork.

3142
01:43:50,790 --> 01:43:52,470
0,180 180,360 360,900 900,1320 1320,1680
So, this allows basically the

3143
01:43:52,500 --> 01:43:54,060
0,300 300,420 420,690 690,900 900,1560
parent and child, he currently

3144
01:43:54,060 --> 01:43:56,310
0,270 270,420 420,510 510,1530 1530,2250
still make a consistent snapshot

3145
01:43:56,580 --> 01:43:58,500
0,480 480,780 810,1320 1320,1590 1590,1920
and the parents actually make

3146
01:43:58,530 --> 01:44:00,620
0,450 450,840 840,990 990,1620
process Newton get operations.

3147
01:44:02,340 --> 01:44:03,870
0,180 180,330 330,480 480,900 1140,1530
There's not more clear, okay,

3148
01:44:03,870 --> 01:44:05,040
0,120 120,540 540,780 780,900 900,1170
oh yeah okay I see

3149
01:44:05,040 --> 01:44:07,080
0,360 480,960 1020,1530 1530,1650 1650,2040
so they copy on write

3150
01:44:07,140 --> 01:44:09,240
0,210 210,660 660,840 840,1590 1620,2100
the memory that holds the

3151
01:44:09,270 --> 01:44:12,870
0,180 180,870 900,1620 2460,3150 3240,3600
key value store, okay, okay,

3152
01:44:12,870 --> 01:44:13,860
0,270 270,420 420,570 570,840 840,990
okay I see, yeah, this

3153
01:44:13,860 --> 01:44:15,090
0,240 240,420 420,660 660,1050 1050,1230
makes it very clear, thank

3154
01:44:15,090 --> 01:44:17,240
0,90 90,240 240,780 1080,1710
you so much, robo.

3155
01:44:20,920 --> 01:44:22,320
0,210 210,360 360,870
Any more questions.

3156
01:44:23,750 --> 01:44:26,240
0,660 660,1230 1230,1350 1350,2100 2130,2490
Yeah I have A I

3157
01:44:26,240 --> 01:44:27,170
0,180 180,330 330,480 480,690 690,930
guess this is sort of

3158
01:44:27,440 --> 01:44:29,300
0,210 210,960 960,1560 1560,1680 1680,1860
a weird scenario, I'm not

3159
01:44:29,300 --> 01:44:30,230
0,150 150,240 240,420 420,570 570,930
sure if this could actually.

3160
01:44:31,390 --> 01:44:33,550
0,480 660,960 960,1290 1350,1560 1560,2160
But what if so imagine

3161
01:44:33,580 --> 01:44:34,510
0,240 240,480 480,780 780,870 870,930
that we're always in the

3162
01:44:34,510 --> 01:44:35,720
0,270 270,630
same term.

3163
01:44:35,720 --> 01:44:38,090
0,180 180,750 1710,2070 2070,2280 2280,2370
And then you get to

3164
01:44:38,090 --> 01:44:40,550
0,120 120,510 540,1230 1560,2130 2160,2460
a point where I'm some

3165
01:44:40,550 --> 01:44:41,660
0,210 210,300 300,870 870,990 990,1110
nodes have disconnected but they're

3166
01:44:41,660 --> 01:44:43,010
0,210 210,300 300,600 600,1110 1200,1350
still the same term the

3167
01:44:43,010 --> 01:44:43,610
0,210 210,270 270,450 450,510 510,600
leader is still in the

3168
01:44:43,610 --> 01:44:45,710
0,300 300,750 900,1080 1080,1650 1650,2100
same term and then at

3169
01:44:45,710 --> 01:44:47,390
0,150 150,390 390,570 570,1140 1140,1680
some point they will um.

3170
01:44:48,610 --> 01:44:49,870
0,270 270,420 420,540 540,600 600,1260
They will do a snapshot

3171
01:44:50,230 --> 01:44:51,340
0,180 180,480 480,690 690,780 780,1110
and then all the logs

3172
01:44:51,340 --> 01:44:53,060
0,240 240,450 450,1200
will be compressed.

3173
01:44:53,120 --> 01:44:54,230
0,180 180,360 360,540 540,810 810,1110
And then they keep going

3174
01:44:54,230 --> 01:44:56,300
0,390 390,480 480,1080 1140,1380 1380,2070
forward and now the logs

3175
01:44:56,330 --> 01:44:57,500
0,180 180,330 330,750 750,1020 1020,1170
are being populated again and

3176
01:44:57,500 --> 01:45:00,060
0,390 570,1170 1170,1410 1410,1980
then let's just say.

3177
01:45:00,060 --> 01:45:01,980
0,690 690,1170 1170,1320 1320,1470 1470,1920
Fifteen logs have been added,

3178
01:45:02,280 --> 01:45:04,200
0,150 150,270 270,630 630,1170 1200,1920
and then after ten they

3179
01:45:04,560 --> 01:45:06,420
0,840 840,1200 1470,1620 1620,1740 1740,1860
compress them and then they

3180
01:45:06,420 --> 01:45:08,340
0,300 300,450 450,1080 1290,1680 1680,1920
are at index next five

3181
01:45:08,340 --> 01:45:09,630
0,330 330,450 450,600 600,720 720,1290
again and then the other

3182
01:45:09,660 --> 01:45:11,190
0,300 300,540 540,780 780,1170 1350,1530
nodes joined back in and

3183
01:45:11,190 --> 01:45:12,240
0,150 150,450 450,540 540,870 870,1050
they're also at index, five

3184
01:45:12,240 --> 01:45:13,600
0,90 90,180 180,450 450,930
of the same term.

3185
01:45:13,630 --> 01:45:14,780
0,570
Dope.

3186
01:45:14,870 --> 01:45:16,520
0,180 180,600 780,930 930,1410 1410,1650
Is that a problem like

3187
01:45:16,520 --> 01:45:18,980
0,210 210,450 450,990 1980,2190 2190,2460
how, how does it's almost

3188
01:45:18,980 --> 01:45:20,570
0,120 120,240 240,390 390,840 840,1590
like they're on a snapshot.

3189
01:45:21,170 --> 01:45:23,200
0,630 630,840 840,1050 1050,1500
Epoch of some sort.

3190
01:45:23,350 --> 01:45:25,330
0,330 330,600 600,1050 1050,1560 1560,1980
Okay so old snapshots correspond

3191
01:45:25,330 --> 01:45:26,770
0,90 90,180 180,750 780,1020 1020,1440
to an index right, so

3192
01:45:26,860 --> 01:45:28,990
0,390 600,900 900,1110 1110,1320 1320,2130
yeah so okay, let's rather

3193
01:45:28,990 --> 01:45:30,340
0,240 240,450 450,600 600,1020 1050,1350
dry out like maybe draw

3194
01:45:30,340 --> 01:45:31,420
0,210 210,630 630,780 780,900 900,1080
your scenario, so we got

3195
01:45:31,420 --> 01:45:33,430
0,210 570,1170 1170,1350 1350,1530 1530,2010
a server gonna have some

3196
01:45:33,580 --> 01:45:34,700
0,600
water.

3197
01:45:35,780 --> 01:45:37,040
0,540 540,600 600,720 720,1170 1170,1260
And you know maybe I

3198
01:45:37,040 --> 01:45:37,820
0,210 210,300 300,420 420,540 540,780
think you know you talk

3199
01:45:37,820 --> 01:45:39,350
0,180 180,660 960,1320 1320,1410 1410,1530
about ten and it took

3200
01:45:39,350 --> 01:45:40,960
0,60 60,570 570,690 690,1020
a snapshot at ten.

3201
01:45:41,380 --> 01:45:42,700
0,780
Yeah.

3202
01:45:43,080 --> 01:45:43,980
0,150 150,300 300,510 510,600 600,900
Yeah, so let's say let's

3203
01:45:43,980 --> 01:45:45,810
0,180 180,450 450,840 840,1110 1710,1830
say that basically yeah so

3204
01:45:45,810 --> 01:45:47,280
0,300 300,360 360,630 630,900 900,1470
basically the first nine operations

3205
01:45:47,280 --> 01:45:49,200
0,270 270,870 900,1350 1350,1650 1650,1920
are maybe including ten are

3206
01:45:49,200 --> 01:45:50,440
0,90 90,150 150,660
in the snapshot.

3207
01:45:51,160 --> 01:45:52,180
0,480
Yeah.

3208
01:45:52,490 --> 01:45:53,420
0,240 240,420 420,660 660,810 810,930
Um, and then okay, so

3209
01:45:53,420 --> 01:45:56,780
0,180 180,450 450,1170 1920,2490 2490,3360
there's another note a is.

3210
01:45:57,730 --> 01:45:59,160
0,300 300,420 420,870
Same to him.

3211
01:45:59,220 --> 01:46:00,300
0,210 210,450 450,630 630,930 930,1080
So all these entries have

3212
01:46:00,300 --> 01:46:01,890
0,60 60,300 300,690 690,1020 1020,1590
the same term right, whatever.

3213
01:46:02,930 --> 01:46:04,100
0,150 150,240 240,570 570,870 870,1170
You know one one one

3214
01:46:04,100 --> 01:46:05,990
0,360 360,840 960,1320 1320,1620 1620,1890
one one one one one

3215
01:46:05,990 --> 01:46:07,720
0,360 390,1350
one yep.

3216
01:46:07,840 --> 01:46:09,940
0,660 690,1410
And, um.

3217
01:46:09,940 --> 01:46:11,350
0,150 150,420 420,720 720,1020 1020,1410
So this node actually, but

3218
01:46:11,350 --> 01:46:12,250
0,180 180,420 420,540 540,750 750,900
this node has only through

3219
01:46:12,250 --> 01:46:13,540
0,360 360,660 660,780 780,1140 1140,1290
ten broken this guys through

3220
01:46:13,540 --> 01:46:14,680
0,540
fifteen.

3221
01:46:14,770 --> 01:46:16,180
0,360 360,720
Let's say.

3222
01:46:16,380 --> 01:46:17,040
0,120 120,270 270,420 420,570 570,660
I think that's what you're

3223
01:46:17,040 --> 01:46:18,600
0,300 300,660 660,840 840,1380 1380,1560
saying great show year, no

3224
01:46:18,600 --> 01:46:20,540
0,300 300,420 420,690 690,1050
wants to hear, why.

3225
01:46:24,430 --> 01:46:26,590
0,330 330,480 480,750 750,1170 1590,2160
Well I think my um,

3226
01:46:26,980 --> 01:46:28,810
0,240 240,600 600,960 1020,1500 1500,1830
my thought is well here's

3227
01:46:28,810 --> 01:46:29,470
0,210 210,270 270,510 510,570 570,660
here's a question I can

3228
01:46:29,470 --> 01:46:30,580
0,330 480,720 720,840 840,1050 1050,1110
answer when you take a

3229
01:46:30,580 --> 01:46:31,870
0,510 510,600 600,750 750,1170 1170,1290
snapshot do you reset your

3230
01:46:31,870 --> 01:46:32,980
0,480 480,630 630,720 720,810 810,1110
index or do you keep

3231
01:46:32,980 --> 01:46:35,280
0,660
counting.

3232
01:46:35,280 --> 01:46:36,900
0,450 450,1050
Oh, okay.

3233
01:46:37,050 --> 01:46:38,010
0,150 150,330 330,750 750,840 840,960
I was imagining it was

3234
01:46:38,010 --> 01:46:40,020
0,150 150,210 210,690 1020,1740 1800,2010
like an array, and you

3235
01:46:40,020 --> 01:46:41,670
0,150 150,330 330,690 690,900 900,1650
saw your index goes backwards.

3236
01:46:42,180 --> 01:46:43,380
0,210 210,420 420,600 750,1080 1080,1200
So that it would be

3237
01:46:43,380 --> 01:46:44,970
0,660 660,810 810,900 900,990 990,1590
possible for you to have

3238
01:46:45,000 --> 01:46:46,110
0,270 270,660 660,960 960,1050 1050,1110
two different entries in the

3239
01:46:46,110 --> 01:46:48,090
0,330 330,900 1320,1590 1590,1680 1680,1980
same term with the same

3240
01:46:48,090 --> 01:46:51,060
0,600 600,1560 1770,2490 2490,2580 2580,2970
index, yeah got two right

3241
01:46:51,060 --> 01:46:52,920
0,420 420,810 1050,1320 1320,1500 1500,1860
yeah okay I I see.

3242
01:46:53,540 --> 01:46:56,300
0,780 1140,1830 1830,2130 2160,2550 2550,2760
So okay okay that makes

3243
01:46:56,300 --> 01:46:58,040
0,510 510,750 750,840 840,1380 1380,1740
sense when you remember reset

3244
01:46:58,040 --> 01:46:59,630
0,120 120,750 780,1050 1050,1200 1200,1590
the index when you cut

3245
01:46:59,690 --> 01:47:00,680
0,390 390,540 540,810 810,900 900,990
like this part of the

3246
01:47:00,680 --> 01:47:02,510
0,510 900,1200 1200,1260 1260,1590 1590,1830
log in the index stays

3247
01:47:02,510 --> 01:47:03,540
0,90 90,510
at ten.

3248
01:47:03,700 --> 01:47:05,170
0,360 360,540 540,780 780,960 1260,1470
Got it, got it and

3249
01:47:05,170 --> 01:47:06,310
0,210 210,300 300,750 750,1020 1020,1140
so in fact when you

3250
01:47:06,310 --> 01:47:07,120
0,120 120,300 300,390 390,540 540,810
do this in two d,

3251
01:47:07,120 --> 01:47:08,080
0,150 150,240 240,390 390,540 540,960
this is gonna be slightly

3252
01:47:08,080 --> 01:47:10,150
0,540 1020,1380 1380,1470 1470,1890 1890,2070
knowing because you presumably take

3253
01:47:10,150 --> 01:47:13,360
0,420 420,510 510,990 990,2460 2520,3210
advantage, in fact z zero

3254
01:47:13,690 --> 01:47:14,830
0,480 480,750 750,840 840,990 990,1140
and what you're now going

3255
01:47:14,830 --> 01:47:15,430
0,60 60,270 270,390 390,510 510,600
to get is that the

3256
01:47:15,430 --> 01:47:16,900
0,210 210,300 300,390 390,1290 1290,1470
start of the Iraq might

3257
01:47:16,900 --> 01:47:18,080
0,60 60,720
be tenth.

3258
01:47:18,430 --> 01:47:21,520
0,420 1410,1770 1770,1920 1920,2940 2940,3090
Mhm people have to have

3259
01:47:21,520 --> 01:47:22,690
0,60 60,510 510,630 630,810 810,1170
an offset of some sort,

3260
01:47:22,780 --> 01:47:24,760
0,1140 1140,1590 1590,1710 1710,1800 1800,1980
yeah you have to add

3261
01:47:24,760 --> 01:47:26,400
0,150 150,570 570,1110
that offset everywhere.

3262
01:47:26,550 --> 01:47:27,780
0,630 630,720 720,930 930,1050 1050,1230
Yeah, and then and then

3263
01:47:27,780 --> 01:47:29,250
0,330 330,510 510,750 750,1230 1230,1470
last thing really quickly I

3264
01:47:29,250 --> 01:47:29,850
0,180 180,240 240,450 450,480 480,600
think the reason I was

3265
01:47:29,850 --> 01:47:32,070
0,540 540,1140 1230,1560 1560,1830 1830,2220
confused earlier was in the

3266
01:47:32,100 --> 01:47:35,190
0,210 210,480 930,1800 1800,2490 2520,3090
in the code for lab,

3267
01:47:35,190 --> 01:47:37,050
0,600 750,1050 1050,1320 1320,1380 1380,1860
two yeah there's a comment

3268
01:47:37,050 --> 01:47:38,160
0,180 180,540 540,720 720,1050 1050,1110
that says we're supposed to

3269
01:47:38,160 --> 01:47:39,840
0,450 450,1200
return immediately.

3270
01:47:40,690 --> 01:47:42,610
0,330 330,810 1140,1410 1410,1590 1590,1920
From start yeah yeah, well

3271
01:47:42,610 --> 01:47:44,700
0,270 270,270 930,1560
you, oh yes.

3272
01:47:45,240 --> 01:47:47,040
0,30 60,1170 1260,1500 1500,1680 1680,1800
I mean, OK, so let

3273
01:47:47,040 --> 01:47:47,880
0,240 240,390 390,570 570,660 660,840
me go back to this

3274
01:47:47,880 --> 01:47:49,160
0,330 330,720
picture here.

3275
01:47:49,310 --> 01:47:51,110
0,330 330,750 750,1320 1320,1530 1530,1800
Yeah, hopefully it's getting really

3276
01:47:51,110 --> 01:47:54,890
0,600 2400,2730 2730,2850 2850,3600 3600,3780
crowded, um, so we get

3277
01:47:54,890 --> 01:47:55,820
0,60 60,510 510,720 720,810 810,930
an operation correct and we

3278
01:47:55,820 --> 01:47:57,500
0,570 630,780 780,1110 1110,1590 1590,1680
do the start operation, we

3279
01:47:57,500 --> 01:47:58,700
0,210 210,750
call start.

3280
01:47:59,480 --> 01:48:01,580
0,270 270,720 720,1260 1260,1560 1560,2100
Oh, return immediately doesn't necessarily

3281
01:48:01,580 --> 01:48:05,270
0,210 210,930 1170,1350 1350,3150 3150,3690
mean reply is yeah exactly

3282
01:48:05,270 --> 01:48:06,470
0,120 120,330 330,600 600,930 930,1200
it just means reply back

3283
01:48:06,470 --> 01:48:07,880
0,90 90,630 630,690 690,780 780,1410
to return to the service

3284
01:48:07,910 --> 01:48:09,560
0,180 180,330 330,420 420,900
you have to decline.

3285
01:48:10,450 --> 01:48:12,400
0,240 240,750 930,1110 1110,1560 1560,1950
I see I see okay.

3286
01:48:13,780 --> 01:48:15,670
0,870 900,1080 1080,1230 1230,1410 1410,1890
Gotcha, yeah I guess operating

3287
01:48:15,670 --> 01:48:16,900
0,180 180,240 240,750 750,1050 1080,1230
under the assumption that a

3288
01:48:16,900 --> 01:48:19,630
0,690 810,1650 1680,1950 1950,2610 2610,2730
return always is necessarily a

3289
01:48:19,630 --> 01:48:21,070
0,450 480,570 570,750 750,1080 1200,1440
reply but that's not that's

3290
01:48:21,070 --> 01:48:22,030
0,240 240,450 450,510 510,780 780,960
not always the case, so

3291
01:48:22,030 --> 01:48:22,840
0,240 240,420 420,480 480,810 810,810
that's not the case I

3292
01:48:22,840 --> 01:48:23,770
0,240 240,330 330,510 510,750 750,930
think this will become more

3293
01:48:23,770 --> 01:48:25,390
0,390 390,600 600,960 960,1260 1260,1620
clear in lap three than

3294
01:48:25,390 --> 01:48:26,470
0,210 210,300 300,510 510,780 780,1080
they you know lap to

3295
01:48:26,800 --> 01:48:29,560
0,270 270,450 450,720 720,1110 1140,2760
lap there's living weirs xero

3296
01:48:29,560 --> 01:48:30,840
0,570
advocation.

3297
01:48:31,100 --> 01:48:32,500
0,1230
Yeah.

3298
01:48:32,870 --> 01:48:34,670
0,420 420,570 570,810 810,1140 1320,1800
Okay, well, thank you, um,

3299
01:48:34,700 --> 01:48:35,990
0,180 180,300 300,480 480,900 1110,1290
this was really helpful, um

3300
01:48:35,990 --> 01:48:37,940
0,120 120,540 810,1320 1320,1710 1710,1950
you ever happy, appreciate it.

3301
01:48:40,120 --> 01:48:42,370
0,540 900,1020 1020,1140 1140,1440 1920,2250
Yeah yeah you do right,

3302
01:48:42,550 --> 01:48:43,420
0,180 180,300 300,360 360,450 450,870
good luck for the latch.
