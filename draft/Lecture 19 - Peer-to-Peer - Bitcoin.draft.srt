1
00:00:02,000 --> 00:00:03,160
0,240

2
00:00:03,550 --> 00:00:05,710
0,450 450,600 600,1560 1560,1740 1740,2160
Okay, good afternoon, good morning
好的，下午好，早上好或晚上好，

3
00:00:05,710 --> 00:00:09,520
0,420 510,780 780,1320 2190,2940 3360,3810
or good night,| { -}
|我们开始吧,

4
00:00:09,520 --> 00:00:11,800
0,450 450,570 570,1080 1500,1950 1980,2280
let's get started,| {} today
|今天我想谈谈比特币。

5
00:00:11,800 --> 00:00:12,910
0,180 180,360 360,420 420,600 600,1110
I want to talk about

6
00:00:12,910 --> 00:00:15,490
0,630 1200,1860 1980,2400 2400,2430 2430,2580
Bitcoin.| {} {The,reason} I want
|我想谈这件事的原因是，

7
00:00:15,490 --> 00:00:17,080
0,60 60,240 240,570 570,1410 1410,1590
to talk about {it,is}, {}|
|

8
00:00:17,080 --> 00:00:18,910
0,930 930,1200 1200,1230 1230,1440 1440,1830
it solves a hard problem,|
它解决了一个困难的问题，|

9
00:00:18,940 --> 00:00:22,880
0,720 870,1800 1800,2760
namely achieving consensus
也就是与拜占庭参与者达成共识。

10
00:00:25,230 --> 00:00:26,540
0,690
{}

11
00:00:28,780 --> 00:00:30,800
0,540 540,690 690,1110
with {} byzantine

12
00:00:30,860 --> 00:00:33,060
0,780
participants.|
|

13
00:00:41,300 --> 00:00:42,920
0,540 540,750 750,1020 1020,1320 1320,1620
I think it {solved -},|
我想它解决了，|

14
00:00:43,040 --> 00:00:44,510
0,240 240,390 390,840 840,930 930,1470
{} so byzantine I mean
所以拜占庭参与者是，

15
00:00:44,540 --> 00:00:46,010
0,390 390,570 570,900 900,1290 1290,1470
participants is that,| it might
|它可能是恶意的或敌意的，

16
00:00:46,010 --> 00:00:47,390
0,300 300,480 480,1020 1020,1260 1260,1380
be a malicious or {adversarial

17
00:00:47,390 --> 00:00:49,730
0,60 60,660 1050,1680 1680,2160 2160,2340
- -},| and {} it
|它在一个完全开放的系统中解决了这个问题，

18
00:00:49,730 --> 00:00:51,020
0,210 210,360 360,840 840,1200 1200,1290
solves this problem in the

19
00:00:51,020 --> 00:00:52,730
0,360 360,510 510,1080 1110,1470 1470,1710
context of a completely open

20
00:00:52,730 --> 00:00:53,840
0,480 480,540 540,630 630,870 870,1110
systems,| you know people can
|人们可以随意加入和离开这个系统，

21
00:00:54,260 --> 00:00:56,120
0,990 990,1230 1230,1440 1440,1500 1500,1860
join and leave the system

22
00:00:56,120 --> 00:00:58,490
0,90 90,600 780,1740 1740,2190 2190,2370
as will,| {} and some
|其中一些可能是恶意的，

23
00:00:58,490 --> 00:01:00,110
0,60 60,360 360,720 720,1020 1020,1620
of them may be malicious,|
|

24
00:01:00,110 --> 00:01:02,870
0,390 600,990 990,1110 1110,1770 2250,2760
and yet {you,know} achieve consensus
并在事务发生的顺序上达成共识。

25
00:01:02,870 --> 00:01:05,420
0,630 930,1710 1860,1980 1980,2460 2460,2550
on {} the order in

26
00:01:05,420 --> 00:01:07,190
0,450 480,960 960,1290 1320,1530 1530,1770
which transaction happen.| So does
|这是一个非常具有挑战性的情况，

27
00:01:07,190 --> 00:01:08,210
0,90 90,360 360,450 450,660 660,1020
it actually a very challenging

28
00:01:08,210 --> 00:01:09,740
0,390 390,450 450,720 720,1170 1170,1530
context,| is actually really {}
|是涉及到钱的。

29
00:01:09,950 --> 00:01:13,160
0,480 480,660 660,1500 2280,2670 2670,3210
doing in the money involved.|
|

30
00:01:13,780 --> 00:01:17,500
0,510 1200,1890 1950,2910 3060,3600 3600,3720
{} The design {} you
这个设计有点像 SUNDR 的一些方面，

31
00:01:17,500 --> 00:01:18,760
0,300 330,600 600,660 660,840 840,1260
know looks a little bit

32
00:01:18,760 --> 00:01:21,190
0,1320 1350,1560 1560,2100 2100,2190 2190,2430
like has aspects of {SUNDR

33
00:01:21,190 --> 00:01:22,450
0,360 450,480 480,750 750,990 990,1260
-},| so {in,the} sence,| there's
|在这个意义上，|有一个有签名的操作日志，

34
00:01:22,450 --> 00:01:23,980
0,90 90,870
a {signed,log}

35
00:01:25,310 --> 00:01:26,960
0,210 210,1020 1050,1170 1170,1290 1290,1650
of operations,| in this case
|在这个事务的例子中。

36
00:01:26,960 --> 00:01:28,400
0,900
transactions.|
|

37
00:01:28,400 --> 00:01:30,470
0,570 570,720 720,1020 1020,1740 1770,2070
{} We know {like,in,SUNDR}, that
我们知道在 SUNDR 中，可以处理 fork ，

38
00:01:30,470 --> 00:01:33,950
0,360 360,600 600,750 750,1410 2760,3480
actually you can handle {}

39
00:01:33,980 --> 00:01:35,240
0,810
forks,|
|

40
00:01:39,140 --> 00:01:40,880
0,180 180,420 420,480 480,870 1200,1740
so most of the, many
所以，关于比特币的大部分，很多有趣的方面，

41
00:01:40,880 --> 00:01:41,750
0,330 330,420 420,450 450,780 780,870
aspects that are interesting to

42
00:01:41,750 --> 00:01:43,370
0,180 180,1110 1110,1260 1260,1560 1560,1620
talk about with respect to

43
00:01:43,370 --> 00:01:44,990
0,600 780,1080 1080,1380 1380,1500 1500,1620
Bitcoin,| but mostly I'm going
|我主要将重点放在

44
00:01:44,990 --> 00:01:46,400
0,90 90,420 420,660 660,1230 1260,1410
to focus on| {sort,of} {sort,of}
|这篇论文的分布式系统方面。

45
00:01:46,400 --> 00:01:48,680
0,270 270,750 750,1200 1200,1890 1890,2280
the distributed systems aspect of

46
00:01:48,680 --> 00:01:51,230
0,150 150,480 480,900 1470,1830 1830,2550
this particular paper.| This paper
|这篇论文有点不同寻常，或者说相当不同寻常，

47
00:01:51,470 --> 00:01:53,600
0,150 150,300 300,480 480,1230 1890,2130
is a bit unusual or

48
00:01:53,600 --> 00:01:56,180
0,270 270,960 1710,1770 1890,2370 2370,2580
quite unusual,| { -} first
|首先，这不是一篇来自科学文献的论文，

49
00:01:56,180 --> 00:01:57,230
0,90 90,270 270,450 450,780 780,1050
of all, it's not a

50
00:01:57,410 --> 00:01:59,390
0,420 420,600 600,720 720,1290 1350,1980
paper out of the scientific

51
00:01:59,390 --> 00:02:00,350
0,330 330,450 450,540 540,720 720,960
literature,| that I've been reading
|目前为止我所读过的，

52
00:02:00,350 --> 00:02:01,880
0,240 240,720 900,1170 1170,1290 1290,1530
so far,| {} it comes
|它来自世界上不同的地方，

53
00:02:01,880 --> 00:02:03,710
0,150 150,240 240,810 810,1290 1320,1830
out of a different part

54
00:02:03,710 --> 00:02:05,180
0,60 60,150 150,600 690,1320 1320,1470
of the world,| {} it
|它是匿名的，

55
00:02:05,180 --> 00:02:10,400
0,330 330,930 1140,1500 1500,2280
is {} {pseudo-anonymous -},|
|

56
00:02:14,510 --> 00:02:16,220
0,420 420,600 600,900 900,1620 1620,1710
and it has {} you
而且它有特别的[]，对于一家金融机构，

57
00:02:16,220 --> 00:02:17,690
0,180 180,630 630,1140 1140,1350 1350,1470
know particularly [] you know

58
00:02:17,690 --> 00:02:20,570
0,330 330,750 780,1170 1170,2010 2310,2880
with a financial institutions, {}|
|

59
00:02:20,570 --> 00:02:21,350
0,390 390,480 480,570 570,690 690,780
and you know you can
你可以有各种各样的意见，

60
00:02:21,350 --> 00:02:23,510
0,660 1110,1350 1350,1500 1500,1560 1560,2160
have all kinds of opinions|
|

61
00:02:23,540 --> 00:02:25,250
0,300 300,660 660,990 990,1080 1080,1710
about {} Bitcoin in general
关于通常的比特币和加密货币，

62
00:02:25,250 --> 00:02:27,470
0,930 930,1020 1140,1740 1740,1800 1800,2220
{} and cryptocurrency in general,|
|

63
00:02:27,740 --> 00:02:29,270
0,450 450,780 780,1050 1050,1110 1110,1530
{} but from the perspective
但从分布式系统的角度来看，

64
00:02:29,270 --> 00:02:31,220
0,90 90,390 390,990 990,1590 1590,1950
of distributed systems,| {this,is,a} []
|这是一个[]成功的系统，

65
00:02:31,220 --> 00:02:33,530
0,420 420,870 1140,1380 1380,1740 1740,2310
successful system,| {this,is,a} really truly
|这是一个真正开放的系统，

66
00:02:33,770 --> 00:02:36,170
0,570 570,780 780,1380 1470,2220 2280,2400
{} an open system,| that
|可以容忍拜占庭参与者，并达成共识。

67
00:02:36,170 --> 00:02:38,030
0,90 90,720 720,840 840,1260 1260,1860
can tolerate the byzantine participants

68
00:02:38,030 --> 00:02:40,100
0,240 270,750 750,1380 1710,1890 1890,2070
and achieving consensus.| And so
|所以这节课的重点，

69
00:02:40,100 --> 00:02:41,090
0,360 360,480 480,600 600,720 720,990
really, you know the focus

70
00:02:41,090 --> 00:02:41,960
0,90 90,210 210,480 480,570 570,870
of this lecture,| you're trying
|你在试图理解，

71
00:02:41,960 --> 00:02:44,090
0,420 450,1200 1200,1440 1440,1710 1710,2130
to understand| how actually achieves
|如何实现这一特定方面。

72
00:02:44,090 --> 00:02:46,780
0,210 210,960 1620,2400
that particular aspect.|
|

73
00:02:48,310 --> 00:02:49,620
0,660

74
00:02:49,920 --> 00:02:51,690
0,210 210,720 720,930 930,1380 1410,1770
Any questions, just do before
有任何问题吗，在开始讨论之前？

75
00:02:51,690 --> 00:02:52,960
0,450 450,660
diving in?|
|

76
00:03:00,570 --> 00:03:03,030
0,390 390,840 930,1860 2160,2250 2250,2460
Okay, so {} {as,I} just
好的，就像我刚才提到的，

77
00:03:03,030 --> 00:03:04,890
0,360 360,540 540,660 660,1200 1260,1860
mentioned,| you know the context
|这里的背景是金融交易。

78
00:03:04,890 --> 00:03:08,780
0,210 210,1560 1650,2430 2430,3150
is here financial transactions.|
|

79
00:03:09,050 --> 00:03:10,430
0,270 270,390 390,630 630,810 810,1380
And so there's a free
所以，这里有一个压倒一切的担忧，

80
00:03:10,430 --> 00:03:13,220
0,930 1320,2100 2100,2190 2190,2280 2280,2790
overriding concerns,| you know when,
|当涉及到交易时，

81
00:03:13,220 --> 00:03:15,110
0,420 600,900 900,1380 1380,1470 1470,1890
{} when transactions are involved,|
|

82
00:03:15,110 --> 00:03:16,430
0,120 120,330 330,750 750,840 840,1320
where money transactions are involved,|
在涉及金钱交易时，|

83
00:03:16,700 --> 00:03:17,930
0,240 240,450 450,750 750,1170 1170,1230
first {of,all}, {of,course} there's the
首先，当然担心完全的伪造，

84
00:03:17,930 --> 00:03:21,200
0,450 450,1170 1560,2430
concern outright forgery,|
|

85
00:03:25,520 --> 00:03:26,720
0,450 450,780 780,840 840,990 990,1200
where basically you know people
人们凭空捏造交易，

86
00:03:26,720 --> 00:03:29,300
0,210 210,540 570,1650 1830,2400 2400,2580
cook up transactions {} out

87
00:03:29,300 --> 00:03:30,980
0,60 60,240 240,720 750,1440 1440,1680
of thin air,| and enter
|并将它们输入到日志中，

88
00:03:30,980 --> 00:03:32,180
0,210 210,330 330,450 450,900 900,1200
them in the log,| and
|试图误导其他参与者，

89
00:03:32,180 --> 00:03:34,070
0,120 120,870 900,1140 1140,1290 1290,1890
you know trying to mislead

90
00:03:34,190 --> 00:03:36,110
0,570 660,1500 1500,1620 1620,1740 1740,1920
other participants,| you know that
|实际上他们是在花自己的钱，

91
00:03:36,110 --> 00:03:37,760
0,270 270,390 390,720 720,1530 1530,1650
actually they're spending their own

92
00:03:37,760 --> 00:03:40,340
0,330 900,1770 1770,2070 2070,2310 2310,2580
money,| while spending somebody else's
|同时花别人的钱，

93
00:03:40,340 --> 00:03:41,660
0,300 480,840 840,960 960,1050 1050,1320
money,| and you know this
|这个问题很容易解决，

94
00:03:41,660 --> 00:03:43,460
0,600 600,750 750,1080 1080,1560 1560,1800
problem is reasonably straightforward for

95
00:03:43,460 --> 00:03:44,750
0,450 450,630 630,750 750,1050 1050,1290
solved,| in a very short
|以一种非常短的类似于 SUNDR 的风格，

96
00:03:44,750 --> 00:03:46,640
0,330 330,750 750,1020 1020,1590 1620,1890
similar style to SUNDR,| but
|从根本上说，签名操作使伪造变得困难，

97
00:03:46,640 --> 00:03:49,080
0,270 270,660 660,1470
basically signing operations

98
00:03:49,260 --> 00:03:51,960
0,570 1950,2310 2310,2370 2370,2610 2610,2700
{} make it hard to

99
00:03:51,960 --> 00:03:53,280
0,270 270,780 810,960 960,1050 1050,1320
actually forge,| and in fact
|事实上，这里的大体情况，

100
00:03:53,280 --> 00:03:54,300
0,90 90,270 270,420 420,690 690,1020
you know the general setting

101
00:03:54,300 --> 00:03:55,290
0,210 210,510 510,600 600,690 690,990
here, correct,| it's the same
|它和 SUNDR 是一样的，

102
00:03:55,290 --> 00:03:56,490
0,120 120,270 270,510 510,750 750,1200
as in {SUNDR -},| well,
|拜占庭参与者非常强大，

103
00:03:56,640 --> 00:03:58,200
0,150 150,330 330,780 810,1140 1140,1560
you know the byzantine {}

104
00:03:58,260 --> 00:04:00,810
0,1230 1230,1260 1260,1740 1740,1980 1980,2550
participants are very very powerful,|
|

105
00:04:00,840 --> 00:04:01,800
0,150 150,270 270,330 330,450 450,960
we're going to be assuming|
我们将假设|

106
00:04:01,800 --> 00:04:04,110
0,180 180,450 450,750 750,1380 1380,2310
that the crypto systems actually
密码系统是工作的，不会被攻破。

107
00:04:04,110 --> 00:04:06,300
0,420 450,960 960,1380 1380,1470 1470,2190
work and cannot be compromised.|
|

108
00:04:06,840 --> 00:04:07,770
0,150 150,300 300,480 480,600 600,930
And so {a,lot} of the
所以，许多核心功能或基础，

109
00:04:07,800 --> 00:04:10,830
0,600 630,1560 1800,2550 2550,2850 2850,3030
core functionality {} or the

110
00:04:10,830 --> 00:04:12,030
0,540 540,630 630,990 990,1080 1080,1200
basis| of which you know
|我们可能会包括，

111
00:04:12,030 --> 00:04:13,260
0,120 120,390 390,780 780,930 930,1230
we might conclude,| that actually
|一切都很安全，一切是好的，

112
00:04:13,260 --> 00:04:14,340
0,240 240,420 420,840 840,960 960,1080
things are secure, all going

113
00:04:14,340 --> 00:04:15,900
0,60 60,180 180,690 960,1470 1470,1560
to come down| to the
|基于基础密码学是正确的这一事实，

114
00:04:15,900 --> 00:04:18,480
0,300 300,510 510,840 1020,1500 1500,2580
fact that the underlying cryptography

115
00:04:18,480 --> 00:04:19,260
0,90 90,510
is correct,|
|

116
00:04:20,780 --> 00:04:22,740
0,450 450,660 660,840 840,1410
so that's one challenge.|
所以这是一个挑战。|

117
00:04:22,740 --> 00:04:24,390
0,570 720,1080 1080,1410 1410,1560 1560,1650
{} {The,second} challenge which is
第二个挑战是，

118
00:04:24,390 --> 00:04:25,530
0,60 60,270 270,630 630,690 690,1140
the one,| that the {paper,spends}
|论文花了很多时间讨论的是双重花费，

119
00:04:25,530 --> 00:04:27,480
0,390 390,570 570,900 900,1350 1470,1950
{mosts,of,time -} talking about is

120
00:04:27,480 --> 00:04:29,300
0,210 210,660
double spending,|
|

121
00:04:33,780 --> 00:04:35,970
0,540 810,960 960,1590 1590,2070 2100,2190
so you literally have you
所以你有一些比特币，你积累的，

122
00:04:35,970 --> 00:04:37,650
0,210 210,1020 1020,1320 1320,1530 1530,1680
know {some,Bitcoins}, {} that you

123
00:04:37,650 --> 00:04:40,710
0,690 1080,1830 1830,2370 2370,3060 3060,3060
accumulated,| {} and a {}
|一个拜占庭参与者试图花费同一个比特币两次，

124
00:04:41,670 --> 00:04:43,410
0,360 360,1050 1050,1290 1290,1380 1380,1740
byzantine practitioner tries to spend

125
00:04:43,770 --> 00:04:46,530
0,870 1050,1680 1770,2070 2070,2640 2640,2760
twice that same Bitcoin,| and
|当然，我们想要避免那个特别的问题，

126
00:04:46,530 --> 00:04:47,550
0,150 150,360 360,570 570,750 750,1020
of course we want to

127
00:04:47,550 --> 00:04:49,200
0,300 300,480 480,780 780,1410 1410,1650
avoid that particular problem I

128
00:04:49,200 --> 00:04:51,330
0,390 870,1200 1200,1290 1290,1680 1680,2130
do,| and the main ideas
|我们将看到的主要想法是

129
00:04:51,330 --> 00:04:53,280
0,150 150,570 570,930 930,1590 1590,1950
we'll see is| a public
|所有交易的公共账本或公共日志，

130
00:04:53,280 --> 00:04:55,410
0,480 900,1140 1140,1230 1230,1530 1530,2130
ledger or a public log

131
00:04:55,880 --> 00:04:57,860
0,480 480,660 660,960 960,1230 1230,1980
{} of all the transactions,|
|

132
00:04:57,860 --> 00:04:58,460
0,120 120,210 210,390 390,510 510,600
you know so you can
所以你可以看到交易是否，

133
00:04:58,460 --> 00:05:00,050
0,270 270,540 540,600 600,1020 1020,1590
see if the transaction actually,|
|

134
00:05:00,050 --> 00:05:01,430
0,270 510,840 840,1020 1020,1170 1170,1380
{} without money was already
没有钱已经在早期的交易花费，

135
00:05:01,430 --> 00:05:03,710
0,390 390,780 780,1320 1770,2040 2040,2280
spending early transaction,| and really
|并试图在日志中的内容达成共识，

136
00:05:03,710 --> 00:05:05,660
0,270 270,330 330,960 990,1410 1410,1950
trying to achieve {} consensus

137
00:05:05,660 --> 00:05:06,440
0,150 150,330 330,450 450,720 720,780
on what is actually in

138
00:05:06,440 --> 00:05:07,820
0,60 60,630 690,810 810,1050 1050,1380
the log,| is the heart
|是这篇论文的核心。

139
00:05:07,820 --> 00:05:09,880
0,150 150,840 1020,1620
of the paper.|
|

140
00:05:10,470 --> 00:05:12,690
0,570 810,1350 1380,1710 1710,1860 1860,2220
Then, of course, in addition
当然除了这两个之外，

141
00:05:12,690 --> 00:05:14,580
0,390 390,1080 1080,1380 1380,1440 1440,1890
to these two,| you know
|另一个显而易见的问题，

142
00:05:14,580 --> 00:05:16,770
0,210 210,540 540,960 990,1650 1650,2190
the obvious other problem,| which
|但论文没有太多地谈到，

143
00:05:16,770 --> 00:05:18,000
0,240 240,600 600,810 810,960 960,1230
paper doesn't talk much about,|
|

144
00:05:18,000 --> 00:05:18,720
0,120 120,270 270,450 450,570 570,720
and we're also not gonna
我们也不会谈论太多，

145
00:05:18,720 --> 00:05:20,220
0,210 210,360 360,750 1110,1170 1170,1500
talk much {about -}| which
|也就是偷窃，

146
00:05:20,220 --> 00:05:21,460
0,60 60,240 240,780
is just theft,|
|

147
00:05:21,750 --> 00:05:24,300
0,330 330,990 1350,1740 1740,2220 2220,2550
{} where {} somebody actually
有人偷了别人的私钥，

148
00:05:24,300 --> 00:05:26,430
0,300 300,630 630,1110 1140,1590 1590,2130
steal somebody else's private key,|
|

149
00:05:26,430 --> 00:05:27,900
0,180 180,810 810,900 900,1110 1110,1470
and therefore {} can spend
因此可以花钱或使用比特币，

150
00:05:27,900 --> 00:05:30,390
0,480 780,1140 1140,1800 1830,2340 2340,2490
money or Bitcoins| using that
|使用这个特定私钥，

151
00:05:30,390 --> 00:05:31,620
0,300 300,600 600,990 990,1110 1110,1230
particular private key,| and it
|这是一个严重的问题，

152
00:05:31,620 --> 00:05:32,190
0,210 210,330 330,390 390,480 480,570
turns out to be in

153
00:05:32,190 --> 00:05:34,680
0,360 360,420 420,720 720,1860 2070,2490
practice a serious problem,| people
|人们将他们的钱包和他们的签名密钥存储在计算机上，

154
00:05:34,680 --> 00:05:38,100
0,690 1020,1590 1680,2250 2250,2460 2460,3420
store their wallets with their

155
00:05:38,100 --> 00:05:40,620
0,360 360,1020 1290,1860 1860,2340 2340,2520
signing keys on computers,| and
|电脑可以被破解，

156
00:05:40,620 --> 00:05:42,030
0,330 330,450 450,540 540,840 840,1410
computers can be broken into,|
|

157
00:05:42,030 --> 00:05:43,770
0,540 870,1140 1140,1290 1290,1530 1530,1740
and {} and therefore people
因此，人们可以打破它，偷窃别人的钱。

158
00:05:43,770 --> 00:05:45,270
0,90 90,360 360,570 570,900 900,1500
can break it over, steals

159
00:05:45,390 --> 00:05:46,720
0,300 300,600 600,900
somebody else's money.|
|

160
00:05:47,050 --> 00:05:48,700
0,510 510,870 870,1110 1110,1470 1470,1650
{} And I think this
我认为这在实践中是一个严重的问题，

161
00:05:48,700 --> 00:05:49,660
0,90 90,180 180,420 420,810 810,960
is a serious problem in

162
00:05:49,750 --> 00:05:51,310
0,570 720,1110 1110,1230 1230,1470 1470,1560
practice,| I'm not going to
|我不会花太多时间谈论这件事，

163
00:05:51,310 --> 00:05:52,630
0,210 210,510 510,660 660,1020 1020,1320
be spending much time talking

164
00:05:52,630 --> 00:05:54,130
0,210 210,270 690,1110 1110,1230 1230,1500
about it,| again I want
|再一次，我想集中讨论分布式系统方面。

165
00:05:54,130 --> 00:05:55,180
0,150 150,540 540,660 660,780 780,1050
to focus on the distributed

166
00:05:55,180 --> 00:05:56,680
0,420 420,1050
system's aspects.|
|

167
00:05:59,210 --> 00:06:00,470
0,300 300,570 570,720 720,780 780,1260
Any questions about the challenges?|
对这些挑战，有什么问题吗？|

168
00:06:06,460 --> 00:06:07,540
0,330 330,630 630,930 930,1020 1020,1080
Okay, let's look at the
好的，我们来看看交易，

169
00:06:07,540 --> 00:06:08,920
0,450 450,810
transaction {},|
|

170
00:06:09,040 --> 00:06:09,910
0,180 180,270 270,480 480,750 750,870
you know what's actually in
它里面是什么。

171
00:06:09,910 --> 00:06:11,560
0,270 360,990
it. {}|
|

172
00:06:11,650 --> 00:06:12,790
0,240 240,450 450,510 510,930 930,1140
So this is basically what
所以这是什么在账本中，

173
00:06:12,790 --> 00:06:15,080
0,90 90,210 210,330 330,900
is in the ledger,|
|

174
00:06:21,530 --> 00:06:23,390
0,330 330,630 630,870 870,1440 1440,1860
{} I'm going simplify this
我将大大简化这一过程，

175
00:06:23,390 --> 00:06:25,820
0,630 780,1470
greatly, {}|
|

176
00:06:26,640 --> 00:06:27,720
0,180 180,330 330,480 480,840 840,1080
{because,some} of the details actually
因为一些细节对讨论不重要，

177
00:06:27,720 --> 00:06:28,590
0,150 150,360 360,660 660,780 780,870
don't really matter to the

178
00:06:28,590 --> 00:06:29,340
0,390 390,480 480,570 570,690 690,750
discussion,| that we're going to
|我们将要进行的（讨论），

179
00:06:29,340 --> 00:06:31,500
0,450 750,1440 1440,1680 1680,1920 1920,2160
have,| and the first [order]
|你能想到的第一个[顺序]是，

180
00:06:31,500 --> 00:06:32,760
0,90 90,240 240,450 450,810 810,1260
you can think about is,|
|

181
00:06:32,970 --> 00:06:35,580
0,450 450,1200
every transaction
每一笔交易都是一个记录，

182
00:06:35,610 --> 00:06:36,930
0,300 300,390 390,930 930,1260 1260,1320
is a record,| and the
|并且记录具有公钥，

183
00:06:36,930 --> 00:06:38,520
0,330 330,600 600,720 720,1020 1020,1590
record has a public key,|
|

184
00:06:43,830 --> 00:06:45,510
0,150 150,240 240,870 1110,1260 1260,1680
for the user, for which
对于持有钱的用户，

185
00:06:45,510 --> 00:06:47,160
0,120 120,270 270,900 1170,1440 1440,1650
you know the {} the

186
00:06:47,160 --> 00:06:48,360
0,270 270,390 390,870 870,990 990,1200
money is intended,| so this
|所以这就是目的，

187
00:06:48,360 --> 00:06:50,400
0,180 180,390 420,1440
is the destination,|
|

188
00:06:51,260 --> 00:06:53,080
0,390 510,1350
a hash
之前交易的哈希，

189
00:06:56,460 --> 00:06:58,140
0,240 240,330 330,720 720,1500 1530,1680
of the previous transaction,| you
|对于这种特殊的比特币来说，

190
00:06:58,140 --> 00:06:59,640
0,120 120,270 270,420 420,810 810,1500
know for this particular Bitcoin,|
|

191
00:07:00,660 --> 00:07:03,920
0,510 510,1230 1440,1890 1890,2670
{} and a signature,
以及签名，我们有私钥，

192
00:07:05,320 --> 00:07:06,310
0,300 300,420 420,540 540,660 660,990
and we have the private

193
00:07:06,310 --> 00:07:07,440
0,570
key,|
|

194
00:07:11,060 --> 00:07:12,920
0,330 330,900 930,1320 1320,1680 1680,1860
{U2 -} {you,know,were} basically the
U2 是这个比特币的前所有者，

195
00:07:12,920 --> 00:07:16,190
0,420 420,990 1020,2520 2550,2670 2670,3270
previous owner of that particular

196
00:07:16,520 --> 00:07:19,550
0,270 270,1020 1380,2070 2100,2880 2880,3030
{} Bitcoin,| and {} in
|在这种情况下，你可以认为这是来源，

197
00:07:19,550 --> 00:07:20,210
0,180 180,360 360,450 450,570 570,660
that sort of you can

198
00:07:20,210 --> 00:07:20,930
0,120 120,330 330,480 480,630 630,720
think about this as the

199
00:07:20,930 --> 00:07:22,760
0,570 630,900 900,1440 1440,1620 1620,1830
source,| so basically {U2 -}
|所以 U2 操作，

200
00:07:22,760 --> 00:07:24,680
0,120 120,690 690,960 1200,1800 1800,1920
is making| {you,know} granting you
|同意将比特币从 U2 转移到 U1 ，

201
00:07:24,680 --> 00:07:26,810
0,120 120,540 540,930 960,1680 1680,2130
know Bitcoin, {} transferring Bitcoins

202
00:07:26,810 --> 00:07:27,860
0,180 180,510 510,570 570,720 720,1050
from U2 to {U1 -},|
|

203
00:07:28,340 --> 00:07:29,240
0,300 300,420 420,570 570,780 780,900
so that {U1 -} that
这样 U1 可以花掉它们。

204
00:07:29,240 --> 00:07:30,440
0,90 90,210 210,510 510,780
{} can spend them.|
|

205
00:07:30,780 --> 00:07:32,130
0,510 630,780 780,990 990,1140 1140,1350
{} Of course, there's {all,kind}
当然，里面还有很多其他的东西，

206
00:07:32,130 --> 00:07:32,910
0,120 120,270 270,480 480,600 600,780
of other stuff in it,|
|

207
00:07:32,910 --> 00:07:34,230
0,210 210,480 480,570 570,1050 1050,1320
like there's an {amount,in} it,|
比如有一个金额，|

208
00:07:34,830 --> 00:07:37,350
0,540 540,1170 1530,2160 2160,2460 2460,2520
{it's,a,fractional} amount,| {} there are
一个零钱金额，|可能有许多目的地和许多来源，

209
00:07:37,350 --> 00:07:38,880
0,240 240,870 870,930 930,1140 1140,1530
many destinations and many sources

210
00:07:38,880 --> 00:07:40,050
0,60 60,660 660,810 810,870 870,1170
{} possible,| there are many
|有很多进出，

211
00:07:40,050 --> 00:07:41,440
0,300 300,420 420,930
ins and outs,|
|

212
00:07:43,330 --> 00:07:44,740
0,330 330,450 450,810 810,990 990,1410
we are basically will ignore
我们都会忽略它，

213
00:07:44,740 --> 00:07:46,300
0,180 180,330 330,570 570,990 990,1560
it,| and just focus on
|只专注于一种简化的描述，

214
00:07:46,300 --> 00:07:48,640
0,690 1080,1410 1410,1470 1470,1890 1890,2340
a sort of simplified description,|
|

215
00:07:48,940 --> 00:07:50,470
0,420 420,570 570,690 690,1200 1200,1530
turns out that transactions are
事实证明，交易也是编码的，

216
00:07:50,620 --> 00:07:52,480
0,600 600,1140 1140,1620 1620,1740 1740,1860
encoded also| not sort of
|而不是某种被动记录，

217
00:07:52,480 --> 00:07:54,010
0,390 420,630 630,690 690,1110 1110,1530
like sort of [passive] records,|
|

218
00:07:54,010 --> 00:07:56,020
0,270 570,1350 1350,1440 1440,1650 1650,2010
but basically a little scripting
但是一种小的脚本语言，

219
00:07:56,020 --> 00:07:58,390
0,600 840,1380 1380,1920 1920,2250 2250,2370
language,| {} and also going
|也会忽略所有这些方面。

220
00:07:58,390 --> 00:08:01,160
0,150 150,630 660,1800 1800,2400
to ignore {all,those} aspects.|
|

221
00:08:01,550 --> 00:08:03,200
0,510 930,1050 1050,1110 1110,1290 1290,1650
I'm going to start to
我将开始专注于这件事，

222
00:08:03,200 --> 00:08:04,550
0,240 240,330 330,480 480,870 870,1350
focus on this thing,| and
|然后讨论，展示一个小例子，

223
00:08:04,550 --> 00:08:05,360
0,120 120,300 300,360 360,570 570,810
{you,know} talk a little bit

224
00:08:05,360 --> 00:08:06,830
0,120 300,570 570,630 630,810 810,1470
and show a little example,|
|

225
00:08:07,100 --> 00:08:07,880
0,270 270,390 390,540 540,600 600,780
so we get a little
所以我们得到一点了解，

226
00:08:07,880 --> 00:08:08,960
0,150 150,210 210,630 630,750 750,1080
bit of handle| and actually
|我们所看到的就是这一挑战。

227
00:08:08,960 --> 00:08:10,760
0,150 360,1170 1170,1590 1590,1710 1710,1800
what we're looking at in

228
00:08:10,760 --> 00:08:12,200
0,210 210,300 300,390 390,750
terms of the challenge.|
|

229
00:08:15,480 --> 00:08:16,440
0,180 180,330 480,720 720,780 780,960
So {we're,going,to} sort of look
所以，我们将查看一个示例账本，

230
00:08:16,440 --> 00:08:18,120
0,120 120,240 240,690 690,1290 1290,1680
at an example ledger| and
|试图理解，

231
00:08:18,120 --> 00:08:19,290
0,150 150,480 480,660 660,720 720,1170
sort of trying to understand|
|

232
00:08:19,290 --> 00:08:20,130
0,360 360,480 480,540 540,750 750,840
actually you know what it
比特币意味着什么或者币是什么，

233
00:08:20,130 --> 00:08:21,570
0,360 360,480 480,630 630,690 690,1440
means to be a Bitcoin

234
00:08:21,810 --> 00:08:23,160
0,330 330,480 480,570 570,870 870,1350
or what a coin is,|
|

235
00:08:23,430 --> 00:08:25,800
0,660 660,1140 1140,1320 1320,1800 2130,2370
{} it's not like sort
这不是一件单一的事情，

236
00:08:25,800 --> 00:08:27,330
0,90 90,180 180,480 480,900 900,1530
of a single thing,| actually
|这可以归结为

237
00:08:27,330 --> 00:08:28,590
0,330 330,570 570,810 810,1050 1050,1260
it really comes down to

238
00:08:28,590 --> 00:08:30,060
0,120 120,570 780,1050 1050,1110 1110,1470
is| actually sort of a
|上一笔交易的 sha1 ，

239
00:08:30,330 --> 00:08:31,410
0,300 300,630 630,720 720,810 810,1080
{sha1 -} of the last

240
00:08:31,410 --> 00:08:32,520
0,540 540,780 780,930 930,990 990,1110
transaction,| that's sort of what
|这就是硬币的本质。

241
00:08:32,520 --> 00:08:33,760
0,60 60,390 390,840
a coin is.|
|

242
00:08:33,950 --> 00:08:35,270
0,450 600,810 810,960 960,1200 1200,1320
{} So let's say you
所以，假设 y 有一枚币，从 x 那里收到，

243
00:08:35,270 --> 00:08:37,580
0,330 390,1260 1440,2070 2070,2250 2250,2310
know y {} owns a

244
00:08:37,580 --> 00:08:40,940
0,600 1020,1680 1680,2610 2610,2820 2820,3360
coin and received from x,|
|

245
00:08:41,390 --> 00:08:42,230
0,150 150,240 240,390 390,690 690,840
and so that means that
所以这意味着在账本的某个地方，

246
00:08:42,230 --> 00:08:44,030
0,150 150,540 540,780 780,1230 1260,1800
there's somewhere in the ledger,|
|

247
00:08:44,030 --> 00:08:46,760
0,690 810,1500 1500,1680 1680,2490 2550,2730
{that,sort,of} transactions,| that transfer the
这个交易，|转移钱或币或币的一部分给 y ，

248
00:08:46,760 --> 00:08:48,380
0,390 390,630 630,930 960,1500 1500,1620
money or the coin or

249
00:08:48,380 --> 00:08:49,820
0,240 240,330 330,390 390,750 750,1440
parts of the coin to

250
00:08:49,940 --> 00:08:51,740
0,810 900,1110 1110,1260 1260,1410 1410,1800
y,| and so let's see,|
|让我们看看，|

251
00:08:51,740 --> 00:08:54,380
0,360 360,720 720,1290 2010,2190 2190,2640
like somewhere, maybe there was
在某个地方，可能有一个条目在账本中，

252
00:08:54,380 --> 00:08:55,490
0,60 60,360 360,450 450,720 720,1110
an entry that ledger somewhere,|
|

253
00:08:55,490 --> 00:08:57,890
0,270 300,690 750,1050 1050,1620 1650,2400
in some period time, {where,x}
在一段时间内， x 收到了一些比特币，

254
00:08:57,890 --> 00:09:00,120
0,690 690,1440
actually received

255
00:09:00,560 --> 00:09:03,800
0,750 780,1620 1620,1860 1860,2730
{ -} some Bitcoins,|
|

256
00:09:03,800 --> 00:09:06,380
0,870 960,1740 1740,1950 1950,2430 2430,2580
and, {} and now you
现在已经把它给了 y 。

257
00:09:06,380 --> 00:09:07,760
0,300 300,510 510,600 600,900 900,1380
know sort of {grants,the -},

258
00:09:07,760 --> 00:09:09,650
0,0 840,1110 1110,1350 1350,1470 1470,1890
{} has given it to

259
00:09:09,650 --> 00:09:11,200
0,480 480,930
{} y.|
|

260
00:09:11,430 --> 00:09:13,590
0,210 210,390 390,660 660,1260 1650,2160
So there's another transaction in
所以在账本上还有另一笔交易，

261
00:09:13,620 --> 00:09:15,600
0,210 210,540 540,660 660,1380 1380,1980
the ledger,| that basically records
|记录了这样一个事实，

262
00:09:15,600 --> 00:09:16,680
0,180 180,540 540,660 660,840 840,1080
that fact,| and so that
|所以它可能有 y 的公钥，

263
00:09:16,680 --> 00:09:18,270
0,210 210,540 660,690 690,1260 1260,1590
might have a pub {key,of}

264
00:09:18,810 --> 00:09:22,560
0,810 1410,2610 3000,3150 3150,3540 3540,3750
y,| destination the hash of
|目的地交易 6 的哈希值，

265
00:09:22,560 --> 00:09:24,480
0,150 150,690 690,1410
the transaction 6,|
|

266
00:09:26,280 --> 00:09:27,870
0,240 240,360 360,480 480,960 960,1590
and so that uniquely identifies
所以这唯一标记了标志，

267
00:09:27,870 --> 00:09:30,540
0,630 630,1050 1050,1320 1350,1980 1980,2670
shorthand handle| for uniquely identifying
|唯一标识交易 6 ，

268
00:09:30,540 --> 00:09:32,400
0,180 180,600 600,1200 1500,1650 1650,1860
{} transaction 6,| and so
|所以我们有交易 6 的账本或记录，

269
00:09:32,400 --> 00:09:33,630
0,210 210,630 630,780 780,1140 1140,1230
we have the ledger or

270
00:09:33,630 --> 00:09:34,950
0,420 420,570 570,750 750,840 840,1320
record, we think is transaction

271
00:09:34,950 --> 00:09:35,820
0,360 360,480 480,570 570,720 720,870
6,| now we can {re-compute
|现在我们可以重新计算这个交易的哈希值，

272
00:09:35,820 --> 00:09:37,020
0,330 330,390 390,870 870,1050 1050,1200
-} the hash of that

273
00:09:37,020 --> 00:09:38,910
0,480 480,960 960,1350 1500,1680 1680,1890
transaction| compared to the one
|与存储交易 7 相比，

274
00:09:38,910 --> 00:09:40,590
0,90 90,540 540,870 870,1350 1500,1680
that storage transaction 7,| and
|确定了事务 6 ，

275
00:09:40,590 --> 00:09:42,690
0,240 240,540 540,1200 1200,1440 1440,2100
where truly determined that basically

276
00:09:42,690 --> 00:09:44,760
0,570 570,1050 1050,1590 1620,2010 2010,2070
{} transaction 6,| what's the
|这笔交易的来源是什么，

277
00:09:44,760 --> 00:09:46,080
0,630 630,720 720,810 810,990 990,1320
source you know for {this,transaction

278
00:09:46,080 --> 00:09:47,300
0,300 300,810
-} 7,|
|

279
00:09:47,450 --> 00:09:48,650
0,270 270,360 360,810 810,870 870,1200
{or,it's -} based the previous
或者它是基于之前交易 6 ，对于这个币，

280
00:09:48,650 --> 00:09:50,780
0,390 390,600 600,990 990,1440 1890,2130
transaction, was transaction 6, for

281
00:09:50,780 --> 00:09:52,280
0,150 150,450 450,960 1200,1380 1380,1500
this particular coin,| it is
|它是由 x 签名的。

282
00:09:52,280 --> 00:09:53,940
0,450 450,1020
signed by

283
00:09:55,580 --> 00:09:56,980
0,390 390,900
{you,know} x.|
|

284
00:09:57,380 --> 00:09:59,540
0,540 630,1380 1500,1860 1860,2010 2010,2160
{} Now, {} so this
现在，这是一种情况，

285
00:09:59,540 --> 00:10:01,070
0,90 90,240 240,300 300,870 870,1530
is sort of situation,| where
|y 从 x 获取一些比特币，

286
00:10:01,070 --> 00:10:05,240
0,840 1140,1860 1920,2700 2700,3360 3810,4170
y obtained basically {} {you,know}

287
00:10:05,270 --> 00:10:06,380
0,180 180,720 720,810 810,930 930,1110
some Bitcoins you know from

288
00:10:06,380 --> 00:10:08,000
0,450 720,990 990,1320 1320,1530 1530,1620
x,| {you,know} y wants to
|y 想要花掉，

289
00:10:08,000 --> 00:10:09,650
0,390 390,930 930,1020 1020,1350 1350,1650
{spend -},| for example, maybe
|例如，也许 y 想从 z 买一杯拿铁，

290
00:10:09,650 --> 00:10:10,790
0,240 240,330 330,570 570,810 810,1140
{y -} want to buy

291
00:10:10,790 --> 00:10:13,520
0,690 810,1440 1650,2250 2250,2550 2550,2730
{a,latte} {from,z},| {} and so
|所以它向 z 的转一笔钱，

292
00:10:13,520 --> 00:10:15,290
0,180 180,720 750,1170 1170,1320 1320,1770
it's {} transfer some money

293
00:10:15,590 --> 00:10:18,410
0,690 690,1560 1650,2280 2280,2460 2460,2820
to {} z,| so maybe
|所以也许我们会在账本上看到另一笔交易，

294
00:10:18,410 --> 00:10:20,120
0,180 180,360 360,990 1140,1620 1620,1710
we'll see another transaction in

295
00:10:20,120 --> 00:10:21,140
0,90 90,570 570,810 810,870 870,1020
the ledger,| which is going
|这将是一种形式，

296
00:10:21,140 --> 00:10:22,550
0,60 60,240 240,360 360,1050 1080,1410
to be a form,| this
|这是 y 要加上，

297
00:10:22,550 --> 00:10:23,570
0,90 90,360 360,510 510,780 780,1020
is one that actually y

298
00:10:23,570 --> 00:10:24,920
0,90 90,210 210,300 300,870
is going to add,|
|

299
00:10:29,160 --> 00:10:33,270
0,2040 2850,3210 3210,3780 3840,3960 4050,4110
pub(z), {} hash of the
pub(z) ，上一个币的哈希值，

300
00:10:34,230 --> 00:10:37,360
0,900 990,2700
previous coin,|
|

301
00:10:37,510 --> 00:10:38,740
0,90 90,360 360,840 840,990 990,1230
the last transaction for that
那枚币的最后一笔交易，是 T7 ，

302
00:10:38,740 --> 00:10:40,780
0,660 660,930 930,1500 1800,1950 1950,2040
coin, {so,that's T7},| and {you,know}
|并由 y 签名。

303
00:10:40,780 --> 00:10:42,780
0,330 330,450 450,990
sign by y.|
|

304
00:10:45,100 --> 00:10:47,410
0,570 1050,1590 1590,1680 1680,1890 1890,2310
{} Basically you know {z
z 想做的，

305
00:10:47,410 --> 00:10:48,520
0,60 60,330 330,450 450,600 600,1110
-} wants to do,| before
|在 z 把拿铁给了 y 之前，

306
00:10:48,520 --> 00:10:49,450
0,150 150,210 210,420 420,690 690,930
{you,know -} z actually hands

307
00:10:49,450 --> 00:10:50,770
0,240 240,330 330,660 660,780 780,1320
over the latte to y,|
|

308
00:10:50,950 --> 00:10:51,670
0,180 180,360 360,540 540,600 600,720
{} z need to do
z 需要做一些验证

309
00:10:51,670 --> 00:10:53,710
0,120 120,990 1260,1440 1440,1770 1770,2040
some verification| to make sure
|以确保这是合法的交易，

310
00:10:53,710 --> 00:10:54,610
0,150 150,300 300,720 720,810 810,900
that this actually is a

311
00:10:54,610 --> 00:10:57,040
0,480 480,600 600,720 720,1440 1710,2430
legit you know transaction, {}|
|

312
00:10:57,040 --> 00:10:59,380
0,390 390,510 510,1170 1350,1980 1980,2340
so you know look up
所以查看交易 7 ，

313
00:10:59,410 --> 00:11:01,390
0,720 720,810 810,900 900,1380 1380,1980
{} you know transaction 7,|
|

314
00:11:01,720 --> 00:11:04,150
0,780 900,1470 1470,1770 1770,2340 2340,2430
{} and {you,know} compute you
计算哈希值，进行检查，

315
00:11:04,150 --> 00:11:04,960
0,90 90,180 180,420 420,600 600,810
know the hash of {}

316
00:11:04,990 --> 00:11:06,790
0,390 390,810 810,1200 1200,1590 1590,1800
double check,| the hash actually
|哈希值对应于

317
00:11:06,790 --> 00:11:07,840
0,540 540,630 630,720 720,930 930,1050
corresponds to the one| that
|交易 8 中列出的哈希值，

318
00:11:07,840 --> 00:11:12,190
0,330 330,600 600,1470 1620,3840 3840,4350
actually listed {in,transaction}, {} {in,transaction}

319
00:11:12,190 --> 00:11:13,870
0,420 540,960 960,1440 1440,1560 1560,1680
8,| {} if you know
|如果哈希值已通过，

320
00:11:13,870 --> 00:11:15,400
0,150 150,750 810,1170 1170,1410 1410,1530
the hash checks out,| so
|所以这是交易 7 ，

321
00:11:15,400 --> 00:11:16,750
0,270 270,480 480,750 750,870 870,1350
there's transaction 7 is indeed,|
|

322
00:11:16,750 --> 00:11:18,130
0,120 120,390 720,840 840,1170 1170,1380
you know we believe that
我们相信交易 8 所指的，

323
00:11:18,130 --> 00:11:19,210
0,90 90,420 420,570 570,840 840,1080
the one that actually {transaction

324
00:11:19,210 --> 00:11:21,550
0,240 240,450 450,930 930,1260 1620,2340
-} 8 refers to, {}|
|

325
00:11:21,550 --> 00:11:22,840
0,150 150,390 390,900 900,1110 1110,1290
you know z looks up
z 在交易 7 中查找 y 的公钥，

326
00:11:22,840 --> 00:11:25,030
0,270 300,690 690,1200 1350,1680 1680,2190
the public key {} in

327
00:11:25,240 --> 00:11:27,490
0,300 300,390 390,630 630,1200 1230,2250
{} {transaction -} 7 for

328
00:11:27,520 --> 00:11:29,020
0,480 480,690 690,1050 1050,1170 1170,1500
y,| which usually is the
|通常是公钥 y ，

329
00:11:29,080 --> 00:11:31,240
0,330 330,480 480,990 1230,2040 2040,2160
public key y,| then {you,know}
|然后验证使用这个公钥

330
00:11:31,240 --> 00:11:32,590
0,630 630,780 780,960 960,1110 1110,1350
verifies that use that public

331
00:11:32,590 --> 00:11:34,060
0,120 120,210 210,600 600,720 720,1470
key| to verify the signature
|来验证这个交易的签名，

332
00:11:34,120 --> 00:11:36,160
0,360 360,840 990,1890 1890,1980 1980,2040
of this transaction,| and the
|签名当然涵盖了整个交易，

333
00:11:36,160 --> 00:11:38,530
0,480 480,840 990,1470 1950,2100 2100,2370
signature {of,course} covers the whole

334
00:11:38,530 --> 00:11:40,270
0,750 960,1290 1290,1380 1380,1440 1440,1740
transaction,| and if the signature
|如果签名通过了，

335
00:11:40,270 --> 00:11:41,800
0,270 270,690 690,810 810,960 960,1530
checks out,| you know then
|然后 z 可以自信地，

336
00:11:42,010 --> 00:11:43,600
0,660 660,780 780,960 960,1410 1410,1590
{} you know z can

337
00:11:43,600 --> 00:11:45,040
0,210 210,930 930,1020 1020,1140 1140,1440
be confident| you know that
|账本包含一个交易，

338
00:11:45,040 --> 00:11:45,400
0,300
actually

339
00:11:45,850 --> 00:11:48,460
0,690 810,1290 1320,2010 2010,2520 2520,2610
{} the ledger contains a

340
00:11:48,460 --> 00:11:50,170
0,570 570,720 720,1020 1020,1650 1650,1710
transaction,| that basically transfers you
|将一些钱从 y 转移到 z ，

341
00:11:50,170 --> 00:11:51,220
0,120 120,330 330,540 540,600 600,1050
know some amount of money

342
00:11:51,400 --> 00:11:53,320
0,570 570,900 900,1350 1380,1560 1560,1920
from {} y to z,|
|

343
00:11:53,350 --> 00:11:54,430
0,270 270,420 420,480 480,630 630,1080
{} so at this point,
所以在这一点上， z 验证了，

344
00:11:54,430 --> 00:11:56,080
0,90 90,210 210,300 300,1170 1500,1650
you know the verification you

345
00:11:56,080 --> 00:12:00,640
0,120 120,300 300,1290 1650,2490
know z verifies,| and
|如果它是好的，给出拿铁，

346
00:12:00,730 --> 00:12:03,730
0,480 480,720 720,1410 2220,2670 2670,3000
{you,know,if} it's okay, {you,know} whatever

347
00:12:03,730 --> 00:12:05,320
0,270 270,990
ship latte,|
|

348
00:12:05,580 --> 00:12:06,680
0,60 60,480
and {if,not},
如果不是，就拒绝，

349
00:12:07,410 --> 00:12:09,270
0,570 570,660 660,780 780,1290 1290,1860
{} {you,know - -} reject,|
|

350
00:12:12,620 --> 00:12:13,850
0,150 150,420 420,660 660,1200 1200,1230
and again like before in
又一次，就像在 SUNDR 中，

351
00:12:13,850 --> 00:12:16,340
0,450 450,1200 1230,1950 1950,2340 2340,2490
{you,know} the SUNDR,| and all
|所有这些方案都在这里，

352
00:12:16,340 --> 00:12:18,080
0,180 180,300 300,360 360,1020 1200,1740
these sort of schemes {}

353
00:12:18,080 --> 00:12:19,010
0,120 120,330 330,660 660,870 870,930
{you,know} we're lying here in

354
00:12:19,010 --> 00:12:20,660
0,90 90,420 420,510 510,900 900,1650
the fact,| that basically y
|y 很小心地使用它的私钥，

355
00:12:20,960 --> 00:12:22,280
0,720
{}

356
00:12:22,310 --> 00:12:23,360
0,180 180,300 300,750 750,900 900,1050
{you,know} was careful with its

357
00:12:23,360 --> 00:12:24,880
0,240 240,330 330,720
{private -} key,|
|

358
00:12:30,980 --> 00:12:32,930
0,450 450,840 930,1260 1260,1800 1800,1950
{} so {you,know} we have
所以我们必须假设，

359
00:12:32,930 --> 00:12:34,730
0,60 60,690 750,1140 1140,1500 1500,1800
to assume,| that y didn't
|y 没有以任何方式透露它的私钥，

360
00:12:34,730 --> 00:12:36,320
0,840
disclose

361
00:12:36,920 --> 00:12:38,900
0,150 150,360 360,870
in any way

362
00:12:40,160 --> 00:12:41,840
0,240 240,600 600,1110
it's private key,|
|

363
00:12:43,850 --> 00:12:45,110
0,360 360,600 600,690 690,1080 1080,1260
{} because if anybody has
因为如果有人知道这个私钥，

364
00:12:45,110 --> 00:12:45,860
0,90 90,210 210,300 300,690 690,750
{you,know} {this -} {private -}

365
00:12:45,860 --> 00:12:47,510
0,240 240,450 450,630 630,1050 1050,1650
key,| then there's anybody {could,come}
|那么任何人都可以签名，

366
00:12:47,510 --> 00:12:49,460
0,120 120,240 240,960 1170,1560 1560,1950
up to signature,| {} {and,you,know}
|他可以花掉 y 的钱，

367
00:12:49,460 --> 00:12:50,540
0,300 300,420 420,660 660,780 780,1080
he was able to spend

368
00:12:50,540 --> 00:12:52,040
0,300 300,630 630,960
basically y's money,|
|

369
00:12:52,340 --> 00:12:53,660
0,750

370
00:12:53,780 --> 00:12:54,950
0,300 300,570 570,690 690,750 750,1170
although maybe from the perspective
虽然可能从接受者的角度来看，并不是真的在乎。

371
00:12:54,950 --> 00:12:56,580
0,210 210,480 480,660 660,1050
receiver, doesn't really care.|
|

372
00:12:56,580 --> 00:12:57,780
0,690

373
00:12:57,870 --> 00:13:00,260
0,300 300,720 1080,1830
Okay, so {},
好的，所以，这是一个基本的计划，

374
00:13:00,530 --> 00:13:02,080
0,150 150,510 510,990
so that's {sort,of}

375
00:13:02,080 --> 00:13:04,480
0,390 390,1050 1140,1770 1770,2070 2070,2400
basic plan,| {} in terms
|就有记录而言，

376
00:13:04,480 --> 00:13:06,480
0,420 450,840 840,930 930,1440
of having a record,|
|

377
00:13:06,570 --> 00:13:08,250
0,120 120,660 840,1530 1530,1620 1620,1680
I mean, {} you know
我是说，这很好，

378
00:13:08,250 --> 00:13:09,210
0,180 180,300 300,450 450,780 840,960
this is pretty good,| I
|我是说，有交易的记录，

379
00:13:09,210 --> 00:13:11,940
0,1140 1470,2130
mean, {}

380
00:13:12,720 --> 00:13:13,710
0,390 390,450 480,810 810,900 900,990
there's a record of the

381
00:13:13,710 --> 00:13:15,330
0,420 420,540 540,1050 1110,1410 1410,1620
transaction that happened,| {} when
|当 z 接收到交易，

382
00:13:15,330 --> 00:13:16,920
0,540 540,990 990,1020 1020,1500 1500,1590
z receives a transaction,| that
|可以检查这是否是有效的交易，

383
00:13:16,920 --> 00:13:17,910
0,120 120,420 420,660 660,840 840,990
could check whether this is

384
00:13:17,910 --> 00:13:21,060
0,270 270,840 900,1560 1860,2190 2190,3150
a valid transaction,| and that
|这允许决定，

385
00:13:21,240 --> 00:13:22,680
0,210 210,600 600,870 870,990 990,1440
you know allows to decide|
|

386
00:13:22,680 --> 00:13:24,000
0,240 240,360 360,870 870,1230 1230,1320
where to actually accept the
接受资金和交付货物。

387
00:13:24,000 --> 00:13:25,900
0,300 300,630 660,990 990,1470
money and {deliver,the} goods.|
|

388
00:13:26,620 --> 00:13:28,520
0,570 750,1320
So, {}
所以，其中一个关键挑战，

389
00:13:28,550 --> 00:13:30,640
0,390 390,540 540,1350
one key challenge

390
00:13:31,290 --> 00:13:33,560
0,510 510,630 630,1770
{} {you,know} in,that,|
|

391
00:13:33,930 --> 00:13:35,010
0,90 90,270 270,420 420,540 540,1080
you know sort of left,|
所说的，|

392
00:13:35,070 --> 00:13:36,240
0,330 330,480 480,750 750,990 990,1170
you know we're seeing that
我们看到完全伪造是很困难的，

393
00:13:36,240 --> 00:13:38,910
0,330 330,750 750,810 810,1410 1890,2670
outright forgery is difficult, {}|
|

394
00:13:40,810 --> 00:13:41,500
0,300 300,390 390,510 510,600 600,690
but you know we need
但我们需要考虑一下双重花费，

395
00:13:41,500 --> 00:13:42,130
0,90 90,240 240,270 270,480 480,630
to think a little bit

396
00:13:42,130 --> 00:13:43,780
0,210 210,300 300,510 510,900 1140,1650
about the double spending,| and
|所以，双重花费问题如下所示。

397
00:13:43,780 --> 00:13:45,220
0,420 510,690 690,900 900,1200 1200,1440
so the double spending problem

398
00:13:45,220 --> 00:13:46,780
0,90 90,180 180,810 870,1200 1200,1560
is as follows.| Let's say
|假设不是创建一个记录，

399
00:13:46,780 --> 00:13:48,400
0,360 360,450 450,960 960,1260 1260,1620
instead of creating two record,

400
00:13:48,400 --> 00:13:50,020
0,300 300,840 840,960 960,1140 1140,1620
one record| in this particular
|在这个交易 8 的例子中，

401
00:13:50,020 --> 00:13:51,640
0,510 510,660 660,810 810,1410 1410,1620
example in the transaction the

402
00:13:51,640 --> 00:13:54,130
0,420 660,1260 1290,1590 1590,1890 1890,2490
8,| {} z actually {you,know,creates},
|z 创建了， y 创建了两个记录，

403
00:13:54,190 --> 00:13:55,390
0,450 450,690 690,780 780,1050 1050,1200
[] {y -} creates two

404
00:13:55,390 --> 00:13:56,980
0,510
records,|
|

405
00:14:07,190 --> 00:14:09,170
0,210 210,540 540,870 1080,1260 1260,1980
{} one record is basically
一个记录是你看到的那个 T8 ，

406
00:14:09,470 --> 00:14:11,000
0,750 810,960 960,1140 1140,1290 1290,1530
giving the one that you

407
00:14:11,000 --> 00:14:13,340
0,570 600,1110 1110,1260 1260,1410 1410,2340
saw {} {you,know} are T8,|
|

408
00:14:14,480 --> 00:14:16,460
0,330 330,660 660,1350 1380,1800 1800,1980
y to z, {} with
y 到 z ，以及 T7 的哈希值。

409
00:14:16,460 --> 00:14:18,120
0,390 390,990
hash T7.|
|

410
00:14:19,990 --> 00:14:21,550
0,300 300,450 450,720 720,1230 1230,1560
And let's see,| let's assume
让我们来看看，|让我们假设 y 试图双重花费它的钱，

411
00:14:21,550 --> 00:14:23,230
0,150 150,570 570,810 810,1050 1050,1680
that actually {} y also

412
00:14:23,260 --> 00:14:25,060
0,270 270,630 630,1050 1200,1590 1590,1800
tries to {} double spend

413
00:14:25,060 --> 00:14:26,230
0,150 150,510 750,900 900,960 960,1170
its money,| so it creates
|所以它创建了第二个交易 T8' ，

414
00:14:26,230 --> 00:14:27,970
0,60 60,480 540,1320 1350,1560 1560,1740
a second transaction {T8' -

415
00:14:27,970 --> 00:14:30,100
0,570 840,1110 1110,1740 1860,1980 1980,2130
-},| {} where you know
|记录基本上是一样的，

416
00:14:30,100 --> 00:14:31,270
0,330 330,600 600,720 720,1080 1080,1170
the records is basically the

417
00:14:31,270 --> 00:14:33,340
0,420 420,1020 1020,1110 1110,1440 1440,2070
same,| except the money goes
|除了钱流向了 Q ，

418
00:14:33,340 --> 00:14:36,160
0,90 90,660 930,1830 1830,2100 2100,2820
to Q,| {} {and,it} {hash,of}
|它有 T7 的哈希，

419
00:14:36,160 --> 00:14:37,840
0,1110
T7,|
|

420
00:14:38,090 --> 00:14:39,410
0,300 300,390 390,660 660,780 780,1320
and of course {you,know} sign
当然也有 y 的签名，

421
00:14:39,410 --> 00:14:41,750
0,270 270,1050 1710,1860 1860,2220 2220,2340
by y,| {you,know} signed by
|由 y 签名。

422
00:14:41,750 --> 00:14:43,840
0,450
y.|
|

423
00:14:45,960 --> 00:14:48,270
0,1020 1140,1920 1920,2010 2010,2130 2130,2310
{} Now, you know let's
现在，假设 q 和 z 都是拿铁咖啡店，

424
00:14:48,270 --> 00:14:49,200
0,180 180,300 300,450 450,780 780,930
say you know both q

425
00:14:49,200 --> 00:14:50,940
0,90 90,330 330,900 900,1230 1230,1740
and z are latte stores,|
|

426
00:14:51,270 --> 00:14:54,030
0,690 690,1320 1350,1500 1500,1890 1890,2760
{} if you know {}
如果 z 接受了 T8 ，

427
00:14:54,150 --> 00:14:56,550
0,390 390,840 840,1290 1290,1770 1830,2400
z accepts {T8 -}, {}|
|

428
00:14:56,550 --> 00:14:57,630
0,240 240,300 300,600 600,960 960,1080
as it would,| because you
它会这么做，|因为一切检查都通过了，

429
00:14:57,630 --> 00:14:58,950
0,240 240,600 600,750 750,990 990,1320
know everything will check out|
|

430
00:14:58,950 --> 00:14:59,520
0,120 120,240 240,420 420,480 480,570
as we saw in the
正如我们在上一张幻灯片中所看到的，

431
00:14:59,520 --> 00:15:01,830
0,510 510,1050 1500,1950 1950,2190 2190,2310
previous slide,| then z would
|然后 z 会把一杯拿铁给 y ，

432
00:15:01,830 --> 00:15:02,760
0,210 210,450 450,480 480,810 810,930
actually ship a latte to

433
00:15:02,760 --> 00:15:05,640
0,570 780,1440 1440,1980 1980,2550 2580,2880
y,| {} when q not
|q 不知道任何事情，

434
00:15:05,640 --> 00:15:06,870
0,210 210,600 600,870 870,1110 1110,1230
knowing anything,| maybe about this
|可能关于另一笔 T8 交易，

435
00:15:06,870 --> 00:15:09,240
0,450 450,750 780,1440 1650,2130 2130,2370
other T8 transaction,| {} since
|因为这个 T8 交易，

436
00:15:09,240 --> 00:15:11,160
0,180 180,630 630,1440 1620,1740 1740,1920
this T8 transaction,| you know
|检查这个，

437
00:15:11,160 --> 00:15:12,360
0,270 270,360 360,690 690,900 900,1200
check it out,| it's indeed
|确实是这样，

438
00:15:12,360 --> 00:15:13,440
0,60 60,450 450,720 720,840 840,1080
the case,| that you know
|T7 中的钱被转移到了 y ，

439
00:15:13,440 --> 00:15:15,000
0,210 210,660 690,1050 1050,1380 1380,1560
the money {in,T7 -} was

440
00:15:15,000 --> 00:15:16,920
0,480 480,780 780,1320 1470,1740 1740,1920
transferred to y,| {} the
|检查了 y 的签名，

441
00:15:16,920 --> 00:15:18,000
0,210 210,420 420,510 510,600 600,1080
thing is you know checked

442
00:15:18,000 --> 00:15:19,710
0,120 120,330 330,480 480,1530 1530,1710
you know with signature for

443
00:15:19,710 --> 00:15:21,390
0,300 300,690 690,1140 1410,1590 1590,1680
y,| {you,know,if} valid and will
|如果有效，会说好的，很好，

444
00:15:21,390 --> 00:15:23,190
0,150 150,390 390,810 810,930 930,1800
say okay great,| you know,
|哦，谢谢你的钱，

445
00:15:23,190 --> 00:15:24,090
0,330 330,510 510,720 720,810 810,900
oh, {} thank you for

446
00:15:24,090 --> 00:15:25,080
0,60 60,360 360,600 600,840 840,990
the money,| I'll ship you
|我也会给你一杯拿铁，

447
00:15:25,080 --> 00:15:26,490
0,270 270,480 480,630 660,870 870,1410
also a latte,| and now
|现在我们的处境很糟糕，

448
00:15:26,640 --> 00:15:28,380
0,300 300,390 390,510 510,1080 1110,1740
we're in this bad position,|
|

449
00:15:28,500 --> 00:15:31,860
0,900 1020,2550 2640,2790 2790,3120 3120,3360
where y {} by double
因为 y 成功双重花费并得到两杯拿铁，

450
00:15:31,860 --> 00:15:33,300
0,570 570,810 810,1080 1080,1260 1260,1440
spending or {succeeded,in -} double

451
00:15:33,300 --> 00:15:34,980
0,330 330,540 540,990 990,1140 1140,1680
spending and got two lattes,|
|

452
00:15:35,070 --> 00:15:36,480
0,390 390,480 480,780 780,870 870,1410
{you,know,there's} the problem,| that basically
这是那个问题，|论文致力于解决的问题。

453
00:15:36,780 --> 00:15:39,240
0,780 810,1290 1290,1620 1620,2070 2070,2460
the paper {} really focused

454
00:15:39,240 --> 00:15:40,540
0,210 210,450 450,570 570,1020
on trying to solve.|
|

455
00:15:44,610 --> 00:15:48,080
0,600 750,1170 1170,1860 1890,2760
The basic approach is,|
基本的方法是，|

456
00:15:49,210 --> 00:15:51,040
0,270 270,420 420,600 1140,1650 1650,1830
{you,know} sort of similar to
有点类似于做过的事情，

457
00:15:51,040 --> 00:15:52,750
0,390 540,870 870,990 990,1350 1350,1710
what somewhere was doing,| let's
|我们记录所有的交易日志，

458
00:15:52,750 --> 00:15:53,890
0,210 210,270 270,630 630,960 990,1140
keep a complete log of

459
00:15:53,890 --> 00:15:55,180
0,270 270,870 870,1050 1050,1230 1230,1290
all transactions,| {} since the
|从它们一开始，

460
00:15:55,180 --> 00:15:56,500
0,300 300,390 390,810
beginning of time,|
|

461
00:15:56,890 --> 00:15:58,660
0,870

462
00:16:01,840 --> 00:16:04,450
0,750 1020,1650 1650,2160 2160,2250 2250,2610
and {} in the log
在日志中包含所有交易，包括顺序，

463
00:16:04,450 --> 00:16:06,640
0,510 510,690 690,780 780,1560 1650,2190
contains all the transactions {}

464
00:16:06,640 --> 00:16:08,480
0,660 660,750 750,1230
including the order,

465
00:16:13,000 --> 00:16:14,290
0,330 330,450 450,780 780,1110 1110,1290
right,| and so {you,know} let's
|所以，让我们看看，

466
00:16:14,290 --> 00:16:15,430
0,330 330,420 420,600 600,750 750,1140
see you know,| so we
|所以我们把交易放进去，

467
00:16:15,460 --> 00:16:16,930
0,270 270,360 360,690 690,780 780,1470
sort of put the transactions

468
00:16:16,930 --> 00:16:18,640
0,480 870,990 990,1080 1080,1440 1440,1710
in,| you know whatever here
|我们这里有 T6 ，这里有 T7 ，

469
00:16:18,640 --> 00:16:20,800
0,120 120,720 750,990 990,1650 1860,2160
we had {T6 -}, here

470
00:16:20,800 --> 00:16:23,080
0,120 120,330 330,570 570,1200 1800,2280
we had {T7 -},| so
|所以如果有公共记录，

471
00:16:23,080 --> 00:16:24,340
0,510 510,660 660,750 750,1020 1020,1260
if there's a public {

472
00:16:24,340 --> 00:16:25,360
0,90 90,450 450,570 570,660 660,1020
-} record,| that is ordered
|它对所有交易进行排序，

473
00:16:25,360 --> 00:16:26,350
0,120 120,240 240,330 330,900 900,990
to all the transactions,| you
|T8 或 T8' 先开始，

474
00:16:26,350 --> 00:16:27,400
0,180 180,480 480,720 720,810 810,1050
know {T8 -} or {T8'

475
00:16:27,400 --> 00:16:28,450
0,120 120,390 390,570 570,930 930,1050
- -} goes first,| let's
|假设 T8 先开始，

476
00:16:28,450 --> 00:16:29,560
0,150 150,330 330,450 450,660 660,1110
say {T8 -} goes first,|
|

477
00:16:30,660 --> 00:16:32,340
0,210 210,420 420,600 750,1110 1110,1680
and then the T8' goes
然后 T8' 进入日志中，

478
00:16:32,370 --> 00:16:33,980
0,210 210,300 300,810
in the log,|
|

479
00:16:34,530 --> 00:16:36,180
0,600 600,1200 1200,1320 1320,1470 1470,1650
{} and you know this
这会发生，

480
00:16:36,180 --> 00:16:38,070
0,150 150,720 960,1590 1590,1770 1770,1890
would happen,| then you have
|那么你一点问题都没有，

481
00:16:38,070 --> 00:16:39,630
0,150 150,510 510,660 660,1170 1200,1560
no problem at all, right,|
|

482
00:16:39,630 --> 00:16:41,250
0,660 750,1140 1140,1380 1380,1500 1500,1620
because {} this was the
因为这是从 y 到 z 的交易，

483
00:16:41,250 --> 00:16:43,740
0,600 600,1140 1260,1680 1680,1860 1860,2490
transaction from y to z,|
|

484
00:16:43,860 --> 00:16:45,060
0,240 240,390 390,480 480,1020 1020,1200
this was the transaction from
这是从 y 到 q 的交易，

485
00:16:45,060 --> 00:16:48,420
0,450 450,1140 2040,2790 2820,3270 3270,3360
{y,to} Q,| and {} you
|当 Q 确认的时候，

486
00:16:48,420 --> 00:16:51,570
0,90 90,480 480,1050 1230,2130 2340,3150
know basically when {} q

487
00:16:51,570 --> 00:16:53,460
0,630 630,1050 1050,1200 1200,1410 1410,1890
validates,| {you,know} when z validates
|当 z 确认交易时，

488
00:16:53,460 --> 00:16:54,900
0,510 510,840 840,990 990,1320 1320,1440
transaction,| everything looks perfect as
|一切看起来都和以前一样完美，

489
00:16:54,900 --> 00:16:56,610
0,390 390,450 450,1080 1350,1500 1500,1710
exactly as before,| when Q
|当 Q 确认交易时，

490
00:16:56,610 --> 00:16:58,590
0,630 630,810 810,1470 1590,1680 1680,1980
validates the transaction,| in addition
|除了检查，我们查看，

491
00:16:58,590 --> 00:16:59,550
0,90 90,210 210,570 570,870 870,960
to the checks, that we

492
00:16:59,550 --> 00:17:01,500
0,210 210,420 420,720 960,1620 1620,1950
just looked at,| {} it
|它在日志中查找，

493
00:17:01,500 --> 00:17:02,820
0,390 390,600 600,690 690,780 780,1320
actually looks in the log,|
|

494
00:17:02,970 --> 00:17:04,700
0,510 780,1380
Q {looks,in,the,log},|
Q 在日志中查找，|

495
00:17:07,520 --> 00:17:09,080
0,270 270,360 360,510 510,1200 1200,1560
like to see T7 basically
看到 T7 已经花掉了，

496
00:17:09,080 --> 00:17:10,820
0,360 360,660 660,1200
is already spent,|
|

497
00:17:21,620 --> 00:17:22,790
0,330 330,510 510,780 780,930 930,1170
and of course you step
当然，你后退日志，遇到 T8 ，

498
00:17:22,790 --> 00:17:23,960
0,210 210,330 330,720 720,870 870,1170
back the log, {you,know} runs

499
00:17:23,960 --> 00:17:25,640
0,210 210,390 390,960 1140,1440 1440,1680
into {Ty -} {} {T8

500
00:17:25,640 --> 00:17:27,290
0,450 450,870 960,1140 1140,1590 1590,1650
-},| and {you,know,sees} actually the
|看到钱已经花掉了，

501
00:17:27,290 --> 00:17:28,760
0,240 240,420 420,600 600,1050 1290,1470
money has been spent,| so
|所以，它将拒绝 T8' 。

502
00:17:28,760 --> 00:17:30,170
0,420 420,480 480,660 660,1320 1320,1410
therefore it will reject {you,know}

503
00:17:31,330 --> 00:17:33,020
0,330 330,510 510,990
{T8' - -}.|
|

504
00:17:33,910 --> 00:17:35,020
0,570
Alright?|
好吗？|

505
00:17:35,750 --> 00:17:37,370
0,480 750,1050 1050,1170 1170,1500 1500,1620
So, {} so that's the
所以，这就是基本计划，

506
00:17:37,370 --> 00:17:38,870
0,240 240,690 750,1020 1020,1140 1140,1500
basic plan,| and so basically
|所以产生了一个问题，

507
00:17:38,870 --> 00:17:40,460
0,60 60,270 270,840 840,1080 1080,1590
you know produces one problem,|
|

508
00:17:40,460 --> 00:17:41,780
0,420 420,630 630,960 960,1200 1200,1320
which is like how do
比如我们如何确保，

509
00:17:41,780 --> 00:17:45,800
0,180 180,450 450,1200 1350,2280 3480,4020
we actually ensure that,| all
|系统中的所有参与者都同意这个日志，

510
00:17:45,800 --> 00:17:47,420
0,570 570,660 660,720 720,1320 1320,1620
participants in the systems actually

511
00:17:47,420 --> 00:17:49,130
0,540 540,780 780,930 930,1290 1290,1710
agree on this log,| and
|所有的交易都在同一个位置，

512
00:17:49,160 --> 00:17:50,360
0,90 90,420 420,570 570,660 660,1200
you know all the transactions

513
00:17:50,360 --> 00:17:51,560
0,210 210,300 300,450 450,720 720,1200
are in the same slot

514
00:17:51,620 --> 00:17:53,630
0,690 990,1350 1350,1620 1620,1950 1950,2010
everywhere,| {} and contain the
|包含相同的内容、相同的散列、相同的签名，

515
00:17:53,630 --> 00:17:55,010
0,210 210,660 660,720 720,930 930,1380
same content, the same hashes,

516
00:17:55,010 --> 00:17:56,660
0,90 90,270 270,960 1230,1530 1530,1650
the same signatures,| so that
|所以，我们可以验证交易，

517
00:17:56,660 --> 00:17:58,250
0,90 90,180 180,390 390,1410 1440,1590
we can actually verify the

518
00:17:58,250 --> 00:18:02,000
0,600 600,840 840,1260 1260,1770 1800,3750
transactions,| {you,know} using {scheme -}
|使用这个幻灯片中列出的方案。

519
00:18:02,000 --> 00:18:02,810
0,0 0,420 420,570 570,630 630,810
are laid out in this

520
00:18:02,810 --> 00:18:03,480
0,270
slide.|
|

521
00:18:03,930 --> 00:18:05,130
0,120 120,210 210,390 390,480 480,1200
And so this is where
这就是共识问题的作用，

522
00:18:05,130 --> 00:18:08,370
0,300 780,1320 1320,2370 2640,2910 2910,3240
{sort,of} consensus problem comes in,|
|

523
00:18:08,640 --> 00:18:11,010
0,1170 1230,1620 1620,1890 1890,2250 2250,2370
and sometimes people refer to
有时，人们将这一解决方案

524
00:18:11,010 --> 00:18:12,450
0,120 120,570 570,870 870,1050 1050,1440
this solution here| as the
|称为中本聪共识协议。

525
00:18:12,480 --> 00:18:14,880
0,720 720,960 960,1380 1380,1860
Nakamoto {} consensus protocol.|
|

526
00:18:15,610 --> 00:18:17,140
0,360 360,660 660,1140 1140,1380 1380,1530
Now before diving into that
现在，在深入研究协议之前，

527
00:18:17,140 --> 00:18:19,420
0,570 810,1290 1290,1590 1590,1860 1860,2280
protocol,| I want to sketch
|我想勾勒出可能的解决方案，

528
00:18:19,420 --> 00:18:22,510
0,300 300,600 600,900 1410,2340 2340,3090
out you know possible {}

529
00:18:22,690 --> 00:18:24,340
0,510 510,750 750,1170 1200,1530 1530,1650
solutions,| that are not going
|它们是行不通的，

530
00:18:24,340 --> 00:18:25,720
0,60 60,480 750,1020 1020,1230 1230,1380
to work,| {} just to
|只是为了得到更好的感觉，

531
00:18:25,720 --> 00:18:27,190
0,480 480,510 510,750 750,1290 1290,1470
get a better sense,| but
|比如挑战是什么，

532
00:18:27,190 --> 00:18:28,660
0,150 150,390 390,540 540,1080 1080,1470
like what the challenges are,|
|

533
00:18:28,660 --> 00:18:32,650
0,900 1680,2160 2190,2970 2970,3540 3540,3990
this {sort,of} Nakamoto consensus actually
这种中本聪共识所解决的。

534
00:18:32,650 --> 00:18:33,700
0,720
solves.|
|

535
00:18:35,860 --> 00:18:38,800
0,630 660,1140 1170,1710 1710,2100
So {you,know} design 1,|
所以设计 1 ，|

536
00:18:39,720 --> 00:18:41,520
0,270 270,450 450,690 690,1350 1440,1800
there's not really design, {}|
这并不是真正的设计，|

537
00:18:41,520 --> 00:18:42,690
0,210 210,390 390,570 570,690 690,1170
it's more sort of an
它更像是一种考虑的方法，然后拒绝，

538
00:18:42,690 --> 00:18:44,400
0,450 450,840 840,990 990,1470 1470,1710
idea to think about and

539
00:18:44,400 --> 00:18:47,280
0,270 270,810 1260,1710 2130,2430 2430,2880
then reject,| {} design 1
|设计 1 可能是最简单的设计，

540
00:18:47,280 --> 00:18:48,600
0,210 210,360 360,450 450,840 840,1320
may be the easiest design

541
00:18:48,600 --> 00:18:50,900
0,600 690,1050 1050,1860
is,| let's assume
|假设我们有服务器 S ，

542
00:18:50,930 --> 00:18:51,980
0,270 270,480 480,600 600,660 660,1050
{} we have the {server,S

543
00:18:51,980 --> 00:18:53,630
0,300 420,960 960,1050 1050,1350 1350,1650
-},| and the server actually
|而且服务器是受信任的，

544
00:18:53,630 --> 00:18:55,040
0,150 150,600
just trusted,|
|

545
00:18:58,120 --> 00:18:59,620
0,540 540,690 690,810 810,1410 1410,1500
{and,then} we have clients you
然后我们有客户端，

546
00:18:59,620 --> 00:19:01,180
0,150 150,510 510,660 660,1020
know that,| you know
|有一些交易，不管是 T6 ，

547
00:19:01,180 --> 00:19:02,950
0,150 150,300 300,420 420,1260 1260,1770
there {some -} transactions, whatever

548
00:19:02,950 --> 00:19:04,620
0,240 240,840
{T6 -},|
|

549
00:19:06,730 --> 00:19:08,500
0,900

550
00:19:08,590 --> 00:19:11,560
0,660 870,1350 1350,1920 2550,2760 2760,2970
1 2, whatever x y
1 2 ， x y z ，

551
00:19:11,560 --> 00:19:13,960
0,510 810,1530 1530,1980 1980,2160 2160,2400
z,| {} and they just
|它们只是把这些交易提交给可信服务器，

552
00:19:13,960 --> 00:19:15,340
0,300 300,420 420,510 510,960 960,1380
submit you know these transactions

553
00:19:15,340 --> 00:19:17,590
0,960 1410,1620 1620,1800 1800,2190 2190,2250
to the, to {the,trusted -}

554
00:19:17,590 --> 00:19:19,300
0,720 810,900 900,1020 1020,1380 1380,1710
server,| you know after we
|所有的客户端都信任这个服务器，

555
00:19:19,300 --> 00:19:21,460
0,480 900,1200 1200,1680 1710,2100 2100,2160
all the clients trust the

556
00:19:21,460 --> 00:19:22,900
0,540 540,990 990,1050 1050,1320 1320,1440
server,| and the server can
|服务器可以生成一个日志，

557
00:19:22,900 --> 00:19:24,490
0,150 150,420 420,480 480,900 1200,1590
just produce a log, right,|
|

558
00:19:24,490 --> 00:19:25,450
0,150 150,300 300,390 390,870 870,960
with all the transactions in
有所有的交易，

559
00:19:25,450 --> 00:19:27,040
0,270
it,|
|

560
00:19:27,220 --> 00:19:29,170
0,540 540,720 720,1050 1050,1200 1200,1950
and {you,know,order -} them appropriately
对它们进行排序，等等。

561
00:19:29,170 --> 00:19:32,680
0,180 180,390 390,930 2640,3150 3270,3510
{etc -}, etc.| So if
|所以，如果我们假设有一个受信任的服务器，

562
00:19:32,680 --> 00:19:34,450
0,150 150,720 750,1230 1230,1290 1290,1770
we assume there's a {trusted,server},|
|

563
00:19:34,450 --> 00:19:35,350
0,210 210,300 300,510 510,570 570,900
and this problem is actually
这个问题很容易解决，

564
00:19:35,350 --> 00:19:37,090
0,510 540,1110 1110,1170 1170,1500 1500,1740
reasonably straightforward to solve,| and
|我们所处的环境，

565
00:19:37,090 --> 00:19:37,990
0,60 60,210 210,480 480,780 780,900
you know that's setting we're

566
00:19:37,990 --> 00:19:38,890
0,270 270,420 420,600 600,660 660,900
in,| that we're in great
|我们处于很好的状态，

567
00:19:38,890 --> 00:19:41,080
0,420 960,1530 1530,1770 1770,1860 1860,2190
[shape],| {} you know maybe
|可能使用某种 Raft 类型的协议复制服务器，

568
00:19:41,110 --> 00:19:42,910
0,630 630,690 690,1200 1200,1650 1650,1800
replicate the server using you

569
00:19:42,910 --> 00:19:44,200
0,180 180,360 360,870 870,1110 1110,1290
know some Raft type {

570
00:19:44,200 --> 00:19:46,960
0,90 90,750 1110,1860 1890,2550 2550,2760
-} protocol,| and {} {you,know}
|我们会有一个容错服务器，

571
00:19:46,960 --> 00:19:47,950
0,360 360,480 480,570 570,720 720,990
we'll have a fault tolerance

572
00:19:47,950 --> 00:19:50,110
0,540 630,1110 1470,1890 1890,2040 2040,2160
server,| {} and you know
|这个特殊过程的唯一缺点是，

573
00:19:50,110 --> 00:19:51,520
0,240 240,330 330,540 540,1110 1110,1410
really the only downside to

574
00:19:51,520 --> 00:19:52,990
0,150 150,480 480,990 990,1320 1320,1470
this particular process is,| if
|如果客户端不能同意单个可信服务器，

575
00:19:52,990 --> 00:19:54,370
0,60 60,390 390,690 690,870 870,1380
the clients could not agree

576
00:19:54,370 --> 00:19:56,080
0,270 270,300 300,630 630,1140 1290,1710
on a single trusted {}

577
00:19:56,080 --> 00:19:58,330
0,510 990,1230 1230,1680 1680,1800 1920,2250
server,| and so an example
|以比特币为例，

578
00:19:58,330 --> 00:19:59,590
0,90 90,150 150,420 420,660 660,1260
in the case of Bitcoin,|
|

579
00:19:59,590 --> 00:20:00,370
0,360 360,450 450,600 600,660 660,780
when you want to do
当你想做交易的时候，

580
00:20:00,370 --> 00:20:02,470
0,780 1050,1500 1500,1590 1590,1710 1710,2100
transactions,| {} you know maybe
|也许，

581
00:20:02,470 --> 00:20:04,150
0,570 600,750 750,1410 1440,1500 1500,1680
the,| you know the rest
|世界其他国家会信任美国政府，

582
00:20:04,150 --> 00:20:05,410
0,60 60,120 120,270 270,420 420,1260
of the world going to

583
00:20:06,040 --> 00:20:07,330
0,390 390,450 450,690 690,1140 1140,1290
trust the US government| to
|正确地实现服务器并生成日志，

584
00:20:07,330 --> 00:20:09,130
0,360 360,870 870,960 960,1290 1290,1800
actually implement the server correctly

585
00:20:09,130 --> 00:20:11,830
0,120 120,810 1110,1440 1440,2070 2100,2700
and produce a log,| and
|在这种情况下，我们有多个不同的客户端，

586
00:20:11,830 --> 00:20:13,900
0,570 570,1110 1110,1260 1260,1650 1650,2070
{} in that case, {you,know,we}

587
00:20:13,900 --> 00:20:17,290
0,120 120,810 1170,2040 2820,3240 3240,3390
have multiple different clients,| because
|因为你无法同意一个受信任的服务器，

588
00:20:17,290 --> 00:20:18,640
0,60 60,570 570,900 900,1320 1320,1350
you cannot agree on a

589
00:20:18,640 --> 00:20:20,710
0,270 270,930 930,1320 1320,1860 1860,2070
trusted server,| {then,this} solution, this
|然后这个解决方案，这个服务就不管用了。

590
00:20:20,710 --> 00:20:21,500
0,510
serve

591
00:20:21,620 --> 00:20:22,920
0,210 210,300 300,750
{doesn't -} work.|
|

592
00:20:24,100 --> 00:20:25,930
0,150 150,300 300,750 780,1260 1260,1830
So that's one {} solution,|
所以这是一种解决方案，|

593
00:20:25,930 --> 00:20:27,940
0,360 360,1230 1230,1350 1350,1590 1590,2010
{} it's the easy one,|
这是简单的一个，|

594
00:20:27,940 --> 00:20:29,140
0,450 450,540 540,600 600,930 930,1200
but in the case of
但在去中心化设计的情况下，

595
00:20:29,230 --> 00:20:31,480
0,450 450,1110 1110,1440 1440,1680 1980,2250
{} decentralized design,| where there's
|没有信任的任何核心组件，

596
00:20:31,480 --> 00:20:33,430
0,330 330,660 660,1140 1140,1410 1410,1950
no trust any central component,|
|

597
00:20:33,580 --> 00:20:34,510
0,360 360,540 540,660 660,870 870,930
{} this is not a
这不是一个可行的解决方案。

598
00:20:34,510 --> 00:20:37,340
0,690 1230,1710 1710,2070
workable solution.| So,
|所以，现在我们考虑使用像 SUNDR 的方法，

599
00:20:37,520 --> 00:20:39,380
0,270 270,600 600,750 750,1560 1560,1860
so now we consider using

600
00:20:39,380 --> 00:20:40,670
0,180 180,300 300,540 540,960 960,1290
sort of the more SUNDR

601
00:20:40,670 --> 00:20:42,420
0,420 450,1350
like approach,|
|

602
00:20:42,680 --> 00:20:44,810
0,930 930,1230 1230,1800 1800,1920 1920,2130
{to,modify} scheme slightly,| and say
对方案稍加修改，|然后说，好的，好的，

603
00:20:44,810 --> 00:20:45,890
0,240 240,510 510,810 810,900 900,1080
like okay good,| we know
|我们知道如何处理不可信的服务器，

604
00:20:45,890 --> 00:20:47,150
0,270 270,450 450,570 570,900 900,1260
actually how to deal with

605
00:20:47,180 --> 00:20:48,920
0,510 510,1110 1140,1380 1380,1620 1620,1740
untrusted servers,| in fact we
|事实上，我们上周读了关于它的论文。

606
00:20:48,920 --> 00:20:49,610
0,120 120,180 180,450 450,600 600,690
read a paper about it

607
00:20:49,610 --> 00:20:52,190
0,270 270,630 930,1320 1320,1890 2040,2580
last week.| And so let's
|所以，让我们假设这些服务器是不受信任的，

608
00:20:52,190 --> 00:20:53,570
0,270 270,420 420,810 810,1140 1140,1380
assume that these servers actually

609
00:20:53,570 --> 00:20:54,700
0,510
untrusted,|
|

610
00:20:55,200 --> 00:20:56,820
0,510 510,630 630,840 840,1410 1410,1620
and you know basically you
你玩的是 SUNDR 的游戏，

611
00:20:56,820 --> 00:20:59,010
0,300 300,420 420,720 720,1230 1380,2190
play the SUNDR game,| clients
|客户端生成日志，从服务器读取日志，

612
00:20:59,040 --> 00:21:00,750
0,600 600,690 690,1410 1440,1620 1620,1710
produce the logs, {read -}

613
00:21:00,750 --> 00:21:01,890
0,90 90,390 390,510 510,570 570,1140
the logs from the server,|
|

614
00:21:01,890 --> 00:21:03,420
0,210 210,330 330,750 750,960 960,1530
and append records to the,
将记录追加到日志中，

615
00:21:03,480 --> 00:21:04,770
0,360 360,690 690,1050 1050,1170 1170,1290
append the records to the

616
00:21:04,770 --> 00:21:06,630
0,480 600,1050 1050,1590 1680,1770 1770,1860
log,| {submit,it} back to the
|将其提交回服务器，

617
00:21:06,630 --> 00:21:08,010
0,660 750,960 960,1020 1020,1320 1320,1380
server,| so the server is
|所以，服务器基本上不做其他任何事情，

618
00:21:08,010 --> 00:21:09,600
0,510 510,780 780,1020 1020,1260 1260,1590
basically do almost nothing else,|
|

619
00:21:09,600 --> 00:21:11,760
0,180 180,840 840,1470 1500,1920 1920,2160
that's relaying logs between different
它在不同的客户端之间转发日志，

620
00:21:11,760 --> 00:21:12,740
0,630
clients,|
|

621
00:21:13,220 --> 00:21:15,290
0,450 720,990 990,1530 1530,1890 1890,2070
and we've seen last week,|
我们上周已经看到，|

622
00:21:15,290 --> 00:21:17,270
0,240 240,420 420,930 930,1320 1320,1980
that actually approach works really
这种方法确实效果很好，

623
00:21:17,270 --> 00:21:19,550
0,480 810,1530 1530,2070 2070,2190 2190,2280
well,| {} it can be
|它可以被使用，

624
00:21:19,550 --> 00:21:21,590
0,690 690,1320 1320,1440 1440,1710 1710,2040
used,| but you know it
|但是，正如我们所见，它有一个缺点，

625
00:21:21,590 --> 00:21:23,900
0,540 630,1350 1440,2070 2070,2220 2220,2310
has one shortcoming as we

626
00:21:23,900 --> 00:21:25,940
0,450 480,1020 1020,1110 1110,1500 1500,2040
saw,| namely the server can
|也就是说，服务器可以呈现两种不同的世界观，

627
00:21:25,970 --> 00:21:28,790
0,750 930,1560 1560,2310 2550,2700 2700,2820
present {two,different} views of the

628
00:21:28,790 --> 00:21:30,620
0,390 420,900 900,1290 1290,1710 1710,1830
world| by basically forking the
|通过 fork 日志，

629
00:21:30,620 --> 00:21:32,030
0,420 630,810 810,1110 1110,1170 1170,1410
log,| so maybe the log
|所以也许日志有一些前缀，

630
00:21:32,030 --> 00:21:33,560
0,210 210,390 390,1110 1350,1470 1470,1530
has some prefix,| you know
|T1 T2 到 T5 T6 T7 ，

631
00:21:33,560 --> 00:21:34,280
0,180 180,240 240,330 330,510 510,720
{T1 -} to {T2 -}

632
00:21:34,280 --> 00:21:35,720
0,150 150,510 510,810 810,1020 1020,1440
to T5 to 6 7,|
|

633
00:21:35,900 --> 00:21:38,030
0,480 480,780 780,960 960,1470 1500,2130
but now it has T8
但现在这里有 T8 ，

634
00:21:38,030 --> 00:21:39,830
0,120 120,300 300,810 1020,1560 1560,1800
in this one,| and has
|还有另一个日志，

635
00:21:39,830 --> 00:21:40,980
0,300 300,780
another log,|
|

636
00:21:41,250 --> 00:21:42,990
0,270 270,600 600,810 810,1020 1020,1740
which indeed has {T7 -}
包含 T7 ... 和 T8' 。

637
00:21:43,740 --> 00:21:45,960
0,90 90,720 1080,1740 1800,2040 2040,2220
... {} and {T8' -

638
00:21:45,960 --> 00:21:47,020
0,420
-}.|
|

639
00:21:47,280 --> 00:21:49,290
0,390 390,840 960,1140 1140,1440 1440,2010
{} And so one fork
所以在一个 fork ，我们得到 T8 ，

640
00:21:49,320 --> 00:21:50,070
0,150 150,270 270,480 480,660 660,750
you know we've got {}

641
00:21:50,070 --> 00:21:51,450
0,600 630,780 780,870 870,1050 1050,1380
T8,| on the other fork,
|在另一个 fork ，我们有 T8' ，

642
00:21:51,450 --> 00:21:53,670
0,240 240,600 600,1140 1470,1830 1830,2220
{we,have} {T8' -},| and now
|现在我们选择一个 fork ，

643
00:21:53,670 --> 00:21:56,430
0,1800 1830,2010 2010,2430 2430,2610 2610,2760
like we became {re,or -}

644
00:21:56,430 --> 00:21:59,520
0,450 450,510 510,660 660,1800 2280,3090
settle in one particular {}

645
00:21:59,580 --> 00:22:01,980
0,540 570,1200 1440,1920 1920,2070 2070,2400
fork,| and {} the server
|服务器将这两个世界分开，

646
00:22:01,980 --> 00:22:03,240
0,150 150,240 240,1080 1080,1140 1140,1260
sort of persistently you know

647
00:22:03,240 --> 00:22:04,590
0,270 270,360 360,540 540,840 840,1350
keeps the two worlds apart,|
|

648
00:22:04,590 --> 00:22:06,720
0,300 300,630 630,960 1680,2070 2070,2130
{like,the} y is, {and,z,is} in
比如 z 在一个世界，

649
00:22:06,720 --> 00:22:07,800
0,240 240,480 480,570 570,660 660,1080
one area of the world,|
|

650
00:22:07,830 --> 00:22:09,060
0,360 360,690 690,750 750,840 840,1230
{Q,is,in} another in the world,|
Q 在另一个世界，|

651
00:22:09,480 --> 00:22:11,730
0,1410 1410,1620 1620,1830 1830,1920 1920,2250
y always gets the first
y 总是得到第一个日志，

652
00:22:11,730 --> 00:22:14,400
0,210 210,750 750,1320 1560,2250 2250,2670
{sort,of} log,| {and -} {}
|z 总是得到第二个日志，正好相反，

653
00:22:14,400 --> 00:22:15,120
0,90 90,240 240,300 300,540 540,720
{z,always} gets the second one

654
00:22:15,120 --> 00:22:16,200
0,420 420,750 750,840 840,960 960,1080
log, {} the other way

655
00:22:16,200 --> 00:22:18,930
0,450 750,1080 1110,1680 1770,2490 2490,2730
around,| {} then, {} you
|然后，你知道，

656
00:22:18,930 --> 00:22:19,560
0,360
know,|
|

657
00:22:19,650 --> 00:22:20,940
0,300 300,570 570,780 780,1110 1110,1290
then they will pretend there's
然后它们会假装，好的，好的，

658
00:22:20,940 --> 00:22:22,350
0,240 240,450 450,1020 1020,1260 1260,1410
okay, good,| yeah, there's no
|是的，在这个日志中没有之前花费 T7 ，

659
00:22:22,350 --> 00:22:24,870
0,270 270,600 600,1110 1110,1920 2190,2520
money earlier spending T7 {}

660
00:22:24,870 --> 00:22:26,940
0,900 900,1080 1080,1380 1380,1650 1650,2070
in this log,| so T8
|所以 Q 中的 T8 会接受，

661
00:22:26,940 --> 00:22:28,770
0,420 420,600 600,810 810,1080 1080,1830
in Q will actually accept,|
|

662
00:22:28,980 --> 00:22:30,990
0,90 90,480 660,1440 1470,1950 1950,2010
you know {T8' -} in
在这个世界的 T8' ，

663
00:22:30,990 --> 00:22:32,520
0,150 150,660 930,1200 1200,1380 1380,1530
this world,| and {here -}
|这里 z 将接受 T8 ，

664
00:22:32,520 --> 00:22:33,870
0,450 480,720 720,1200 1200,1260 1260,1350
z will accept you know

665
00:22:33,870 --> 00:22:35,910
0,600 720,900 900,1110 1110,1470 1470,2040
T8,| and so y succeeded
|所以， y 成功地实现了双重花费。

666
00:22:35,910 --> 00:22:37,760
0,90 90,390 390,600 600,990
in actually double spending.|
|

667
00:22:38,570 --> 00:22:40,970
0,510 750,1440 1560,1860 1860,2160 2160,2400
So, {} this design doesn't
所以，这个设计不能工作，

668
00:22:40,970 --> 00:22:43,310
0,540 720,1470 1470,1560 1560,1920 1920,2340
work,| for the particular problem
|对于这个问题，

669
00:22:43,310 --> 00:22:45,140
0,330 330,780 960,1530 1530,1650 1650,1830
at hand,| {} we need
|我们需要一些解决方案，

670
00:22:45,140 --> 00:22:46,520
0,240 240,960 960,1080 1080,1170 1170,1380
some solution| and is where
|这也是共识的地方。

671
00:22:46,520 --> 00:22:47,870
0,60 60,510 510,720 720,990 1140,1350
the consensus comes in,| we
|我们需要一些解决方案，

672
00:22:47,870 --> 00:22:49,160
0,120 120,270 270,840 840,930 930,1290
need some solution,| that basically
|让不受信任的客户端

673
00:22:49,160 --> 00:22:51,800
0,570 600,1020 1080,1530 1530,2160 2340,2640
for the untrusted clients| to
|能够解决它们在哪个 fork 。

674
00:22:51,800 --> 00:22:53,120
0,390 390,480 480,660 660,750 750,1320
basically be able to settle

675
00:22:53,120 --> 00:22:54,830
0,360 360,1020 1020,1110 1110,1230 1230,1710
on which you know fork

676
00:22:54,830 --> 00:22:56,620
0,150 150,600
they {are,on}.|
|

677
00:22:57,800 --> 00:22:59,560
0,330 330,900
Okay, so,
好的，所以，让我们稍微想一想，

678
00:22:59,560 --> 00:23:01,000
0,510 660,840 840,1290 1290,1410 1410,1440
in, so let's think a

679
00:23:01,000 --> 00:23:02,140
0,180 180,300 300,510 510,750 750,1140
little bit about that,| so
|所以想一想更加去中心化的设计，

680
00:23:02,170 --> 00:23:03,670
0,180 180,360 360,630 630,1080 1260,1500
let's think about more much

681
00:23:03,670 --> 00:23:05,350
0,120 120,630 630,990 990,1560 1560,1680
more decentralized design,| we're going
|我们将用计算机网络取代服务器。

682
00:23:05,350 --> 00:23:06,970
0,390 420,930 930,990 990,1440 1440,1620
to replace the server with

683
00:23:06,970 --> 00:23:08,620
0,30 30,450 450,510 510,1170
a network of computers.|
|

684
00:23:09,110 --> 00:23:10,680
0,330 330,630 630,990
So, {this,is} there,|
所以，在那里，|

685
00:23:10,900 --> 00:23:11,920
0,180 180,450 450,720 720,900 900,1020
and this goes sort of
这离比特币设计更近，

686
00:23:11,920 --> 00:23:13,720
0,420 480,810 810,1230 1230,1440 1440,1800
to get closer to the

687
00:23:13,750 --> 00:23:16,000
0,450 450,900 900,1380 1560,1770 1770,2250
Bitcoin design,| where there's indeed
|那里有一个节点网络，

688
00:23:16,000 --> 00:23:19,150
0,90 90,750 780,1470 1650,2430 2760,3150
a network of peers, {}|
|

689
00:23:19,150 --> 00:23:21,580
0,360 360,600 600,1440 1470,2040 2070,2430
{that's,sort,of} all collaborate {} together|
所有这些都在某种程度上合作，|

690
00:23:21,580 --> 00:23:23,530
0,120 120,270 270,1260 1320,1890 1890,1950
to { -} provide you
以提供这个单一日志，

691
00:23:23,530 --> 00:23:25,690
0,120 120,660 930,1230 1230,1560 1560,2160
know this {} single log,|
|

692
00:23:25,720 --> 00:23:26,770
0,360 360,690 690,780 780,930 930,1050
although even though some of
尽管有些参与者可能是恶意的，

693
00:23:26,770 --> 00:23:28,180
0,90 90,570 570,840 840,1140 1170,1410
the participants actually might be

694
00:23:28,180 --> 00:23:29,170
0,210 210,630 630,840 840,900 900,990
malicious,| and try to do
|尝试做一些不同的事情。

695
00:23:29,170 --> 00:23:30,490
0,240 240,600 810,930 930,1050 1050,1320
something different.| And so basically
|所以我们的想法是，

696
00:23:30,490 --> 00:23:31,450
0,60 60,390 390,480 480,750 750,960
the idea is that,| when
|当客户端创建交易时，

697
00:23:31,450 --> 00:23:33,280
0,60 60,390 390,870 870,1080
a client actually {you,know}

698
00:23:33,700 --> 00:23:37,120
0,570 630,990 990,1710 2400,2670 2670,3420
{} {create,a} transaction,| {you,know} {then,transaction}
|然后交易在节点网络中分发，

699
00:23:37,120 --> 00:23:39,970
0,90 90,720 840,1470 1470,2010 2040,2850
is distributed across a network

700
00:23:40,480 --> 00:23:42,380
0,420 420,960
of peers,|
|

701
00:23:42,470 --> 00:23:43,520
0,120 120,300 300,630 630,840 840,1050
in fact, {the,client} 1 might
事实上，客户端 1 自己可能是一个节点，

702
00:23:43,520 --> 00:23:45,290
0,120 120,180 180,420 420,960 1470,1770
be a peer himself,| so
|所以，交易将传播到各处，

703
00:23:45,290 --> 00:23:46,280
0,90 90,600 600,780 780,930 930,990
the transaction is going to

704
00:23:46,280 --> 00:23:47,880
0,240 240,810
spread around,|
|

705
00:23:50,720 --> 00:23:53,240
0,630 660,1080 1080,1320 1320,2160 2190,2520
and {} {you,know} everybody every
网络中的每个节点都维护着一个日志，

706
00:23:53,270 --> 00:23:54,710
0,480 480,660 660,720 720,1020 1020,1440
node in the network actually

707
00:23:54,710 --> 00:23:57,470
0,420 420,480 480,990 1650,2370 2370,2760
maintains a log,| and {appends
|并将交易附加到它的日志中。

708
00:23:57,470 --> 00:23:58,820
0,180 180,270 270,870 870,1170 1170,1350
-} {you,know,the} transaction to its

709
00:23:58,820 --> 00:23:59,920
0,450
log.|
|

710
00:24:03,760 --> 00:24:06,520
0,630 1110,2070 2130,2430 2430,2520 2520,2760
And the problem that we
我们剩下的问题是，

711
00:24:06,550 --> 00:24:07,660
0,150 150,480 480,720 720,960 960,1110
have left is,| like {you,know}
|如何就顺序达成一致。

712
00:24:07,660 --> 00:24:08,320
0,120 120,180 180,450 450,540 540,660
how to agree on an

713
00:24:08,320 --> 00:24:09,300
0,450
order.|
|

714
00:24:18,560 --> 00:24:20,080
0,960

715
00:24:20,440 --> 00:24:21,760
0,420 420,570 570,720 720,1020 1080,1320
And you know we we
我们以前见过这样的系统，

716
00:24:21,760 --> 00:24:22,990
0,210 210,330 330,930 930,1050 1050,1230
actually have seen these kind

717
00:24:22,990 --> 00:24:24,580
0,90 90,720 720,900 900,1410 1410,1590
of systems {} before,| like
|比如在 Raft 中，

718
00:24:24,580 --> 00:24:25,960
0,600 600,1080 1080,1140 1140,1290 1290,1380
{in,fact,in} Raft,| you know we
|我们有多个计算机，

719
00:24:25,960 --> 00:24:27,700
0,180 180,480 480,1080 1140,1620 1620,1740
had multiple computers,| and they
|它们能够就顺序达成一致，

720
00:24:27,700 --> 00:24:28,660
0,240 240,480 480,540 540,780 780,960
were able to agree on

721
00:24:28,660 --> 00:24:30,190
0,360 390,690 690,1140 1140,1230 1230,1530
order, right,| and the basic
|基本的技巧，在其中使用的是，

722
00:24:30,190 --> 00:24:31,780
0,450 1050,1170 1170,1470 1470,1530 1530,1590
trick, was used as a

723
00:24:31,780 --> 00:24:34,210
0,240 240,840 840,1140 1140,1800 1980,2430
basic {inside,is},| {you,know} basically {}
|计算某个大多数，

724
00:24:34,210 --> 00:24:35,980
0,570 570,720 720,1260 1260,1500 1500,1770
compute some majority| and have
|有大多数节点达成一致，

725
00:24:35,980 --> 00:24:37,720
0,60 60,510 510,660 660,1230 1230,1740
a majority of nodes agree|
|

726
00:24:37,990 --> 00:24:39,220
0,330 330,540 540,1050 1050,1110 1110,1230
{} in slot you know
插槽 6 是事务 T8 ，

727
00:24:39,220 --> 00:24:40,840
0,420 420,570 570,720 720,1110 1110,1620
6 is gonna be transaction

728
00:24:40,840 --> 00:24:43,000
0,240 240,690 690,1080 1080,1650 1710,2160
{T8 -},| and in slot
|在插槽 7 中，将是 T8' 。

729
00:24:43,000 --> 00:24:43,840
0,360 360,480 480,600 600,690 690,840
7 is going to be

730
00:24:43,840 --> 00:24:44,820
0,180 180,570
{T8' -}.|
|

731
00:24:46,040 --> 00:24:48,220
0,660 840,1560
And the,
而且，这很有效，

732
00:24:48,740 --> 00:24:50,330
0,270 270,630 630,840 840,1230 1230,1590
and that works great, correct,|
|

733
00:24:50,330 --> 00:24:52,460
0,600 600,1020 1020,1140 1140,1530 1530,2130
{} if we know exactly
如果我们确切地知道系统中有多少个节点，

734
00:24:52,460 --> 00:24:53,450
0,180 180,420 420,720 720,870 870,990
how many nodes are in

735
00:24:53,450 --> 00:24:54,460
0,60 60,450
the system,|
|

736
00:24:54,660 --> 00:24:55,980
0,480 480,690 690,900 900,1050 1050,1320
{} we know there's 5
我们知道系统中有 5 个节点，

737
00:24:55,980 --> 00:24:57,870
0,210 210,270 270,330 330,900 1230,1890
nodes in the system,| the
|然后大多数是 3 ，

738
00:24:57,900 --> 00:24:59,400
0,420 420,750 750,930 930,1020 1020,1500
node and then the majority

739
00:24:59,400 --> 00:25:01,260
0,90 90,570 570,930 930,1260 1260,1860
is 3,| and we receive
|我们收到了 3 个参与者的回复，

740
00:25:01,260 --> 00:25:03,720
0,540 540,1020 1050,1950 2160,2310 2310,2460
{response,from} 3 participants,| you know
|我们知道，好的，我们可以提交那个位置。

741
00:25:03,720 --> 00:25:04,560
0,120 120,390 390,600 600,720 720,840
we know okay, we can

742
00:25:04,560 --> 00:25:06,840
0,390 390,690 690,1020 1020,1470 2070,2280
commit that particular slot.| And
|这里真正的问题是，

743
00:25:06,840 --> 00:25:08,040
0,90 90,480 480,750 750,1110 1110,1200
the problem really here is

744
00:25:08,040 --> 00:25:09,150
0,120 120,270 270,390 390,480 480,1110
that,| this is a decentralized
|这是一个去中心化的系统，这是完全开放的，

745
00:25:09,150 --> 00:25:12,460
0,450 480,780 780,1260 1260,1710
system, that's completely open,|
|

746
00:25:12,980 --> 00:25:15,320
0,300 300,930 1020,1500 1530,2130 2130,2340
the system {} {nodes,might} even
系统节点甚至可能在任何时间离开、到来，

747
00:25:15,320 --> 00:25:17,330
0,630 750,1260 1260,1650 1650,1920 1920,2010
{} {may,leave}, may come in

748
00:25:17,330 --> 00:25:18,440
0,210 210,570 570,720 720,780 780,1110
any particular point of time,|
|

749
00:25:18,440 --> 00:25:20,060
0,90 90,600 600,720 720,990 990,1620
and there is no list
在系统中没有所有参与者的列表，

750
00:25:20,090 --> 00:25:21,530
0,210 210,360 360,480 480,1020 1020,1440
of all the participants {in,system},|
|

751
00:25:21,800 --> 00:25:24,170
0,480 510,750 750,1110 1110,1950 1950,2370
so there's also no clear
所以，也不清楚在这样的系统中到底什么是多数，

752
00:25:24,170 --> 00:25:25,010
0,210 210,480 480,660 660,780 780,840
what actually what is a

753
00:25:25,010 --> 00:25:26,540
0,570 690,990 990,1050 1050,1350 1350,1530
majority in the system like

754
00:25:26,540 --> 00:25:27,400
0,330
that,|
|

755
00:25:29,280 --> 00:25:31,980
0,930 960,1380 1470,2160 2160,2280 2280,2700
{} {} because it's completely
因为它是完全开放的，

756
00:25:31,980 --> 00:25:33,180
0,360 570,750 750,900 900,1110 1110,1200
open,| so it's like the
|所以大多数的概念能够找到。

757
00:25:33,180 --> 00:25:34,620
0,330 330,390 390,450 450,990 990,1440
notion of the {majority,is} completely

758
00:25:34,620 --> 00:25:36,560
0,180 180,270 270,630
able to find.|
|

759
00:25:36,590 --> 00:25:37,760
0,480 660,780 780,900 900,990 990,1170
So you know we need
所以我们需要一些像往常一样的游戏，

760
00:25:37,760 --> 00:25:39,440
0,450 480,1200 1200,1380 1380,1620 1620,1680
some sort of, like a

761
00:25:39,440 --> 00:25:41,360
0,540 540,1200 1200,1650 1650,1860 1860,1920
{sort,of} usual game,| sort of
|对大多数进行投票，

762
00:25:41,360 --> 00:25:43,610
0,450 690,1380 1380,1470 1470,1530 1530,2250
doing voting on a majority|
|

763
00:25:43,610 --> 00:25:45,590
0,690 690,1290 1290,1620 1620,1680 1680,1980
and then accept the result
然后接受多数人的结果是不会奏效的，

764
00:25:45,590 --> 00:25:46,760
0,60 60,150 150,690 840,990 990,1170
of the majority is not

765
00:25:46,760 --> 00:25:48,230
0,120 120,540 570,810 810,1140 1230,1470
going to play out,| and
|这是 Raft 的游戏，

766
00:25:48,230 --> 00:25:49,760
0,180 180,390 390,540 540,840
so this is the

767
00:25:49,760 --> 00:25:51,230
0,390 390,660 660,810 810,900 900,1470
the game sort of Raft,|
|

768
00:25:51,230 --> 00:25:51,890
0,60 60,180 180,390 390,510 510,660
you know even though it's
即使这是一个共识协议，也不会奏效，

769
00:25:51,890 --> 00:25:53,450
0,30 30,420 420,1080 1170,1410 1410,1560
a consensus protocol, not gonna

770
00:25:53,450 --> 00:25:54,620
0,240 240,450 450,750 750,1080 1080,1170
really work out,| because you
|因为我们在处理的环境是

771
00:25:54,620 --> 00:25:56,870
0,510 900,1290 1290,1740 1740,1950 1950,2250
know {} {the,setting} we're dealing

772
00:25:56,870 --> 00:25:58,490
0,600 600,690 690,1050 1050,1200 1200,1620
{with -} is| a {decentralized
|一个去中心化的开放分布式系统，

773
00:25:58,490 --> 00:26:00,530
0,330 330,750 780,1290 1290,1680 1890,2040
-} open distributed system,| as
|而不是像 Raft 设置中的封闭系统。

774
00:26:00,530 --> 00:26:01,910
0,360 360,570 570,690 690,1020 1020,1380
opposed to a closed system

775
00:26:01,910 --> 00:26:02,960
0,180 180,300 300,690 690,930 930,1050
as in the setting of

776
00:26:02,960 --> 00:26:03,880
0,450
Raft.|
|

777
00:26:07,520 --> 00:26:08,810
0,180 180,330 330,510 510,990 1080,1290
Does this make sense so
到目前为止，能理解吗？

778
00:26:08,810 --> 00:26:09,800
0,450
far?|
|

779
00:26:10,800 --> 00:26:11,520
0,210 210,330 330,600 600,690 690,720
Let me pause for a
让我暂停一下，

780
00:26:11,520 --> 00:26:12,930
0,330 330,810 840,1110 1110,1290 1290,1410
second,| before getting into the
|在进入更技术性的部分之前。

781
00:26:12,930 --> 00:26:14,440
0,180 180,540 540,960
more technical part.|
|

782
00:26:20,980 --> 00:26:22,300
0,510
Alright?|
好的？|

783
00:26:26,060 --> 00:26:29,090
0,450 480,1740 2040,2310 2310,2580 2580,3030
Okay, so how does Bitcoin
好的，那么比特币是如何解决这个问题的？

784
00:26:29,090 --> 00:26:31,080
0,240 240,360 360,780
solve this problem?|
|

785
00:26:34,270 --> 00:26:36,520
0,450 450,870 870,1080 1080,1620 1620,2250
And the key idea is
关键的想法是所谓的工作量证明，

786
00:26:36,550 --> 00:26:37,810
0,330 330,570 570,660 660,750 750,1260
{} something that is called

787
00:26:37,810 --> 00:26:40,080
0,90 90,540 540,1020
the {proof-of-work -},|
|

788
00:26:44,980 --> 00:26:48,160
0,660 720,1680 1680,2310 2490,2910 2910,3180
{} basically the rule is
基本上规则是，

789
00:26:48,160 --> 00:26:50,380
0,480 840,1590
that, {}|
|

790
00:26:50,940 --> 00:26:52,280
0,360 360,810
there's a
一个节点需要完成大量的工作，

791
00:26:52,340 --> 00:26:54,200
0,120 120,420 420,990 1020,1560 1560,1860
mount of work a node

792
00:26:54,200 --> 00:26:55,550
0,210 210,300 300,690 690,990 990,1350
needs to do| to actually
|才能扩展日志，

793
00:26:55,550 --> 00:26:57,290
0,150 150,450 450,540 540,1260 1440,1740
be able to extend the

794
00:26:57,290 --> 00:27:01,670
0,510 990,2400 2940,3540 3900,4080 4080,4380
log,| and {} the basic
|在基本规则中，你知道的工作机器证明中的赢家

795
00:27:01,670 --> 00:27:03,140
0,300 300,420 420,690 690,840 840,1470
rule is that,| the winner
|工作量证明的胜利者，

796
00:27:05,170 --> 00:27:07,450
0,480 480,1290 1290,1500 1500,1590 1590,2280
{} {in,you,know} {proof-of-work - -},|
|

797
00:27:09,670 --> 00:27:11,080
0,510 510,660 660,990 990,1080 1080,1410
machine is able to solve
机器能够解决那个难题，

798
00:27:11,080 --> 00:27:14,230
0,90 90,660 960,1860 1950,2370 2370,3150
the puzzle,| first, it decides
|首先，它决定下一个日志条目，

799
00:27:14,260 --> 00:27:15,610
0,300 300,390 390,720 720,960 960,1350
on the next log entry,|
|

800
00:27:25,590 --> 00:27:28,050
0,510 570,1020 1020,1980 1980,2130 2130,2460
and {} {} the basic
基本的想法，

801
00:27:28,050 --> 00:27:29,040
0,240 240,360 360,510 510,780 780,990
idea,| that this might you
|这可能会让你得到一些直觉，

802
00:27:29,040 --> 00:27:30,270
0,210 210,480 480,660 660,780 780,1230
might actually get some intuition,|
|

803
00:27:30,270 --> 00:27:31,320
0,180 180,390 390,630 630,810 810,1050
why this action will work
为什么这个操作有效，

804
00:27:31,320 --> 00:27:33,660
0,390 690,1050 1050,1350 1350,1740 1740,2340
out,| is because basically hard
|因为很难冒充获胜者，

805
00:27:33,660 --> 00:27:35,800
0,90 90,690 690,780 780,1200
to impersonate the winner|
|

806
00:27:44,460 --> 00:27:45,570
0,150 150,390 390,810 810,1020 1020,1110
to actually solve {} the
解决这个特殊的工作量证明难题，

807
00:27:45,570 --> 00:27:48,510
0,570 570,930 930,1290 1290,1800 1890,2940
particular {proof-of-work -} puzzle, {}|
|

808
00:27:48,630 --> 00:27:50,610
0,540 540,750 750,1560 1620,1800 1800,1980
that needs to be able
需要能够添加到日志中，

809
00:27:50,610 --> 00:27:51,480
0,90 90,300 300,390 390,480 480,870
to add to the log,|
|

810
00:27:51,600 --> 00:27:53,250
0,270 270,660 660,810 810,1020 1020,1650
actually requires a real computer,|
实际上需要一台计算机，|

811
00:27:53,400 --> 00:27:55,500
0,480 480,660 660,1380 1380,1890 1890,2100
{} in a month getting
在一个月的计算时间，

812
00:27:55,500 --> 00:27:57,300
0,390 390,750 750,870 870,1290 1290,1800
roughly {} of compute time|
|

813
00:27:57,540 --> 00:27:59,400
0,570 570,870 870,1380 1380,1770 1770,1860
{} to actually solve the
来解决这个问题，

814
00:27:59,400 --> 00:28:01,020
0,420 510,870 870,1260 1380,1530 1530,1620
problem,| and so if you
|所以，如果你能解决，并证明你解决了问题，

815
00:28:01,020 --> 00:28:02,010
0,90 90,420 420,510 510,930 930,990
can solve and demonstrate you

816
00:28:02,010 --> 00:28:03,210
0,210 210,270 270,660 660,990 990,1200
solve the problem,| you know
|可以肯定的是，有人花了一个月的时间去做，

817
00:28:03,210 --> 00:28:04,350
0,90 90,450 450,570 570,930 930,1140
for sure that somebody actually

818
00:28:04,350 --> 00:28:05,280
0,240 240,270 270,570 570,630 630,930
spent a month of work

819
00:28:05,280 --> 00:28:07,890
0,210 210,480 1230,1770 2040,2460 2460,2610
actually {do,it},| and this is
|这在某种程度上足以让你相信系统的其余部分，

820
00:28:07,890 --> 00:28:09,690
0,180 180,270 270,750 750,1110 1110,1800
sort of enough of to

821
00:28:09,690 --> 00:28:10,880
0,750
{}

822
00:28:12,120 --> 00:28:13,230
0,330 390,840 840,930 930,1020 1020,1110
{} convince you know the

823
00:28:13,230 --> 00:28:14,340
0,180 180,240 240,330 330,780 780,1110
rest of the system,| that
|需要花费真正的资源，

824
00:28:14,340 --> 00:28:17,820
0,120 120,270 270,420 420,2220 3030,3480
you know there's a {}

825
00:28:17,850 --> 00:28:19,980
0,570 570,1110 1110,1410 1410,1650 1650,2130
real resources were actually spent|
|

826
00:28:20,250 --> 00:28:22,410
0,570 570,1290 1350,1890 1890,2040 2040,2160
to {append -}, to be
以便能够追加到日志条目，

827
00:28:22,410 --> 00:28:23,460
0,210 210,300 300,630 630,750 750,1050
able to append to the

828
00:28:23,460 --> 00:28:25,950
0,300 300,660 1230,1890 2070,2370 2370,2490
log entry,| and and you
|也许你可以想到其他类似的方案，

829
00:28:25,950 --> 00:28:26,850
0,90 90,330 330,480 480,540 540,900
can maybe think of others

830
00:28:26,850 --> 00:28:27,960
0,150 150,240 240,720 720,810 810,1110
like the schemes,| {} like
|比如唯一的 IP 地址或类似的东西，

831
00:28:27,960 --> 00:28:30,930
0,660 660,990 1860,2190 2190,2490 2490,2970
whatever {you,know} unique IP addresses

832
00:28:30,930 --> 00:28:31,620
0,90 90,300 300,450 450,600 600,690
or things like that,| but
|但所有这些东西都很容易被篡改，

833
00:28:31,620 --> 00:28:32,340
0,150 150,330 330,450 450,540 540,720
all those kind of things

834
00:28:32,340 --> 00:28:34,140
0,120 120,330 330,570 570,990 990,1800
can be actually easily falsified,|
|

835
00:28:34,530 --> 00:28:36,810
0,450 450,720 720,1290 1410,1920 1920,2280
{} and so {} it's
所以工作量证明的想法是核心，

836
00:28:36,810 --> 00:28:37,800
0,150 150,210 210,420 420,510 510,990
sort of {proof-of-work - -}

837
00:28:37,800 --> 00:28:38,850
0,480 480,630 630,810 810,900 900,1050
idea is sort of core

838
00:28:38,850 --> 00:28:41,850
0,720 1020,1170 1170,1890 1890,2430 2460,3000
core| to demonstrate that, {}
|为了证明，花了一个月的时间，

839
00:28:41,850 --> 00:28:43,590
0,300 300,1200 1200,1320 1320,1440 1440,1740
{} actually you know put

840
00:28:43,590 --> 00:28:45,450
0,90 90,480 510,930 930,1380 1380,1860
a month effort into actually,|
|

841
00:28:45,450 --> 00:28:48,420
0,360 720,1530 1530,1560 1560,2460 2610,2970
{ - -} to figure
计算出下一个[]，

842
00:28:48,420 --> 00:28:49,110
0,90 90,240 240,300 300,510 510,690
out what the next [],

843
00:28:49,110 --> 00:28:50,820
0,120 120,450 450,540 540,750 750,1710
to compute,| {to,be} able to
|能够将日志条目追加到日志中。

844
00:28:50,850 --> 00:28:51,780
0,240 240,420 420,540 540,810 810,930
be able to append a

845
00:28:51,780 --> 00:28:53,730
0,330 330,630 630,840 840,1230 1350,1950
log entry to the log.|
|

846
00:28:55,070 --> 00:28:56,100
0,780

847
00:28:57,070 --> 00:28:58,870
0,810 840,1020 1020,1470 1470,1650 1650,1800
One, {you,know} just get that
一个，这个方法，

848
00:28:58,870 --> 00:29:01,000
0,510 510,900 900,1200 1200,2040 2040,2130
immediately {out,of,the,way},| {one,of} downside of
|这种工作证明方法的一个缺点是，

849
00:29:01,000 --> 00:29:03,140
0,210 210,660 660,960 960,1680
this {proof-of-work -} approach

850
00:29:03,290 --> 00:29:04,940
0,420 420,600 600,720 720,1020 1050,1650
is that,| it actually waste
|它在浪费能量，

851
00:29:04,940 --> 00:29:06,700
0,390
energy,|
|

852
00:29:11,150 --> 00:29:13,070
0,180 180,270 270,630 630,930 930,1920
and in fact {} {you,know}
事实上，比特币会如此成功，

853
00:29:13,130 --> 00:29:15,590
0,660 660,930 930,1110 1110,1860 1920,2460
Bitcoins become so successful,| that
|很多人都在下面，

854
00:29:15,590 --> 00:29:16,370
0,30 30,270 270,330 330,570 570,780
a lot of people are

855
00:29:16,370 --> 00:29:17,570
0,330 330,690 690,1020 1020,1110 1110,1200
down there,| are you know
|挖掘和做这项工作量证明，

856
00:29:17,570 --> 00:29:18,800
0,360 360,480 480,630 630,870 900,1230
mining and doing this {proof-of-work

857
00:29:18,800 --> 00:29:20,960
0,90 90,510 870,1170 1170,1620 1620,2160
- -},| {} that the
|能量账单或者能量消耗，

858
00:29:20,990 --> 00:29:22,910
0,390 390,840 840,990 990,1290 1290,1920
energy bill or energy consumption|
|

859
00:29:23,180 --> 00:29:26,270
0,930 930,1200 1200,1560 1560,1950 2160,3090
{} of all the combined
所有矿工统计在一起是难以置信的大，

860
00:29:26,300 --> 00:29:28,610
0,390 390,900 930,1200 1200,1650 1650,2310
miners together is incredibly significant,|
|

861
00:29:28,730 --> 00:29:31,700
0,750 750,990 990,1860 2280,2760 2760,2970
{} it's huge,| {} and
它很大，|所以，这种方法的负面影响是浪费能源。

862
00:29:31,700 --> 00:29:34,010
0,450 480,900 900,1350 1650,1890 1890,2310
so, { -} play downside

863
00:29:34,010 --> 00:29:35,660
0,60 60,210 210,600 600,780 780,1650
of this approach is the

864
00:29:35,690 --> 00:29:36,840
0,330 330,390 390,810
waste of energy.|
|

865
00:29:37,800 --> 00:29:40,620
0,300 300,870 900,1470 1470,2490 2490,2820
{} In recent years, there
近年来，出现了其他加密货币或其他设计，

866
00:29:40,620 --> 00:29:43,140
0,180 180,300 300,810 810,1860 2160,2520
have been other {} crypto

867
00:29:43,140 --> 00:29:45,240
0,540 540,690 690,1140 1140,1740 1830,2100
currencies or other designs,| that
|基于不同的想法，

868
00:29:45,240 --> 00:29:46,170
0,90 90,420 420,540 540,660 660,930
are based on a different

869
00:29:46,170 --> 00:29:47,430
0,630 630,930 930,1020 1020,1200 1200,1260
idea,| instead of {proof-of-work -
|不是工作量证明，

870
00:29:47,430 --> 00:29:48,600
0,360 360,570 570,780 780,1080 1080,1170
-},| they're actually based on
|而是基于称为权益证明的东西，

871
00:29:48,600 --> 00:29:49,530
0,240 240,390 390,630 630,840 840,930
something else called {proof-of-stake -

872
00:29:49,530 --> 00:29:50,960
0,510
-},|
|

873
00:29:56,560 --> 00:29:57,850
0,270 270,630 630,810 810,1080 1080,1290
{} and this basically sort
这是一种游戏，

874
00:29:57,850 --> 00:29:59,110
0,450 450,720 720,1020 1020,1170 1170,1260
of game there is,| you
|假设你拥有 3% 的货币，

875
00:29:59,110 --> 00:30:00,400
0,450 450,630 630,840 840,1110 1110,1290
know let's say {you,own} {3%

876
00:30:00,400 --> 00:30:02,500
0,540 570,1260 1290,1410 1410,1560 1560,2100
-} of you know the

877
00:30:02,530 --> 00:30:05,560
0,720 930,1650 1650,1830 1830,2010 2010,3030
currency,| then you get {},|
|然后你可以，|

878
00:30:05,650 --> 00:30:07,540
0,270 270,660 660,1530 1530,1740 1740,1890
{} because {you -} own
因为你拥有 3% ，

879
00:30:07,540 --> 00:30:09,790
0,450 450,630 630,780 780,1380 1500,2250
3%,| you can actually {decide
|你可以决定 3% 的日志条目，

880
00:30:09,790 --> 00:30:11,170
0,120 120,360 360,600 600,810 810,1380
-} you know for 3%

881
00:30:11,200 --> 00:30:12,670
0,270 270,480 480,780 780,1350 1350,1470
of the log entries,| you
|哪个可以被追加。

882
00:30:12,670 --> 00:30:13,630
0,270 270,570 570,780 780,840 840,960
know which ones are going

883
00:30:13,630 --> 00:30:14,780
0,90 90,180 180,750
to be appended.|
|

884
00:30:15,600 --> 00:30:17,730
0,180 180,420 420,810 1620,2070 2070,2130
And so the is a
所以，这是一种完全不同的方法，

885
00:30:17,730 --> 00:30:19,380
0,330 330,600 600,1080 1080,1380 1380,1650
completely different approach,| that doesn't
|这不需要解决计算密集型难题，

886
00:30:19,380 --> 00:30:23,010
0,1110 1140,1770 1800,2550 2730,3270 3270,3630
require {} solving computational intensive

887
00:30:23,010 --> 00:30:25,770
0,570 810,1440 1440,2070 2250,2490 2490,2760
puzzles,| {} and {} it
|它似乎得到了相当多的关注，

888
00:30:25,770 --> 00:30:27,600
0,270 270,780 780,1230 1260,1620 1620,1830
seems to {} get quite

889
00:30:27,600 --> 00:30:29,940
0,30 30,180 180,270 270,930 1740,2340
a bit of actually attention,|
|

890
00:30:29,940 --> 00:30:32,310
0,540 540,840 840,1440 1500,2220 2220,2370
and there are cryptocurrencies that
而且有使用它的加密货币，

891
00:30:32,310 --> 00:30:33,780
0,180 180,360 750,1080 1080,1260 1260,1470
use it,| and in fact
|事实上，看起来以太坊是最重要的一个，

892
00:30:33,780 --> 00:30:34,410
0,60 60,270 270,390 390,540 540,630
it looks like one of

893
00:30:34,410 --> 00:30:35,970
0,90 90,360 360,960 960,1260 1260,1560
the more major ones {}

894
00:30:36,090 --> 00:30:38,250
0,510 720,1140 1140,1200 1200,1410 1410,2160
Ethereum seems to be slated,|
|

895
00:30:38,250 --> 00:30:39,510
0,450 480,690 690,780 780,840 840,1260
where going in the direction
正在使用权益证明的方法。

896
00:30:39,510 --> 00:30:40,650
0,180 180,390 390,630 630,690 690,1140
of {} {proof-of-stake - -}

897
00:30:40,680 --> 00:30:41,760
0,180 180,870
{} approach.|
|

898
00:30:42,080 --> 00:30:44,270
0,390 390,1050 1260,1740 1740,2010 2010,2190
But Bitcoin uses {} {proof-of-work
但是比特币使用的是工作量证明方法，

899
00:30:44,270 --> 00:30:45,900
0,90 90,480 510,1140
- -} approach,|
|

900
00:30:45,960 --> 00:30:46,770
0,120 120,240 240,510 510,690 690,810
and so we're just going
所以，我们将继续进行这个设计。

901
00:30:46,770 --> 00:30:48,900
0,60 60,810 810,1350 1380,1680 1680,2130
to proceed with that design.|
|

902
00:30:51,920 --> 00:30:53,260
0,210 210,810
Any questions?|
有什么问题吗？|

903
00:30:54,720 --> 00:30:56,490
0,360 600,780 780,1110 1110,1500 1560,1770
{} So let's {}, I'm
所以，我只是在想，

904
00:30:56,490 --> 00:30:58,980
0,450 660,1170 1170,1380 1380,2040 2040,2490
just wondering of| how it's
|冒充获胜者有多难，

905
00:30:58,980 --> 00:31:00,240
0,210 210,270 270,840 840,900 900,1260
hard to impersonate the winner,|
|

906
00:31:00,270 --> 00:31:01,470
0,450 480,810 810,930 930,1080 1080,1200
so let's say that we
假设我们有服务器 A 和服务器 B ，

907
00:31:01,470 --> 00:31:03,450
0,450 480,1050 1050,1350 1470,1680 1680,1980
have server A and server

908
00:31:03,450 --> 00:31:05,130
0,390 390,600 600,930 930,1350 1350,1680
B,| and server A wants
|服务器 A 想要附加条目 e1 ，

909
00:31:05,130 --> 00:31:07,170
0,180 180,660 660,1470 1500,1830 1830,2040
to append entry, let's say

910
00:31:07,170 --> 00:31:08,250
0,330 330,450 450,720 720,870 870,1080
e1,| and server B wants
|服务器 B 想要附加条目 e2 ，

911
00:31:08,250 --> 00:31:09,660
0,60 60,360 360,690 690,900 900,1410
to append entry {e2 -},|
|

912
00:31:09,750 --> 00:31:11,700
0,690 690,1290 1290,1500 1500,1860 1860,1950
so server A solves the
所以服务器 A 解决了这个难题，并发布了解决方案，

913
00:31:11,700 --> 00:31:13,830
0,480 570,930 930,1440 1440,1530 1530,2130
puzzle and publishes the solution,

914
00:31:14,100 --> 00:31:15,300
0,300 300,420 420,750 750,1080 1080,1200
right,| and I'm assuming that
|我假设解决方案很容易检查，

915
00:31:15,300 --> 00:31:16,080
0,60 60,360 360,480 480,690 690,780
the solution is easy to

916
00:31:16,080 --> 00:31:18,630
0,420 750,1260 1260,1680 1680,2070 2070,2550
check,| so then server B
|然后服务器 B 看到解决方案，并检查其是正确的，

917
00:31:18,630 --> 00:31:19,980
0,480 510,780 780,840 840,1230 1230,1350
{} sees the solution and

918
00:31:19,980 --> 00:31:22,080
0,210 210,330 330,420 420,990 1290,2100
check that it's correct, {}|
|

919
00:31:22,580 --> 00:31:25,040
0,840 870,1140 1140,1590 1590,1980 1980,2460
so it cannot work that,|
所以它不能工作，|

920
00:31:25,130 --> 00:31:26,750
0,450 450,660 660,930 930,1440 1440,1620
server B just simply {re-publishes
服务器 B 只是简单地用它自己的名字重新发布解决方案，

921
00:31:26,750 --> 00:31:28,850
0,630 630,750 750,1530 1650,1920 1920,2100
-} the solution with its

922
00:31:28,850 --> 00:31:30,290
0,240 240,510 510,720 720,1230 1230,1440
own name,| and signing it
|并用自己的名字签名，

923
00:31:30,290 --> 00:31:31,670
0,180 180,420 420,600 600,930 930,1380
by its own name,| because
|因为 e2 的难题和 e1 的难题是不同的，对吗？

924
00:31:31,670 --> 00:31:33,410
0,210 210,600 600,1230 1260,1650 1650,1740
the puzzle for e2 is

925
00:31:33,410 --> 00:31:34,220
0,270 270,390 390,480 480,720 720,810
different from the puzzle for

926
00:31:34,220 --> 00:31:36,530
0,300 330,570 570,900 930,1590 1710,2310
e1, right?| Yeah, okay, yeah
|是的，好的，就是这样，

927
00:31:36,530 --> 00:31:38,060
0,360 360,510 510,750 750,930 930,1530
exactly,| and we'll see, {}
|我们会看到，我们将在稍后看到更多细节。

928
00:31:38,060 --> 00:31:38,780
0,150 150,300 300,450 450,630 630,720
we'll get into this in

929
00:31:38,780 --> 00:31:39,650
0,150 150,480 480,540 540,600 600,870
more detail in the second,|
|

930
00:31:40,700 --> 00:31:41,720
0,270 270,450 450,780 780,930 930,1020
{of,course}, this here, this is
当然，在这里，这是一种基本的了解，

931
00:31:41,720 --> 00:31:42,800
0,180 180,240 240,330 330,660 660,1080
sort of the basic insight,|
|

932
00:31:42,980 --> 00:31:44,380
0,180 180,390 390,600 600,1050
of course not enough.|
当然，这还不够。|

933
00:31:45,290 --> 00:31:46,190
0,300 300,360 360,600 600,780 780,900
But it will turn out
但是，这足以决定在哪一个 fork 上，

934
00:31:46,190 --> 00:31:47,150
0,60 60,150 150,480 480,600 600,960
to be enough to basically

935
00:31:47,150 --> 00:31:48,980
0,420 420,630 630,990 990,1500 1560,1830
settle on a fork,| so
|所以我们要接受，

936
00:31:48,980 --> 00:31:50,090
0,120 120,240 240,300 300,990 990,1110
we're going to accept,| they're
|它们会 fork ，

937
00:31:50,090 --> 00:31:51,020
0,150 150,300 300,690 690,810 810,930
gonna be forks,| and then
|然后我们会有，

938
00:31:51,020 --> 00:31:53,150
0,120 120,540 540,780 780,1830 1830,2130
we're gonna have,| {} Bitcoin
|比特币会接受他们的 fork ，像 SUNDR 一样，

939
00:31:53,150 --> 00:31:54,950
0,300 300,630 630,1020 1020,1440 1440,1800
basically accepts their forks like

940
00:31:55,010 --> 00:31:56,690
0,600 630,900 900,1260 1260,1350 1350,1680
SUNDR,| then has a way
|然后有一种决定选择哪一个 fork 的方法。

941
00:31:56,690 --> 00:31:58,130
0,120 120,480 480,870 870,1110 1110,1440
of basically deciding which fork

942
00:31:58,130 --> 00:31:59,200
0,90 90,420 420,600
to settle on.|
|

943
00:32:00,290 --> 00:32:01,560
0,180 180,720

944
00:32:01,920 --> 00:32:03,360
0,930 930,1110 1110,1260 1260,1380 1380,1440
Yeah, so I had a
是的，所以我有一个关于网络分区的问题，

945
00:32:03,360 --> 00:32:07,470
0,330 330,1050 1050,1440 1440,2400 3570,4110
question about network partitions,| and
|我想知道如何，

946
00:32:07,530 --> 00:32:08,910
0,120 120,120 120,480 480,900 900,1380
I I was wondering how

947
00:32:08,910 --> 00:32:09,900
0,480
like,|
|

948
00:32:09,930 --> 00:32:11,310
0,150 150,600 930,1110 1110,1260 1260,1380
you know if you were
如果你能在互联网上创建一个分区，

949
00:32:11,310 --> 00:32:12,930
0,360 360,480 480,720 720,780 780,1620
able to make a partition

950
00:32:12,990 --> 00:32:14,550
0,300 300,480 480,600 600,1200 1200,1560
like on the Internet,| which
|这可能是不合理的，

951
00:32:14,550 --> 00:32:15,540
0,150 150,450
you know

952
00:32:15,540 --> 00:32:17,970
0,510 510,1290 1290,1740 1800,2250 2250,2430
probably unreasonable,| but you're able
|但是你可以划分整个互联网，

953
00:32:17,970 --> 00:32:19,350
0,120 120,630 630,750 750,1260 1260,1380
to partition the Internet like

954
00:32:19,350 --> 00:32:21,540
0,90 90,390 390,1020 1290,1680 1680,2190
the whole Internet,| and who
|你不能说服，

955
00:32:21,540 --> 00:32:25,110
0,270 270,390 390,1350 1500,2580 2970,3570
couldn't you convince,| like {you,know}
|某人双重花费，

956
00:32:25,530 --> 00:32:28,260
0,750 1020,1590 1590,1890 1890,2520 2520,2730
one like double spend| by
|通过在分区的两边花费。

957
00:32:28,260 --> 00:32:30,090
0,240 240,690 690,1050 1050,1500 1500,1830
like spending on both sides

958
00:32:30,090 --> 00:32:31,440
0,90 90,210 210,930
of the partition.|
|

959
00:32:31,560 --> 00:32:33,090
0,330 330,450 450,750 750,960 960,1530
Yeah, the partition never heals?|
是的，分区永远不会恢复吗？|

960
00:32:35,550 --> 00:32:38,820
0,1440 1440,2220 2280,2820 2820,3180 3180,3270
Eventually, {} you'd assume it
最终，如果你认为它会恢复，

961
00:32:38,820 --> 00:32:40,500
0,450 450,690 690,1050 1050,1230 1230,1680
heals,| but then by then
|但到那时，你可能已经发送东西了。

962
00:32:40,530 --> 00:32:41,620
0,660
like

963
00:32:41,680 --> 00:32:42,580
0,210 210,510 510,630 630,720 720,900
you probably would have gone

964
00:32:42,580 --> 00:32:44,020
0,150 150,390 390,720 720,1200 1200,1440
in like something shipped {}.|
|

965
00:32:44,200 --> 00:32:45,850
0,240 240,450 450,810 810,1410 1410,1650
Yeah, so generally we'll see,|
是的，所以通常我们会看到，|

966
00:32:45,850 --> 00:32:46,870
0,450 450,630 630,690 690,900 900,1020
we'll talk a little bit
我们会更多地谈论它，

967
00:32:46,870 --> 00:32:48,730
0,210 210,450 450,660 660,900 900,1860
more about it,| like {}
|有各种各样的创建 fork 的方法，

968
00:32:48,760 --> 00:32:50,830
0,1200 1200,1470 1470,1680 1680,1770 1770,2070
{there's,all,kind,of}, there's ways of creating

969
00:32:50,830 --> 00:32:52,120
0,450 450,600 600,690 690,870 870,1290
forks,| and what you're describing
|你所描述的是

970
00:32:52,120 --> 00:32:53,230
0,90 90,450 450,630 630,780 780,1110
is| basically for it persists
|因为它会持续很长一段时间，

971
00:32:53,230 --> 00:32:53,860
0,120 120,150 150,360 360,570 570,630
for a long period of

972
00:32:53,860 --> 00:32:56,110
0,270 870,1410 1410,1950 1950,2070 2070,2250
time,| {} and you will
|你会看到，

973
00:32:56,110 --> 00:32:59,020
0,240 240,540 540,1440 1500,2490 2490,2910
see that the basically the,|
|

974
00:32:59,350 --> 00:33:01,540
0,750 990,1170 1170,1290 1290,1680 1680,2190
{} you know Bitcoin basically
比特币基本上每十分钟产生一次交易日志，

975
00:33:01,540 --> 00:33:03,580
0,360 360,540 540,1080 1080,1230 1230,2040
produces these logs with transactions

976
00:33:03,580 --> 00:33:05,800
0,330 330,540 540,1110 1410,2100 2100,2220
every ten minutes,| and you
|如果你非常保守，

977
00:33:05,800 --> 00:33:07,330
0,120 120,270 270,420 420,870 870,1530
know if you're very conservative|
|

978
00:33:07,330 --> 00:33:09,070
0,270 270,480 480,870 870,960 960,1740
or you wanna be careful
或者你想小心得避免双重花费，

979
00:33:09,070 --> 00:33:10,840
0,540 540,600 600,930 930,1380
not to be, {}

980
00:33:12,550 --> 00:33:13,870
0,300 300,510 510,870 870,1110 1110,1320
avoid double spending| or making
|或者确保没有任何双重花费，

981
00:33:13,870 --> 00:33:15,220
0,270 270,450 450,1020 1020,1140 1140,1350
sure there's nothing worth double

982
00:33:15,220 --> 00:33:17,500
0,330 330,480 480,900 900,1380 1710,2280
spend,| you generally wait {you,know,for}
|你通常会等待多个这样的日志显示，比如 5 6 个，

983
00:33:17,500 --> 00:33:19,270
0,540 540,750 750,1020 1020,1110 1110,1770
multiple these logs to appear,

984
00:33:19,330 --> 00:33:20,740
0,210 210,450 450,780 780,1050 1050,1410
like 5 6,| so basically
|所以基本上是一个小时，

985
00:33:20,740 --> 00:33:22,270
0,60 60,660 720,1200 1200,1260 1260,1530
an hour,| before {} actually
|在真正决定接受之前，

986
00:33:22,270 --> 00:33:23,710
0,420 420,540 540,840 840,1380 1380,1440
decided to actually accept,| you
|说是的，我在正确的 fork 上。

987
00:33:23,710 --> 00:33:25,540
0,180 180,630 720,1290 1290,1500 1500,1830
know to say yeah, this

988
00:33:25,540 --> 00:33:26,500
0,180 180,510 510,660 660,750 750,960
I'm {} on the right

989
00:33:26,500 --> 00:33:28,420
0,300
fork.|
|

990
00:33:29,370 --> 00:33:31,000
0,630
Thanks.|
谢谢。|

991
00:33:38,950 --> 00:33:40,440
0,420 450,900
Okay, so.|
好的，所以。|

992
00:33:40,900 --> 00:33:42,130
0,240 240,510 510,840 840,1140 1140,1230
Let's also see actually how
让我们来看看这些部分如何在一起，

993
00:33:42,130 --> 00:33:44,650
0,360 360,750 750,1080 1080,1590 1740,2520
the pieces fit together, {}|
|

994
00:33:45,190 --> 00:33:46,030
0,210 210,270 270,480 480,690 690,840
so it turns out you
所以事实证明，

995
00:33:46,030 --> 00:33:47,560
0,150 150,780 810,1050 1050,1260 1260,1530
know the,| {you,know} do {}
|做交易的工作量证明，

996
00:33:47,590 --> 00:33:49,240
0,240 240,330 330,630 630,960 960,1650
{proof-of-work - -} for transaction,|
|

997
00:33:49,240 --> 00:33:51,490
0,450 450,660 660,750 750,1260 1290,2250
{} it'll be crazy,| because
它会很疯狂，|因为你要花费大量的常规的能量，

998
00:33:51,490 --> 00:33:52,120
0,210 210,330 330,390 390,600 600,630
you got to spend a

999
00:33:52,120 --> 00:33:53,740
0,150 150,210 210,690 690,1200 1380,1620
lot of conventional power,| and
|为了放入一个单一的事务，

1000
00:33:53,740 --> 00:33:55,180
0,330 330,540 540,750 750,990 990,1440
for put one single transaction,|
|

1001
00:33:55,180 --> 00:33:55,990
0,120 120,270 270,510 510,600 600,810
that will limit the number
这将限制你每秒钟执行的交易的数量，

1002
00:33:55,990 --> 00:33:57,040
0,60 60,570 570,690 690,780 780,1050
of transactions you can actually

1003
00:33:57,040 --> 00:33:59,680
0,360 750,1140 1140,1620 1920,2100 2100,2640
do per second,| and so
|所以，完成此操作的一种方式是

1004
00:33:59,710 --> 00:34:01,240
0,540 570,960 960,1290 1290,1440 1440,1530
the way actually this is

1005
00:34:01,240 --> 00:34:02,680
0,240 240,360 360,870 870,1380 1380,1440
done is| basically transaction to
|以块为单位对组进行交易处理，

1006
00:34:02,680 --> 00:34:05,470
0,690 720,1080 1080,1200 1200,1830 1950,2790
a group in blocks| and
|工作量证明以一个块为基础。

1007
00:34:05,500 --> 00:34:07,240
0,210 210,300 300,750 840,1560 1560,1740
{proof-of-work - -} {} is

1008
00:34:07,240 --> 00:34:08,590
0,300 300,540 540,1080 1080,1260 1260,1350
going on, {} on a

1009
00:34:08,590 --> 00:34:09,760
0,270 270,900
block basis.|
|

1010
00:34:10,080 --> 00:34:11,160
0,210 210,510 510,720 720,900 900,1080
{} So we have our
所以我们有自己的网络，

1011
00:34:11,160 --> 00:34:12,340
0,570
network,|
|

1012
00:34:14,780 --> 00:34:16,130
0,630 630,780 780,990 990,1290 1290,1350
{and,the,way} it actually works is
它的工作方式是，

1013
00:34:16,130 --> 00:34:17,270
0,180 180,270 270,480 480,780 780,1140
that,| we're not making a
|我们不会创建很多块，

1014
00:34:17,270 --> 00:34:18,590
0,360 360,450 450,930 930,1110 1110,1320
lot of blocks,| but like
|但我们做很多交易，

1015
00:34:18,590 --> 00:34:20,330
0,600 630,930 930,1230 1260,1680 1680,1740
we made a lot of

1016
00:34:20,330 --> 00:34:21,410
0,510 510,570 570,750 750,1050 1050,1080
transactions,| we make actually a
|我们创建了很多区块，

1017
00:34:21,410 --> 00:34:22,790
0,240 240,420 480,1110 1110,1290 1290,1380
lot of blocks,| which are
|也就是区块链。

1018
00:34:22,790 --> 00:34:24,620
0,330 330,570 570,1050 1050,1380 1380,1830
called {you,know} basically {blockchain -}.|
|

1019
00:34:28,460 --> 00:34:30,260
0,480 480,840 1230,1410 1410,1590 1590,1800
And so here we got
所以我们有了自己的网络，

1020
00:34:30,260 --> 00:34:32,630
0,240 240,870 870,1230 1230,1860 1920,2370
our network,| {you,know,we,have} peers around
|在世界各地有节点，

1021
00:34:32,630 --> 00:34:33,960
0,60 60,660
the world,|
|

1022
00:34:33,960 --> 00:34:36,270
0,750 780,1620 1620,1740 1740,1860 1860,2310
and {} you know the
这里的日志是一系列的块。

1023
00:34:36,330 --> 00:34:38,130
0,390 390,780 780,930 930,1590 1590,1800
log here is basically a

1024
00:34:38,130 --> 00:34:39,660
0,330 330,450 450,1050
sequence of blocks.|
|

1025
00:34:42,720 --> 00:34:43,890
0,150 150,300 300,630 630,930 930,1170
And so peers have {you,know}
所以节点有这些的副本，

1026
00:34:43,890 --> 00:34:45,270
0,390 390,480 480,1020 1140,1260 1260,1380
copies of these,| you know
|可能会创建新的，

1027
00:34:45,270 --> 00:34:47,280
0,210 210,480 510,1470 1470,1860 1860,2010
may create new ones,| {append
|追加它们，分发它们在网络中。

1028
00:34:47,280 --> 00:34:48,960
0,330 330,810 810,960 960,1410 1410,1680
-} them and distribute them

1029
00:34:48,960 --> 00:34:49,710
0,90 90,300 300,390 390,690 690,750
and [] them across the

1030
00:34:49,710 --> 00:34:50,680
0,480
network.|
|

1031
00:34:51,690 --> 00:34:52,560
0,210 210,360 360,450 450,570 570,870
So what is in a,
所以，在非常高的级别上，块中有什么，

1032
00:34:52,560 --> 00:34:53,920
0,210 210,840
in block,

1033
00:34:54,620 --> 00:34:55,940
0,390 390,780 780,930 930,1170 1170,1320
{} at a very high

1034
00:34:55,940 --> 00:34:57,260
0,570
level,|
|

1035
00:34:57,470 --> 00:34:58,400
0,360 360,450 450,480 480,720 720,930
again, there are many more
再次，有很多细节我会忽略，

1036
00:34:58,400 --> 00:34:59,450
0,570 570,630 630,720 720,930 930,1050
details you know that I'm

1037
00:34:59,450 --> 00:35:01,250
0,180 180,390 390,1080 1230,1650 1650,1800
just gonna ignore,| {} it's
|它是上一个区块的哈希，

1038
00:35:01,250 --> 00:35:02,090
0,150 150,270 270,360 360,690 690,840
gonna be the hash of

1039
00:35:02,090 --> 00:35:04,500
0,90 90,480 480,990 1020,1410
the previous block,| so,
|所以 B-1 ，

1040
00:35:04,790 --> 00:35:05,740
0,690
{}

1041
00:35:05,740 --> 00:35:07,300
0,180 180,480 480,990
{B-1 - -},|
|

1042
00:35:07,450 --> 00:35:08,260
0,240 240,390 390,540 540,690 690,810
and so if this is
如果这是区块 5 ，

1043
00:35:08,260 --> 00:35:09,460
0,300 300,780 780,840 840,1020 1020,1200
block 5,| you know this
|这将是 B4 ，所以 B-1 ，

1044
00:35:09,460 --> 00:35:10,270
0,90 90,240 240,300 300,420 420,810
is going to be then

1045
00:35:10,660 --> 00:35:12,790
0,750 750,810 810,1020 1050,1740 1740,2130
{} you know B4, {so,B-1

1046
00:35:12,790 --> 00:35:14,830
0,300 300,720 1500,1800 1800,1950 1950,2040
- -} {},| so the
|链中前一个块的唯一标识符，

1047
00:35:14,830 --> 00:35:16,930
0,330 330,930 930,1050 1050,1590 1590,2100
unique identifier of the previous

1048
00:35:16,930 --> 00:35:20,230
0,510 540,1290 1320,2100 2250,2640 2640,3300
block in {the,chain},| the transactions
|交易属于这个区块，

1049
00:35:20,230 --> 00:35:20,950
0,150 150,210 210,450 450,510 510,720
that are part of this

1050
00:35:20,950 --> 00:35:22,080
0,570
block,|
|

1051
00:35:23,150 --> 00:35:26,140
0,1020 1110,1680 1680,1770 1770,2430
and then a nonce,
然后是一个 nonce ，我们稍后会谈到，

1052
00:35:26,340 --> 00:35:27,240
0,240 240,480 480,660 660,840 840,900
which we'll talk about in

1053
00:35:27,240 --> 00:35:28,050
0,30 30,330 330,480 480,630 630,810
a second,| but this is
|但这是一个在难题中发挥关键作用的东西，

1054
00:35:28,050 --> 00:35:28,950
0,330 330,510 510,660 660,750 750,900
a thing that is going

1055
00:35:28,950 --> 00:35:30,210
0,90 90,300 300,390 390,810 810,1260
to play a crucial role

1056
00:35:30,210 --> 00:35:33,540
0,270 270,1050 1320,1680 1680,2280 2460,3330
in the the puzzle,| and
|和时间戳，

1057
00:35:33,540 --> 00:35:34,800
0,60 60,270 270,690
the {timestamp -},|
|

1058
00:35:38,960 --> 00:35:40,220
0,690 690,810 810,960 960,1170 1170,1260
and you know this is
这是典型的，

1059
00:35:40,220 --> 00:35:43,340
0,660 1290,1710 1710,2490 2760,2910 2910,3120
about typically,| {} you'll see
|你稍后会看到，

1060
00:35:43,340 --> 00:35:44,060
0,60 60,240 240,420 420,600 600,720
a little bit,| you know
|考虑这些大约是一个 MB 的块，

1061
00:35:44,060 --> 00:35:45,500
0,150 150,360 360,540 540,930 930,1440
think about these are roughly

1062
00:35:45,500 --> 00:35:46,840
0,90 90,720
a MB

1063
00:35:47,530 --> 00:35:49,570
0,300 300,660 660,900 900,1560 1560,2040
{you,know} block,| so basically the
|所以这个游戏是

1064
00:35:49,600 --> 00:35:51,250
0,390 390,840 840,960 960,1140 1140,1650
{the,game} is| you know the
|收集交易的节点，

1065
00:35:51,640 --> 00:35:53,260
0,360 360,810 810,1260 1260,1350 1350,1620
{} the peers of collect

1066
00:35:53,260 --> 00:35:57,610
0,870 1080,1950 1980,3390 3510,4080 4080,4350
transactions,| {} then basically solve
|然后解决这个难题，

1067
00:35:57,610 --> 00:35:59,800
0,60 60,630 1140,1800 1800,1980 1980,2190
the puzzle,| {} and once
|一旦他们解决了难题，

1068
00:35:59,800 --> 00:36:01,210
0,120 120,360 360,420 420,1020 1050,1410
they solve the puzzle,| they
|他们会把这个区块发送给网络中的每个人，

1069
00:36:01,210 --> 00:36:03,460
0,480 510,1200 1200,1290 1290,1680 1680,2250
gonna ship the block to

1070
00:36:03,460 --> 00:36:04,720
0,630 630,810 810,1050 1050,1170 1170,1260
everybody in the in the

1071
00:36:04,720 --> 00:36:06,970
0,480 930,1470 1470,1560 1560,1980 1980,2250
network,| everybody can check whether
|每个人都可以检查节点是否真的正确地解决了难题，

1072
00:36:06,970 --> 00:36:08,800
0,660 750,1050 1050,1290 1290,1650 1650,1830
the peer actually solves the

1073
00:36:08,800 --> 00:36:10,690
0,300 300,930 1200,1500 1500,1770 1770,1890
puzzle correctly,| and if you
|如果难题在交易检查中正确，

1074
00:36:10,690 --> 00:36:12,370
0,150 150,330 330,660 660,1050 1050,1680
know the puzzle correctly {sort,of}

1075
00:36:12,400 --> 00:36:14,050
0,420 420,510 510,570 570,1050 1050,1650
correctly in the transaction checkout,|
|

1076
00:36:14,050 --> 00:36:15,850
0,360 360,810 810,870 870,1200 1200,1800
and actually the {hash,is} checkout,|
哈希检查，|

1077
00:36:16,030 --> 00:36:16,900
0,270 270,360 360,480 480,570 570,870
then they're going to basically
然后它们会接受这个区块作为链中的下一个区块。

1078
00:36:16,900 --> 00:36:18,010
0,330 330,510 510,870 870,1020 1020,1110
accept that block as the

1079
00:36:18,010 --> 00:36:19,210
0,300 300,600 600,690 690,810 810,1200
next block in the chain.|
|

1080
00:36:22,540 --> 00:36:24,070
0,270 270,420 420,660 660,810 810,1530
So a little more detail,|
所以说得更详细一点，|

1081
00:36:25,570 --> 00:36:27,700
0,810 810,960 960,1290 1290,1920 1980,2130
{} you know when you
当获胜者到达下一个区块，

1082
00:36:27,700 --> 00:36:28,990
0,180 180,630 630,750 750,1080 1080,1290
know basically the winner gets

1083
00:36:28,990 --> 00:36:31,980
0,90 90,210 210,750 1170,2400
to the site {}

1084
00:36:32,070 --> 00:36:34,620
0,390 390,690 690,1500 1500,2070 2370,2550
on the {next,block},| so we
|所以我们有了一个新的区块，

1085
00:36:34,620 --> 00:36:38,260
0,120 120,150 150,330 330,960
have a new block,|
|

1086
00:36:39,720 --> 00:36:41,520
0,690 690,990 990,1260 1260,1650 1650,1800
{} and this is gonna
这将是工作量证明，

1087
00:36:41,520 --> 00:36:42,480
0,120 120,210 210,450 450,540 540,960
be the {proof-of-work - -},|
|

1088
00:36:42,480 --> 00:36:43,920
0,210 210,300 300,600 600,1170 1170,1440
which is done typically the
通常做工作量证明的一方被称为矿工，

1089
00:36:43,920 --> 00:36:44,880
0,330 330,480 480,660 660,750 750,960
[party] that does the {proof-of-work

1090
00:36:44,880 --> 00:36:45,510
0,60 60,270 270,360 360,600 600,630
- -} is called the

1091
00:36:45,510 --> 00:36:46,860
0,480
miners,|
|

1092
00:36:47,240 --> 00:36:48,080
0,270 270,450 450,510 510,540 540,840
we'll see in a second
我们很快会知道为什么。

1093
00:36:48,080 --> 00:36:49,580
0,540
why.|
|

1094
00:36:49,970 --> 00:36:51,320
0,750

1095
00:36:51,410 --> 00:36:54,740
0,570 570,990 990,1440 1770,2640 2640,3330
And basically the game that
我们要玩的游戏是，

1096
00:36:54,770 --> 00:36:55,820
0,270 270,390 390,480 480,840 840,1050
we're going to play is

1097
00:36:55,820 --> 00:36:58,380
0,840
that,|
|

1098
00:36:58,410 --> 00:36:59,680
0,720

1099
00:36:59,930 --> 00:37:01,280
0,810

1100
00:37:01,370 --> 00:37:03,260
0,570 570,780 780,870 870,1530 1560,1890
{the,miner} has to compute a
矿工必须计算这个新数据块的哈希，

1101
00:37:03,260 --> 00:37:04,970
0,540 540,750 750,900 900,1080 1080,1710
hash of this new block,|
|

1102
00:37:05,440 --> 00:37:09,460
0,630 630,780 780,1170 1170,1830 3600,4020
for that basically has, has
为了包含 n 个前导零。

1103
00:37:09,460 --> 00:37:11,100
0,390 390,1050
n leading

1104
00:37:12,080 --> 00:37:14,100
0,720
zeros.|
|

1105
00:37:17,510 --> 00:37:19,490
0,600 1170,1470 1470,1560 1560,1890 1890,1980
So and the way you
所以，矿工可以做到的方式是，

1106
00:37:19,490 --> 00:37:21,110
0,360 360,600 600,1230 1230,1530 1530,1620
know {} the miner can

1107
00:37:21,110 --> 00:37:22,700
0,120 120,390 390,510 510,960 960,1590
do that is,| basically by
|通过改变 nonce ，

1108
00:37:22,790 --> 00:37:24,590
0,690 690,810 810,1140 1140,1380 1380,1800
changing the nonce,| so basically
|所以矿工对 nonce 进行随机猜测，

1109
00:37:24,590 --> 00:37:26,480
0,270 300,630 630,990 990,1410 1410,1890
the miner makes random guesses

1110
00:37:26,660 --> 00:37:28,610
0,300 300,660 1050,1500 1500,1890 1890,1950
for nonce,| {} compute the
|计算哈希并检查前导零的个数，

1111
00:37:28,610 --> 00:37:30,800
0,630 810,1440 1440,1740 1740,2100 2100,2190
hash {} and checks you

1112
00:37:30,800 --> 00:37:31,730
0,180 180,300 300,540 540,630 630,930
know the number of leading

1113
00:37:31,730 --> 00:37:33,920
0,510 510,1080 1350,1740 1740,1950 1950,2190
zeros,| and if the number
|如果前导零的数量越大，

1114
00:37:33,920 --> 00:37:35,480
0,60 60,270 270,990 990,1170 1170,1560
of leading zeros you know

1115
00:37:35,480 --> 00:37:37,310
0,690 750,1260 1260,1350 1350,1470 1470,1830
larger,| then you know basically
|那么这个块是会被接受。

1116
00:37:37,310 --> 00:37:38,270
0,330 330,390 390,750 750,840 840,960
that {block -} is going

1117
00:37:38,270 --> 00:37:39,420
0,60 60,180 180,810
to be accepted.|
|

1118
00:37:40,080 --> 00:37:40,830
0,240 240,420 420,570 570,660 660,750
The only way you can
你可以考虑的唯一办法是，

1119
00:37:40,830 --> 00:37:42,090
0,150 150,510 510,660 660,1140 1140,1260
think about is,| basically the
|哈希值低于某个特定难度的值，

1120
00:37:42,090 --> 00:37:43,800
0,270 270,660 660,840 840,1470 1500,1710
hash value is below some

1121
00:37:43,800 --> 00:37:47,820
0,810 960,1530 1800,2490 2610,3120 3120,4020
particular { -} below particular

1122
00:37:47,820 --> 00:37:49,380
0,480 480,1050
difficulty value,|
|

1123
00:37:49,780 --> 00:37:51,070
0,480 510,750 750,1050 1050,1140 1140,1290
{} this N can be
这个 N 可以随着时间的推移而改变，

1124
00:37:51,070 --> 00:37:53,230
0,540 810,1350 1350,1800 1800,1920 1920,2160
changed over time,| {as,we'll} {see,in}
|正如我们将在后面看到的，

1125
00:37:53,230 --> 00:37:55,120
0,60 60,330 330,870 990,1590 1590,1890
a second later,| {} to
|来调整难度，

1126
00:37:55,120 --> 00:37:56,950
0,90 90,210 210,1050 1050,1140 1140,1830
you know adjust the difficulty,|
|

1127
00:37:57,160 --> 00:38:00,130
0,1500 1500,2130 2370,2640 2640,2790 2790,2970
{} and {} but on
但平均而言，矿工工作是必须的，

1128
00:38:00,130 --> 00:38:01,630
0,450 450,570 570,900 1260,1350 1350,1500
average, you know you know

1129
00:38:01,630 --> 00:38:03,220
0,150 150,510 510,600 600,1140
the {miner -} work

1130
00:38:04,080 --> 00:38:05,370
0,240 240,330 330,1050 1050,1110 1110,1290
that is necessary,| you know
|所以他们的目标是

1131
00:38:05,370 --> 00:38:07,470
0,330 450,600 600,780 780,1470 1710,2100
so that they're targeting is

1132
00:38:07,470 --> 00:38:09,330
0,330 330,540 540,990 990,1410 1410,1860
about| like a roughly CPU
|大约一个月的 CPU 计算。

1133
00:38:09,330 --> 00:38:12,000
0,540 690,1110 1110,1890
month of computation.|
|

1134
00:38:12,740 --> 00:38:13,670
0,150 150,240 240,450 450,600 600,930
And it's not really expressed
它并不是以这种方式表达的，

1135
00:38:13,670 --> 00:38:14,420
0,60 60,210 210,480 480,570 570,750
in that way,| is really
|是用每秒可以执行的哈希数来表示的，

1136
00:38:14,420 --> 00:38:15,350
0,330 330,420 420,630 630,720 720,930
expressed in terms of number

1137
00:38:15,350 --> 00:38:16,160
0,90 90,480 480,570 570,660 660,810
of hashes you can do

1138
00:38:16,160 --> 00:38:17,990
0,120 120,600 960,1470 1500,1620 1620,1830
per second,| {} but then
|但归根结底，这是一种数字。

1139
00:38:17,990 --> 00:38:19,910
0,180 180,540 540,810 810,1200 1200,1920
it boils down to {sort,of}

1140
00:38:19,910 --> 00:38:21,050
0,120 120,330 330,480 480,570 570,1140
for that kind of number.|
|

1141
00:38:21,780 --> 00:38:22,350
0,120 120,300 300,300 300,510 510,570
Of course, a lot of
当然，很多节点同时做这个，

1142
00:38:22,350 --> 00:38:23,640
0,540 540,600 600,930 930,1110 1110,1290
peers you know do this

1143
00:38:23,640 --> 00:38:25,170
0,90 90,780 990,1080 1080,1290 1290,1530
in parallel,| you know there
|我认为网络目前大约有 10,000 个节点，

1144
00:38:25,170 --> 00:38:26,100
0,120 120,330 330,450 450,750 750,930
I think the network is

1145
00:38:26,100 --> 00:38:28,590
0,390 390,690 690,1530 1530,2310 2310,2490
currently around {10\,,000,nodes},| {10\,,000,nodes} might
|可能有 10,000 个节点，

1146
00:38:28,590 --> 00:38:29,430
0,330 330,450 450,600 600,750 750,840
be| and there might be
|可能会有更多的矿工，

1147
00:38:29,430 --> 00:38:31,650
0,210 210,450 450,990 1410,1560 1560,2220
many more miners,| {} I
|我认为数十万矿工，

1148
00:38:31,980 --> 00:38:33,270
0,450 450,780 780,840 840,1230 1230,1290
think hundreds of thousands of

1149
00:38:33,270 --> 00:38:34,890
0,540 720,1080 1080,1170 1170,1350 1350,1620
miners,| and you know they
|他们可能会幸运，

1150
00:38:34,890 --> 00:38:36,600
0,150 150,300 300,990 990,1440 1440,1710
might get lucky| and {you,know}
|很快找到了正确的 nonce ，

1151
00:38:36,660 --> 00:38:38,160
0,600 600,690 690,930 930,1170 1170,1500
pick the right {nonce -}

1152
00:38:38,160 --> 00:38:40,050
0,210 210,780 1050,1500 1500,1740 1740,1890
very quickly,| {} and some
|他们中的一些人快一点，

1153
00:38:40,050 --> 00:38:41,700
0,60 60,210 210,720 720,1440 1560,1650
of them actually { -

1154
00:38:41,700 --> 00:38:43,710
0,690 720,1170 1170,1530 1530,1620 1620,2010
-} get quickly,| and so
|所以，他们的目标是，

1155
00:38:43,800 --> 00:38:44,730
0,210 210,330 330,630 630,810 810,930
what they're shooting sort of

1156
00:38:44,730 --> 00:38:45,840
0,450 450,570 570,900 900,990 990,1110
roughly is that,| you know
|第一个解决这个难题，

1157
00:38:45,840 --> 00:38:47,430
0,270 270,570 570,930 1050,1350 1350,1590
the first one, {you,know} actually

1158
00:38:47,430 --> 00:38:48,780
0,330 330,630 630,1020 1140,1290 1290,1350
solve the puzzle,| that it
|大约需要十分钟。

1159
00:38:48,780 --> 00:38:50,580
0,210 210,540 540,690 690,1200
takes about ten minutes.|
|

1160
00:38:54,440 --> 00:38:56,030
0,30 30,480 720,930 930,1080 1080,1590
I mean you know by
我的意思是，通过调整难度，

1161
00:38:56,030 --> 00:38:59,180
0,510 510,600 600,1320 1560,1800 1800,3150
adjusting the difficulty| or the
|或者[]应该只是时间，

1162
00:38:59,210 --> 00:39:00,770
0,420 420,810 810,1350 1350,1410 1410,1560
[] should just you know

1163
00:39:00,770 --> 00:39:03,410
0,480 510,1200 1290,1620 1620,2550 2550,2640
the time,| where the the
|其中计算这些散列能量之一所需的时间，

1164
00:39:03,410 --> 00:39:04,280
0,210 210,330 330,450 450,780 780,870
time it will take to

1165
00:39:04,280 --> 00:39:05,570
0,570 570,900 900,1050 1050,1140 1140,1290
actually compute one of these

1166
00:39:05,570 --> 00:39:07,190
0,330 330,900 900,1290 1290,1410 1410,1620
hashes {} energy,| that one
|只有这样才能真正解开这个难题。

1167
00:39:07,190 --> 00:39:08,150
0,180 180,240 240,480 480,600 600,960
has to put in to

1168
00:39:08,420 --> 00:39:10,660
0,360 360,870 870,960 960,1380
actually solve the puzzle.|
|

1169
00:39:11,060 --> 00:39:13,440
0,270 270,600 660,1530 1770,2310
And so, whatever {}
所以，无论哪个矿工首先解决了这个难题，

1170
00:39:13,440 --> 00:39:16,140
0,300 330,960 1410,1800 1800,2370 2460,2700
{} {you,know} whatever miner sort

1171
00:39:16,140 --> 00:39:17,430
0,60 60,360 360,480 480,780 780,1290
of solves this puzzle first,|
|

1172
00:39:17,580 --> 00:39:19,710
0,660 660,930 930,1500 1710,2070 2070,2130
basically gets to spread the
就在整个网络中传播数据块，

1173
00:39:19,710 --> 00:39:21,690
0,330 330,630 630,720 720,1290 1500,1980
block across the network,| and
|这么做大概需要十分钟，

1174
00:39:21,690 --> 00:39:22,650
0,330 330,480 480,540 540,810 810,960
basically sort of about ten

1175
00:39:22,650 --> 00:39:23,430
0,390 390,480 480,540 540,660 660,780
minutes you know to do

1176
00:39:23,430 --> 00:39:24,630
0,270 300,600 600,750 750,1140 1140,1200
so, right,| and so you
|所以，十分钟的一个原因是，

1177
00:39:24,630 --> 00:39:26,100
0,120 120,390 390,780 780,990 990,1470
know, one reason to the

1178
00:39:26,100 --> 00:39:27,900
0,420 420,510 510,930 1110,1440 1440,1800
{ten,minutes} is there| is going
|移动 1MB 数据块需要一点时间，

1179
00:39:27,900 --> 00:39:28,500
0,90 90,270 270,300 300,480 480,600
to take a little bit

1180
00:39:28,500 --> 00:39:29,610
0,90 90,420 420,630 630,960 960,1110
of time to move them

1181
00:39:29,610 --> 00:39:31,320
0,180 180,570 570,660 660,1050 1050,1710
one MB of block| across
|通过整个网络中的很多节点，

1182
00:39:31,320 --> 00:39:32,430
0,60 60,210 210,510 510,750 750,1110
you know many many peers

1183
00:39:32,430 --> 00:39:33,330
0,150 150,210 210,330 330,420 420,900
that are in the network,|
|

1184
00:39:33,720 --> 00:39:35,370
0,690 810,1170 1170,1350 1350,1470 1470,1650
and {} you want to
而且，你要确保，

1185
00:39:35,370 --> 00:39:36,960
0,180 180,570 570,1050 1050,1290 1290,1590
make sure,| there's enough time
|有足够的时间将区块提供给许多节点，

1186
00:39:36,960 --> 00:39:39,920
0,300 450,780 780,1380 1770,2580
to get the {}

1187
00:39:39,920 --> 00:39:41,210
0,90 90,360 360,990 990,1080 1080,1290
the block out to many

1188
00:39:41,210 --> 00:39:43,010
0,90 90,180 180,750 990,1560 1590,1800
of the peers,| {} so
|这样你就可以避免 fork ，

1189
00:39:43,010 --> 00:39:44,330
0,180 180,300 300,540 540,930 930,1320
that you can avoid forks|
|

1190
00:39:44,330 --> 00:39:44,930
0,150 150,270 270,480 480,570 570,600
as we'll see in a
我们一会儿就会看到，

1191
00:39:44,930 --> 00:39:45,940
0,420
second,|
|

1192
00:39:46,620 --> 00:39:48,030
0,270 270,720 720,840 840,1110 1110,1410
so before that somebody else
在其他人也解决了这个难题之前。

1193
00:39:48,030 --> 00:39:49,470
0,390 390,480 480,660 660,1110 1110,1440
actually you know solves puzzle

1194
00:39:49,470 --> 00:39:50,360
0,300
too.|
|

1195
00:39:51,170 --> 00:39:55,820
0,360 390,540 630,1350 2040,2730 2820,4650
Um, {} professor,| so the
嗯，教授，|所以需要一些前导零，

1196
00:39:55,820 --> 00:39:57,650
0,510 540,570 660,1440 1440,1560 1560,1830
does a number of leading

1197
00:39:57,650 --> 00:40:00,590
0,1050 1050,1290 1290,1950 2040,2400 2400,2940
{zeros's -}| that {} hash
|哈希值需要被节点接受，

1198
00:40:00,590 --> 00:40:02,900
0,810 1020,1470 1470,1620 1620,2160 2160,2310
needs to be accepted by

1199
00:40:02,900 --> 00:40:04,280
0,60 60,480 510,720 720,1020 1020,1380
a node,| is that number
|它是每个节点单独设置的数字吗？

1200
00:40:04,280 --> 00:40:05,540
0,180 180,570 570,720 720,1050 1050,1260
like set by each node

1201
00:40:05,540 --> 00:40:07,580
0,750 750,990 990,1650 1650,1890 1890,2040
individually, like.| No, no, it's
|不，不，这是协议的难题，

1202
00:40:07,580 --> 00:40:08,480
0,210 210,390 390,450 450,540 540,900
{puzzle -} of the protocol,|
|

1203
00:40:08,480 --> 00:40:10,910
0,210 210,360 360,720 720,1110 1410,2430
there's a agreed puzzle.| But,
一个商定的难题。|但是，但是。

1204
00:40:10,910 --> 00:40:12,920
0,330 330,1020 1020,1350 1380,1710 1710,2010
but.| {It's,consensus} on about {N,is}.|
|这是关于 N 的共识。|

1205
00:40:13,850 --> 00:40:15,620
0,660 660,1320 1320,1350 1350,1650 1650,1770
But what I mean is
但我的意思是，

1206
00:40:15,620 --> 00:40:17,810
0,300 300,660 660,1080 1080,1680 1680,2190
like,| it's {puzzle,of} protocol, but
|这是协议的难题，但是，

1207
00:40:17,840 --> 00:40:18,660
0,480
like,|
|

1208
00:40:19,240 --> 00:40:20,560
0,750

1209
00:40:21,340 --> 00:40:23,650
0,300 300,960 1020,1590 1590,1950 1950,2310
so, so, so.| {You,can,change}, will
所以，所以，所以。|你可以改变，也会随着时间的推移而改变。

1210
00:40:23,650 --> 00:40:26,050
0,270 270,450 450,870 1440,2040 2040,2400
change over time.| Well behaved
|行为良好的节点将跟随它，

1211
00:40:26,050 --> 00:40:27,280
0,300 300,480 480,900 900,1050 1050,1230
nodes will follow it,| but
|但是谁计算，

1212
00:40:27,280 --> 00:40:29,110
0,330 540,870 870,1080 1080,1320 1320,1830
they, but but who calculate,

1213
00:40:29,110 --> 00:40:31,330
0,270 270,1050 1050,1350 1350,1710 1710,2220
who calculates,| that a central
|一个中央服务器计算出 N 并将它发到所有地方。

1214
00:40:31,330 --> 00:40:34,060
0,810 1200,1620 1620,2250 2250,2400 2400,2730
server that calculates the N

1215
00:40:34,060 --> 00:40:35,110
0,120 120,390 390,540 540,840 840,1050
and sends it out {}

1216
00:40:35,110 --> 00:40:37,360
0,510 540,1350 1350,1620 1620,1950 1950,2250
everywhere.| {No,no\,,we'll,see,in,a} second later,| actually
|不，不，我们稍后会看到的，|它是如何计算的，

1217
00:40:37,360 --> 00:40:39,820
0,180 180,360 360,1020 1410,1920 1950,2460
how it's computed,| {} basically
|我可以给你一个关于它是如何计算的提示，

1218
00:40:39,820 --> 00:40:40,900
0,270 270,720 720,840 840,990 990,1080
{} I can give you

1219
00:40:40,900 --> 00:40:42,040
0,60 60,420 450,840 840,990 990,1140
a hint about how it's

1220
00:40:42,040 --> 00:40:43,780
0,480 630,1050 1050,1380 1380,1470 1470,1740
computed,| one reason the {timestamps
|时间戳在里的原因之一，

1221
00:40:43,780 --> 00:40:45,520
0,360 360,510 510,780 780,1140 1140,1740
-} are in these things,|
|

1222
00:40:46,270 --> 00:40:48,100
0,480 480,810 810,1200 1200,1410 1410,1830
{} is that like if
如果一个块之间的时间变得太短，

1223
00:40:48,100 --> 00:40:49,900
0,120 120,540 540,1170 1170,1410 1410,1800
the time between a block

1224
00:40:49,900 --> 00:40:51,730
0,330 330,510 510,1050 1290,1740 1740,1830
becomes too low,| then the
|然后难度就上升了。

1225
00:40:51,730 --> 00:40:53,380
0,540 540,780 780,1140
difficulty goes up.|
|

1226
00:40:53,380 --> 00:40:54,560
0,570

1227
00:40:54,710 --> 00:40:56,150
0,570 600,750 750,840 840,1050 1050,1440
And you know these timestamps
当然，这些时间戳是使用哈希值进行验证的，

1228
00:40:56,150 --> 00:40:57,650
0,60 60,270 270,330 330,960 990,1500
of course are validated using

1229
00:40:57,650 --> 00:40:58,460
0,90 90,480 480,570 570,690 690,810
the hashes,| and all that
|所有这些东西都在区块链中，

1230
00:40:58,460 --> 00:40:59,300
0,150 150,210 210,540 540,660 660,840
kind of stuff and sit

1231
00:40:59,300 --> 00:41:00,620
0,90 90,150 150,810 810,1110 1110,1320
in the blockchain,| everybody sees
|每个人都看到相同的区块链，

1232
00:41:00,620 --> 00:41:02,480
0,90 90,300 300,1050 1500,1710 1710,1860
the same blockchain,| so they
|所以，它们将计算时间戳之间的相同差值，

1233
00:41:02,480 --> 00:41:04,160
0,180 180,660 660,1110 1110,1350 1350,1680
will compute the same difference

1234
00:41:04,160 --> 00:41:05,390
0,240 240,300 300,540 540,990 990,1230
between the {timestamps -},| and
|并在难度方面做出同样的调整。

1235
00:41:05,390 --> 00:41:07,040
0,570 570,870 870,960 960,1200 1200,1650
therefore make the same adjustment

1236
00:41:07,040 --> 00:41:08,340
0,90 90,300 300,360 360,810
in terms of difficulty.|
|

1237
00:41:08,660 --> 00:41:10,190
0,390 420,900 1050,1320 1320,1380 1380,1530
Right {}.| This is one
好的。|这是一个很酷的部分，

1238
00:41:10,190 --> 00:41:11,180
0,60 60,120 120,360 360,600 600,990
of the cool parts, correct|
|

1239
00:41:11,180 --> 00:41:12,410
0,270 270,360 360,810 840,960 960,1230
having a log of everything
有一个任何东西的日志，

1240
00:41:12,410 --> 00:41:13,340
0,180 180,300 300,510 510,690 690,930
that's in there,| like if
|如果你有一些确定性的，

1241
00:41:13,370 --> 00:41:14,870
0,180 180,420 420,570 570,960 960,1500
you have some deterministic,| if
|你可以对日志的内容计算任何确定性函数。

1242
00:41:14,900 --> 00:41:16,310
0,150 150,270 270,540 540,750 750,1410
you could compute any deterministic

1243
00:41:16,310 --> 00:41:17,510
0,330 330,630 630,720 720,1110 1110,1200
function over the content of

1244
00:41:17,510 --> 00:41:19,800
0,90 90,480 1170,1710
the log.| Right,
|好的，好的，

1245
00:41:19,950 --> 00:41:22,440
0,510 540,1080 1350,1830 1830,2310 2310,2490
okay,| {} so it would
|所以这将是一个确定性函数，

1246
00:41:22,440 --> 00:41:24,030
0,120 120,180 180,840 840,1200 1200,1590
be a deterministic function,| but
|但归根结底，

1247
00:41:24,030 --> 00:41:24,480
0,90 90,180 180,300 300,360 360,450
at the end of the

1248
00:41:24,480 --> 00:41:26,490
0,150 150,540 750,1230 1230,1620 1650,2010
day,| like if I like
|比如，如果我尝试发送少于 N 个零，

1249
00:41:26,520 --> 00:41:27,720
0,330 330,480 480,630 630,960 960,1200
try and get away with

1250
00:41:27,720 --> 00:41:30,210
0,330 420,900 900,1590 1590,1890 1890,2490
like sending less than N

1251
00:41:30,630 --> 00:41:34,410
0,390 390,1560 1770,2490 2610,3000 3000,3780
like zeros,| then each individual
|然后网络中的每个节点都会把我赶出来。

1252
00:41:34,410 --> 00:41:35,820
0,330 330,450 450,540 540,1140 1140,1410
node in the network should

1253
00:41:35,820 --> 00:41:37,140
0,180 180,360 360,870 930,1200 1200,1320
call me out.| Yeah, they
|是的，它们会拒绝你的解决方案，

1254
00:41:37,140 --> 00:41:38,460
0,120 120,420 420,510 510,990 1050,1320
will reject your solution,| because
|因为你没有真正的解决方案。

1255
00:41:38,460 --> 00:41:39,360
0,120 120,570 570,690 690,750 750,900
you don't have a real

1256
00:41:39,360 --> 00:41:40,240
0,450
solution.|
|

1257
00:41:40,710 --> 00:41:43,650
0,570 840,1350 2070,2310 2310,2520 2520,2940
Okay, thanks.| So what stops
好的，谢谢。|那么，是什么阻止攻击者

1258
00:41:43,650 --> 00:41:45,660
0,240 240,990 990,1200 1200,1470 1470,2010
an attacker| from just constantly
|不断地向网络发送错误的解决方案？

1259
00:41:45,660 --> 00:41:47,040
0,390 390,480 480,870 870,1080 1080,1380
flooding the network with wrong

1260
00:41:47,040 --> 00:41:48,440
0,930
solutions?|
|

1261
00:41:48,500 --> 00:41:50,030
0,360 360,630 630,930 930,1140 1140,1530
{} Yeah, denial service attack|
是的，拒绝服务攻击，|

1262
00:41:50,060 --> 00:41:51,470
0,150 150,720 720,1080 1080,1290 1290,1410
and hopefully {} one of
幸运地是检查解决方案非常容易，

1263
00:41:51,470 --> 00:41:53,390
0,1080 1080,1260 1260,1350 1350,1620 1620,1920
the, turns out that checking

1264
00:41:53,390 --> 00:41:54,500
0,90 90,390 390,480 480,780 780,1110
the solution is very easy,

1265
00:41:55,250 --> 00:41:56,570
0,420 450,720 720,900 900,1050 1050,1320
right,| and so it's easy
|所以，很容易迅速拒绝一个不正确的解决方案。

1266
00:41:56,570 --> 00:41:58,280
0,240 240,600 600,1110 1140,1320 1320,1710
to quickly reject an incorrect

1267
00:41:58,280 --> 00:41:59,340
0,450
solution.|
|

1268
00:42:01,370 --> 00:42:02,440
0,240 240,480
Thank you.|
谢谢。|

1269
00:42:02,620 --> 00:42:03,760
0,240 240,540 540,810 810,930 930,1140
And how, how are the
如何确定时间戳，

1270
00:42:03,760 --> 00:42:05,920
0,330 330,780 780,1170 1170,1650 1920,2160
{timestamps -} determined [],| like
|比如每个块设置自己的时间戳。

1271
00:42:05,920 --> 00:42:07,150
0,150 150,330 330,810 870,1170 1170,1230
does each block set the

1272
00:42:07,150 --> 00:42:09,820
0,270 270,750 780,1680 2280,2460 2460,2670
{timestamp -} {on,its,own}.| Yeah, the
|是的，成功开采的矿工在块中设置时间戳。

1273
00:42:09,820 --> 00:42:12,130
0,390 390,510 510,960 960,1320 1320,2310
miner that successful mines {sets,timestamp}

1274
00:42:12,130 --> 00:42:14,000
0,120 120,540 870,1350
in the block.|
|

1275
00:42:14,660 --> 00:42:15,830
0,150 150,300 300,420 420,570 570,1170
And what if they just
如果他们将时间戳设置为比所用时间更长的时间，

1276
00:42:15,830 --> 00:42:16,970
0,240 240,330 330,630 630,990 990,1140
set the {timestamp -} to

1277
00:42:16,970 --> 00:42:19,760
0,1020 1140,1710 1770,2310 2310,2550 2550,2790
be like longer than it

1278
00:42:19,940 --> 00:42:21,680
0,600 780,990 990,1260 1260,1350 1350,1740
took,| so that it becomes
|这样就不那么困难了。

1279
00:42:21,680 --> 00:42:22,940
0,180 180,570 570,900 900,1110 1110,1260
less difficult.| It can't lie
|它不能说谎太多，

1280
00:42:22,940 --> 00:42:24,020
0,150 150,450 450,810 810,930 930,1080
too much, correct,| they have
|他们有 10 分钟的时间，

1281
00:42:24,020 --> 00:42:25,010
0,60 60,240 240,480 480,870 870,990
a ten minute window,| so
|所以粗略地说，

1282
00:42:25,010 --> 00:42:26,630
0,480 480,750 750,1110 1110,1440 1440,1620
roughly to [],| I don't
|我不知道时间戳是如何检查的，

1283
00:42:26,630 --> 00:42:27,560
0,180 180,330 330,750 750,870 870,930
really know exactly how the

1284
00:42:27,560 --> 00:42:28,580
0,210 210,390 390,480 480,870 930,1020
{timestamp -} is check, {}|
|

1285
00:42:28,580 --> 00:42:30,000
0,0 0,480 480,720
I don't know,
我不知道，也许可以想象这是可以解决的。

1286
00:42:31,090 --> 00:42:33,380
0,240 240,660 660,840 840,1710
might imagine this solvable.|
|

1287
00:42:36,080 --> 00:42:38,450
0,660 660,1170 1170,1530 1530,1650 1650,2370
Peers get to the transactions
获得交易的节点想要附加到块中。

1288
00:42:38,450 --> 00:42:39,830
0,270 300,630 630,750 750,930 930,1380
that want to be appended

1289
00:42:39,830 --> 00:42:43,360
0,120 120,240 240,870 2610,3000
to the block.| {Thank,you\,,that's,the,next,line}.|
|谢谢，这是下一行。|

1290
00:42:44,560 --> 00:42:45,860
0,720
So,
所以，所以块和交易，

1291
00:42:45,860 --> 00:42:47,680
0,150 150,510 510,600 600,1290
so blocks and transactions,|
|

1292
00:42:57,310 --> 00:42:58,540
0,330 330,480 480,630 630,1020 1020,1230
{} so let's assume like
所以让我们假设有一些

1293
00:42:58,540 --> 00:43:00,130
0,210 210,630 720,870 870,1200 1260,1590
there's some| you know one
|B5 被计算出来了，

1294
00:43:00,130 --> 00:43:01,660
0,210 210,870 900,1080 1080,1380 1380,1530
{B5 -} that already has

1295
00:43:01,660 --> 00:43:03,310
0,90 90,750 750,870 870,1170 1170,1650
been computed,| you know that's
|在日志中的，指向 B4 ，

1296
00:43:03,310 --> 00:43:04,360
0,120 120,210 210,780 780,900 900,1050
in the log you know

1297
00:43:04,360 --> 00:43:06,610
0,330 330,570 570,780 960,1500 1560,2250
points whatever to {B4 -},|
|

1298
00:43:07,940 --> 00:43:09,470
0,300 300,690 690,900 900,960 960,1530
and so we're a miner,|
我们是一个矿工，|我们工作在，

1299
00:43:09,500 --> 00:43:11,810
0,450 450,630 630,1050 1050,1680 2190,2310
{} we're working on| you
|我们有一个区块，

1300
00:43:11,810 --> 00:43:12,920
0,90 90,210 210,450 450,720 720,1110
know we got a block

1301
00:43:12,920 --> 00:43:15,500
0,600 930,1140 1140,1380 1380,1800 2010,2580
with,| {you,know} that {is,sort,of} reminding
|这是一种提醒，

1302
00:43:15,500 --> 00:43:16,820
0,360 360,750 780,960 960,1140 1140,1320
on,| so it has a
|所以它有一些交易，

1303
00:43:17,520 --> 00:43:20,820
0,150 150,1200 1200,1770 2100,2820 2850,3300
{bunch,of} transactions,| and {} we're
|我们试着计算这个难题的答案，

1304
00:43:20,820 --> 00:43:21,990
0,720 720,780 780,870 870,1110 1110,1170
basically you know trying to

1305
00:43:21,990 --> 00:43:23,610
0,450 480,570 570,780 780,1140 1170,1620
compute you know the solution

1306
00:43:23,610 --> 00:43:24,930
0,90 90,240 240,750 1050,1200 1200,1320
to this puzzle,| and so
|所以新的交易来了，

1307
00:43:24,930 --> 00:43:26,610
0,210 210,720 720,1110 1200,1560 1560,1680
new transactions coming, right,| you
|它们到了，

1308
00:43:26,610 --> 00:43:28,020
0,120 120,240 240,780
know they arrived,|
|

1309
00:43:28,450 --> 00:43:29,500
0,330 330,450 450,540 540,690 690,1050
and so the new transaction
新的交易调用内存缓冲区，

1310
00:43:29,500 --> 00:43:31,540
0,90 90,540 1350,1710 1710,1740 1740,2040
is actually called a memory

1311
00:43:31,540 --> 00:43:33,160
0,270 270,600 600,1110 1260,1440 1440,1620
buffer,| {} buffer, you're going
|一个缓冲，你需要一些缓冲，

1312
00:43:33,160 --> 00:43:36,130
0,120 120,630 990,1530 1530,2280 2310,2970
some buffer,| {} and {}
|它们会到下一个区块，

1313
00:43:36,160 --> 00:43:38,350
0,630 630,810 810,990 990,1230 1260,2190
basically they're going to when

1314
00:43:38,350 --> 00:43:40,720
0,60 60,330 330,780 840,2070 2100,2370
the next block,| where going
|在某个时刻，

1315
00:43:40,720 --> 00:43:42,160
0,60 60,570 780,870 870,1020 1020,1440
to be at some point,|
|

1316
00:43:42,370 --> 00:43:43,360
0,270 270,660 660,720 720,840 840,990
this guy you know let's
这个人，假设这是一个矿工 i ，

1317
00:43:43,360 --> 00:43:44,500
0,120 120,300 300,360 360,600 600,1140
say this is one miner,

1318
00:43:44,890 --> 00:43:46,540
0,660
{miner,i},|
|

1319
00:43:46,850 --> 00:43:48,620
0,630 930,1230 1230,1380 1380,1530 1530,1770
alright, so let's see {miner,i}
好的，我们看到矿工 i 是幸运的，

1320
00:43:48,620 --> 00:43:49,730
0,300 300,390 390,600 600,960 990,1110
is the lucky one,| you
|矿工 i 计算出新的 B6 。

1321
00:43:49,730 --> 00:43:52,940
0,120 120,510 510,1980 2220,2760 2760,3210
know actually {} {miner,i} computes

1322
00:43:52,940 --> 00:43:54,410
0,120 120,240 240,600 660,1260 1260,1470
you know the new {B6

1323
00:43:54,410 --> 00:43:56,020
0,690
-}.|
|

1324
00:43:56,140 --> 00:43:57,070
0,120 120,270 270,360 360,480 480,930
And so at some point
在某个时刻， B6 ，

1325
00:43:57,070 --> 00:43:58,990
0,90 90,180 180,390 390,1200 1710,1920
you know {B6 -},| it's
|这是日志的新的下一个头部，

1326
00:43:58,990 --> 00:44:02,110
0,90 90,1770 1800,2550 2550,2880 2880,3120
the new next head of

1327
00:44:02,110 --> 00:44:04,270
0,90 90,870 900,1500 1500,1860 1860,2160
the log,| {you,know} which contains
|包含一堆交易，

1328
00:44:04,270 --> 00:44:06,040
0,60 60,210 210,270 270,960 1560,1770
a bunch of transactions,| and
|所以，当矿工 i 试着哈希，

1329
00:44:06,040 --> 00:44:07,090
0,120 120,720 720,810 810,900 900,1050
so while you know sort

1330
00:44:07,090 --> 00:44:08,080
0,120 120,480 480,630 630,780 780,990
of miner i was actually

1331
00:44:08,080 --> 00:44:09,340
0,180 180,330 330,900 930,1050 1050,1260
trying to hash| you know
|计算很多哈希才能解决这个难题，

1332
00:44:09,340 --> 00:44:11,200
0,960 1020,1380 1380,1440 1440,1710 1710,1860
{} computing to many many

1333
00:44:11,200 --> 00:44:12,640
0,240 240,750 750,1140 1140,1380 1380,1440
many hashes {to,actually} solves the

1334
00:44:12,640 --> 00:44:14,410
0,510 570,810 810,1230 1230,1410 1410,1770
puzzle,| new transactions come in,|
|新的交易进来，|

1335
00:44:14,650 --> 00:44:17,230
0,210 210,720 720,1320 1320,2100 2130,2580
so soon as a {miner,i}
在矿工 i 完成 B6 时，

1336
00:44:17,230 --> 00:44:19,150
0,240 240,930 930,1200 1200,1350 1350,1920
is done with {B6 -},|
|

1337
00:44:19,210 --> 00:44:20,740
0,540 540,660 660,960 960,1410 1410,1530
{} it basically selects you
它选择交易数量，

1338
00:44:20,740 --> 00:44:22,330
0,240 240,420 420,660 660,750 750,1590
know the number of transactions,|
|

1339
00:44:22,390 --> 00:44:23,830
0,360 360,390 390,630 630,960 960,1440
puts a new block together,
将一个新的块放在一起，部分块，

1340
00:44:23,860 --> 00:44:25,330
0,120 120,450 450,900 930,1230 1230,1470
a partial block,| it's not
|这还不是那个解决的问题，

1341
00:44:25,330 --> 00:44:26,140
0,90 90,300 300,420 420,510 510,810
the one that is solved

1342
00:44:26,140 --> 00:44:26,820
0,330
yet,|
|

1343
00:44:27,650 --> 00:44:29,300
0,510 510,750 750,1020 1020,1110 1110,1650
transactions in from the [pool],|
来自[池]的交易，|

1344
00:44:29,690 --> 00:44:31,700
0,600 600,660 660,990 990,1590 1590,2010
{} {you,know} whatever updates, whatever
更新，无论[]需要更新，

1345
00:44:31,700 --> 00:44:33,080
0,630 630,780 780,840 840,930 930,1380
[] needs to be updated,|
|

1346
00:44:33,080 --> 00:44:34,070
0,120 120,240 240,540 540,930 930,990
and then starts hashing on
然后对这个进行哈希并希望解决它，

1347
00:44:34,070 --> 00:44:36,260
0,240 240,420 510,1080 1290,2070 2070,2190
that one and hoping to

1348
00:44:36,260 --> 00:44:37,490
0,330 330,420 420,690 690,1050 1050,1230
solve it,| so that can
|所以，可以在之后的某个时间将其添加到交易日志中。

1349
00:44:37,490 --> 00:44:39,080
0,180 180,480 480,930 930,1140 1140,1590
be added to the transaction

1350
00:44:39,080 --> 00:44:40,070
0,240 240,330 330,480 480,690 690,990
log at some point later,|
|

1351
00:44:40,070 --> 00:44:41,440
0,240 240,300 300,960
if it succeeds.|
如果它成功了。|

1352
00:44:41,760 --> 00:44:43,080
0,120 120,360 360,450 450,810 810,1320
Of course, if somebody else
当然，如果其他人在矿工 i 之前成功解决了 B7 ，

1353
00:44:43,200 --> 00:44:45,900
0,570 570,630 630,1110 1110,2220 2310,2700
succeeds in solving the producing

1354
00:44:45,900 --> 00:44:47,670
0,180 180,600 600,750 750,1290 1320,1770
{B7 -} {before -} miner

1355
00:44:47,670 --> 00:44:49,080
0,480 570,750 750,1080 1080,1290 1290,1410
i,| {you,know} miner i gonna
|矿工 i 将转向 B7 ，

1356
00:44:49,080 --> 00:44:50,550
0,390 390,570 570,690 690,960 960,1470
switch {you,know} to the B7,|
|

1357
00:44:50,670 --> 00:44:53,280
0,240 240,780 930,1620 1620,1800 1800,2610
that block remove any transactions
那个块删除已在 B7 中结束所有交易，

1358
00:44:53,310 --> 00:44:54,930
0,450 450,720 720,1020 1020,1200 1200,1620
that {} ended up already

1359
00:44:54,930 --> 00:44:56,490
0,90 90,270 270,750 840,960 960,1560
in {B7 -},| and continues
|并继续处理剩下的，还不在 B7 中的交易。

1360
00:44:56,490 --> 00:44:57,450
0,210 210,300 300,780 780,870 870,960
with the transactions that are

1361
00:44:57,450 --> 00:44:58,440
0,360 360,570 570,660 660,900 900,990
left and are not in

1362
00:44:58,440 --> 00:44:59,540
0,120 120,420 420,690
{B7 -} yet.|
|

1363
00:45:01,170 --> 00:45:01,950
0,330 330,390 390,540 540,690 690,780
{Okay -}, that sort of
好的，这就是方案，

1364
00:45:01,950 --> 00:45:03,260
0,660
the

1365
00:45:03,560 --> 00:45:06,110
0,630 810,1560 1560,2010 2040,2460 2460,2550
plan| for how exactly the
|关于各个区块如何交互的，在高级别上。

1366
00:45:06,110 --> 00:45:07,980
0,570 570,750 750,1380
blocks {interact -}

1367
00:45:08,950 --> 00:45:10,300
0,180 180,210 210,360 360,780
at a high level.|
|

1368
00:45:12,470 --> 00:45:15,340
0,720 720,1020 1020,1260 1260,2370
So as as transactions
所以，随着交易的到来，

1369
00:45:15,340 --> 00:45:18,640
0,600 630,1080 1080,1380 1710,2640 3150,3300
{} coming in,| like you
|试着计算区块的 nonce ，

1370
00:45:18,640 --> 00:45:19,900
0,150 150,600 600,690 690,1170 1170,1260
know trying to calculate the

1371
00:45:19,900 --> 00:45:21,580
0,390 390,600 600,1290
nonce for block,|
|

1372
00:45:21,580 --> 00:45:23,080
0,240 240,510 510,960 960,1290 1290,1500
{} that will like give
这会给你 N 个前导零，

1373
00:45:23,080 --> 00:45:25,570
0,600 930,1230 1230,1470 1470,1710 1710,2490
you know N leading zeros,|
|

1374
00:45:25,810 --> 00:45:28,630
0,1500 1500,2220 2220,2370 2370,2610 2610,2820
new transactions will come in,
新的交易会进来。

1375
00:45:28,630 --> 00:45:30,340
0,390 390,930 1020,1200 1200,1530 1530,1710
right.| As they [], they're
|因为它们[]，不是那个区块的一部分，

1376
00:45:30,340 --> 00:45:31,390
0,240 240,420 420,480 480,630 630,1050
not part of that block,|
|

1377
00:45:31,420 --> 00:45:32,110
0,180 180,300 300,360 360,450 450,690
they're going to be sitting
它们将在旁边，它们是下一个区块的。

1378
00:45:32,110 --> 00:45:33,130
0,180 180,240 240,660 660,930 930,1020
on the side, {they're,for} the

1379
00:45:33,130 --> 00:45:34,220
0,210 210,600
next block.|
|

1380
00:45:34,250 --> 00:45:35,420
0,600
Okay.|
好的。|

1381
00:45:36,210 --> 00:45:38,700
0,480 480,930 1260,1560 1560,1770 1770,2490
Could you could you add,
你能不能把它们加到。

1382
00:45:39,330 --> 00:45:40,680
0,300 300,450 450,690 690,1170 1200,1350
could you add them to

1383
00:45:40,680 --> 00:45:42,030
0,180 180,480 480,750 750,840 840,1350
the.| {That,would} change the hash.|
|那会改变哈希值。|

1384
00:45:43,040 --> 00:45:45,920
0,540 570,1350 1380,1500 1500,2160 2610,2880
Right, but I mean,| you
是的，但我的意思是，|你只需要继续获取一个 nonce 。

1385
00:45:45,920 --> 00:45:47,090
0,240 240,420 420,480 480,900 900,1170
just need to keep trying

1386
00:45:47,090 --> 00:45:48,710
0,120 120,420 420,600 600,1050 1050,1620
to get like a nonce,

1387
00:45:48,710 --> 00:45:49,940
0,210 210,600 690,870 870,1050 1050,1230
right.| But you also have
|但你也有块大小的限制，

1388
00:45:49,940 --> 00:45:50,990
0,360 360,600 600,690 690,750 750,1050
a limit on the block

1389
00:45:50,990 --> 00:45:52,550
0,510 810,1110 1110,1290 1290,1470 1470,1560
size,| {you,know,block} size can't be
|区块大小不能大于，

1390
00:45:52,550 --> 00:45:53,780
0,240 240,360 360,570 570,690 690,1230
bigger than one of {},|
|

1391
00:45:53,780 --> 00:45:55,910
0,210 210,600 630,1230 1260,1740 1740,2130
one some particular predefined constant
协议规定的某个预定义常量，

1392
00:45:55,910 --> 00:45:57,950
0,120 120,180 180,900 1200,1890 1890,2040
by the protocol,| {} yeah
|是的，还有一堆其他原因，

1393
00:45:57,950 --> 00:45:58,940
0,210 210,270 270,450 450,540 540,990
there's a bunch of other

1394
00:45:59,000 --> 00:46:00,050
0,600 600,690 690,780 780,960 960,1050
reasons| you know once you
|一旦[]交易的区块，

1395
00:46:00,050 --> 00:46:00,980
0,180 180,390 390,750 750,810 810,930
[] the block you know

1396
00:46:00,980 --> 00:46:02,450
0,150 150,270 270,780 780,1230 1230,1470
with your transactions,| you you
|你继续计算哈希，直到你找到解决方案。

1397
00:46:02,450 --> 00:46:04,430
0,180 180,510 510,960 960,1530 1680,1980
keep going hashing until you

1398
00:46:04,430 --> 00:46:05,580
0,210 210,300 300,750
find the solution.|
|

1399
00:46:05,670 --> 00:46:06,800
0,540
Okay.|
好的。|

1400
00:46:07,130 --> 00:46:09,290
0,360 360,540 540,690 690,1290 1560,2160
Or, or you get. {}|
或者你会得到。|

1401
00:46:09,290 --> 00:46:10,160
0,240 240,420 420,690 690,720 720,870
Or you receive a new
或者你收到一个新的，然后你拒绝，

1402
00:46:10,160 --> 00:46:11,150
0,270 270,390 390,480 480,570 570,990
one and then you reject,|
|

1403
00:46:11,150 --> 00:46:13,700
0,120 120,270 270,480 480,570 570,2550
you go work on {the,next,one}.|
继续去做下一个。|

1404
00:46:15,020 --> 00:46:16,280
0,510
{Okay\,,thanks}.|
好的，谢谢。|

1405
00:46:16,340 --> 00:46:18,800
0,360 360,1050 1170,1530 1530,2130 2160,2460
So when when someone when
所以当矿工输了的时候，

1406
00:46:18,800 --> 00:46:21,200
0,90 90,480 480,1410 1590,2160 2190,2400
a miner loses,| and do
|他们是不是，

1407
00:46:21,200 --> 00:46:22,420
0,180 180,540
they like,|
|

1408
00:46:22,480 --> 00:46:23,470
0,150 150,240 240,390 390,840 840,990
like is it possible for
比如矿工永远不会从中获利，

1409
00:46:23,470 --> 00:46:24,280
0,30 30,270 270,330 330,690 690,810
a {miner -} never to

1410
00:46:24,280 --> 00:46:25,660
0,240 240,840 870,1080 1080,1200 1200,1380
make profit out of this,|
|

1411
00:46:25,660 --> 00:46:27,550
0,360 360,510 510,870 870,1650 1650,1890
because they keep losing,| because
因为他们一直在输，|因为他们没有足够的计算。

1412
00:46:27,550 --> 00:46:29,920
0,150 150,450 480,840 870,1710 1770,2370
they {don't,have} {enough,computes}.| Yeah, absolutely,|
|是的，当然，|

1413
00:46:29,920 --> 00:46:31,780
0,540 1020,1320 1320,1500 1500,1650 1650,1860
if if I would start
如果我开始用我的笔记本电脑挖矿，

1414
00:46:31,780 --> 00:46:32,890
0,270 270,390 390,510 510,1020 1020,1110
mining with my laptop,| I'm
|我很肯定它不会赚到钱。

1415
00:46:32,890 --> 00:46:33,580
0,210 210,390 390,450 450,540 540,690
pretty sure it would make

1416
00:46:33,580 --> 00:46:34,640
0,150 150,480
no money.|
|

1417
00:46:37,100 --> 00:46:38,510
0,240 240,330 330,960 960,1290 1290,1410
And the transaction pool, it
交易池，它是本地的吗？

1418
00:46:38,510 --> 00:46:40,840
0,540 570,1770
is local?|
|

1419
00:46:41,100 --> 00:46:43,350
0,390 390,1020 1020,1440 1440,1860 1890,2250
Yeah, every every node maintains
是的，每个节点都维护着一个交易池，

1420
00:46:43,350 --> 00:46:45,090
0,240 240,660 660,1080 1080,1530 1530,1740
{} a transaction pool,| as
|当它们从网络中的其他节点接收交易时，

1421
00:46:45,090 --> 00:46:48,540
0,150 150,510 510,1080 1080,1560 1560,3450
they receive transactions from {}

1422
00:46:48,930 --> 00:46:49,950
0,240 240,420 420,840 840,960 960,1020
from other nodes in the

1423
00:46:49,950 --> 00:46:51,300
0,510 510,630 630,750 750,1110 1110,1350
network,| you know the the
|交易池，

1424
00:46:51,360 --> 00:46:53,070
0,540 540,840 840,1140 1140,1500 1500,1710
transaction pool| and they use
|他们使用交易池来使下一个区块失败。

1425
00:46:53,070 --> 00:46:55,020
0,240 240,720 720,1320 1320,1650 1650,1950
that {transaction,pool} basically to fail

1426
00:46:55,020 --> 00:46:56,280
0,90 90,300 300,780
the next block.|
|

1427
00:46:57,430 --> 00:46:58,630
0,360 360,780 780,930 930,1110 1110,1200
So.| And all kinds of
所以。|以及各种各样的规则，

1428
00:46:58,630 --> 00:46:59,980
0,600 600,690 690,750 750,1110 1110,1350
rules,| you know like how
|比如你如何选择交易，

1429
00:46:59,980 --> 00:47:01,690
0,90 90,330 330,630 630,1410 1500,1710
you choose select transactions,| which
|我不打算谈论这一点。

1430
00:47:01,690 --> 00:47:02,620
0,90 90,300 300,360 360,570 570,930
I'm {not,going} to talk about.|
|

1431
00:47:02,890 --> 00:47:04,600
0,660 1080,1290 1290,1410 1410,1500 1500,1710
Okay, so to {append -},
好的，所以要追加，你需要把你的交易告诉每个人。

1432
00:47:04,600 --> 00:47:05,350
0,90 90,240 240,330 330,600 600,750
you need to tell your

1433
00:47:05,350 --> 00:47:07,140
0,510 510,660 660,1290
transaction to everyone.|
|

1434
00:47:07,780 --> 00:47:10,420
0,600 1020,1620 1620,1950 1950,2460 2460,2640
Yes, {} or you tell
是的，或者你告诉一群节点，

1435
00:47:10,420 --> 00:47:11,260
0,90 90,180 180,360 360,450 450,840
to a bunch of peers|
|

1436
00:47:11,260 --> 00:47:12,460
0,120 120,480 480,720 720,1050 1050,1200
and they will {flood,it} for
它们会把它传播给其他节点，

1437
00:47:12,460 --> 00:47:13,510
0,60 60,330 330,420 420,630 750,1050
the rest of you| to
|到网络的其余部分。

1438
00:47:13,510 --> 00:47:14,380
0,90 90,270 270,330 330,390 390,870
the rest of the network.|
|

1439
00:47:18,100 --> 00:47:20,080
0,270 270,450 450,720 720,1410 1410,1980
So for my understanding,| when
所以，根据我的理解，|当一名矿工成功挖掘或核实一笔交易时，他们会得到奖励。

1440
00:47:20,080 --> 00:47:23,320
0,90 90,720 780,1920 1950,2610 2610,3240
a miner successfully mines or

1441
00:47:23,350 --> 00:47:25,840
0,660 660,810 810,1500 1710,1980 1980,2490
verifies a transaction, {} they

1442
00:47:25,840 --> 00:47:28,660
0,1110 1140,1800 1920,2520 2550,2670 2670,2820
get rewarded.| Yeah.| They did
|是的。|他们做了这个核实，

1443
00:47:28,660 --> 00:47:31,300
0,480 480,840 870,1620 1680,2220 2220,2640
this {} verification,| but they
|但当涉及到时间戳时，他们也可以撒谎，

1444
00:47:31,300 --> 00:47:32,650
0,150 150,600 600,1050 1050,1230 1230,1350
can also lie when it

1445
00:47:32,650 --> 00:47:33,580
0,180 180,270 270,330 330,600 600,930
comes to the {timestamp -},|
|

1446
00:47:33,670 --> 00:47:34,480
0,180 180,420 420,570 570,720 720,810
so let's say that you
假设你有两个验证者，

1447
00:47:34,480 --> 00:47:35,710
0,240 240,450 450,870 870,1080 1080,1230
have two {verifiers -}| and
|并且它们都在同一块上工作，

1448
00:47:35,710 --> 00:47:36,640
0,120 120,420 420,720 720,870 870,930
they're both working on the

1449
00:47:36,640 --> 00:47:38,410
0,210 210,600 810,960 960,1080 1080,1770
same block,| and they almost
|而且它们几乎同时核实，

1450
00:47:38,410 --> 00:47:40,720
0,1140 1170,1800 1800,1980 1980,2070 2070,2310
simultaneously verified at the same

1451
00:47:40,720 --> 00:47:42,400
0,240 420,900 900,1110 1110,1200 1200,1680
time,| but one of them
|但其中一个，它们撒谎了，

1452
00:47:42,400 --> 00:47:44,140
0,750 750,900 900,1050 1050,1350 1380,1740
was {} you know they

1453
00:47:44,140 --> 00:47:45,310
0,570 630,810 810,900 900,1110 1110,1170
lied,| and they made the
|它们把时间戳做得更早了一点，

1454
00:47:45,310 --> 00:47:47,440
0,240 240,870 900,1050 1050,1320 1350,2130
{timestamp -} a bit earlier,|
|

1455
00:47:47,620 --> 00:47:50,380
0,330 330,570 570,780 780,870 870,2760
{} so kind of the.|
所以有点像。|

1456
00:47:50,380 --> 00:47:51,730
0,330 330,810 810,1140 1140,1290 1290,1350
The difficulties [] for a
困难[]一段时间，

1457
00:47:51,730 --> 00:47:52,840
0,270 270,360 360,750
period of time,|
|

1458
00:47:52,870 --> 00:47:53,800
0,240 240,330 330,420 420,720 720,930
like for the next like
比如在接下来的二十年里，

1459
00:47:53,800 --> 00:47:54,910
0,510 510,660 660,720 720,930 930,1110
twenty as a whole bunch

1460
00:47:54,910 --> 00:47:55,930
0,60 60,390 390,660 660,780 780,1020
of years {},| it only
|它只会周期性地变化，

1461
00:47:55,930 --> 00:47:58,180
0,420 420,1110 1530,1800 1800,2070 2070,2250
changes periodically,| you can't change
|你不能随意改变它。

1462
00:47:58,180 --> 00:47:59,500
0,120 120,750
it arbitrarily.|
|

1463
00:47:59,880 --> 00:48:01,230
0,240 240,480 480,840 840,1200 1230,1350
So was that, {} I'm
所以是什么，抱歉，我想我错过了这句话。

1464
00:48:01,230 --> 00:48:01,980
0,210 210,360 360,510 510,540 540,750
sorry, I think I missed

1465
00:48:01,980 --> 00:48:04,500
0,150 150,480 840,1290 1530,2400 2400,2520
that line.| The difficulty is
|难度并不是在每个区块改变，

1466
00:48:04,500 --> 00:48:06,480
0,270 270,840 840,1140 1140,1410 1410,1980
not changed on every block,|
|

1467
00:48:06,900 --> 00:48:09,270
0,300 300,870 870,1560 1560,2100 2100,2370
it is periodically changed| after
它会定期更改，|在一定数量的区块计算出来之后。

1468
00:48:09,270 --> 00:48:10,620
0,240 240,600 600,750 750,930 930,1350
some number of {you,know} blocks

1469
00:48:10,620 --> 00:48:12,360
0,360 360,540 540,660 660,1230
{} have been computed.|
|

1470
00:48:12,480 --> 00:48:13,470
0,270 270,660 660,750 750,840 840,990
And so you know it's
所以它是在后面完成的，

1471
00:48:13,470 --> 00:48:14,370
0,210 210,300 300,360 360,810 810,900
done in the back,| you
|每个人都能看到这些时间戳是什么，

1472
00:48:14,370 --> 00:48:15,330
0,210 210,540 540,630 630,810 810,960
know everybody can see what

1473
00:48:15,330 --> 00:48:16,830
0,150 150,360 360,660 660,1230 1320,1500
these {timestamps -} are,| you
|我想每个[]有确切数量的区块，

1474
00:48:16,830 --> 00:48:18,780
0,360 360,660 660,780 780,1020 1020,1950
know every, I think every

1475
00:48:18,810 --> 00:48:20,070
0,570 570,660 660,750 750,1020 1020,1260
[] with the exact number

1476
00:48:20,070 --> 00:48:22,470
0,120 120,540 540,810 810,2010 2010,2400
of blocks were,| {} when
|当难度调整后。

1477
00:48:22,500 --> 00:48:24,270
0,420 420,600 600,690 690,1350 1350,1770
when {you,know} the difficulties {is,adjusted}.|
|

1478
00:48:25,140 --> 00:48:26,180
0,210 210,510
I see.|
我明白了。|

1479
00:48:27,970 --> 00:48:28,630
0,180 180,240 240,390 390,570 570,660
So at that point you
在这一点上，你已经同意了过去所有的区块，

1480
00:48:28,630 --> 00:48:29,800
0,240 240,750 750,840 840,990 990,1170
already agreed with all those

1481
00:48:29,800 --> 00:48:31,000
0,330 330,420 420,480 480,960 990,1200
blocks in the past,| so
|所以每个人都达成了一致，时间戳是什么，

1482
00:48:31,000 --> 00:48:32,110
0,330 330,450 450,840 840,960 960,1110
everybody's in {agreed,with -} like

1483
00:48:32,110 --> 00:48:33,460
0,210 210,750
what the

1484
00:48:33,460 --> 00:48:34,420
0,240 240,480 480,720 720,840 840,960
{timestamps -} are,| that we're
|我们用来计算一个新的合法的区块。

1485
00:48:34,420 --> 00:48:35,350
0,180 180,330 330,570 570,690 690,930
going to use to actually

1486
00:48:35,350 --> 00:48:37,390
0,240 240,270 270,510 510,1260 1440,2040
compute a new valid block.|
|

1487
00:48:39,530 --> 00:48:41,540
0,540 660,1020 1020,1230 1230,1530 1530,2010
{} So, so I I
所以，我有一个关于达成共识的问题，

1488
00:48:41,540 --> 00:48:45,650
0,540 690,1290 1320,1860 1860,2670 3030,4110
had a question about like

1489
00:48:45,680 --> 00:48:48,320
0,450 450,1080 1080,1470 1470,1950 2130,2640
achieving consensus,| I guess, like
|我想所有这一切都依赖于，

1490
00:48:48,380 --> 00:48:50,060
0,300 300,420 420,870 870,1530 1530,1680
all of this relies on

1491
00:48:50,060 --> 00:48:50,940
0,420
like,|
|

1492
00:48:50,970 --> 00:48:52,800
0,390 390,600 600,900 900,1380 1380,1830
pretty much every node running
几乎每个节点都运行相同的代码，

1493
00:48:52,800 --> 00:48:54,960
0,1020 1020,1350 1350,1650 1650,1950 1950,2160
the same code, right,| or
|或者至少非常精确地遵守规则，

1494
00:48:54,960 --> 00:48:57,210
0,150 150,330 330,720 720,1590 1620,2250
at least following the rules

1495
00:48:57,210 --> 00:48:59,910
0,480 480,780 780,1500 2340,2550 2550,2700
very, very precisely,| like what
|如果我的代码中有 bug ，会发生什么，

1496
00:48:59,910 --> 00:49:01,140
0,300 300,450 450,600 600,720 720,1230
happens, if there's a bug

1497
00:49:01,170 --> 00:49:02,430
0,360 360,510 510,1020 1080,1200 1200,1260
in my code,| and the
|我正在运行的代码，

1498
00:49:02,430 --> 00:49:04,710
0,210 210,330 330,450 450,900 1320,2280
code that I'm running,| you
|也许有一个 bug 在一堆不同的节点上，

1499
00:49:04,740 --> 00:49:06,420
0,480 480,870 870,1290 1290,1560 1560,1680
know maybe a bug in

1500
00:49:06,420 --> 00:49:07,530
0,210 210,300 300,660 660,780 780,1110
like a bunch of different

1501
00:49:07,530 --> 00:49:09,140
0,600
nodes,|
|

1502
00:49:09,590 --> 00:49:11,180
0,270 270,660 660,960 960,1200 1200,1590
does that [] off like,
这是不是抛出了一致性的概念。

1503
00:49:11,210 --> 00:49:12,860
0,450 450,660 660,1050 1080,1560 1560,1650
like all, like notions of

1504
00:49:12,860 --> 00:49:15,280
0,210 210,1140 1140,1860
like consistency potentially.|
|

1505
00:49:15,560 --> 00:49:17,720
0,360 360,630 630,1710 1710,1740 1830,2160
Well, yeah, {as -} long
是的，只要大多数人是，

1506
00:49:17,720 --> 00:49:18,830
0,90 90,330 330,810 810,990 990,1110
as a majority is,| we'll
|我们会更多地讨论这个问题，

1507
00:49:18,830 --> 00:49:19,550
0,150 150,180 180,360 360,510 510,720
talk a little bit more

1508
00:49:19,550 --> 00:49:21,200
0,270 270,420 420,1020 1020,1230 1230,1650
about it,| has a majority
|拥有大多数节点运行正确的代码，

1509
00:49:21,200 --> 00:49:22,370
0,60 60,150 150,510 510,840 870,1170
of the {nodes,actually} that runs

1510
00:49:22,370 --> 00:49:23,420
0,90 90,300 300,660 660,780 780,1050
the right code,| you {actually
|就能正常工作。

1511
00:49:23,420 --> 00:49:25,520
0,300 300,510 510,780 1020,1560
-} work out.| Right,
|但如果代码里有后门，

1512
00:49:26,010 --> 00:49:26,760
0,210 210,390 390,510 510,690 690,750
but like if there's a

1513
00:49:26,760 --> 00:49:29,010
0,660 660,840 840,1080 1080,1620 1620,2250
trapdoor in the code,| yeah,
|是的，你会遇到麻烦，

1514
00:49:29,010 --> 00:49:30,030
0,180 180,300 300,330 330,750 750,1020
you've got a problem,| like
|比如，如果 Linux 中有后门，那么你也会有问题。

1515
00:49:30,030 --> 00:49:31,230
0,120 120,270 270,360 360,810 810,1200
if there's a {trapdoor,in} Linux,

1516
00:49:31,230 --> 00:49:32,100
0,90 90,210 210,240 240,510 510,870
you got a problem too.|
|

1517
00:49:33,940 --> 00:49:36,010
0,480 660,1080 1080,1530 1560,1830 1830,2070
So, so do do, does
所以，每个节点运行相同的代码，或者是。

1518
00:49:36,010 --> 00:49:37,840
0,330 330,660 660,1200 1290,1680 1680,1830
every node run like the

1519
00:49:37,840 --> 00:49:40,060
0,240 240,660 660,1080 1260,1440 1440,2220
same code, or are.| There
|有几个不同的比特币版本，

1520
00:49:40,060 --> 00:49:41,500
0,60 60,390 390,660 660,1080 1080,1440
a couple different Bitcoin version

1521
00:49:41,500 --> 00:49:42,190
0,270 270,360 360,510 510,540 540,690
around,| we'll talk a little
|稍后我们会更详细地讨论，

1522
00:49:42,190 --> 00:49:42,910
0,120 120,300 300,540 540,660 660,720
bit more about in a

1523
00:49:42,910 --> 00:49:44,530
0,390 480,1050 1080,1200 1200,1320 1320,1620
second,| {} but there are
|但它们有一个主要的核心，

1524
00:49:44,530 --> 00:49:47,680
0,330 540,660 660,1320 1470,2190 3000,3150
{} the main core they're

1525
00:49:47,680 --> 00:49:48,820
0,420 420,510 510,690 690,810 810,1140
called,| you know and there
|有一个开源项目，

1526
00:49:48,820 --> 00:49:49,720
0,210 210,420 420,570 570,660 660,900
like it's like an open

1527
00:49:49,720 --> 00:49:51,850
0,240 240,750 750,1440 1470,1830 1830,2130
source project,| like Linux,| you
|像 Linux 一样，|它有维护者，代码审查和所有类似的事情。

1528
00:49:51,850 --> 00:49:53,320
0,150 150,330 330,540 540,1230 1230,1470
know it has maintainers and

1529
00:49:53,530 --> 00:49:54,970
0,360 360,600 600,1170 1170,1320 1320,1440
{you,know} code review and all

1530
00:49:54,970 --> 00:49:55,940
0,120 120,240 240,300 300,660
that kind of stuff.|
|

1531
00:49:56,860 --> 00:49:58,390
0,270 270,570 570,930 930,1020 1020,1530
And most of the wallets
而大多数钱包和大多数节点

1532
00:49:58,390 --> 00:50:00,610
0,120 120,360 360,450 450,1710 1770,2220
and most of the peers|
|

1533
00:50:00,610 --> 00:50:02,320
0,150 150,600 600,930 930,1020 1020,1710
will run one of the
都会运行其中一个标准化版本。

1534
00:50:02,320 --> 00:50:04,200
0,570 570,900 900,1320
standardized version basically.|
|

1535
00:50:04,560 --> 00:50:05,700
0,540
Thanks.|
谢谢。|

1536
00:50:11,070 --> 00:50:12,980
0,450 450,600 600,750 750,1320
{} {Okay -}, forks.|
好了， forks 。|

1537
00:50:13,740 --> 00:50:15,800
0,600 630,1200
So, {}
所以，我们现在知道规则是什么，

1538
00:50:16,080 --> 00:50:16,950
0,150 150,240 240,360 360,630 630,870
wo we know now what

1539
00:50:16,950 --> 00:50:17,760
0,60 60,330 330,600 600,720 720,810
the rule is,| you know
|谁可以扩展日志或链，

1540
00:50:17,760 --> 00:50:20,370
0,630 630,750 750,990 990,1620 1620,2610
who can actually extends a

1541
00:50:20,400 --> 00:50:22,710
0,750 930,1290 1290,1590 1590,1740 1740,2310
log {} or the chain

1542
00:50:22,710 --> 00:50:23,940
0,600 660,810 810,930 930,1140 1140,1230
[],| you can still have
|你也可以有分叉。

1543
00:50:23,940 --> 00:50:25,200
0,540
forks.|
|

1544
00:50:25,230 --> 00:50:27,960
0,510 540,990 990,1440 1440,2070
Okay, {here's,our,new} [] chain,
好的，这是我们新的链， B5 B6 ，

1545
00:50:27,990 --> 00:50:30,020
0,240 240,420 420,630 630,1500
{whatever -} {B5 -}

1546
00:50:30,110 --> 00:50:32,240
0,300 300,1050 1470,1920 1920,2010 2010,2130
{you,know,B6 -},| and you know
|我们，有人可能真的会很幸运，

1547
00:50:32,240 --> 00:50:33,650
0,390 390,480 480,600 600,1230 1230,1410
we you know somebody to

1548
00:50:33,650 --> 00:50:34,640
0,270 270,480 480,690 690,870 870,990
do may actually gets a

1549
00:50:34,640 --> 00:50:36,470
0,570 600,870 870,990 990,1380 1380,1830
lucky,| and so roughly computes
|几乎在同一时间计算出 B7 ，

1550
00:50:36,470 --> 00:50:38,000
0,210 210,390 390,990 1140,1350 1350,1530
{you,know} {B7 -}, two {B7

1551
00:50:38,000 --> 00:50:39,020
0,270 270,420 420,480 480,720 720,1020
-} at the same time,|
|

1552
00:50:39,050 --> 00:50:40,640
0,360 690,990 990,1140 1140,1290 1290,1590
so you're gonna {B7' -
所以你有 B7' ，

1553
00:50:40,640 --> 00:50:41,740
0,600
-},|
|

1554
00:50:41,770 --> 00:50:42,670
0,300 300,450 450,540 540,690 690,900
and here we got {B7''
我们这里有 B7'' ，

1555
00:50:42,670 --> 00:50:44,280
0,240 240,510 510,840
- - -},|
|

1556
00:50:45,910 --> 00:50:48,070
0,570 810,1080 1080,1170 1170,1560 1590,2160
{} that would be problematic
这对我们来说是有问题的，

1557
00:50:48,070 --> 00:50:49,390
0,150 150,300 300,510 510,810 810,1320
for us, right,| because maybe
|因为这条链中可能有一条交易，

1558
00:50:49,390 --> 00:50:51,280
0,270 270,360 360,810 810,1320 1320,1890
one of these this chain

1559
00:50:51,670 --> 00:50:53,470
0,810 810,900 900,1560 1560,1650 1650,1800
has the transaction| you know
|从 y 到 z ，

1560
00:50:53,470 --> 00:50:56,170
0,690 900,1770 1770,2130 2130,2580 2580,2700
the y to whatever y

1561
00:50:56,170 --> 00:50:57,580
0,240 240,360 360,810
to {z -},|
|

1562
00:50:57,950 --> 00:50:59,180
0,360 360,690 690,810 810,1020 1020,1230
yeah, maybe this one has
也许这个是 y 到 Q ，

1563
00:50:59,180 --> 00:51:00,920
0,180 180,420 420,690 690,1020
{you,know} y to Q,|
|

1564
00:51:02,400 --> 00:51:03,570
0,720 720,810 810,990 990,1080 1080,1170
when we were on a
我们在某种程度上确定，

1565
00:51:03,570 --> 00:51:04,440
0,150 150,210 210,630 630,750 750,870
sort of {make,sure},| that we
|我们会位于一条链上。

1566
00:51:04,440 --> 00:51:05,460
0,270 270,630 630,720 720,840 840,1020
actually settle in the end

1567
00:51:05,460 --> 00:51:06,720
0,90 90,300 300,660
of one chain.|
|

1568
00:51:07,080 --> 00:51:08,410
0,150 150,420 420,540 540,870 870,1230
So there's two reasons why
这一变化可能会[]的原因有两个，

1569
00:51:08,410 --> 00:51:10,300
0,180 180,480 480,690 690,1260 1710,1890
this change might [],| {you,know}
|一个是参与者找到，

1570
00:51:10,300 --> 00:51:12,660
0,540 570,1050 1050,1770
one is {you,know}

1571
00:51:12,690 --> 00:51:16,500
0,690 690,990 1260,1710 1710,1950 1950,3810
people are participants find the,|
|

1572
00:51:17,140 --> 00:51:18,010
0,270 270,360 360,690 690,780 780,870
find the nonce at the
同时找到了 nonce ，

1573
00:51:18,010 --> 00:51:19,440
0,210 210,690
same time|
|

1574
00:51:22,510 --> 00:51:23,410
0,180 180,480 480,570 570,660 660,900
or roughly at the same
或者大致在同一时间，

1575
00:51:23,410 --> 00:51:24,440
0,480
time,|
|

1576
00:51:24,440 --> 00:51:25,670
0,330 330,420 420,720 720,990 990,1230
and the second one is
第二个是，

1577
00:51:25,670 --> 00:51:26,780
0,330 330,840 840,960 960,1080 1080,1110
that,| there may be {}
|可能存在速度较慢的网络，

1578
00:51:26,780 --> 00:51:29,580
0,240 240,780
slow networks,|
|

1579
00:51:30,940 --> 00:51:32,500
0,210 210,660 660,870 870,1140 1140,1560
and so you know {a,peer}
一个节点可能会从两个节点接收，

1580
00:51:32,500 --> 00:51:34,120
0,330 330,1020 1050,1140 1140,1290 1290,1620
might receive you know from

1581
00:51:34,120 --> 00:51:35,800
0,600 720,1170 1170,1350 1350,1380 1380,1680
two nodes| that are different
|从不同的网络上，

1582
00:51:35,800 --> 00:51:36,520
0,120 120,210 210,360 360,420 420,720
{you,know - -} {network -},|
|

1583
00:51:36,520 --> 00:51:37,390
0,120 120,270 270,510 510,690 690,870
at some point, these two
在某一点上，有两个新的解决方案，

1584
00:51:37,390 --> 00:51:38,780
0,210 210,960
new solutions,|
|

1585
00:51:39,080 --> 00:51:41,750
0,570 1020,1620 1770,2460 2460,2580 2580,2670
{} and basically you know
当一个节点在这种情况下结束时，

1586
00:51:41,750 --> 00:51:42,860
0,390 390,510 510,780 780,960 960,1110
when a node ends up

1587
00:51:42,860 --> 00:51:44,390
0,90 90,210 210,870 900,1320 1320,1530
in this situation,| basically does
|什么都不做，

1588
00:51:44,390 --> 00:51:46,160
0,330 510,990 990,1320 1320,1470 1470,1770
nothing,| {as,usual}, keeps the fork
|像往常一样，继续保留 fork ，

1589
00:51:46,160 --> 00:51:48,110
0,480 750,1020 1020,1200 1200,1770 1800,1950
around,| and just waits to
|等待那个 fork 会扩展，

1590
00:51:48,110 --> 00:51:50,600
0,330 330,600 600,1110 1110,1800 2190,2490
see which {fork,get} extended,| and
|也许这个会工作，

1591
00:51:50,600 --> 00:51:51,620
0,330 330,390 390,510 510,810 810,1020
so you know maybe this

1592
00:51:51,620 --> 00:51:53,240
0,330 330,390 390,660 660,1350 1350,1620
work,| the bottom one will
|下面这个会扩展， B8 ，

1593
00:51:53,240 --> 00:51:54,410
0,150 150,660 690,960 960,1050 1050,1170
get extended {you,know - -}

1594
00:51:54,410 --> 00:51:56,390
0,660 1200,1560 1560,1710 1710,1770 1770,1980
B8,| and then the rule
|然后规则非常简单，

1595
00:51:56,390 --> 00:51:58,400
0,60 60,300 300,930 1020,1860 1860,2010
is very simple,| {} you
|节点切换到最长的 fork ，

1596
00:51:58,400 --> 00:52:00,440
0,210 210,510 540,870 870,1470
know the peer switches,

1597
00:52:04,110 --> 00:52:06,220
0,540 540,660 660,1080 1080,1590
switches the longest fork,|
|

1598
00:52:11,690 --> 00:52:14,510
0,630 630,1230 1230,1770 1770,2130 2250,2820
and, {} and so, {}
所以，基本上，

1599
00:52:14,510 --> 00:52:15,890
0,210 210,390 390,1080 1080,1140 1140,1380
and so basically you know|
|

1600
00:52:15,890 --> 00:52:17,480
0,270 270,360 360,1080 1080,1260 1260,1590
all the transactions {you,know} might
所有交易都会知道，

1601
00:52:17,480 --> 00:52:18,830
0,150 150,420 420,780 780,930 930,1350
have learned about,| in this
|在这个 fork ，上面这个 fork 中，

1602
00:52:18,830 --> 00:52:20,600
0,480 660,930 930,1050 1050,1320 1320,1770
fork, in the top fork,
|

1603
00:52:20,720 --> 00:52:21,740
0,120 120,270 270,390 390,450 450,1020
{} just going to disappear,|
就这么消失了，|

1604
00:52:21,770 --> 00:52:22,970
0,120 120,210 210,420 420,870 900,1200
you know there's gonna not
这个在系统里不会有什么问题，

1605
00:52:22,970 --> 00:52:25,490
0,450 450,840 1080,1200 1200,1680 1950,2520
matter in the system,| because
|因为最终，

1606
00:52:25,490 --> 00:52:26,540
0,90 90,240 240,660 720,810 810,1050
in the end,| you know
|所有这些好的节点都会在最长的链上达成一致，

1607
00:52:26,540 --> 00:52:28,040
0,180 180,690 690,900 900,1260 1260,1500
all those good nodes will

1608
00:52:28,040 --> 00:52:29,270
0,240 240,630 630,810 810,870 870,1230
actually agree on the longest

1609
00:52:29,270 --> 00:52:32,660
0,510 750,1380 1410,1980 2010,2670 2700,3390
chain| and basically proceed mining
|沿着最长的链进行采矿。

1610
00:52:32,660 --> 00:52:34,220
0,420 420,510 510,870 870,1170
along the longest chain.|
|

1611
00:52:35,010 --> 00:52:36,810
0,180 180,240 240,510 510,960 1500,1800
That's the basic plan,| and
这是基本的方案，|所以，让我们来看看，

1612
00:52:36,810 --> 00:52:37,680
0,90 90,330 330,630 630,660 660,870
so, let's look a little

1613
00:52:37,680 --> 00:52:39,420
0,150 150,570 570,1200 1260,1470 1470,1740
bit about| how would that
|这将如何解决我们的双重花费问题。

1614
00:52:39,420 --> 00:52:41,280
0,450 450,660 660,1260 1260,1500 1500,1860
solve our double double spending

1615
00:52:41,280 --> 00:52:42,200
0,360
problem.|
|

1616
00:52:43,880 --> 00:52:45,620
0,540 540,690 690,1020 1020,1170 1170,1740
Wait, I have a question
稍等，我对你的幻灯片有个问题。

1617
00:52:45,620 --> 00:52:48,320
0,480 540,840 840,1470 1890,2310 2340,2700
on your slide.| Yep, I'm
|是的，我将在这张幻灯片继续上一张幻灯片。

1618
00:52:48,320 --> 00:52:49,610
0,180 180,600 600,720 720,930 930,1290
gonna continue {} previous slide

1619
00:52:49,610 --> 00:52:52,550
0,600 1080,1320 1320,1740 2100,2520 2520,2940
{in,this,slide}.| Oh, okay, so. {}|
|哦，好的，那么。|

1620
00:52:52,580 --> 00:52:53,240
0,270 270,420 420,510 510,570 570,660
{ -} If you have
如果你有任何问题，那么。

1621
00:52:53,240 --> 00:52:54,560
0,60 60,450 450,840
any question, so.|
|

1622
00:52:54,840 --> 00:52:56,910
0,300 300,960 960,1110 1110,1710 1830,2070
So even if the in
所以，即使在第二个原因中，比如网络速度慢，

1623
00:52:56,910 --> 00:52:58,320
0,150 150,300 300,390 390,810 810,1410
the, in the second cause,

1624
00:52:58,320 --> 00:53:00,540
0,210 210,330 330,570 570,1290 1830,2220
like the slow network,| can't
|你能不能检测到，

1625
00:53:00,540 --> 00:53:02,850
0,390 390,930 960,1620 1620,1950 1950,2310
you {} detect that,| if
|如果矿工包含的时间戳，

1626
00:53:02,850 --> 00:53:04,710
0,150 150,690 690,870 870,1380 1380,1860
you if the miner included

1627
00:53:04,710 --> 00:53:06,090
0,120 120,420 420,930 930,1230 1230,1380
the {timestamp -}| where they
|当他们找到解决方案时？

1628
00:53:06,090 --> 00:53:07,050
0,240 240,450 450,600 600,870 870,960
found when they found the

1629
00:53:07,050 --> 00:53:08,320
0,720
solution?|
|

1630
00:53:08,930 --> 00:53:14,220
0,720 720,960 990,3780 3960,4740
{} Yeah, okay, the.|
是的，好的。|

1631
00:53:14,660 --> 00:53:16,520
0,150 150,600 600,1080 1080,1230 1230,1860
You might already be suspicious
你可能已经心存疑虑或者可能同意，

1632
00:53:16,520 --> 00:53:17,960
0,240 240,600 600,1080 1080,1230 1230,1440
or may agree on| what
|什么是下一个正确的链，

1633
00:53:17,960 --> 00:53:19,190
0,270 270,390 390,840 840,1140 1140,1230
actually the next what the

1634
00:53:19,190 --> 00:53:20,750
0,240 240,480 480,570 570,810 810,1560
right probably the right {chain,is},|
|

1635
00:53:20,780 --> 00:53:21,920
0,210 210,270 270,480 480,570 570,1140
but it will be confirmed
但这将在之后的区块得到确认，

1636
00:53:21,920 --> 00:53:24,460
0,480 480,750 750,1560 1560,2130
later by future blocks,|
|

1637
00:53:24,800 --> 00:53:26,180
0,510 510,810 810,1020 1020,1080 1080,1380
and you use the future
而你使用的未来的区块确实最长的链是什么。

1638
00:53:26,180 --> 00:53:27,770
0,360 360,510 510,720 720,1230 1230,1590
blocks do really {decide,what} longest

1639
00:53:27,770 --> 00:53:28,840
0,600
{chain,is}.|
|

1640
00:53:30,630 --> 00:53:31,700
0,510
Okay.|
好的。|

1641
00:53:34,060 --> 00:53:37,660
0,660 1020,1650 1680,2010 2010,2400 2700,3600
{} Okay, double spending, {}|
好的，双重花费，|

1642
00:53:37,660 --> 00:53:39,100
0,150 150,330 330,480 480,900 900,1440
so let's talk about two
那么让我们来谈谈两个案例，

1643
00:53:39,100 --> 00:53:40,420
0,450 450,600 600,1050 1050,1260 1260,1320
easy two cases,| when the
|第一个很容易，

1644
00:53:40,420 --> 00:53:42,310
0,180 180,330 330,450 450,900 1140,1890
first one is easy, {}|
|

1645
00:53:42,310 --> 00:53:44,700
0,90 90,180 180,900 1140,1920
you know y sends,
y 发送 ， y 到 z ， y 到 Q ，

1646
00:53:45,400 --> 00:53:46,930
0,120 120,270 270,870 900,1290 1290,1530
you know the y to

1647
00:53:46,930 --> 00:53:49,900
0,630 1440,1770 1770,2040 2040,2310 2310,2970
z and y to Q,|
|

1648
00:53:50,950 --> 00:53:52,240
0,390 390,600 600,1020 1020,1170 1170,1290
to some peer {or,to} the
给某个节点，

1649
00:53:52,240 --> 00:53:54,800
0,540
peers,|
|

1650
00:53:54,950 --> 00:53:56,390
0,420 420,780 780,960 960,1110 1110,1440
and basically what will happen
在这种情况下会发生的是，

1651
00:53:56,570 --> 00:53:57,470
0,90 90,240 240,540 540,630 630,900
in this case is that,|
|

1652
00:53:57,470 --> 00:53:58,670
0,270 270,360 360,540 540,870 870,1200
it's a well behaving peer,|
它是一个正常的节点，|

1653
00:53:58,670 --> 00:53:59,570
0,120 120,270 270,450 450,780 780,900
you'll see like hey you
你会看到，实际上我花了两次相同的钱的交易将被拒绝，

1654
00:53:59,570 --> 00:54:02,180
0,90 90,1110 1350,1830 1830,2190 2190,2610
know| {two,transactions} {} that actually
|花费相同钱两次的交易会被拒绝，

1655
00:54:02,180 --> 00:54:03,260
0,90 90,360 360,420 420,690 690,1080
{} spent the same money

1656
00:54:03,260 --> 00:54:05,690
0,480 870,1590 1680,2220 2220,2340 2340,2430
{} twice are going to

1657
00:54:05,690 --> 00:54:07,820
0,600 630,960 960,1350 1590,1950 1950,2130
reject,| {} that {a,peer} that
|收到的节点试着，

1658
00:54:07,820 --> 00:54:09,560
0,540 540,810 810,1020 1020,1350 1350,1740
receives was trying to| {or
|或者一个矿工组件区块，

1659
00:54:09,560 --> 00:54:10,370
0,60 60,90 90,570 570,720 720,810
-} a miner that is

1660
00:54:10,370 --> 00:54:11,540
0,120 120,180 180,540 540,600 600,1170
going to construct a block,|
|

1661
00:54:11,600 --> 00:54:13,400
0,540 540,1050 1050,1140 1140,1230 1230,1800
{and,it,actually} validate all the transactions,|
它验证所有交易，|

1662
00:54:13,400 --> 00:54:14,360
0,360 360,450 450,720 720,840 840,960
before they stick them in
在把它们放入区块之前。

1663
00:54:14,360 --> 00:54:15,280
0,60 60,480
the block.|
|

1664
00:54:15,610 --> 00:54:16,570
0,180 180,330 330,510 510,870 870,960
{} So this whole you
所以这不会奏效，

1665
00:54:16,570 --> 00:54:17,800
0,270 300,660 660,960 960,1140 1140,1230
know don't really this is

1666
00:54:17,800 --> 00:54:18,970
0,120 120,270 270,660 660,990 990,1170
not gonna work,| miners gonna
|好的矿工会拒绝。

1667
00:54:18,970 --> 00:54:20,760
0,510 510,690 690,1260
reject, good miners.|
|

1668
00:54:24,310 --> 00:54:25,990
0,450 570,930 930,1200 1200,1620 1620,1680
Okay, the second question, the
好的，第二个问题，更有趣，

1669
00:54:25,990 --> 00:54:27,760
0,240 240,720 720,900 900,1080 1080,1770
more interesting,| I think cases
|y 发送， y 到 z ，给一些节点，

1670
00:54:27,880 --> 00:54:30,560
0,540 540,930 930,1620
basically y sends,

1671
00:54:30,650 --> 00:54:32,560
0,390 390,570 570,1230
y to z,

1672
00:54:32,800 --> 00:54:34,120
0,120 120,390 390,570 570,690 690,1320
to some set of peers,|
|

1673
00:54:35,980 --> 00:54:38,980
0,870 990,1350 1350,1650 1650,2310
and then y {to,Q},
然后 y 到 Q ，到另一组节点。

1674
00:54:39,240 --> 00:54:40,530
0,210 210,540 540,690 690,780 780,1290
to another set of peers.|
|

1675
00:54:47,160 --> 00:54:49,860
0,1050 1050,1560 1980,2430 2430,2640 2640,2700
And {you,know} we, and then
然后可能，

1676
00:54:49,860 --> 00:54:51,960
0,450 780,1350 1380,1860 1860,1950 1950,2100
might {you,know},| maybe you know
|也许一个池比另一个大，

1677
00:54:51,960 --> 00:54:53,520
0,630 660,1020 1020,1260 1260,1410 1410,1560
the maybe one pool was

1678
00:54:53,520 --> 00:54:54,570
0,210 210,360 360,420 420,600 600,1050
bigger than the other pool,|
|

1679
00:54:54,780 --> 00:54:56,160
0,390 390,630 630,810 810,1230 1230,1380
but it could actually end
但它可能会是一种情况，

1680
00:54:56,160 --> 00:54:57,150
0,150 150,270 270,300 300,810 810,990
up in a situation,| where
|像之前一样，我们得到了链，

1681
00:54:57,150 --> 00:54:58,860
0,540 540,870 870,1050 1050,1140 1140,1710
basically we got the chain

1682
00:54:59,250 --> 00:55:02,700
0,690 1080,1770 1860,2520 2520,3060 3150,3450
{as,before},| and basically either once
|一旦它出现计算哈希值，

1683
00:55:02,700 --> 00:55:04,260
0,90 90,600 600,660 660,780 780,1560
it appears you know computes

1684
00:55:04,620 --> 00:55:06,390
0,90 90,240 240,930 960,1410 1410,1770
you know {} the hash,|
|

1685
00:55:06,390 --> 00:55:08,250
0,450 480,660 660,990 990,1290 1290,1860
where that includes {y,to} Q,|
其中包括 y 到 Q ，|

1686
00:55:09,000 --> 00:55:10,380
0,540 540,600 600,780 780,1050 1050,1380
and the other one computes
另一个计算包含 y 到 z 的块。

1687
00:55:10,380 --> 00:55:11,340
0,60 60,450 450,510 510,690 690,960
a block you know actually

1688
00:55:11,340 --> 00:55:13,400
0,360 360,600 600,1020 1020,1410
contains y to z.|
|

1689
00:55:13,740 --> 00:55:15,360
0,660 930,1110 1110,1290 1290,1440 1440,1620
{} So this looks like
所以这看起来像是双重支出的事情

1690
00:55:15,360 --> 00:55:17,100
0,180 180,420 420,750 750,1200 1350,1740
a double spending thing| and
|所以如果你是对的，

1691
00:55:17,100 --> 00:55:18,570
0,150 150,330 330,570 570,1050 1140,1470
so if you're z correct,|
|

1692
00:55:18,570 --> 00:55:20,010
0,270 270,360 360,630 780,1230 1230,1440
z is the person that
Z是将决定是否接受这笔交易的人

1693
00:55:20,010 --> 00:55:20,970
0,90 90,210 210,300 300,720 720,960
is going to decide whether

1694
00:55:20,970 --> 00:55:22,620
0,270 270,810 810,870 870,1290 1440,1650
to accept you know this

1695
00:55:22,620 --> 00:55:25,320
0,480 480,600 600,1080 1080,1710 2100,2700
transaction| and handout, the handout
|还有讲义，讲义和拿铁，

1696
00:55:25,320 --> 00:55:27,210
0,120 120,810 930,1290 1290,1410 1410,1890
the latte,| what you do
|你要做的就是等待，

1697
00:55:27,240 --> 00:55:29,080
0,630 630,780 780,930 930,1380
is you're gonna wait,|
|

1698
00:55:29,380 --> 00:55:31,030
0,330 330,450 450,600 600,870 870,1650
and you're gonna wait until
你要等到后面有更多的街区，

1699
00:55:31,210 --> 00:55:32,170
0,360 360,600 600,660 660,870 870,960
{} there's a bunch of

1700
00:55:32,170 --> 00:55:33,610
0,360 360,900 900,1050 1050,1140 1140,1440
more blocks that are behind

1701
00:55:33,610 --> 00:55:35,530
0,210 270,690 1020,1500 1500,1650 1650,1920
it,| so typically it's five
|所以通常是5 6，最多是5 6

1702
00:55:35,530 --> 00:55:37,180
0,480 510,720 720,840 840,1110 1110,1650
six, up to five six|
|

1703
00:55:37,510 --> 00:55:39,070
0,150 150,390 390,780 780,1320 1320,1560
{you,know,for,a} very valuable transaction,| maybe
你知道，对于一笔非常有价值的交易，|可能不是为了一杯拿铁，

1704
00:55:39,070 --> 00:55:39,940
0,180 180,300 300,360 360,720 720,870
not for a latte,| but
|但如果你要买车，

1705
00:55:39,940 --> 00:55:41,110
0,120 120,270 270,540 540,600 600,1170
if you're buying a car,|
|

1706
00:55:41,380 --> 00:55:42,640
0,510 510,840 840,1050 1050,1200 1200,1260
{} you really want to
你真的想要确定，

1707
00:55:42,640 --> 00:55:43,810
0,150 150,360 360,780 780,990 990,1170
make damn sure,| that you're
|你会拿到你的钱

1708
00:55:43,810 --> 00:55:45,670
0,150 150,270 270,390 390,840 1080,1860
gonna get your money| and
|你知道为什么不花双倍的钱，

1709
00:55:45,790 --> 00:55:47,200
0,300 300,570 570,690 690,930 930,1410
{} that you know why

1710
00:55:47,200 --> 00:55:48,730
0,270 270,480 480,810 810,1050 1050,1530
didn't double spend the money,|
|

1711
00:55:49,270 --> 00:55:51,610
0,540 570,1200 1740,1980 1980,2190 2190,2340
so, {} you may where
因此，您可以在其中等待一段时间，直到新的散列结束

1712
00:55:51,610 --> 00:55:53,860
0,180 210,1440 1440,1590 1590,1650 1650,2250
they wait for a while

1713
00:55:54,370 --> 00:55:56,500
0,300 300,720 720,1410 1410,1680 1680,2130
until new hash {has,been} ended|
|

1714
00:55:56,620 --> 00:55:57,820
0,420 420,420 420,690 690,1020 1020,1200
to a new blocks being
一个新的区块正在扩展到区块链

1715
00:55:57,820 --> 00:56:00,820
0,420 420,540 540,900 1260,2400 2520,3000
extended to the blockchain| and
|你知道，一旦你有五六个，

1716
00:56:00,820 --> 00:56:01,570
0,120 120,390 390,600 600,660 660,750
you know once you have

1717
00:56:01,570 --> 00:56:03,550
0,240 240,270 270,840 930,1890 1890,1980
five or six,| {} you
|你知道这篇论文做了一些计算，

1718
00:56:03,550 --> 00:56:05,500
0,210 630,810 810,1650 1680,1830 1830,1950
know {the,paper,does,some} calculations,| you're going
|你会非常自信，你会非常自信，

1719
00:56:05,500 --> 00:56:07,000
0,60 60,240 240,660 660,1260 1260,1500
to be pretty confident, you're

1720
00:56:07,000 --> 00:56:10,270
0,240 240,870 870,1260 1560,2310 2550,3270
very confident that,| {} that
|你不太可能知道攻击者基本上是在计算一条新链

1721
00:56:10,450 --> 00:56:12,220
0,600 600,1290 1290,1380 1380,1530 1530,1770
it's unlikely you know for

1722
00:56:12,220 --> 00:56:14,200
0,480 480,570 570,1230 1230,1500 1500,1980
attacker to basically a compute

1723
00:56:14,200 --> 00:56:15,610
0,120 120,330 330,870 1080,1230 1230,1410
a new chain| and sort
|在某种程度上超过了你知道的更长的链，对吧，

1724
00:56:15,610 --> 00:56:17,770
0,240 360,1440 1470,1590 1590,1770 1770,2160
of overtake you know the

1725
00:56:17,770 --> 00:56:19,120
0,330 330,660 690,960 960,1140 1140,1350
longer chain, right,| let's say
|假设这就是袭击者，

1726
00:56:19,120 --> 00:56:20,500
0,180 180,300 300,420 420,1050 1260,1380
this is the attacker,| the
|攻击者的计算能力较弱，

1727
00:56:20,500 --> 00:56:22,480
0,360 360,600 600,810 810,1440 1440,1980
attacker has less computational power,|
|

1728
00:56:22,510 --> 00:56:24,070
0,90 90,180 180,660 660,720 1470,1560
they are presumably on the
他们大概是在假设整篇论文背后的计算能力比所有好人都要小

1729
00:56:24,070 --> 00:56:25,390
0,450 450,690 690,810 810,960 960,1320
assumption behind this whole paper

1730
00:56:25,390 --> 00:56:26,710
0,180 180,390 390,900 900,1170 1170,1320
has less computational power than

1731
00:56:26,710 --> 00:56:28,150
0,90 90,180 180,360 360,810 1140,1440
all the good people| and
|因此，如果好人有更多的计算能力，

1732
00:56:28,150 --> 00:56:29,380
0,420 540,780 780,870 870,1050 1050,1230
so if the good people

1733
00:56:29,380 --> 00:56:29,680
0,240
have

1734
00:56:29,680 --> 00:56:31,390
0,180 180,810 810,1350 1380,1590 1590,1710
more computational power,| it's going
|对于攻击者来说，这是不可能的

1735
00:56:31,390 --> 00:56:32,800
0,90 90,150 150,900 900,1170 1170,1410
to be impossible for the

1736
00:56:32,800 --> 00:56:35,830
0,540 540,930 1320,2040 2040,2310 2820,3030
{attacker -}| unlikely or the
|不太可能，或者评委不可能或不太可能让攻击者计算得更快

1737
00:56:35,830 --> 00:56:37,780
0,450 450,630 630,900 930,1830 1830,1950
judges will be impossible or

1738
00:56:37,780 --> 00:56:39,550
0,600 660,960 960,1440 1440,1650 1650,1770
unlikely for {the,attacker -} to

1739
00:56:39,550 --> 00:56:41,290
0,360 360,960 1110,1260 1260,1500 1500,1740
compute faster| and actually make
|并真正做出比好的改变更低的改变。

1740
00:56:41,290 --> 00:56:42,760
0,120 120,690 690,810 810,900 900,1470
a change that is lower

1741
00:56:42,760 --> 00:56:43,980
0,180 180,240 240,420 420,750
than the good change.|
|

1742
00:56:44,580 --> 00:56:45,390
0,150 150,330 330,450 450,540 540,810
So that's sort of the
这就是这一切背后的关键假设，

1743
00:56:45,420 --> 00:56:47,700
0,630 690,1290 1290,1500 1500,2010 2010,2280
key assumption that's behind all

1744
00:56:47,700 --> 00:56:51,150
0,510 570,1530 1530,2160 2160,3000 3000,3450
this,| {} among this reason
|这其中就有原因。

1745
00:56:51,360 --> 00:56:52,520
0,570
reason.|
|

1746
00:56:53,560 --> 00:56:55,180
0,150 150,240 240,600 600,1230 1470,1620
And so basically z you
所以基本上，你知道，只需要等待一段时间

1747
00:56:55,180 --> 00:56:56,020
0,210 210,420 420,540 540,630 630,840
know just has to wait

1748
00:56:56,020 --> 00:56:57,820
0,120 120,210 210,810 930,1560 1560,1800
for a while| until the
|在好人被延长到足够长的链条之前，

1749
00:56:57,820 --> 00:56:59,080
0,180 180,540 540,630 630,1170 1170,1260
good guys are extended to

1750
00:56:59,080 --> 00:57:00,910
0,510 510,900 900,1350 1350,1740 1740,1830
chain long enough,| that you
|你知道z完全相信你知道一组攻击者是不可能的，

1751
00:57:00,910 --> 00:57:02,710
0,150 150,600 600,960 960,1470 1470,1800
know {z,is} completely convinced that

1752
00:57:02,740 --> 00:57:04,390
0,90 90,660 660,780 780,1440 1440,1650
you know it's impossible for

1753
00:57:04,390 --> 00:57:05,950
0,60 60,210 210,300 300,870 1110,1560
a set of attackers, {}|
|

1754
00:57:05,950 --> 00:57:07,660
0,240 240,720 720,990 990,1620 1620,1710
to actually out compute you
要真正算出来，你知道好人是谁。

1755
00:57:07,660 --> 00:57:09,380
0,150 150,600 630,960 960,1290
know the good people.|
|

1756
00:57:10,440 --> 00:57:12,060
0,390 720,990 990,1230 1230,1560 1560,1620
And at that point you
在这一点上，你知道z可以直接接受交易

1757
00:57:12,060 --> 00:57:13,170
0,270 270,510 510,630 630,750 750,1110
know z can just accept

1758
00:57:13,170 --> 00:57:14,640
0,90 90,720 1050,1170 1170,1290 1290,1470
the transaction| and say like
|然后说，这是合法的交易，

1759
00:57:14,640 --> 00:57:16,080
0,120 120,300 300,390 390,750 750,1440
oh this is legit transaction,|
|

1760
00:57:16,080 --> 00:57:17,370
0,210 210,480 480,720 720,960 960,1290
if everything else checks out|
如果其他一切都无懈可击|

1761
00:57:17,670 --> 00:57:20,100
0,690 690,1110 1110,1770 1770,1950 1950,2430
and {} handover the latte
然后把拿铁或者你认识的车交给你，我猜。

1762
00:57:20,100 --> 00:57:20,880
0,120 120,180 180,600 600,690 690,780
or a car you know

1763
00:57:20,880 --> 00:57:23,970
0,360 360,810 1050,2160 2160,2730 2760,3090
to {} z, to y

1764
00:57:23,970 --> 00:57:24,940
0,150 150,510
I guess.|
|

1765
00:57:26,150 --> 00:57:28,280
0,330 330,510 510,1050 1050,1440 1440,2130
Sorry, quick question who distributes
抱歉，问个小问题是谁分发这些拼图的？

1766
00:57:28,280 --> 00:57:30,040
0,90 90,900
the puzzles?|
|

1767
00:57:30,520 --> 00:57:33,160
0,1020 1050,1500 1500,1770 1770,2280 2280,2640
{} There's no distribution puzzles
没有必要解决分配难题，对吧。

1768
00:57:33,160 --> 00:57:36,600
0,690 750,1770 1770,2850
necessary, right. {}|
|

1769
00:57:37,570 --> 00:57:39,220
0,690 720,1110 1110,1410 1410,1530 1530,1650
The puzzle is you know
谜题是你知道预先确定的，

1770
00:57:39,220 --> 00:57:40,720
0,750 810,930 930,1020 1020,1170 1170,1500
predetermined,| you know the puzzle
|你知道，难题是你必须在有足够多前导零的块上计算一个散列。

1771
00:57:40,720 --> 00:57:41,830
0,180 180,360 360,540 540,630 630,1110
is you have to compute

1772
00:57:41,830 --> 00:57:43,300
0,180 180,630 630,810 810,900 900,1470
a hash over the block

1773
00:57:43,780 --> 00:57:45,730
0,300 300,660 660,1050 1050,1290 1290,1950
that has enough leading zeros.|
|

1774
00:57:49,160 --> 00:57:50,690
0,180 180,360 360,900 930,1470 1470,1530
So theres no distribution of
所以这个拼图不会被分发，

1775
00:57:50,690 --> 00:57:52,160
0,540 540,720 720,840 840,1020 1020,1470
{the,puzzle},| {the,only} thing that's distributed
|唯一被分发的东西可能是它的难度，

1776
00:57:52,160 --> 00:57:53,420
0,210 210,390 390,930 930,1110 1110,1260
maybe its difficulty,| but as
|但正如我们之前所说的，

1777
00:57:53,420 --> 00:57:54,050
0,180 180,360 360,390 390,540 540,630
we talk a little bit

1778
00:57:54,050 --> 00:57:55,190
0,420 420,570 570,690 690,750 750,1140
earlier,| that sort of adjusted
|随着时间的推移，这种情况会以一种确定性的方式进行调整。

1779
00:57:55,190 --> 00:57:56,990
0,180 180,540 870,1110 1110,1200 1200,1800
over time in a deterministic

1780
00:57:56,990 --> 00:57:57,840
0,330
way.|
|

1781
00:57:58,780 --> 00:58:00,040
0,360 360,720
Thank you.|
谢谢。|

1782
00:58:00,500 --> 00:58:03,260
0,810 900,1740 1740,1920 1920,2070 2070,2760
So there's all these transactions
所以所有这些正在发生的交易

1783
00:58:03,260 --> 00:58:04,580
0,120 120,210 210,720 720,870 870,1320
that are happening| and then
|然后通过一些八卦协议或者别的什么，

1784
00:58:04,580 --> 00:58:06,350
0,210 210,690 690,1140 1140,1650 1650,1770
through some gossip protocol or

1785
00:58:06,350 --> 00:58:08,270
0,660 720,900 900,1380 1380,1830 1830,1920
something,| the transaction distributed to
|该事务被分发给所有节点，

1786
00:58:08,270 --> 00:58:09,540
0,90 90,180 180,810
all the nodes,|
|

1787
00:58:09,540 --> 00:58:10,820
0,210 210,780
and then
然后不知何故就哪组交易被打包成一个块达成了一致，

1788
00:58:10,820 --> 00:58:15,170
0,1230 1680,2490 2550,3210 3210,3900 4080,4350
somehow there's agreement on what

1789
00:58:15,170 --> 00:58:16,850
0,210 210,300 300,1050 1050,1230 1230,1680
set of transactions are packaged

1790
00:58:16,850 --> 00:58:18,050
0,210 210,300 300,690 690,810 810,1200
into a block,| so everyone
|因此，每个人都对什么是区块达成了一致。

1791
00:58:18,050 --> 00:58:19,250
0,270 270,780 780,900 900,1110 1110,1200
has agreement on what the

1792
00:58:19,250 --> 00:58:20,560
0,330 330,870
block is.|
|

1793
00:58:20,650 --> 00:58:23,380
0,330 330,690 720,1770 1830,2310 2490,2730
No no no no no,
不，矿工收到交易的权利，

1794
00:58:23,380 --> 00:58:25,690
0,390 390,510 510,1140 1170,1680 1680,2310
no the miner receives transactions

1795
00:58:25,690 --> 00:58:26,600
0,390
right,|
|

1796
00:58:27,260 --> 00:58:29,120
0,570 600,1050 1050,1470 1470,1680 1680,1860
we go here where was
我们去这里，它在哪里，

1797
00:58:29,120 --> 00:58:29,940
0,270
it,|
|

1798
00:58:31,300 --> 00:58:34,090
0,1050 1080,1950 2040,2220 2220,2430 2430,2790
a block, {there,was} some slide.|
一个街区，有一些滑梯。|

1799
00:58:34,090 --> 00:58:35,830
0,480 780,1020 1020,1110 1110,1350 1350,1740
I think the next one.|
我想是下一个。|

1800
00:58:37,870 --> 00:58:39,340
0,270 270,450 450,1200 1230,1380 1380,1470
Yeah, blocks {in,transactions},| so the
是啊，交易受阻，|所以矿工可能是矿工，你知道的，我只是通过网络接收交易，

1801
00:58:39,340 --> 00:58:41,460
0,450 450,690 690,1110 1110,1560
miner maybe miner I

1802
00:58:41,720 --> 00:58:43,160
0,120 120,300 300,600 600,960 960,1440
you know just receive transactions

1803
00:58:43,160 --> 00:58:44,300
0,180 180,240 240,690 690,870 870,1140
over the network,| and it
|它只决定将哪些交易放在该块中。

1804
00:58:44,300 --> 00:58:45,770
0,210 210,600 600,750 750,1230 1230,1470
just decides which transactions {go,in}

1805
00:58:45,770 --> 00:58:46,980
0,210 210,660
that block.|
|

1806
00:58:46,980 --> 00:58:48,930
0,600 600,990 990,1230 1230,1710 1710,1950
And it starts computing,| and
然后它开始计算，|如果它赢了，

1807
00:58:48,930 --> 00:58:50,160
0,120 120,210 210,780 810,1140 1140,1230
if it wins,| that is
|这就是进入该区块的交易。

1808
00:58:50,160 --> 00:58:51,120
0,90 90,600 600,720 720,870 870,960
the transactions that go in

1809
00:58:51,120 --> 00:58:52,240
0,150 150,600
that block.|
|

1810
00:58:52,670 --> 00:58:54,650
0,180 180,630 1350,1410 1410,1740 1740,1980
I see.| So that determines
我明白了。|所以这决定了总的顺序，

1811
00:58:54,650 --> 00:58:56,480
0,180 180,480 480,840 1290,1440 1440,1830
the total order,| you know
|你知道总的秩序被之前所有的街区打乱了

1812
00:58:56,540 --> 00:58:57,530
0,150 150,420 420,570 570,660 660,990
the total order is disturbed

1813
00:58:57,530 --> 00:58:58,640
0,120 120,240 240,330 330,720 720,1110
by all the previous blocks|
|

1814
00:58:58,640 --> 00:58:59,840
0,90 90,420 420,570 570,750 750,1200
can approach this new block|
可以接近这个新街区|

1815
00:58:59,840 --> 00:59:01,280
0,210 210,450 450,510 510,900 930,1440
and within a block basically
在一个街区内，基本上是矿工，我在决定什么东西进去

1816
00:59:01,280 --> 00:59:02,510
0,360 360,570 570,690 690,1080 1080,1230
miner I is deciding what

1817
00:59:02,510 --> 00:59:03,680
0,180 180,300 720,870 870,1020 1020,1170
goes in| and there's some
|而且有一些复杂的规则，

1818
00:59:03,680 --> 00:59:05,390
0,570 570,960 960,1290 1290,1650 1650,1710
complicated rules,| that miners are
|这是矿工们应该遵循的，

1819
00:59:05,390 --> 00:59:07,790
0,300 300,660 690,1350 1410,2010 2010,2400
supposed to follow,| {} but
|但基本上，矿商可以做出决定。

1820
00:59:07,790 --> 00:59:08,690
0,330 330,420 420,630 630,840 840,900
basically the miner gets to

1821
00:59:08,690 --> 00:59:09,600
0,420
decide.|
|

1822
00:59:10,840 --> 00:59:12,120
0,360 360,840
Thank you.|
谢谢。|

1823
00:59:16,400 --> 00:59:17,300
0,150 150,240 240,270 270,480 480,900
And there are certain incentive
而且有一定的激励制度让矿工们做正确的事情。

1824
00:59:17,300 --> 00:59:18,320
0,420 420,510 510,600 600,930 930,1020
systems for the miners to

1825
00:59:18,320 --> 00:59:19,660
0,90 90,210 210,450 450,750
do the right thing.|
|

1826
00:59:20,480 --> 00:59:21,560
0,390 420,570 570,690 690,810 810,1080
{} So let me talk
所以让我简单地谈一下这个问题，

1827
00:59:21,560 --> 00:59:22,400
0,30 30,240 240,360 360,570 570,840
a little bit about this,|
|

1828
00:59:22,400 --> 00:59:25,850
0,0 1560,1980 2310,2790 2790,3000 3000,3450
{} so {} so far,
到目前为止，你知道我们已经看到了这个谜题，

1829
00:59:26,240 --> 00:59:27,890
0,120 120,270 270,510 510,810 810,1650
you know we've seen the

1830
00:59:27,920 --> 00:59:28,910
0,480 480,660 660,810 810,900 900,990
{this,puzzle},| that's sort of the
|这是这个工作证明想法的核心，

1831
00:59:28,910 --> 00:59:30,170
0,600 630,840 840,960 960,1170 1170,1260
core of this {proof-of-work -

1832
00:59:30,170 --> 00:59:31,220
0,210 210,540 540,690 690,780 780,1050
-} idea,| {} is actually
|实际上是真正达成共识的核心，

1833
00:59:31,220 --> 00:59:33,230
0,90 90,510 510,600 600,1110 1200,2010
the core of actually achieving

1834
00:59:33,230 --> 00:59:36,950
0,750 1050,2430 2430,2970 3150,3420 3420,3720
consensus,| {} and, {} but
|而且，但你知道，这需要矿工们做相当多的工作，

1835
00:59:36,950 --> 00:59:38,240
0,90 90,480 540,840 840,1230 1230,1290
you know this requires the

1836
00:59:38,240 --> 00:59:39,140
0,300 300,510 510,660 660,870 870,900
miners actually do quite a

1837
00:59:39,140 --> 00:59:39,980
0,120 120,180 180,570 600,720 720,840
bit of work,| you know
|你知道，就像他们必须散列散列，拥有一台严肃的计算机，

1838
00:59:39,980 --> 00:59:41,720
0,210 210,360 360,510 510,750 750,1740
like they have to {hash,hash,hash},

1839
00:59:41,720 --> 00:59:43,670
0,390 390,450 450,720 720,1230 1230,1950
have a serious computer, {}|
|

1840
00:59:43,820 --> 00:59:45,230
0,330 510,810 810,930 930,1020 1050,1410
one one we saw roughly
有一台我们看了大约一个月的工作

1841
00:59:45,230 --> 00:59:46,970
0,60 60,330 330,750 1440,1650 1650,1740
a month work| and so
|那么为什么一个矿工要这么做呢？

1842
00:59:46,970 --> 00:59:47,600
0,180 180,330 330,360 360,540 540,630
why would a {miner -}

1843
00:59:47,600 --> 00:59:49,040
0,120 120,510 930,1110 1110,1260 1260,1440
do that| and so there's
|因此，有一个激励系统来鼓励矿工真正扮演这个角色。

1844
00:59:49,040 --> 00:59:51,230
0,90 90,510 510,1080 1080,1860 1950,2190
an incentive system for to

1845
00:59:51,230 --> 00:59:52,670
0,420 420,840 840,990 990,1260 1260,1440
encourage miners to actually play

1846
00:59:52,670 --> 00:59:53,400
0,150 150,540
this role.|
|

1847
01:00:02,510 --> 01:00:03,680
0,510 510,660 660,840 840,1080 1080,1170
And you know there's a
你知道有一条规则，基本上它们是一堆保留在池中的比特币，

1848
01:00:03,680 --> 01:00:07,130
0,540 900,1320 1320,1770 1770,2700 2760,3450
rule that basically they're a

1849
01:00:07,250 --> 01:00:08,780
0,270 270,570 570,960 960,1410 1410,1530
bunch of Bitcoins reserved in

1850
01:00:08,780 --> 01:00:10,670
0,60 60,570 600,780 780,1410 1440,1890
the pool,| like when first
|就像你知道的第一批比特币交易被创建时一样

1851
01:00:10,670 --> 01:00:12,560
0,450 450,570 570,720 840,1290 1290,1890
bits you know Bitcoin transactions

1852
01:00:12,560 --> 01:00:15,950
0,240 240,780 1260,2070 2250,2850 2880,3390
are created| and {} miners
|矿工们拿到了工资，从池子里拿到了奖励

1853
01:00:15,950 --> 01:00:17,420
0,180 180,540 540,690 690,1320 1320,1470
get paid were rewarded out

1854
01:00:17,420 --> 01:00:18,500
0,60 60,150 150,570 690,960 960,1080
of the pool| and so
|所以这是第一笔交易，

1855
01:00:18,500 --> 01:00:19,940
0,180 180,330 330,420 420,720 720,1440
this was the first transaction,|
|

1856
01:00:23,070 --> 01:00:25,290
0,510 510,630 630,750 750,1440 1680,2220
transaction in the block is
该区块的交易基本上是对矿商的奖励。

1857
01:00:25,290 --> 01:00:27,300
0,480 480,1320
basically {a,reward}

1858
01:00:27,840 --> 01:00:29,500
0,240 240,390 390,450 450,1020
{} for the miner.|
|

1859
01:00:33,260 --> 01:00:34,400
0,210 210,330 330,660 660,750 750,1140
And so basically the miner
所以基本上挖掘器可以在第一个生成事务的第一个槽中插入事务，

1860
01:00:34,400 --> 01:00:38,150
0,300 540,840 840,1560 1560,2700 2700,3750
can insert transaction in the

1861
01:00:38,150 --> 01:00:39,830
0,420 420,930 930,1020 1020,1290 1290,1680
{first,generates} transaction, the first slot,|
|

1862
01:00:40,160 --> 01:00:42,440
0,450 450,1080 1080,1410 1410,2070 2070,2280
{} where that {basically,is} are
这基本上是矿工的公钥

1863
01:00:42,440 --> 01:00:43,640
0,60 60,330 330,420 420,690 690,1200
the {miner's -} public key|
|

1864
01:00:43,820 --> 01:00:45,860
0,720 750,1530 1530,1860 1860,1980 1980,2040
and transferring money out of
把钱从泳池里转到他自己身上。

1865
01:00:45,860 --> 01:00:47,420
0,90 90,450 450,540 540,1230
the pool to himself

1866
01:00:47,580 --> 01:00:50,430
0,240 240,870 1410,2220 2250,2700 2700,2850
for herself.| And {} and
|实际上，这就是可能会发生的事情，

1867
01:00:50,430 --> 01:00:51,390
0,180 180,300 300,540 540,810 810,960
that is the way that

1868
01:00:51,390 --> 01:00:53,520
0,300 300,600 600,1080 1080,1530 1860,2130
might get actually,| { -
|他们所做的工作自然会得到某种回报或奖励，

1869
01:00:53,520 --> 01:00:56,370
0,1140 1170,2070 2070,2490 2490,2790 2790,2850
-} get naturally sort of

1870
01:00:56,370 --> 01:00:58,260
0,510 510,1200 1200,1350 1350,1740 1740,1890
a return or reward for

1871
01:00:58,260 --> 01:00:59,280
0,180 180,270 270,450 450,570 570,1020
actually the work they do,|
|

1872
01:00:59,640 --> 01:01:02,400
0,690 870,1560 1560,1980 1980,2190 2190,2760
that reward changes over time,|
这种奖励会随着时间的推移而变化，|

1873
01:01:02,460 --> 01:01:04,620
0,780 810,1500 1500,1590 1590,1800 1800,2160
{} currently I think you
现在我想你是你知道今天我想是6.25比特币

1874
01:01:04,650 --> 01:01:05,880
0,390 420,510 510,600 600,1080 1080,1230
were you know today is

1875
01:01:05,880 --> 01:01:06,840
0,120 120,240 240,360 360,660 660,960
I think it's {6.25 -

1876
01:01:06,840 --> 01:01:09,040
0,210 210,750 780,1620
- -} Bitcoin|
|

1877
01:01:10,100 --> 01:01:11,450
0,480 480,810 810,1080 1080,1290 1290,1350
{} to actually mined a
才能真正开采一个区块，

1878
01:01:11,450 --> 01:01:14,090
0,570 1200,1920 1920,2070 2070,2340 2340,2640
block,| {} but this changes
|但随着时间的推移，这种情况会发生变化，

1879
01:01:14,090 --> 01:01:15,050
0,150 150,390 390,480 480,720 720,960
over time,| it actually has
|它实际上有一个拥有规则，

1880
01:01:15,050 --> 01:01:17,780
0,180 180,630 630,1080 1350,2160 2160,2730
a having rule,| {} that
|这让你知道，几年前，12比特12.5比特币减少了一半，

1881
01:01:17,810 --> 01:01:19,700
0,990 990,1110 1110,1440 1440,1560 1560,1890
reduces you know a half,

1882
01:01:19,700 --> 01:01:21,470
0,690 840,1080 1080,1230 1230,1530 1530,1770
a couple years ago, a

1883
01:01:21,500 --> 01:01:23,600
0,450 450,630 630,1200 1200,1500 1500,2100
twelve bit {12.5 -} Bitcoin,|
|

1884
01:01:23,930 --> 01:01:25,460
0,480 480,960 960,1260 1260,1470 1470,1530
{} in a in a
在一段时间内将是任何自由的分数，你知道的，无论他们有6.25

1885
01:01:25,460 --> 01:01:26,930
0,360 360,510 510,840 840,1230 1230,1470
while will be whatever free

1886
01:01:26,930 --> 01:01:28,190
0,510 510,600 600,720 720,1140 1140,1260
points you know whatever they

1887
01:01:28,190 --> 01:01:29,450
0,330 330,540 540,780 780,1110 1110,1260
have {6.25 - -}| and
|我想我每隔两个和每21万个街区都记得正确

1888
01:01:29,450 --> 01:01:31,310
0,30 30,330 630,1110 1140,1470 1470,1860
I think I remember correctly

1889
01:01:31,310 --> 01:01:34,310
0,600 600,780 780,990 1380,1740 1740,3000
every {two,and -} every 210,000

1890
01:01:34,310 --> 01:01:36,920
0,930 1200,1530 1530,1740 1740,2010 2010,2610
blocks| {} that number halves,|
|这个数字减半，|

1891
01:01:37,430 --> 01:01:39,110
0,420 450,900 900,1110 1110,1350 1350,1680
it's until it runs {into
直到它遇到了最好的比特币分母，

1892
01:01:39,110 --> 01:01:43,130
0,330 420,840 840,1140 1140,2400 2730,4020
-} the most {finest -}

1893
01:01:43,130 --> 01:01:47,000
0,0 0,510 660,2160 2190,3030 3390,3870
{} finest Bitcoin denominator, {}|
|

1894
01:01:47,000 --> 01:01:48,800
0,300 300,660 660,990 990,1560
and then basically stops.|
然后基本上就停了下来。|

1895
01:01:49,310 --> 01:01:50,600
0,360 360,480 480,570 570,840 840,1290
But we're a while away,|
但我们还有一段时间，|

1896
01:01:50,630 --> 01:01:51,920
0,450 450,720 720,1080 1080,1200 1200,1290
before that actually is the
在此之前，实际上是这样的，

1897
01:01:51,920 --> 01:01:54,680
0,600 750,1080 1080,1260 1260,1920 2040,2760
case,| if that happens,| then,
|如果发生这种情况，|然后，我的想法是，实际上阻止每一笔交易都需要支付一点费用

1898
01:01:54,680 --> 01:01:56,210
0,0 0,360 360,840 840,960 960,1530
{} the idea is that

1899
01:01:56,210 --> 01:01:57,920
0,120 120,420 420,750 750,1230 1230,1710
to mine actually block every

1900
01:01:57,950 --> 01:01:59,420
0,630 630,810 810,870 870,1080 1080,1470
transaction pays a little fee|
|

1901
01:01:59,780 --> 01:02:01,250
0,540 540,720 720,1080 1080,1380 1380,1470
and the miner collects the
矿工收取你所知道的区块所有交易的费用

1902
01:02:01,250 --> 01:02:02,360
0,570 570,690 690,780 780,930 930,1110
fees you know from all

1903
01:02:02,360 --> 01:02:04,550
0,540 570,1110 1110,1290 1290,1680 1710,2190
the transactions in the block|
|

1904
01:02:04,760 --> 01:02:06,890
0,630 630,840 840,1200 1200,1500 1500,2130
and {} use and rewards
并用这些费用奖励未成年人，

1905
01:02:06,890 --> 01:02:08,840
0,420 450,780 780,900 900,1290 1320,1950
a minor with those fees,|
|

1906
01:02:09,140 --> 01:02:10,040
0,240 240,540 540,660 660,750 750,900
even now there are some
即使是现在也有一些费用，

1907
01:02:10,040 --> 01:02:12,380
0,480 510,1080 1440,1740 1740,2040 2070,2340
fees,| { -} but {}
|但要确保基本上做到这一点，

1908
01:02:12,380 --> 01:02:13,910
0,240 240,630 630,870 870,1020 1020,1530
to make sure that basically,|
|

1909
01:02:13,910 --> 01:02:15,230
0,390 390,600 600,1050 1050,1140 1140,1320
{} the transactions are not
这些交易并不是轻率的

1910
01:02:15,230 --> 01:02:18,140
0,600 930,1650 1650,2190 2190,2580 2580,2910
frivolous| {} and {} so
|所以实际上矿工的收入不仅是6.25，

1911
01:02:18,140 --> 01:02:19,400
0,360 360,420 420,720 720,960 960,1260
really the miner actually earns

1912
01:02:19,400 --> 01:02:21,440
0,180 180,780 1230,1620 1620,1860 1860,2040
not only {} {6.25 -

1913
01:02:21,440 --> 01:02:22,940
0,210 210,600 600,750 750,1140 1140,1500
- -},| but also like
|但实际上也像收费一样，

1914
01:02:22,940 --> 01:02:26,600
0,1200 1200,1530 1530,1980 1980,3180 3450,3660
the fees actually,| yeah and
|是的，还有实际伴随交易而来的费用。

1915
01:02:26,600 --> 01:02:27,530
0,90 90,330 330,480 480,750 750,930
the fees that actually go

1916
01:02:27,530 --> 01:02:28,960
0,300 300,420 420,510 510,1200
along with the transactions.|
|

1917
01:02:31,830 --> 01:02:33,540
0,270 270,510 510,600 600,930 930,1710
Okay, that's the minor incentive.|
好吧，这是次要的激励。|

1918
01:02:34,160 --> 01:02:36,860
0,720 720,1500 1620,2400 2460,2580 2580,2700
{} In {} you know
你知道比特币已经变得如此成功，

1919
01:02:36,860 --> 01:02:38,660
0,330 330,450 450,720 720,1020 1020,1800
Bitcoin has gotten so successful,|
|

1920
01:02:38,660 --> 01:02:39,950
0,480 480,960 960,1080 1080,1230 1230,1290
that basically there's sort of
这基本上是一种未成年人的军备竞赛。

1921
01:02:39,950 --> 01:02:41,600
0,60 60,360 360,870 900,1140 1140,1650
an arms race in minors.|
|

1922
01:02:44,500 --> 01:02:45,160
0,210 210,360 360,450 450,600 600,660
And this is like for
这就像是，

1923
01:02:45,160 --> 01:02:46,210
0,330 330,660 660,780 780,900 900,1050
example,| why you know if
|为什么你知道我是否愿意参加

1924
01:02:46,210 --> 01:02:47,530
0,120 120,300 300,450 450,510 510,1320
I would want to participate|
|

1925
01:02:47,530 --> 01:02:49,390
0,450 450,930 930,1350 1560,1680 1680,1860
and actually when they make
实际上，当他们赚到一些钱的时候，

1926
01:02:49,390 --> 01:02:50,560
0,90 90,570 720,990 990,1110 1110,1170
some money,| I'm going to
|我要输了，

1927
01:02:50,560 --> 01:02:53,860
0,570 600,1260 1260,2400 2490,2880 2910,3300
lose,| because {} the serious
|因为严肃的矿工更擅长计算哈希，哈希率非常高，

1928
01:02:53,860 --> 01:02:56,020
0,540 900,1440 1440,1680 1680,2040 2040,2160
miners are much better at

1929
01:02:56,020 --> 01:02:57,820
0,480 480,1170 1230,1590 1590,1710 1710,1800
computing a hash, is at

1930
01:02:57,820 --> 01:03:00,190
0,60 60,300 300,480 480,960 1680,2370
a very high rate,| than
|比你知道你的标准笔记本电脑能做到的还要多。

1931
01:03:00,190 --> 01:03:01,210
0,60 60,210 210,390 390,690 690,1020
you know your standard laptop

1932
01:03:01,210 --> 01:03:01,980
0,360
can.|
|

1933
01:03:02,160 --> 01:03:02,970
0,180 180,270 270,420 420,450 450,810
And so there's a couple
因此，在这场军备竞赛中，实际上发生了几件事，

1934
01:03:02,970 --> 01:03:04,020
0,210 210,450 450,660 660,810 810,1050
of things actually go on

1935
01:03:04,020 --> 01:03:05,310
0,60 60,210 210,480 480,960 990,1290
in this arms race,| first
|首先是矿工们为了泳池。

1936
01:03:05,310 --> 01:03:06,720
0,90 90,570 750,990 990,1110 1110,1410
of all {} the miners

1937
01:03:06,720 --> 01:03:08,000
0,240 240,780
for pools.|
|

1938
01:03:13,290 --> 01:03:14,100
0,150 150,210 210,420 420,720 720,810
So the basic idea is
所以基本的想法是矿工们彼此合作

1939
01:03:14,100 --> 01:03:15,480
0,180 180,270 270,660 660,1230 1230,1380
that the miners collaborate with

1940
01:03:15,480 --> 01:03:17,430
0,90 90,540 750,1590 1590,1860 1860,1950
each other| and share the
|并相互分享收入

1941
01:03:17,430 --> 01:03:18,600
0,330 330,450 450,570 570,900 930,1170
revenue with each other| and
|所以你知道，如果你的池有很多很多节点，

1942
01:03:18,600 --> 01:03:19,350
0,240 240,390 390,480 480,600 600,750
so you know if your

1943
01:03:19,350 --> 01:03:20,460
0,390 390,510 510,690 690,900 900,1110
pool with many many, many

1944
01:03:20,460 --> 01:03:22,650
0,540 750,1530 1530,1620 1620,1770 1770,2190
nodes,| {} you know maybe
|你知道，也许你从不同的人那里知道，

1945
01:03:22,650 --> 01:03:25,020
0,120 120,750 1170,1380 1380,1950 1950,2370
you know from different people,|
|

1946
01:03:25,020 --> 01:03:26,430
0,210 210,510 510,660 660,930 930,1410
many computers from different people,|
来自不同人的许多电脑，|

1947
01:03:26,700 --> 01:03:28,560
0,780 810,1080 1080,1200 1200,1620 1620,1860
the people could share the
人们可以分享采矿带来的收入流

1948
01:03:28,560 --> 01:03:30,180
0,390 390,870 870,1020 1020,1110 1110,1620
revenue stream out of mining|
|

1949
01:03:30,180 --> 01:03:32,190
0,270 630,1140 1170,1560 1560,1830 1830,2010
and {} because they do
因为它们是作为一个泳池来做的，

1950
01:03:32,190 --> 01:03:33,450
0,210 210,270 270,900 1050,1170 1170,1260
this {as,a} pool,| you know
|你知道他们更有可能真的赢，而且偶尔

1951
01:03:33,450 --> 01:03:35,190
0,210 210,450 450,900 930,1410 1410,1740
they're more likely to actually

1952
01:03:35,190 --> 01:03:36,720
0,450 540,750 750,930 930,990 990,1530
win and once in {a,while}|
|

1953
01:03:36,900 --> 01:03:38,490
0,720 720,810 810,1020 1020,1170 1170,1590
and you know of course
你知道，当然从概率上讲，他们有一些获胜的机会

1954
01:03:38,490 --> 01:03:39,870
0,750 750,840 840,990 990,1110 1110,1380
probabilistically, they have some chance

1955
01:03:39,870 --> 01:03:41,430
0,90 90,480 720,1080 1080,1500 1500,1560
to win| and basically you
|基本上，你知道，通过收入流以更稳定的形式在单一池中的所有矿工之间分配。

1956
01:03:41,430 --> 01:03:42,960
0,90 90,480 480,690 690,1080
know spreads through the

1957
01:03:42,960 --> 01:03:44,580
0,180 180,540 540,1110 1110,1560 1560,1620
{} income stream in a

1958
01:03:44,580 --> 01:03:46,110
0,180 180,570 570,870 870,1290 1290,1530
more stable form across all

1959
01:03:46,110 --> 01:03:47,310
0,360 360,750 750,870 870,930 930,1200
the miners in a single

1960
01:03:47,310 --> 01:03:48,220
0,330
pool.|
|

1961
01:03:48,430 --> 01:03:49,780
0,540 630,840 840,930 930,1110 1110,1350
So if you think you
所以，如果你认为你今天在网上看的话，

1962
01:03:49,780 --> 01:03:52,990
0,180 180,900 930,1740 1920,2790 2820,3210
look online today,| {} there
|有一些非常大的游泳池

1963
01:03:52,990 --> 01:03:54,760
0,120 120,360 360,600 600,1050 1050,1770
are some really large pools|
|

1964
01:03:55,000 --> 01:03:56,890
0,600 600,840 840,1260 1320,1500 1500,1890
and nothing like the three
而且没有什么比得上三大泳池

1965
01:03:56,890 --> 01:04:00,010
0,330 330,990 1200,2040 2340,3030 3030,3120
biggest pools| {} contribute to
|贡献出50%以上的采矿权。

1966
01:04:00,010 --> 01:04:02,200
0,450 450,660 660,750 750,1530 1920,2190
contribute more than {50%,of -}

1967
01:04:02,200 --> 01:04:03,920
0,510 540,840 840,1290
the mining power.|
|

1968
01:04:06,330 --> 01:04:08,520
0,270 270,780 1080,1620
I'm sorry, why,|
抱歉，为什么，|

1969
01:04:08,520 --> 01:04:09,390
0,300 300,420 420,540 540,720 720,870
{} is this, why you
这就是为什么你说每个块都需要大约10分钟的时间来挖掘，尽管它需要一个月的CPU能力。

1970
01:04:09,390 --> 01:04:11,910
0,300 300,600 660,1080 1080,1740 2010,2520
said that each block takes

1971
01:04:12,240 --> 01:04:14,220
0,360 360,570 570,1110 1110,1650 1680,1980
around ten minutes to mine

1972
01:04:14,220 --> 01:04:15,240
0,240 240,450 450,570 570,960 960,1020
even though it takes a

1973
01:04:15,240 --> 01:04:18,810
0,450 450,720 720,1230 1230,1830 2100,3570
month of CPU power.| Yeah,
|是啊，平均一个月，

1974
01:04:18,810 --> 01:04:20,640
0,270 270,720 720,1020 1020,1500 1530,1830
on averages a month, {}|
|

1975
01:04:20,640 --> 01:04:21,420
0,240 240,330 330,450 450,630 630,780
but you know you're gonna
但你知道你会有一些幸运的，

1976
01:04:21,420 --> 01:04:22,320
0,120 120,210 210,510 510,690 690,900
have some lucky,| you, you
|你，你选的是无名氏，

1977
01:04:22,320 --> 01:04:23,550
0,210 210,300 300,780 780,900 900,1230
pick the nonce,| you know
|你知道，一种幸运的，实际上是挑选现时值的方法，实际上可以让你更快地解决问题，对吧，

1978
01:04:23,550 --> 01:04:25,800
0,930 1140,1560 1560,1800 1800,1890 1890,2250
a get lucky and actually

1979
01:04:25,800 --> 01:04:27,600
0,660 690,1170 1170,1440 1440,1530 1530,1800
yeah picking nonce that actually

1980
01:04:27,600 --> 01:04:28,380
0,300 300,420 420,510 510,720 720,780
allows you to solve the

1981
01:04:28,380 --> 01:04:29,790
0,240 240,420 420,870 1050,1260 1260,1410
problem much quicker, right,| there's
|在某个大数字上总是有一个概率随机数

1982
01:04:29,790 --> 01:04:31,110
0,270 270,330 330,1020 1020,1170 1170,1320
always a probability nonce on

1983
01:04:31,110 --> 01:04:33,210
0,450 450,630 630,1080 1650,2010 2010,2100
some big number| and if
|如果你选对了号码，

1984
01:04:33,210 --> 01:04:34,110
0,150 150,300 300,390 390,540 540,900
you pick the right number,|
|

1985
01:04:34,110 --> 01:04:35,250
0,90 90,420 420,840 840,990 990,1140
you know you can get
你知道，你可以很幸运，有很多很多矿工这样做，

1986
01:04:35,250 --> 01:04:36,120
0,270 270,360 360,450 450,660 660,870
lucky and have many many,

1987
01:04:36,120 --> 01:04:38,100
0,210 210,990 990,1110 1110,1440 1710,1980
many miners do that,| there's
|实际上是有可能的，

1988
01:04:38,100 --> 01:04:40,560
0,300 300,360 360,780 780,2100 2280,2460
actually a chance,| {} you
|你只需要不到一个月的时间

1989
01:04:40,560 --> 01:04:42,270
0,600 600,780 780,1140 1140,1410 1410,1710
don't take much less than

1990
01:04:42,660 --> 01:04:44,400
0,540 570,1080 1080,1470 1470,1530 1530,1740
a month| and in fact,
|事实上，这就是十分钟的由来。

1991
01:04:44,400 --> 01:04:45,570
0,150 150,510 510,780 780,960 960,1170
that's why where ten minutes

1992
01:04:45,570 --> 01:04:46,360
0,210 210,450
comes from.|
|

1993
01:04:46,360 --> 01:04:48,550
0,450 870,1230 1230,1440 1440,1890 1950,2190
{} Wait, oh is is
等等，哦，是一个月更重要还是十分钟更重要，

1994
01:04:48,550 --> 01:04:50,080
0,90 90,540 540,720 720,1290 1290,1530
the month more important {or,ten}

1995
01:04:50,080 --> 01:04:51,910
0,300 300,420 420,780 780,930 930,1830
minutes more important,| because if
|因为如果只有一个未成年人，对吧，

1996
01:04:51,910 --> 01:04:53,320
0,120 120,330 330,540 540,900 900,1410
there was only one minor,

1997
01:04:53,350 --> 01:04:54,970
0,480 570,810 810,960 960,1530 1530,1620
right,| on the expected is
|预计是一个月，你，

1998
01:04:54,970 --> 01:04:56,400
0,210 210,600 600,960
one month, you,|
|

1999
01:04:56,580 --> 01:04:57,900
0,390 390,660 660,1050 1050,1110 1110,1320
{} on average it would
平均下来要一个月，对吧。

2000
01:04:57,900 --> 01:04:59,160
0,210 210,420 420,690 690,780 780,1260
take one month, right.| Yeah,
|是的，但他们会做一些事情，因为有很多很多矿工。

2001
01:04:59,160 --> 01:04:59,940
0,150 150,360 360,510 510,600 600,780
but they're going to do

2002
01:04:59,940 --> 01:05:00,840
0,390 390,540 540,660 660,690 690,900
something is there are many

2003
01:05:00,840 --> 01:05:02,180
0,210 210,840
many miners.|
|

2004
01:05:02,210 --> 01:05:03,920
0,420 450,720 720,1200 1200,1440 1440,1710
{} But what what it
但如果有更多的矿工，矿工的能力是显而易见的，那会是什么样子。

2005
01:05:03,920 --> 01:05:05,420
0,240 240,690 690,960 960,1200 1200,1500
like very like if there's

2006
01:05:05,420 --> 01:05:07,340
0,60 60,330 330,450 450,990 1020,1920
a lot more miner, miner

2007
01:05:07,340 --> 01:05:09,020
0,330 330,750 750,870 870,1410 1410,1680
it's clear the ability of.|
|

2008
01:05:09,380 --> 01:05:10,520
0,180 180,240 240,450 450,510 510,1140
There's a lot of variation,
有很多变化，但平均10分钟，

2009
01:05:10,520 --> 01:05:11,900
0,240 240,390 390,810 810,990 990,1380
but on average ten minutes,|
|

2010
01:05:11,900 --> 01:05:14,000
0,960 960,1500 1500,1680 1680,1800 1800,2100
but speaks that is on
但说话的平均时间是十分钟。

2011
01:05:14,000 --> 01:05:14,900
0,300 300,540 540,660 660,810 810,900
average comes out to be

2012
01:05:14,900 --> 01:05:16,000
0,240 240,690
ten minutes.|
|

2013
01:05:16,090 --> 01:05:17,140
0,510
Okay.|
好吧。|

2014
01:05:18,150 --> 01:05:19,410
0,180 180,270 270,510 510,990 990,1260
Is it ever possible that
有没有可能像拼图一样是不可能的。

2015
01:05:19,410 --> 01:05:21,120
0,180 180,270 270,630 630,870 870,1710
like a puzzle is impossible.|
|

2016
01:05:23,180 --> 01:05:26,780
0,2400 2430,2790 2790,2970 2970,3390 3420,3600
{No,I} don't think so, it
不，我不这么认为，可能要花很长时间。

2017
01:05:26,780 --> 01:05:27,770
0,120 120,270 270,330 330,540 540,990
may take a long time.|
|

2018
01:05:29,080 --> 01:05:31,560
0,660 660,840 840,1050 1050,1920
There's gonna be {},|
将会有，|

2019
01:05:34,020 --> 01:05:35,250
0,300 300,540 540,660 660,1050 1050,1230
well there's gonna be you
好的，你可以选择节点，对吗

2020
01:05:35,250 --> 01:05:36,120
0,120 120,210 210,450 450,540 540,870
get to pick the nodes,

2021
01:05:36,120 --> 01:05:38,100
0,390 930,1590 1590,1680 1680,1800 1800,1980
correct| and you know there's
|你知道，在这种情况下，散列将落在N个前导零之内。

2022
01:05:38,100 --> 01:05:39,180
0,120 120,180 180,600 600,780 780,1080
going to be a case

2023
01:05:39,180 --> 01:05:40,560
0,270 270,360 360,930 960,1260 1260,1380
where the hash is going

2024
01:05:40,560 --> 01:05:44,280
0,90 90,690 750,2460 2610,3120 3120,3720
to fall within {N,leading} zeros.|
|

2025
01:05:47,670 --> 01:05:49,080
0,210 210,390 390,600 600,960 960,1410
And so like how, so
比如，由于比特币的价值实际上非常不稳定

2026
01:05:49,080 --> 01:05:50,250
0,240 240,330 330,690 690,810 810,1170
since the value of Bitcoin

2027
01:05:50,250 --> 01:05:52,200
0,120 120,450 450,1200 1230,1500 1500,1950
is actually very let's say

2028
01:05:52,230 --> 01:05:57,270
0,1140 4110,4320 4320,4410 4410,4830 4830,5040
volatile| and so then how
|那么我们如何才能真正确保矿工的激励制度仍然足以让这件事在未来继续下去，

2029
01:05:57,270 --> 01:05:58,050
0,120 120,210 210,420 420,660 660,780
can we actually ensure that

2030
01:05:58,050 --> 01:05:59,670
0,60 60,570 600,990 990,1140 1140,1620
the incentive system for miners

2031
01:05:59,670 --> 01:06:01,560
0,720 780,1110 1110,1590 1590,1710 1710,1890
is still adequate to keep

2032
01:06:01,560 --> 01:06:02,670
0,150 150,330 330,720 930,1050 1050,1110
this thing going for the

2033
01:06:02,670 --> 01:06:03,540
0,390
future,|
|

2034
01:06:03,800 --> 01:06:04,850
0,30 60,360 360,600 600,690 690,1050
I mean since the number
我的意思是因为像奖励这样的点赞数量是预先确定的，

2035
01:06:04,850 --> 01:06:06,410
0,210 300,900 900,1140 1140,1230 1230,1560
of likes like the reward

2036
01:06:06,410 --> 01:06:07,640
0,120 120,750 750,1050 1050,1110 1110,1230
is predetermined,| {let's,say} to be
|假设是6.25比特币，

2037
01:06:07,640 --> 01:06:09,290
0,180 180,420 420,990 990,1290 1470,1650
{6.25 - -} Bitcoins,| what
|如果由于某种原因比特币的价值下跌了怎么办？

2038
01:06:09,290 --> 01:06:10,430
0,120 120,240 240,540 540,1050 1050,1140
if for some reason the

2039
01:06:10,430 --> 01:06:11,720
0,360 360,660 660,840 840,1200 1200,1290
Bitcoin value has dropped| and
|然后，对矿工来说，激励措施还不够好

2040
01:06:11,720 --> 01:06:12,620
0,150 150,210 210,540 540,660 660,900
then the incentive is not

2041
01:06:12,620 --> 01:06:13,490
0,90 90,330 330,450 450,510 510,870
good enough for the miners|
|

2042
01:06:13,490 --> 01:06:14,600
0,120 120,270 270,450 480,780 780,1110
and so I just think.|
所以我只是觉得。|

2043
01:06:14,750 --> 01:06:16,550
0,120 120,300 300,750 750,1500 1500,1800
{Yeah,you} know there's actually no
是的，你知道矿工们这样做实际上没有任何价值，

2044
01:06:16,550 --> 01:06:17,750
0,510 510,660 660,960 960,1050 1050,1200
value for miners to do

2045
01:06:17,750 --> 01:06:19,130
0,330 330,660 660,750 750,930 930,1380
this,| then you know the
|然后你就知道比特币网络崩溃了，

2046
01:06:19,160 --> 01:06:21,020
0,300 300,690 690,1140 1140,1500 1500,1860
Bitcoin network collapse,| yeah and
|是的，想必这件事会解决的

2047
01:06:21,020 --> 01:06:22,160
0,570 570,780 780,930 930,1080 1080,1140
presumably the way this is

2048
01:06:22,160 --> 01:06:23,000
0,180 180,360 360,600 600,690 690,840
gonna work out| is the
|就是交易手续费上涨。

2049
01:06:23,000 --> 01:06:24,920
0,630 630,870 870,1260 1260,1530
transaction fees go up.|
|

2050
01:06:25,770 --> 01:06:27,030
0,180 180,510 510,690 690,780 780,1260
But then if the transaction
但如果交易手续费上涨，

2051
01:06:27,030 --> 01:06:28,140
0,210 210,420 420,690 690,960 960,1110
fees go up,| then it
|那么，对于可能使用它的人来说，这将是一种相反的激励。

2052
01:06:28,140 --> 01:06:29,370
0,420 690,900 900,1050 1050,1140 1140,1230
will, it will be a

2053
01:06:29,370 --> 01:06:31,290
0,330 330,810 810,990 990,1380 1380,1920
counter incentive for people who

2054
01:06:31,470 --> 01:06:32,940
0,180 180,330 330,480 480,1080 1110,1470
could use it.| Yeah yeah,
|是的，是的，但是如果每个人都在比特币网络上，

2055
01:06:32,940 --> 01:06:34,110
0,120 120,300 300,600 600,1080 1080,1170
but like if everybody's on

2056
01:06:34,110 --> 01:06:35,520
0,60 60,390 390,840 840,1350 1350,1410
the Bitcoin network,| if you
|如果你想交易商品，

2057
01:06:35,520 --> 01:06:37,590
0,180 180,240 240,1020 1020,1440 1440,2070
want to trade goods,| {you,know}
|你知道你必须与比特币网络上的某个人打交道，

2058
01:06:37,590 --> 01:06:38,250
0,90 90,240 240,330 330,540 540,660
you have to deal with

2059
01:06:38,250 --> 01:06:39,510
0,300 300,390 390,450 450,750 750,1260
somebody on the Bitcoin network,|
|

2060
01:06:39,780 --> 01:06:41,250
0,360 390,600 600,780 780,960 960,1470
so there's all kinds of
所以有各种各样的复杂分析，

2061
01:06:41,670 --> 01:06:43,620
0,960 960,1530 1530,1710 1710,1830 1830,1950
complicated analysis,| that I'm not
|我不想预测结果会是什么。

2062
01:06:43,620 --> 01:06:45,630
0,300 300,900 960,1530 1530,1830 1830,2010
gonna like predict on like

2063
01:06:45,630 --> 01:06:46,740
0,270 270,420 420,540 540,690 690,1110
what's gonna be the outcome.|
|

2064
01:06:47,990 --> 01:06:49,640
0,450 750,1290 1290,1380 1380,1530 1530,1650
Okay.| Well I guess we've
好吧。|嗯，我想我们已经看到了2到[21，40]

2065
01:06:49,640 --> 01:06:50,840
0,240 240,450 450,750 750,1020 1020,1200
seen two to [twenty one

2066
01:06:50,840 --> 01:06:52,550
0,480 930,1320 1320,1500 1500,1650 1650,1710
forty]| and that's sort of
|这就是我认为奖励制度用完的地方，

2067
01:06:52,550 --> 01:06:53,390
0,90 90,330 330,540 540,630 630,840
the point where I think

2068
01:06:53,390 --> 01:06:54,800
0,300 300,630 630,930 930,1170 1170,1410
the reward system runs out,|
|

2069
01:06:54,800 --> 01:06:55,700
0,240 240,420 420,540 540,660 660,900
it's gonna be all based
这将完全基于交易手续费，按照目前的汇率。

2070
01:06:55,700 --> 01:06:57,500
0,420 420,840 840,1260
on transaction fees,

2071
01:06:57,530 --> 01:06:58,730
0,360 360,480 480,540 540,840 840,1200
and with the current rate.|
|

2072
01:06:59,390 --> 01:07:01,380
0,150 150,480 750,1110
I see, thanks.|
我明白了，谢谢。|

2073
01:07:02,850 --> 01:07:03,980
0,570

2074
01:07:04,010 --> 01:07:05,570
0,570 720,1140 1140,1260 1260,1440 1440,1560
Okay, so {} the other
好的，另一件事是，你知道人们建造特殊的硬件，

2075
01:07:05,570 --> 01:07:06,620
0,120 120,240 240,420 420,690 690,1050
thing that's going on is

2076
01:07:06,620 --> 01:07:08,210
0,150 150,540 570,1050 1050,1260 1260,1590
you know people build special

2077
01:07:08,210 --> 01:07:10,490
0,570 1050,1440 1440,1530 1530,2010 2010,2280
hardware,| there are companies that
|你知道，有一些公司会在董事会上发言，

2078
01:07:10,490 --> 01:07:12,140
0,120 120,360 420,600 600,1140 1140,1650
you know will delivery boards,|
|

2079
01:07:12,140 --> 01:07:12,770
0,90 90,180 180,330 330,420 420,630
you know that are really
你知道，他们真的很擅长快速和散列，

2080
01:07:12,770 --> 01:07:13,910
0,180 180,270 270,540 540,630 630,1140
good at fast and hashing,|
|

2081
01:07:14,450 --> 01:07:16,400
0,1080 1110,1290 1290,1620 1620,1830 1830,1950
and these are used by
而这些是矿工们使用的，

2082
01:07:16,400 --> 01:07:17,720
0,90 90,360 360,930
the miner pools,|
|

2083
01:07:17,870 --> 01:07:20,330
0,810 990,1470 1470,1650 1650,2340 2340,2460
{} people say they have
人们说，他们有到许多同行的高速链路，

2084
01:07:20,330 --> 01:07:21,590
0,150 150,450 450,810 810,990 990,1260
high speed links to many

2085
01:07:21,590 --> 01:07:22,800
0,690
peers,|
|

2086
01:07:23,000 --> 01:07:24,050
0,450 450,660 660,750 750,990 990,1050
so if they find a
所以如果他们找到了一个街区，

2087
01:07:24,050 --> 01:07:25,370
0,330 330,450 450,600 600,990 990,1320
block,| they can actually get
|他们实际上可以先把它拿出来，所以他们赢了，等等。

2088
01:07:25,370 --> 01:07:26,750
0,90 90,480 480,990 1020,1200 1200,1380
it out first and so

2089
01:07:26,750 --> 01:07:28,020
0,150 150,600
they win,

2090
01:07:28,050 --> 01:07:30,720
0,390 390,870 900,1260 2070,2550 2550,2670
etc etc.| So this is
|这就是如果你对这个感兴趣的话，

2091
01:07:30,720 --> 01:07:31,800
0,480 510,720 720,810 810,900 900,1080
{} you know if you're

2092
01:07:31,800 --> 01:07:32,880
0,330 330,390 390,690 690,960 960,1080
interested in this,| you can
|你可以在网上读到很多关于它的信息，

2093
01:07:32,880 --> 01:07:33,630
0,180 180,420 420,510 510,660 660,750
read lots and lots of

2094
01:07:33,630 --> 01:07:35,670
0,390 390,570 570,660 660,1320 1560,2040
information about it online, {}|
|

2095
01:07:35,670 --> 01:07:36,930
0,510 510,690 690,870 870,1020 1020,1260
you're gonna see all the
你会看到所有的系统似乎都挂在一起。

2096
01:07:36,930 --> 01:07:38,460
0,300 300,540 540,600 600,1020 1170,1530
system seems to be hanging

2097
01:07:38,460 --> 01:07:39,420
0,450
together.|
|

2098
01:07:43,240 --> 01:07:44,920
0,510 660,1380 1380,1440 1440,1620 1620,1680
Okay, let me talk a
好的，让我来谈谈一大堆实际问题，

2099
01:07:44,920 --> 01:07:45,820
0,180 180,330 330,690 690,720 720,900
little bit about a whole

2100
01:07:45,820 --> 01:07:47,890
0,180 180,720 1020,1560 1560,1950 1950,2070
bunch of practical issues,| that
|我有点忽略了这一点，尽管我们略有触及。

2101
01:07:47,890 --> 01:07:48,910
0,60 60,270 270,330 330,810 810,1020
I sort of ignored, although

2102
01:07:48,910 --> 01:07:49,690
0,120 120,450 450,660 660,720 720,780
we touched on it a

2103
01:07:49,690 --> 01:07:51,160
0,330
bit.|
|

2104
01:07:57,560 --> 01:08:00,230
0,690 990,1500 1500,1950 1950,2130 2130,2670
So, so first ten minutes,|
所以，前十分钟，|

2105
01:08:03,320 --> 01:08:04,250
0,120 120,330 330,510 510,780 780,930
I think ten minutes is
我认为10分钟基本上就是用户使用时间的上限

2106
01:08:04,250 --> 01:08:06,540
0,660 660,1020 1020,1710
basically user time

2107
01:08:06,540 --> 01:08:07,410
0,120 120,360 360,600 600,810 810,870
you know the sort of

2108
01:08:07,410 --> 01:08:08,670
0,210 210,570 570,900 900,1140 1140,1260
upper bound| where like you
|就像你知道的，大概十次，

2109
01:08:08,670 --> 01:08:10,920
0,240 240,750 870,1080 1080,1800
know, like ten times,|
|

2110
01:08:11,190 --> 01:08:13,960
0,120 120,870 1050,1800
the time roughly
大体上淹没网络的时间。

2111
01:08:14,050 --> 01:08:15,820
0,120 120,390 390,450 450,1080
to flood the network.|
|

2112
01:08:20,590 --> 01:08:21,490
0,210 210,300 300,450 450,750 750,900
So {} {Bitcoin - -}
所以比特币试图避免你知道这是一种特权，

2113
01:08:21,490 --> 01:08:22,900
0,270 270,390 390,1050 1080,1260 1260,1410
try to avoid you know

2114
01:08:22,900 --> 01:08:24,160
0,510 510,570 600,810 810,1020 1020,1260
these are a sort of

2115
01:08:24,160 --> 01:08:27,610
0,810 1020,2190 2190,2370 2370,2760 2760,3450
privilege,| {} {you,know} privilege {}
|你知道特权分叉，

2116
01:08:27,640 --> 01:08:29,710
0,810 840,1320 1320,1710 1710,1860 1860,2070
fork,| we're basically {you,know} two
|我们基本上是两个节点同时粗略地计算

2117
01:08:29,710 --> 01:08:30,850
0,360 360,450 450,510 510,750 750,1140
nodes at the same time

2118
01:08:30,850 --> 01:08:32,980
0,390 390,900 1140,1350 1350,1620 1620,2130
roughly compute| and therefore extends
|因此大致同时延伸一条链，

2119
01:08:32,980 --> 01:08:35,500
0,870 1410,2100 2100,2370 2370,2460 2460,2520
a chain roughly at the

2120
01:08:35,500 --> 01:08:36,730
0,210 210,750 900,990 990,1170 1170,1230
same time,| and want to
|并且想要尽量避免这种情况，

2121
01:08:36,730 --> 01:08:38,230
0,120 120,210 210,510 510,870 1170,1500
try to avoid that {},|
|

2122
01:08:38,230 --> 01:08:40,210
0,360 360,510 510,1200 1200,1650 1650,1980
and so one way to
因此，避免这种情况的一种方法是

2123
01:08:40,210 --> 01:08:41,320
0,270 270,510 510,660 660,750 750,1110
avoid that is| to basically
|为了给节点留出足够的时间，让许多对等点获得你知道的块，

2124
01:08:41,320 --> 01:08:42,550
0,150 150,480 480,960 960,1140 1140,1230
give enough time to the

2125
01:08:42,550 --> 01:08:43,570
0,390 390,510 510,720 720,780 780,1020
nodes to sort of get

2126
01:08:43,570 --> 01:08:44,460
0,390
the,

2127
01:08:44,460 --> 01:08:46,140
0,450 450,780 780,1200 1200,1560 1560,1680
{} the block out you

2128
01:08:46,140 --> 01:08:47,580
0,90 90,480 480,990 1020,1230 1230,1440
know to a many many

2129
01:08:47,580 --> 01:08:49,140
0,240 240,810 960,1140 1140,1290 1290,1560
many peers,| so that most
|所以大多数同龄人实际上都知道这一点。

2130
01:08:49,140 --> 01:08:50,340
0,240 240,510 510,690 690,990 990,1200
peers actually know about it.|
|

2131
01:08:51,110 --> 01:08:52,640
0,630 810,1170 1170,1320 1320,1410 1410,1530
{} {And,then} you know so
然后你知道，这就是为什么我们的服务十分钟来自。

2132
01:08:52,640 --> 01:08:53,780
0,210 210,390 390,600 600,870 870,1140
that's why we serve ten

2133
01:08:53,780 --> 01:08:55,460
0,450 540,810 810,1110
minutes comes from.|
|

2134
01:08:56,150 --> 01:08:57,640
0,930

2135
01:08:57,840 --> 01:08:59,250
0,60 60,420 420,480 480,750 750,1410
Of course, the block size
当然，块大小决定了每秒较新的事务，

2136
01:09:03,390 --> 01:09:05,760
0,270 270,810 810,1590 1620,2010 2010,2370
{} determines the newer transaction

2137
01:09:05,760 --> 01:09:07,100
0,120 120,540
per second,|
|

2138
01:09:08,790 --> 01:09:10,800
0,450 450,570 570,990 990,1290 1290,2010
{} the {block,size,is} roughly megabyte,|
块大小大约为兆字节，|

2139
01:09:10,800 --> 01:09:13,240
0,180 180,720 1020,1800
and so, {}
所以，你知道你要做的是每隔大约10分钟做一个街区，

2140
01:09:15,160 --> 01:09:16,090
0,120 120,450 480,690 690,810 810,930
you know you're gonna do

2141
01:09:16,090 --> 01:09:17,710
0,240 240,690 690,1440 1440,1500 1500,1620
one block per you know

2142
01:09:17,710 --> 01:09:19,720
0,270 270,450 450,1050 1200,1890 1890,2010
roughly ten minutes,| then you
|那么您就知道事务的数量被限制为能够容纳在单个数据块中的多个事务，

2143
01:09:19,720 --> 01:09:21,100
0,150 150,300 300,570 570,690 690,1380
know the number of transactions

2144
01:09:21,100 --> 01:09:23,260
0,180 210,1140 1140,1320 1320,1680 1680,2160
is a is limited to

2145
01:09:23,560 --> 01:09:27,400
0,1020 1410,2250 2250,2400 2400,3000 3450,3840
a number of a number

2146
01:09:27,400 --> 01:09:28,420
0,150 150,570 570,720 720,930 930,1020
of transaction that fit in

2147
01:09:28,420 --> 01:09:29,700
0,60 60,300 300,780
a single block,|
|

2148
01:09:29,700 --> 01:09:30,870
0,300 300,600 600,810 810,960 960,1170
{} and that is a
这是一系列的交易，你可以做到。

2149
01:09:30,870 --> 01:09:31,650
0,150 150,210 210,600 600,660 660,780
number of transactions, you can

2150
01:09:31,650 --> 01:09:32,500
0,270
do.|
|

2151
01:09:32,750 --> 01:09:34,700
0,630 1020,1290 1290,1470 1470,1710 1710,1950
{} And it turns out
事实证明，在今天，你知道许多交易是

2152
01:09:34,700 --> 01:09:37,580
0,360 360,1080 1380,2040 2220,2760 2760,2880
that for {} today you

2153
01:09:37,580 --> 01:09:39,110
0,150 150,450 450,960 1200,1470 1470,1530
know that a number of

2154
01:09:39,110 --> 01:09:40,670
0,600 600,840 840,1050 1050,1410 1410,1560
transactions is| like you get
|就像你以每秒几千次的速度计算出数字一样

2155
01:09:40,670 --> 01:09:41,840
0,90 90,150 150,600 600,720 720,1170
in the thousands per second

2156
01:09:42,050 --> 01:09:43,160
0,240 240,540 540,630 630,720 720,1110
to work out the numbers|
|

2157
01:09:43,160 --> 01:09:44,810
0,150 150,330 330,840 990,1110 1200,1650
and that's sufficient for example
这就足够了，例如，可能有一个类比，人使它比Visa网络更大

2158
01:09:44,810 --> 01:09:46,820
0,240 240,630 1050,1170 1170,1740 1740,2010
there's probably an analogy people

2159
01:09:46,820 --> 01:09:48,080
0,150 150,450 450,840 840,1050 1050,1260
which made it bigger than

2160
01:09:48,080 --> 01:09:50,240
0,240 420,750 750,1350 1350,1740 1740,2160
the Visa network| more transaction
|Visa可以处理更多的交易，

2161
01:09:50,240 --> 01:09:51,980
0,60 60,390 390,960 1260,1560 1560,1740
of {Visa,can} process,| {} by
|可能还不够大，实际上，

2162
01:09:51,980 --> 01:09:53,090
0,330 330,450 450,720 720,840 840,1110
presumably is not big enough

2163
01:09:53,090 --> 01:09:56,180
0,90 90,480 480,1020 1530,2310 2340,3090
to actually,| { -} basically
|基本上运行所有的交易，你知道世界各地的货币交易。

2164
01:09:56,180 --> 01:09:58,400
0,240 240,690 690,1290 1290,1530 1800,2220
run all transactions you know

2165
01:09:58,430 --> 01:10:00,650
0,270 270,720 720,810 810,1320 1350,2220
money transaction the world across.|
|

2166
01:10:01,640 --> 01:10:03,140
0,840

2167
01:10:03,340 --> 01:10:05,230
0,690 690,1170 1260,1320 1320,1710 1710,1890
Another big, I will come
另一件大事，我稍后会回到这个问题上来，

2168
01:10:05,230 --> 01:10:06,130
0,510 510,600 600,750 750,840 840,900
back to this in a

2169
01:10:06,130 --> 01:10:09,550
0,450 780,1500 1560,2220 2220,2550 2550,3420
second,| {} another big issue
|另一个大问题是，改变协议，改变需要达成共识。

2170
01:10:09,550 --> 01:10:11,320
0,360 360,630 660,1380 1380,1680 1680,1770
is that changes to the

2171
01:10:11,320 --> 01:10:13,200
0,690
protocol,

2172
01:10:14,230 --> 01:10:16,520
0,300 300,690 690,1560
change require consensus.|
|

2173
01:10:21,580 --> 01:10:23,650
0,600 1020,1500 1500,1650 1650,1920 1920,2070
And in some cases this
在某些情况下，这很容易，对吧，

2174
01:10:23,650 --> 01:10:25,980
0,120 120,600 630,1080 1110,1740
is easy, right, {}|
|

2175
01:10:26,880 --> 01:10:28,720
0,360 360,660 660,870 870,1290
some changes are easy.|
有些改变是很容易的。|

2176
01:10:31,840 --> 01:10:33,700
0,720 720,1080 1080,1440 1440,1530 1530,1860
{There's,one} easy changes, for example
有一个简单的变化，例如前导零的数量，

2177
01:10:33,700 --> 01:10:34,930
0,90 90,300 300,390 390,600 600,1230
the number of leading zeros,|
|

2178
01:10:35,710 --> 01:10:37,600
0,240 240,450 450,900 900,960 960,1890
{you,know} there's basically a deterministic
你知道，基本上有一种确定性的算法要根据过去的日志条目进行计算，

2179
01:10:38,120 --> 01:10:40,610
0,270 270,1020 1350,1710 1710,2160 2160,2490
{} algorithm to compute from

2180
01:10:40,610 --> 01:10:43,100
0,570 600,1110 1110,1380 1380,2100 2250,2490
the past log entries, {}|
|

2181
01:10:43,100 --> 01:10:44,330
0,360 360,450 450,1020 1020,1110 1110,1230
what the difficulty is going
对于未来的谜题来说，难度是什么。

2182
01:10:44,330 --> 01:10:47,000
0,60 60,300 300,480 480,1860 2010,2670
to be for future puzzles.|
|

2183
01:10:47,570 --> 01:10:48,500
0,330 330,540 540,720 720,840 840,930
And since this would be
并且由于这将是日志的函数的确定性，

2184
01:10:48,500 --> 01:10:50,900
0,540 540,630 630,1260 1680,2250 2250,2400
deterministic of a function of

2185
01:10:50,900 --> 01:10:52,940
0,180 180,750 750,930 930,1560 1680,2040
the log,| there's nothing that
|从根本上说，没有什么能改变一个简单、

2186
01:10:52,940 --> 01:10:54,800
0,390 390,930 930,1380 1380,1710 1710,1860
changes basically an easy,| there's
|在协议中还有一堆其他参数，

2187
01:10:54,800 --> 01:10:56,390
0,90 90,360 360,570 570,1140 1140,1590
a bunch of other parameters

2188
01:10:56,390 --> 01:10:57,290
0,60 60,120 120,540 540,630 630,900
in the protocol,| but that
|但是那种味道。

2189
01:10:57,290 --> 01:10:58,420
0,120 120,180 180,630
kind of flavor.|
|

2190
01:11:00,000 --> 01:11:01,590
0,270 270,540 540,1020 1020,1440 1440,1590
Some changes however result in
然而，一些变化导致了软工作，

2191
01:11:01,590 --> 01:11:03,200
0,210 210,510 510,990
a soft work,|
|

2192
01:11:10,350 --> 01:11:11,340
0,270 270,510 510,660 660,840 840,990
we talked a little bit
我们稍微谈了一下，

2193
01:11:11,340 --> 01:11:13,350
0,450 660,960 960,1170 1170,1920 1920,2010
about,| let's say yeah you
|比方说，是的，你知道比特币的主要分销渠道到核心分销渠道，我想要做出改变，

2194
01:11:13,350 --> 01:11:15,780
0,180 180,900 1200,1590 1590,2190 2190,2430
know the main suffered main

2195
01:11:15,780 --> 01:11:17,730
0,570 570,660 660,930 930,1800 1800,1950
distribution to core distribution for

2196
01:11:17,730 --> 01:11:18,870
0,630 660,690 720,960 960,1020 1020,1140
Bitcoin I want to make

2197
01:11:18,870 --> 01:11:20,250
0,90 90,510 510,960 960,1170 1170,1380
a change,| there are the
|有一种不相容的，

2198
01:11:20,250 --> 01:11:22,710
0,180 180,270 270,1080 1530,2070 2100,2460
sort of incompatible,| {} then
|然后，您将拥有旧客户或使用旧软件运行的客户，

2199
01:11:22,710 --> 01:11:24,090
0,210 210,360 360,570 570,810 810,1380
you're gonna have old clients

2200
01:11:24,210 --> 01:11:25,320
0,480 480,750 750,930 930,1050 1050,1110
or clients running with the

2201
01:11:25,320 --> 01:11:26,610
0,180 180,720 720,990 990,1200 1200,1290
old software,| peers running with
|运行旧软件的对等点和新软件的新对等点，

2202
01:11:26,610 --> 01:11:27,660
0,60 60,210 210,570 570,840 840,1050
the old software and new

2203
01:11:27,660 --> 01:11:29,970
0,330 600,960 960,1500 1920,2160 2160,2310
peers new software,| and that
|你知道，这会暂时产生一些分叉，

2204
01:11:29,970 --> 01:11:31,980
0,270 270,1140 1140,1320 1320,1740 1770,2010
will temporarily {you,know} may create

2205
01:11:31,980 --> 01:11:34,170
0,120 120,720 1110,1830 1830,1920 1920,2190
some forks,| {} of course
|当然，你知道有一些交流正在进行

2206
01:11:34,170 --> 01:11:35,400
0,60 60,180 180,570 570,720 720,1230
you know there's some communication

2207
01:11:35,400 --> 01:11:37,590
0,270 270,660 660,1110 1110,1530 1530,2190
going on| and {} in
|从长远来看，

2208
01:11:37,590 --> 01:11:38,430
0,60 60,330 330,660 660,720 720,840
the long run,| you know
|你知道，人们很可能会选择安装了新软件的新叉子。

2209
01:11:38,430 --> 01:11:40,290
0,690 930,1200 1200,1350 1350,1650 1650,1860
probably people will settle on

2210
01:11:40,290 --> 01:11:41,970
0,60 60,300 300,810 1110,1410 1410,1680
the new fork {} with

2211
01:11:41,970 --> 01:11:43,020
0,90 90,270 270,750
the new software.|
|

2212
01:11:44,790 --> 01:11:46,200
0,270 270,780 780,1020 1020,1350 1350,1410
Some changes actually result in
有些变化实际上导致了一个艰难的分叉。

2213
01:11:46,200 --> 01:11:48,260
0,60 60,330 330,810
a hard fork.|
|

2214
01:11:54,490 --> 01:11:55,940
0,360 360,630 630,720

2215
01:11:57,390 --> 01:11:58,500
0,420 420,600 600,660 660,990 990,1110
{} so, for example there
举个例子，几年前，

2216
01:11:58,500 --> 01:12:00,150
0,180 180,840 900,1080 1080,1290 1290,1650
was a couple years ago,|
|

2217
01:12:00,150 --> 01:12:00,960
0,120 120,240 240,330 330,720 720,810
there was a lot of
关于这个区块的大小有很多讨论，

2218
01:12:00,960 --> 01:12:02,550
0,420 420,630 630,720 720,1050 1050,1590
discussion about this block size,|
|

2219
01:12:03,480 --> 01:12:04,950
0,420 540,930 930,1020 1020,1080 1080,1470
some people in the community,|
社区里的一些人，|

2220
01:12:04,950 --> 01:12:05,850
0,270 270,420 420,480 480,840 840,900
community want to increase the
社区想要增加区块大小，

2221
01:12:05,850 --> 01:12:06,840
0,270 270,510 510,600 600,750 750,990
block size,| so other people
|所以其他人不想增加块大小

2222
01:12:06,840 --> 01:12:07,560
0,210 210,330 330,390 390,660 660,720
don't want to increase the

2223
01:12:07,560 --> 01:12:09,390
0,270 270,660 1110,1320 1320,1770 1770,1830
block size| and basically you
|基本上你知道他们分开了

2224
01:12:09,390 --> 01:12:11,940
0,450 450,1020 1080,1320 1320,1800 1950,2550
know {} they split| and
|这与两个比特币或两个比特币分支的运行相对应。

2225
01:12:11,940 --> 01:12:14,640
0,720 720,1230 1230,1410 1410,1830 1830,2700
there's corresponds with two Bitcoin

2226
01:12:14,850 --> 01:12:18,200
0,360 420,1770 1770,2280 2280,2640
or {two,Bitcoin} forks running.|
|

2227
01:12:22,560 --> 01:12:23,700
0,60 60,270 270,630 630,960 960,1140
In fact, there's probably more
事实上，可能不止两个，

2228
01:12:23,700 --> 01:12:25,230
0,120 120,480 720,1140 1140,1320 1320,1530
than two,| but like that
|但就像那次一样，解决的是硬件和硬叉。

2229
01:12:25,230 --> 01:12:26,880
0,330 330,750 750,930 930,1560 1560,1650
one resolved in hardware and

2230
01:12:26,880 --> 01:12:28,520
0,300 300,600 600,1110
hard forks split.|
|

2231
01:12:28,930 --> 01:12:30,970
0,510 960,1470 1500,1800 1800,1980 1980,2040
{} So, {} sort of
所以，有一个有趣的方面，你知道这种共识进入了一种系统，

2232
01:12:30,970 --> 01:12:32,290
0,60 60,480 480,570 570,720 720,1320
an interesting you know aspect

2233
01:12:32,290 --> 01:12:33,520
0,60 60,180 180,660 660,990 990,1230
of this consensus into kind

2234
01:12:33,520 --> 01:12:34,720
0,60 60,510 510,750 750,1080 1080,1200
of systems,| that you're going
|你会遇到这样的实际问题，

2235
01:12:34,720 --> 01:12:36,550
0,60 60,600 630,1320 1410,1650 1650,1830
to have {} these kinds

2236
01:12:36,550 --> 01:12:38,170
0,90 90,480 480,840 840,990 990,1620
of practical problems,| that actually
|它实际上可以读取到软件或硬件中，

2237
01:12:38,470 --> 01:12:40,360
0,360 360,720 720,1050 1050,1320 1320,1890
can read either into software

2238
01:12:40,360 --> 01:12:41,710
0,360 360,480 480,900 900,1110 1110,1350
or in hardware,| because people
|因为人们只是不想在特定的形式上进行合作。

2239
01:12:41,710 --> 01:12:42,670
0,150 150,270 270,390 390,450 450,960
just don't want to collaborate

2240
01:12:42,670 --> 01:12:44,160
0,270 270,330 330,720 720,990
on a particular form.|
|

2241
01:12:46,280 --> 01:12:48,080
0,270 270,690 690,900 900,1290
Any questions about this?|
对此有什么问题吗？|

2242
01:12:50,070 --> 01:12:52,530
0,540 720,960 960,1710 1710,2010 2010,2460
{} What happens in hard
在硬叉上会发生什么？

2243
01:12:52,530 --> 01:12:53,740
0,750
forks?|
|

2244
01:12:53,830 --> 01:12:55,450
0,450 870,1110 1110,1260 1260,1470 1470,1620
You have two {} two
你有两个不同的区块链，

2245
01:12:55,450 --> 01:12:56,860
0,450 450,930
different blockchains,|
|

2246
01:12:57,460 --> 01:12:58,630
0,300 300,630 630,720 720,810 810,1170
and clients have to choose
客户必须选择他们想要成为哪种叉子。

2247
01:12:58,630 --> 01:12:59,470
0,240 240,510 510,570 570,720 720,840
which fork they want to

2248
01:12:59,470 --> 01:13:00,240
0,210
be.|
|

2249
01:13:01,060 --> 01:13:02,280
0,660
Interesting.|
有意思的。|

2250
01:13:03,310 --> 01:13:04,780
0,390 390,780 780,960 960,1380 1380,1470
Or publish their transactions in
或者在这两本书上发表他们的交易，我不知道。

2251
01:13:04,780 --> 01:13:06,840
0,360 360,600 600,840 960,1410
both, I don't know.|
|

2252
01:13:07,020 --> 01:13:08,880
0,150 150,810 990,1410 1410,1560 1560,1860
I mean, but you have
我的意思是，但你有，我说我有几个比特币，

2253
01:13:08,880 --> 01:13:10,380
0,600 750,930 930,1200 1200,1320 1320,1500
like, I say I have

2254
01:13:10,380 --> 01:13:12,240
0,270 270,600 600,1320
a couple Bitcoin,|
|

2255
01:13:12,720 --> 01:13:14,100
0,180 180,510 510,720 720,1140 1140,1380
I'll have a couple of
我要几个比特币，两个叉子，对吧，

2256
01:13:14,100 --> 01:13:16,680
0,660 690,1140 1140,1530 1530,1920 1920,2580
Bitcoin both forks, right,| but
|但我可以开始花掉它们，

2257
01:13:16,680 --> 01:13:18,330
0,120 120,270 270,630 630,1140 1140,1650
I can start spending them,|
|

2258
01:13:19,010 --> 01:13:21,230
0,210 210,960 990,1470 1530,1800 1800,2220
and either, like.| Well you
或者，就像。|嗯，你有，你有比特币在那些的前缀，对吗。

2259
01:13:21,230 --> 01:13:22,400
0,450 480,630 630,750 750,1080 1080,1170
have you have bitcoins in

2260
01:13:22,400 --> 01:13:24,860
0,90 90,750 780,930 930,1260 1560,2460
the prefix of those, correct.|
|

2261
01:13:24,860 --> 01:13:26,630
0,210 210,330 330,1170 1200,1560 1560,1770
So and both forks have
所以两个叉子都有前缀，

2262
01:13:26,630 --> 01:13:28,130
0,60 60,720 780,1080 1080,1200 1200,1500
the prefix,| so you can
|所以你可以，你不能重复花钱。

2263
01:13:28,130 --> 01:13:29,030
0,90 90,300 300,540 540,780 780,900
you can't double spend your

2264
01:13:29,030 --> 01:13:29,960
0,360
money.|
|

2265
01:13:30,760 --> 01:13:33,250
0,750 1170,1380 1380,1710 1710,2220 2220,2490
Ha.| Well, so actually in
哈哈。|那么，实际上在比特币分叉的情况下，有一个硬叉

2266
01:13:33,250 --> 01:13:34,420
0,240 240,360 360,720 720,930 930,1170
in the case of like

2267
01:13:34,420 --> 01:13:35,830
0,240 240,840 840,1200 1200,1290 1290,1410
when Bitcoin fork there was

2268
01:13:35,830 --> 01:13:36,850
0,60 60,360 360,630 630,780 780,1020
a hard fork| and in
|其中一个新的叉子被称为比特币现金，

2269
01:13:36,850 --> 01:13:38,410
0,300 300,540 540,630 630,1500 1500,1560
the one of the new

2270
01:13:38,440 --> 01:13:40,180
0,330 330,450 450,720 720,1170 1170,1740
forks was called Bitcoin cash,|
|

2271
01:13:40,180 --> 01:13:42,910
0,960 990,1380 1380,1830 1830,1920 1920,2730
all the tokens were duplicated
所有令牌都是在令牌的值内复制的。

2272
01:13:43,030 --> 01:13:45,940
0,750 780,1320 1380,2460 2460,2820 2820,2910
within the value of the

2273
01:13:45,940 --> 01:13:47,220
0,870
tokens.|
|

2274
01:13:47,250 --> 01:13:48,780
0,660 840,1020 1020,1260 1260,1380 1380,1530
{} It wasn't like you
你的价值不会像比特币价格下跌那样翻一番

2275
01:13:48,780 --> 01:13:49,740
0,270 270,390 390,690 690,810 810,960
doubled your values like the

2276
01:13:49,740 --> 01:13:51,750
0,330 330,450 450,960 960,1830 1830,2010
price of Bitcoin decrease| and
|减少的差额是比特币现金的价值，

2277
01:13:51,750 --> 01:13:53,370
0,450 480,750 750,1170 1170,1350 1350,1620
then the difference in that

2278
01:13:53,370 --> 01:13:54,750
0,600 630,840 840,960 960,1320 1320,1380
decrease was the value of

2279
01:13:54,750 --> 01:13:57,460
0,90 90,510 510,1140 1560,2220
the Bitcoin cash,| so,
|所以，可以把它想象成股票拆分，

2280
01:13:57,520 --> 01:13:58,660
0,690 690,870 870,930 930,1020 1020,1140
is think of it like

2281
01:13:58,660 --> 01:14:00,100
0,60 60,390 390,780 780,1200 1260,1440
a stock split,| like you
|就像你得到了更多的代币，但实际价值保持不变，

2282
01:14:00,100 --> 01:14:01,750
0,210 210,480 480,1050 1050,1350 1350,1650
get more tokens, but the

2283
01:14:01,750 --> 01:14:03,670
0,450 450,1230 1410,1590 1590,1830 1830,1920
actual value would stay the

2284
01:14:03,670 --> 01:14:05,230
0,570 630,870 870,960 960,1080 1080,1560
same,| because you're just increasing
|因为你只是在增加代币的供应。

2285
01:14:05,230 --> 01:14:06,920
0,90 90,480 480,600 600,1230
the supply of tokens.|
|

2286
01:14:06,920 --> 01:14:07,980
0,510
{Okay,great}.|
好的，很好。|

2287
01:14:08,920 --> 01:14:10,200
0,420 420,690
Thank you.|
谢谢。|

2288
01:14:12,310 --> 01:14:13,780
0,210 210,360 360,960
Any other questions?|
还有其他问题吗？|

2289
01:14:19,380 --> 01:14:21,150
0,300 300,510 510,690 690,1140 1170,1770
Okay good, let me summarize
好的，现在让我来总结一下。

2290
01:14:21,150 --> 01:14:22,520
0,360
now.|
|

2291
01:14:26,730 --> 01:14:28,020
0,720

2292
01:14:28,210 --> 01:14:29,950
0,510 570,1050 1080,1500 1500,1650 1650,1740
So, {} basically what we
因此，基本上我们在这里看到的是分发共识，

2293
01:14:29,950 --> 01:14:31,690
0,180 180,900 900,1140 1140,1350 1350,1740
see here is gonna distribute

2294
01:14:31,690 --> 01:14:33,260
0,870
consensus,|
|

2295
01:14:36,640 --> 01:14:39,400
0,540 900,1500 1500,1770 1770,2190 2190,2760
with an open distributed systems
利用具有潜在拜占庭参与者的开放分布式系统，

2296
01:14:39,400 --> 01:14:42,880
0,360 1170,1740 1740,2280 2280,2730 2730,3480
with potentially byzantine {} participants,|
|

2297
01:14:43,030 --> 01:14:45,640
0,420 1500,1770 1770,1950 1950,2160 2160,2610
which let's see if my
让我们看看我的程序是否崩溃了，等一下。

2298
01:14:45,940 --> 01:14:47,980
0,360 360,780 780,1230 1230,1560
program crashed, {hold,on} {a,second}.|
|

2299
01:15:10,480 --> 01:15:11,800
0,390 390,540 540,690 690,1110 1110,1320
{} So this consensus is
因此，这种共识是拜占庭潜在的拜占庭参与者的共识。

2300
01:15:11,830 --> 01:15:14,170
0,360 360,780 780,1380 1380,1830 1830,2340
{} with byzantine potentially byzantine

2301
01:15:14,170 --> 01:15:19,860
0,720
participants.|
|

2302
01:15:23,020 --> 01:15:24,790
0,570 570,1050 1050,1170 1170,1290 1290,1770
{} And you know the
你知道，如果你愿意，你知道在这个公共账本或公共日志上达成共识的事情。

2303
01:15:25,000 --> 01:15:26,110
0,120 120,270 270,660 660,930 930,1110
you know the the thing

2304
01:15:26,110 --> 01:15:27,310
0,120 120,510 510,660 660,960 960,1200
that actually is being reached

2305
01:15:27,310 --> 01:15:28,930
0,420 420,570 570,810 810,1110 1110,1620
consensus on this public ledger

2306
01:15:29,260 --> 01:15:30,460
0,330 330,630 630,990 990,1080 1080,1200
or public log, if you

2307
01:15:30,460 --> 01:15:31,460
0,390
will.|
|

2308
01:15:33,710 --> 01:15:35,300
0,150 150,480 480,1290 1290,1470 1470,1590
The basic order, all the
基本顺序，从时间开始以来的所有交易

2309
01:15:35,300 --> 01:15:36,590
0,480 480,750 750,960 960,1050 1050,1290
transactions ever since the beginning

2310
01:15:36,590 --> 01:15:39,980
0,90 90,630 960,1620 1620,3000 3000,3390
of time| {} and allow
|并允许人们检查每个公钥的余额是多少

2311
01:15:39,980 --> 01:15:42,590
0,960 990,1500 1500,1980 1980,2430 2430,2610
people to check what the

2312
01:15:42,620 --> 01:15:45,050
0,510 510,900 900,990 990,1560 1770,2430
balances are of every public

2313
01:15:45,050 --> 01:15:48,590
0,450 660,1530 1530,2610 2610,3210 3210,3540
key| and {} avoid double
|并避免重复支出，

2314
01:15:48,590 --> 01:15:51,050
0,510 930,1650 1650,2190 2190,2310 2310,2460
spending,| {} and you know
|你知道这里特别酷的想法是

2315
01:15:51,050 --> 01:15:52,970
0,450 480,960 960,1350 1350,1500 1500,1920
the particular {cool,sort,of} the idea

2316
01:15:52,970 --> 01:15:55,340
0,390 390,690 690,1380 1410,2130 2130,2370
here is| to basically just
|基本上只是工作证明。

2317
01:15:55,340 --> 01:15:56,840
0,180 180,270 270,780
{proof-of-work - -}.|
|

2318
01:15:56,870 --> 01:16:00,170
0,300 300,840 840,1560 1560,2040 2520,3300
{} Idea to {} determine
实际确定允许谁扩展区块链的想法。

2319
01:16:00,170 --> 01:16:02,420
0,270 270,1230 1320,1530 1530,2070 2070,2250
actually who is allowed to

2320
01:16:02,420 --> 01:16:04,160
0,450 450,510 510,810 810,1260
extend the block chain.|
|

2321
01:16:05,030 --> 01:16:06,200
0,630
Okay?|
好吧?|

2322
01:16:06,420 --> 01:16:08,130
0,390 420,540 540,870 870,1080 1080,1710
So it's basically all I
所以这基本上就是我想说的，

2323
01:16:08,130 --> 01:16:10,710
0,180 180,660 690,1290 2040,2310 2430,2580
{want,to} say,| {} so if
|所以如果你需要逃跑和离开，

2324
01:16:10,710 --> 01:16:12,390
0,300 330,570 570,930 960,1500 1500,1680
you need to run and

2325
01:16:12,390 --> 01:16:13,830
0,420 450,840 840,1020 1020,1200 1200,1440
leave,| {} feel free to
|你们可以走了，这堂课基本上到此结束，

2326
01:16:13,830 --> 01:16:14,940
0,480 480,570 570,720 720,780 780,1110
leave and this is basically

2327
01:16:14,940 --> 01:16:15,840
0,90 90,210 210,270 270,420 420,900
the end of this lecture,|
|

2328
01:16:16,260 --> 01:16:17,670
0,540 540,930 930,1170 1170,1230 1230,1410
{} anybody wants to stay
任何人想留下来问更多问题，请随时留下来，

2329
01:16:17,670 --> 01:16:18,600
0,90 90,240 240,330 330,660 660,930
and ask more questions, please

2330
01:16:18,600 --> 01:16:20,130
0,330 330,480 480,570 570,1050 1200,1530
feel free to stay, {}|
|

2331
01:16:20,130 --> 01:16:21,750
0,210 210,720 720,930 930,1110 1110,1620
on Thursday there's no lecture
星期四不上课，要不就是黑客日

2332
01:16:21,750 --> 01:16:23,070
0,330 330,510 510,660 660,990 990,1320
or it's a hacking day|
|

2333
01:16:23,070 --> 01:16:24,750
0,570 570,780 780,1020 1020,1260 1260,1680
as you know that Friday
正如你所知道的，周五是期末专题或实验4的最后期限，无论你要做什么，

2334
01:16:24,750 --> 01:16:27,060
0,120 120,300 300,840 1020,1530 1980,2310
is the deadline for the

2335
01:16:27,060 --> 01:16:28,920
0,300 300,750 750,990 990,1560 1560,1860
final project or lab 4

2336
01:16:28,920 --> 01:16:30,240
0,450 450,630 630,840 840,1110 1110,1320
whatever you'll be doing,| so,
|所以，祝你好运，努力完成这项工作。

2337
01:16:30,240 --> 01:16:32,190
0,180 180,570 600,1080 1080,1380 1650,1950
good luck trying to get

2338
01:16:32,190 --> 01:16:33,440
0,180 180,360 360,960
that work finished.|
|

2339
01:16:33,440 --> 01:16:35,330
0,390 390,750 780,1140 1140,1650 1650,1890
{} And {} we'll talk
我们将在下周二的下一次班会上讨论。

2340
01:16:35,330 --> 01:16:37,010
0,240 240,750 780,1140 1140,1410 1410,1680
in the next class meeting

2341
01:16:37,010 --> 01:16:38,320
0,300 300,690
next Tuesday.|
|

2342
01:16:39,120 --> 01:16:40,400
0,210 210,390 390,720
Okay, thank you.|
好的谢谢。|

2343
01:16:43,650 --> 01:16:45,180
0,450 480,690 690,1020 1020,1440 1440,1530
Oh, could you talk a
哦，你能不能再多谈一点有关证据的问题？

2344
01:16:45,180 --> 01:16:46,350
0,300 300,510 510,720 720,990 990,1170
little bit more about the

2345
01:16:46,350 --> 01:16:47,980
0,270 270,420 420,1140
{proof-of-stake - -}?|
|

2346
01:16:48,440 --> 01:16:51,980
0,720 1560,2250 2250,2910 2940,3360 3360,3540
{ -} Sure, I'm not
当然，我不知道该怎么说。

2347
01:16:51,980 --> 01:16:53,330
0,240 240,630 630,840 840,1080 1080,1350
sure what to say about

2348
01:16:53,330 --> 01:16:54,840
0,180
it.|
|

2349
01:16:56,250 --> 01:16:57,150
0,270 270,480 480,720 720,840 840,900
{} The day you know
有一天你知道如果你想知道更多细节

2350
01:16:57,150 --> 01:16:57,900
0,60 60,180 180,330 330,480 480,750
if you want to know

2351
01:16:57,900 --> 01:16:58,860
0,150 150,330 330,750 750,840 840,960
any more details,| you know
|你知道只有谷歌的利害关系证明

2352
01:16:58,860 --> 01:17:00,630
0,210 210,540 540,810 810,1290 1320,1770
just Google {proof-of-stake -}| and
|你会发现一种不同的比特币货币使用它

2353
01:17:00,660 --> 01:17:02,100
0,210 210,390 390,660 660,990 990,1440
you'll find a different Bitcoin

2354
01:17:02,100 --> 01:17:04,350
0,510 510,630 630,990 990,1290 1290,2250
currencies that use it| and
|我会告诉你更多细节，

2355
01:17:04,710 --> 01:17:06,420
0,360 360,570 570,810 810,1290 1320,1710
and I'll tell you more

2356
01:17:06,420 --> 01:17:07,440
0,510
detail,|
|

2357
01:17:07,740 --> 01:17:08,880
0,390 390,510 510,900 900,990 990,1140
{} but basically you know
但基本上你知道，

2358
01:17:08,880 --> 01:17:11,700
0,390 420,1290 1770,1830 1860,2580 2580,2820
the power of,| {} in
|在网络中的地位与网络中的利害关系成正比。

2359
01:17:11,700 --> 01:17:12,960
0,60 60,540 540,690 690,1170 1170,1260
the network is proportional to

2360
01:17:12,960 --> 01:17:14,040
0,120 120,420 420,510 510,570 570,1080
{proof-of-stake -} in the network.|
|

2361
01:17:15,240 --> 01:17:16,710
0,510 600,750 750,1050 1050,1380 1380,1470
And the basic idea is
基本的想法是，如果你拥有所有比特币的3%或10%，

2362
01:17:16,710 --> 01:17:18,420
0,240 240,570 570,990 990,1530 1530,1710
that if you own like

2363
01:17:18,420 --> 01:17:19,920
0,390 420,600 600,960 960,1050 1050,1500
whatever {3%,or - -} 10%

2364
01:17:19,920 --> 01:17:20,820
0,90 90,180 180,270 270,810 810,900
of all the Bitcoins,| you
|你们知道你们要决定10%的新街区

2365
01:17:20,820 --> 01:17:22,110
0,210 210,390 390,810 810,900 900,1290
know you {guys,to -} decide

2366
01:17:22,110 --> 01:17:24,480
0,450 450,570 570,960 1560,2130 2130,2370
10% of the {} the

2367
01:17:24,480 --> 01:17:26,940
0,180 180,810 990,1800 1800,2280 2280,2460
new blocks| {} and you're
|你知道你的赌注越高，你就会有动力，

2368
01:17:26,940 --> 01:17:28,020
0,120 120,240 240,390 390,990 1020,1080
going to have incentive you

2369
01:17:28,020 --> 01:17:29,100
0,210 210,330 330,540 540,660 660,1080
know the higher your stake,|
|

2370
01:17:29,100 --> 01:17:30,330
0,90 90,210 210,360 360,690 690,1230
you know the higher incentives
你知道更高的激励实际上是为了正确地玩这个游戏。

2371
01:17:30,330 --> 01:17:31,770
0,330 330,870 900,1110 1110,1200 1200,1440
actually to play the game

2372
01:17:31,770 --> 01:17:32,660
0,450
correctly.|
|

2373
01:17:35,110 --> 01:17:36,910
0,210 210,360 360,1020 1110,1620 1620,1800
So the struggle becomes more
因此，在这种情况下，斗争变得更具确定性，对吧。

2374
01:17:36,910 --> 01:17:38,770
0,810 810,960 960,1200 1200,1530 1530,1860
deterministic in that case, right.|
|

2375
01:17:40,500 --> 01:17:43,530
0,1440 1440,2460 2460,2640 2640,2940 2940,3030
And all all depends on
而这一切都取决于协议的细节。

2376
01:17:43,530 --> 01:17:44,610
0,60 60,360 360,450 450,510 510,1080
the details of the protocol.|
|

2377
01:17:45,940 --> 01:17:47,530
0,510 510,870 870,1410 1410,1500 1500,1590
{} In algorithms, you know
在算法方面，你知道基本上有一个周期性的领导者

2378
01:17:47,530 --> 01:17:49,000
0,510 510,750 750,810 810,1320 1320,1470
basically there's a periodical {leader

2379
01:17:49,000 --> 01:17:50,200
0,390 390,690 690,870 870,900 900,1200
-}| and there's a committee
|还有一个委员会选举

2380
01:17:50,200 --> 01:17:51,490
0,660 660,750 750,870 870,930 930,1290
election| and then the committee
|然后委员会决定下一个街区是什么

2381
01:17:51,490 --> 01:17:52,780
0,390 390,600 600,960 960,1200 1200,1290
decides someone like what the

2382
01:17:52,780 --> 01:17:54,460
0,450 510,900 900,1260 1260,1380 1380,1680
next block is| and then
|然后你就会知道有一位新的领导人

2383
01:17:54,460 --> 01:17:55,180
0,120 120,300 300,480 480,510 510,720
you know there's a new

2384
01:17:55,180 --> 01:17:56,530
0,360 360,450 450,510 510,1080 1080,1350
leader| and the new committee
|以及新的委员会选举等。

2385
01:17:56,530 --> 01:17:58,120
0,390 390,660 660,1140
elections etc etc.|
|

2386
01:17:58,820 --> 01:18:00,890
0,570 780,1200 1200,1620 1620,2010 2010,2070
{} And many aspects of
其中的许多方面，你知道可能是固定的和随机的，

2387
01:18:00,890 --> 01:18:02,660
0,210 210,480 480,600 600,1380 1380,1770
that, are you know probably

2388
01:18:02,660 --> 01:18:05,180
0,450 450,840 840,1680 2010,2340 2340,2520
stick and randomized,| {} so
|这样攻击者才能赢得比赛。

2389
01:18:05,180 --> 01:18:06,680
0,180 180,300 300,690 690,1290 1290,1500
that the attacker can win

2390
01:18:06,680 --> 01:18:07,700
0,60 60,480
the game.|
|

2391
01:18:15,170 --> 01:18:17,360
0,330 330,720 720,1080 1110,1470 1470,2190
These [partials] are quite sophisticated.|
这些[部分]是相当复杂的。|

2392
01:18:26,110 --> 01:18:27,940
0,540 660,1320 1320,1440 1440,1560 1560,1830
{} Also to be able
此外，为了能够挖掘，您必须拥有的日志来验证交易，对吧。

2393
01:18:27,940 --> 01:18:30,040
0,480 600,1140 1140,1320 1320,1620 1620,2100
to mine you have to

2394
01:18:30,160 --> 01:18:32,560
0,660 780,1170 1170,1290 1290,1890
have of the log

2395
01:18:32,960 --> 01:18:35,180
0,180 180,840 840,990 990,1800 1800,2220
to verify the transactions, right.|
|

2396
01:18:35,760 --> 01:18:36,780
0,510
Yes.|
是。|

2397
01:18:37,010 --> 01:18:38,030
0,240 240,480 480,750 750,930 930,1020
Yeah, so the miners is
是的，矿工是大小为千兆字节的日志的完整副本。

2398
01:18:38,030 --> 01:18:38,870
0,120 120,420 420,660 660,750 750,840
a complete copy of the

2399
01:18:38,870 --> 01:18:40,920
0,300 300,780 780,870 870,1560
log which is gigabyte.|
|

2400
01:18:42,080 --> 01:18:43,940
0,480 480,660 660,780 780,1380
Isn't that a lot.|
是不是太多了。|

2401
01:18:43,970 --> 01:18:46,490
0,720 720,1080 1080,1230 1230,2430 2460,2520
It turned out to be
事实证明，对于一台合理的计算机来说，这是完全可行的。

2402
01:18:46,580 --> 01:18:47,990
0,510 510,900 900,1080 1080,1140 1140,1410
totally doable for a reasonable

2403
01:18:47,990 --> 01:18:49,040
0,480
computer.|
|

2404
01:18:49,100 --> 01:18:50,200
0,690
Okay,
好的谢谢。

2405
01:18:51,110 --> 01:18:52,440
0,300 300,810
thank you.|
|

2406
01:18:52,440 --> 01:18:53,600
0,240 240,630
You're welcome.|
不用谢。|

2407
01:18:59,310 --> 01:19:00,480
0,210 210,390 390,990 990,1080 1080,1170
This is unrelated to the
这与讲座无关，

2408
01:19:00,480 --> 01:19:02,190
0,570 570,870 1110,1410 1410,1560 1560,1710
lecture,| but do you think,
|但你认为有可能在课堂上谈论

2409
01:19:02,190 --> 01:19:04,410
0,120 120,210 210,750 750,1320 1620,2220
it'd be possible to talk

2410
01:19:04,410 --> 01:19:05,640
0,240 240,420 420,480 480,900 900,1230
about during the classroom time|
|

2411
01:19:05,640 --> 01:19:07,500
0,240 240,360 360,900 900,1230 1260,1860
like the design that TAs
比如助教的设计，你有四个实验室，三个和四个，

2412
01:19:07,500 --> 01:19:09,210
0,180 180,330 330,570 570,960 1110,1710
that you had four labs,

2413
01:19:09,210 --> 01:19:10,860
0,210 210,360 360,780 810,1170 1470,1650
three and four,| like because
|就像是因为有更多的开放式，所以。

2414
01:19:10,860 --> 01:19:13,470
0,210 210,420 420,1080 1350,2100 2100,2610
there's more open-ended, so.| Yeah,
|是的，当然更多的是开放式的。

2415
01:19:13,470 --> 01:19:16,100
0,390 390,600 600,810 810,1950
certainly more {open-ended -}.|
|

2416
01:19:16,340 --> 01:19:18,140
0,180 180,390 390,780 780,1230 1230,1800
I was not planning to,|
我没打算这么做，|

2417
01:19:18,140 --> 01:19:19,100
0,420 420,540 540,690 690,840 840,960
I don't know we have
我不知道我们还有时间这么做，

2418
01:19:19,100 --> 01:19:20,720
0,270 270,900 900,990 990,1140 1140,1620
time left to do so,|
|

2419
01:19:21,110 --> 01:19:22,670
0,810 840,1050 1050,1110 1110,1320 1320,1560
{} first of all, not
首先，并不是每个人都做过实验4，

2420
01:19:22,670 --> 01:19:23,930
0,300 300,390 390,570 570,780 780,1260
everybody has done lab 4,|
|

2421
01:19:24,230 --> 01:19:26,750
0,810 810,1290 1290,1710 1710,2370 2400,2520
{} and so {} I
所以我目前没有这样做的打算，

2422
01:19:26,750 --> 01:19:27,770
0,360 360,450 450,600 600,960 960,1020
currently have no intention to

2423
01:19:27,770 --> 01:19:29,180
0,120 120,390 390,1080 1080,1170 1170,1410
do so,| but of course
|当然，你可以联系我们的办公时间，很快和助教谈谈，

2424
01:19:29,180 --> 01:19:29,930
0,90 90,390 390,600 600,690 690,750
you can reach out to

2425
01:19:29,930 --> 01:19:31,460
0,60 60,300 300,630 630,1290 1320,1530
our office hours and talk

2426
01:19:31,460 --> 01:19:33,380
0,90 90,210 210,480 480,930 1080,1920
to the TA soon, {}|
|

2427
01:19:33,380 --> 01:19:34,640
0,270 270,750 750,930 930,1050 1050,1260
or again reach out later
或者稍后再联系我，我们可以讨论实验3和实验4。

2428
01:19:34,640 --> 01:19:36,230
0,90 90,420 690,1410 1410,1500 1500,1590
to me and we can

2429
01:19:36,230 --> 01:19:37,220
0,180 180,540 540,780 780,870 870,990
talk about {lab,3} and lab

2430
01:19:37,220 --> 01:19:38,020
0,540
4.|
|

2431
01:19:38,850 --> 01:19:41,400
0,360 360,600 600,810 810,1140
Sounds good, thank you.|
听起来不错，谢谢。|

2432
01:19:45,100 --> 01:19:47,830
0,870 1710,1950 1950,2430 2430,2610 2610,2730
So, so I I had
所以，所以我我有个问题，

2433
01:19:47,830 --> 01:19:49,580
0,60 60,420 420,1230
a question about,|
|

2434
01:19:49,670 --> 01:19:51,260
0,420 780,930 930,1230 1230,1410 1410,1590
like it says, it says
就像它说的，报纸上说喜欢，或者更确切地说，对不起。

2435
01:19:51,260 --> 01:19:53,280
0,90 90,180 180,480 480,1410
in the paper like,

2436
01:19:54,870 --> 01:19:57,100
0,480 540,1080 1080,1560
or rather, sorry.|
|

2437
01:19:57,280 --> 01:20:00,400
0,990 1020,1950 1950,2760 2760,2820 2820,3120
{} Yeah, once the latest
是的，一旦最新的交易硬币被埋在足够大的块下，

2438
01:20:00,400 --> 01:20:02,500
0,600 600,1200 1230,1530 1530,1890 1890,2100
transaction coin is burried under

2439
01:20:02,500 --> 01:20:04,510
0,300 300,810 1320,1590 1590,1800 1800,2010
enough block,| {} that's been
|在可以丢弃它以节省磁盘空间之前，它是事务。

2440
01:20:04,510 --> 01:20:06,130
0,780 780,1200 1200,1320 1320,1470 1470,1620
transaction before it can be

2441
01:20:06,130 --> 01:20:08,020
0,600 600,690 690,1020 1020,1440 1440,1890
discarded to save disk space.|
|

2442
01:20:10,560 --> 01:20:12,810
0,90 90,630 660,960 960,1620 1620,2250
I I I I understood
不过，我知道你知道区块链，

2443
01:20:12,810 --> 01:20:14,670
0,240 240,540 600,750 750,1110 1350,1860
though that you know a

2444
01:20:14,670 --> 01:20:16,160
0,960
blockchain,|
|

2445
01:20:16,310 --> 01:20:19,400
0,540 540,930 930,1260 1260,2610
{} never really like
我从来不喜欢丢弃交易，

2446
01:20:19,430 --> 01:20:22,010
0,330 330,960 960,1950 1950,2160 2160,2580
{} discards transactions,| it keeps
|它保存着所有交易的完整日志，

2447
01:20:22,010 --> 01:20:23,030
0,210 210,420 420,780 780,900 900,1020
a whole log of all

2448
01:20:23,030 --> 01:20:26,090
0,90 90,870 1350,2400 2400,2490 2490,3060
the transactions,| why is this,
|这是为什么，就像为什么要在实践中这样做。

2449
01:20:26,120 --> 01:20:27,410
0,270 270,600 600,780 780,1050 1050,1290
like why was this done

2450
01:20:27,410 --> 01:20:28,860
0,150 150,1020
in practice.|
|

2451
01:20:28,860 --> 01:20:30,930
0,750 750,870 870,1380 1410,1890 1890,2070
Because to save space on
因为为了节省空间，节省空间，

2452
01:20:30,930 --> 01:20:34,440
0,150 1920,2250 2250,2580 2580,2820 2820,3510
the, save space on the,|
|

2453
01:20:34,470 --> 01:20:37,140
0,750 750,1020 1020,1800 1800,2130 2130,2670
allow it's a space compaction
允许这是矿工节点上的空间压缩。

2454
01:20:37,720 --> 01:20:39,730
0,360 360,1590 1590,1890 1890,1950 1950,2010
on the nodes in the

2455
01:20:39,730 --> 01:20:40,800
0,570
miners.|
|

2456
01:20:41,100 --> 01:20:42,030
0,240 240,420 420,540 540,810 810,930
And so they don't have
因此，他们不必跟踪日志中的每一笔交易，

2457
01:20:42,030 --> 01:20:43,470
0,60 60,270 270,570 570,720 720,1440
to keep track of every

2458
01:20:43,470 --> 01:20:45,660
0,690 1020,1290 1290,1740 1740,1920 1920,2190
transaction {in,the,log -},| over every
|基本上每一种比特币，

2459
01:20:45,660 --> 01:20:47,490
0,360 360,1140 1230,1530 1530,1740 1740,1830
basically Bitcoin,| they have to
|他们必须跟踪最后一个，并且效率高

2460
01:20:47,490 --> 01:20:48,540
0,300 300,540 540,630 630,720 720,1050
keep track of the last

2461
01:20:48,540 --> 01:20:49,440
0,360
one

2462
01:20:49,470 --> 01:20:52,440
0,720 870,1590 1620,2250 2550,2730 2730,2970
{} and efficient| and so
|因此，一种考虑的方法是，你可以计算所有点的所有值的时间快照

2463
01:20:52,440 --> 01:20:53,520
0,450 450,600 600,690 690,840 840,1080
one way to think about

2464
01:20:53,520 --> 01:20:54,390
0,120 120,300 300,360 360,750 750,870
is sort of like you

2465
01:20:54,390 --> 01:20:55,380
0,90 90,360 360,390 390,900 900,990
can compute a snapshot in

2466
01:20:55,380 --> 01:20:57,120
0,480 810,990 990,1200 1200,1290 1290,1740
time of all the values

2467
01:20:57,120 --> 01:21:01,110
0,60 60,480 480,2040 2070,3210 3210,3990
of {all,the} {} points| and
|然后你就不需要真正记住整个过去了。

2468
01:21:01,110 --> 01:21:02,130
0,300 300,420 420,630 630,870 870,1020
then you don't really have

2469
01:21:02,130 --> 01:21:03,390
0,90 90,390 390,480 480,660 660,1260
to remember the whole past.|
|

2470
01:21:03,720 --> 01:21:04,950
0,240 240,570 570,900 900,990 990,1230
Who does keep the whole
那么谁会留住整个过去呢。

2471
01:21:04,950 --> 01:21:06,420
0,390 390,810
past then.|
|

2472
01:21:07,040 --> 01:21:09,140
0,480 480,750 750,1230 1740,2010 2010,2100
{ -} Yeah, there's two
是的，有两件事，

2473
01:21:09,140 --> 01:21:10,460
0,360 360,750 750,990 990,1230 1230,1320
things,| one is like you
|一种是，当你检查交易是否有效时，

2474
01:21:10,460 --> 01:21:12,380
0,540 540,750 750,900 900,1380 1380,1920
know when you check whether

2475
01:21:12,380 --> 01:21:14,000
0,480 480,900 900,1260 1260,1560 1560,1620
transaction's valid,| go scan the
|去扫描整个日志，

2476
01:21:14,000 --> 01:21:15,140
0,180 180,630 660,870 870,1020 1020,1140
whole log,| people don't do
|人们不会做你永远不会做的事

2477
01:21:15,140 --> 01:21:17,000
0,270 360,780 780,960 960,1530 1710,1860
that you take forever| and
|而构建一个数据结构基本上没有太大的影响

2478
01:21:17,000 --> 01:21:18,500
0,270 270,480 480,510 510,750 750,1500
basically build a data structure

2479
01:21:18,500 --> 01:21:19,850
0,270 270,420 420,660 660,1200 1200,1350
is no quite impact| and
|每一枚未花掉的硬币都有最后一笔交易，

2480
01:21:19,850 --> 01:21:22,250
0,330 330,750 900,1350 1350,1890 1890,2400
has the last transaction for

2481
01:21:22,250 --> 01:21:24,500
0,630 960,1830
{} every

2482
01:21:24,500 --> 01:21:26,720
0,660 690,870 870,1380 1440,1680 1680,2220
{} {unspent -} {} coin,|
|

2483
01:21:27,140 --> 01:21:29,990
0,660 1020,1800 1830,2040 2040,2460 2550,2850
{} the you know you
你知道你完全可以下载整个日志，

2484
01:21:29,990 --> 01:21:31,250
0,300 330,660 660,1020 1020,1080 1080,1260
can totally download the whole

2485
01:21:31,250 --> 01:21:32,960
0,450 480,630 630,900 900,1170 1170,1710
log,| you know from you
|你知道，从你想要的互联网上，

2486
01:21:32,960 --> 01:21:34,220
0,240 240,390 390,480 480,900 930,1260
want from the Internet, {}|
|

2487
01:21:34,220 --> 01:21:36,710
0,180 180,300 300,900 1290,1860 1860,2490
it is maintained and nodes
它被维护并由节点来存储。

2488
01:21:36,710 --> 01:21:37,920
0,90 90,480 480,750
to store it.|
|

2489
01:21:38,120 --> 01:21:39,680
0,210 210,360 360,930 930,1230 1230,1560
{You,know} to basically they lose
你知道，基本上他们会丢失所有的数据，

2490
01:21:39,680 --> 01:21:40,880
0,120 120,240 240,510 510,780 780,1200
all their data,| they can
|他们基本上可以计算出所有的余额，从一开始就运行所有的拒绝。

2491
01:21:41,480 --> 01:21:43,250
0,360 360,480 480,570 570,1200 1200,1770
compute all the balances basically

2492
01:21:43,250 --> 01:21:44,390
0,150 150,480 480,630 630,780 780,1140
from running all that rejection

2493
01:21:44,390 --> 01:21:45,740
0,120 120,360 360,450 450,810
from beginning of time.|
|

2494
01:21:47,910 --> 01:21:50,310
0,540 570,1140 1170,1470 1470,1800 1800,2400
{} But so so like,
但就像这样，如果人们喜欢谁维护整个街区，

2495
01:21:50,840 --> 01:21:52,820
0,210 210,570 570,1440 1620,1830 1830,1980
if people are like who

2496
01:21:52,820 --> 01:21:54,470
0,660 660,720 720,960 960,1440 1470,1650
maintains the whole block,| the
|整个交易。

2497
01:21:54,470 --> 01:21:58,010
0,480 510,1680 1680,2130 2130,2730 3120,3540
whole transactions.| Replicated everywhere, where
|复制到任何地方，每个人都想得到日志的副本。

2498
01:21:58,010 --> 01:21:59,780
0,900 900,1230 1230,1380 1380,1740 1740,1770
everybody wants to get a

2499
01:21:59,780 --> 01:22:01,140
0,300 300,360 360,450 450,870
copy of the log.|
|

2500
01:22:01,610 --> 01:22:02,860
0,780
Right.|
正确的。|

2501
01:22:02,860 --> 01:22:04,120
0,450 450,660 660,750 750,990 990,1260
But, but if most people
但是，如果大多数人都在这么做，那就是卡林交易，

2502
01:22:04,120 --> 01:22:05,620
0,120 120,420 420,690 690,930 930,1500
are doing this it's carling

2503
01:22:05,620 --> 01:22:08,080
0,1110 1320,1560 1560,1830 1830,2070 2070,2460
transactions,| like why would someone
|比如为什么有人会一直保持这样的。

2504
01:22:08,080 --> 01:22:11,080
0,450 450,720 720,2760 2760,2910 2910,3000
keep like the.| This is
|这还不够好，无法真正跟踪

2505
01:22:11,080 --> 01:22:12,640
0,240 240,360 360,750 750,1140 1140,1560
not good enough to actually

2506
01:22:12,640 --> 01:22:13,900
0,210 210,540 540,960 1020,1170 1170,1260
keep track of| you know
|你知道，这让你可以决定交易实际上发生在过去的哪里，

2507
01:22:13,900 --> 01:22:15,100
0,180 180,480 480,570 570,660 660,1200
this allows you to decide

2508
01:22:15,310 --> 01:22:17,530
0,570 570,630 630,1440 1440,1620 1620,2220
where the transaction was actually

2509
01:22:17,530 --> 01:22:18,880
0,540 540,900 900,990 990,1080 1080,1350
a happened in the past,|
|

2510
01:22:18,880 --> 01:22:19,720
0,120 120,240 240,480 480,750 750,840
but it doesn't allow you
但它不允许您验证交易，

2511
01:22:19,720 --> 01:22:21,010
0,90 90,510 510,1050 1050,1170 1170,1290
to validate transactions,| so you
|因此，您想要验证您必须保留过去的交易。

2512
01:22:21,010 --> 01:22:22,060
0,120 120,180 180,570 570,990 990,1050
want to validate transactions you

2513
01:22:22,060 --> 01:22:23,020
0,150 150,210 210,360 360,420 420,960
have to keep the past.|
|

2514
01:22:23,390 --> 01:22:24,580
0,660
Okay,
好吧，好吧，谢谢。

2515
01:22:25,290 --> 01:22:26,440
0,600
okay,

2516
01:22:26,760 --> 01:22:29,100
0,1080 1260,1830
thanks.| {You're,welcome}.|
|不用谢。|

2517
01:22:32,810 --> 01:22:34,520
0,210 210,420 420,1140
Any more questions?|
还有什么问题吗？|

2518
01:22:35,580 --> 01:22:36,500
0,360

2519
01:22:36,960 --> 01:22:39,960
0,690 810,1380
Okay, thanks.
好的，谢谢。
